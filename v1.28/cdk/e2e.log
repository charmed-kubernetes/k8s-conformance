  I1111 12:08:31.625295      22 e2e.go:117] Starting e2e run "11cd3da2-3978-4262-9e38-e7fccdd67f41" on Ginkgo node 1
  Nov 11 12:08:31.647: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1699704511 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Nov 11 12:08:31.783: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:08:31.784: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Nov 11 12:08:31.812: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Nov 11 12:08:31.816: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Nov 11 12:08:31.816: INFO: e2e test version: v1.28.3
  Nov 11 12:08:31.817: INFO: kube-apiserver version: v1.28.3
  Nov 11 12:08:31.817: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:08:31.821: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.038 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 11/11/23 12:08:32.017
  Nov 11 12:08:32.017: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename resourcequota @ 11/11/23 12:08:32.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:08:32.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:08:32.035
  STEP: Counting existing ResourceQuota @ 11/11/23 12:08:32.037
  STEP: Creating a ResourceQuota @ 11/11/23 12:08:37.042
  STEP: Ensuring resource quota status is calculated @ 11/11/23 12:08:37.048
  STEP: Creating a ReplicationController @ 11/11/23 12:08:39.051
  STEP: Ensuring resource quota status captures replication controller creation @ 11/11/23 12:08:39.061
  STEP: Deleting a ReplicationController @ 11/11/23 12:08:41.066
  STEP: Ensuring resource quota status released usage @ 11/11/23 12:08:41.074
  Nov 11 12:08:43.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9905" for this suite. @ 11/11/23 12:08:43.081
• [11.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 11/11/23 12:08:43.087
  Nov 11 12:08:43.087: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pods @ 11/11/23 12:08:43.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:08:43.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:08:43.103
  STEP: creating the pod @ 11/11/23 12:08:43.107
  STEP: setting up watch @ 11/11/23 12:08:43.107
  STEP: submitting the pod to kubernetes @ 11/11/23 12:08:43.21
  STEP: verifying the pod is in kubernetes @ 11/11/23 12:08:43.218
  STEP: verifying pod creation was observed @ 11/11/23 12:08:43.222
  STEP: deleting the pod gracefully @ 11/11/23 12:08:45.233
  STEP: verifying pod deletion was observed @ 11/11/23 12:08:45.24
  Nov 11 12:08:47.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4321" for this suite. @ 11/11/23 12:08:47.973
• [4.891 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 11/11/23 12:08:47.979
  Nov 11 12:08:47.979: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 12:08:47.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:08:47.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:08:47.994
  STEP: Creating configMap with name cm-test-opt-del-27579d5a-8154-4bef-90c3-c5dfe8660517 @ 11/11/23 12:08:47.999
  STEP: Creating configMap with name cm-test-opt-upd-97455b8e-44c6-45fa-a9f8-96f5efa67700 @ 11/11/23 12:08:48.003
  STEP: Creating the pod @ 11/11/23 12:08:48.007
  STEP: Deleting configmap cm-test-opt-del-27579d5a-8154-4bef-90c3-c5dfe8660517 @ 11/11/23 12:08:52.054
  STEP: Updating configmap cm-test-opt-upd-97455b8e-44c6-45fa-a9f8-96f5efa67700 @ 11/11/23 12:08:52.06
  STEP: Creating configMap with name cm-test-opt-create-067b4724-57ad-471e-893a-79d1489ebd3a @ 11/11/23 12:08:52.063
  STEP: waiting to observe update in volume @ 11/11/23 12:08:52.067
  Nov 11 12:08:54.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3902" for this suite. @ 11/11/23 12:08:54.094
• [6.120 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 11/11/23 12:08:54.1
  Nov 11 12:08:54.100: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 12:08:54.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:08:54.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:08:54.116
  STEP: Creating the pod @ 11/11/23 12:08:54.118
  Nov 11 12:08:58.665: INFO: Successfully updated pod "labelsupdatecd9f969f-b53e-49c7-a355-a46d7b8de6ba"
  Nov 11 12:09:00.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4007" for this suite. @ 11/11/23 12:09:00.682
• [6.587 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 11/11/23 12:09:00.688
  Nov 11 12:09:00.688: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename sched-preemption @ 11/11/23 12:09:00.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:09:00.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:09:00.703
  Nov 11 12:09:00.723: INFO: Waiting up to 1m0s for all nodes to be ready
  Nov 11 12:10:00.744: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/11/23 12:10:00.747
  Nov 11 12:10:00.767: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Nov 11 12:10:00.781: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Nov 11 12:10:00.794: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Nov 11 12:10:00.800: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Nov 11 12:10:00.814: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Nov 11 12:10:00.820: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/11/23 12:10:00.82
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 11/11/23 12:10:02.842
  Nov 11 12:10:06.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6682" for this suite. @ 11/11/23 12:10:06.912
• [66.229 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 11/11/23 12:10:06.918
  Nov 11 12:10:06.918: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 12:10:06.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:10:06.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:10:06.932
  STEP: Creating configMap with name configmap-test-volume-05453b26-88b8-4859-baaa-943ebfafc0fd @ 11/11/23 12:10:06.935
  STEP: Creating a pod to test consume configMaps @ 11/11/23 12:10:06.939
  STEP: Saw pod success @ 11/11/23 12:10:10.959
  Nov 11 12:10:10.962: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-configmaps-8d732bce-9a9b-495c-bdf0-7c7faf5aa5a2 container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 12:10:10.968
  Nov 11 12:10:10.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1509" for this suite. @ 11/11/23 12:10:10.986
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 11/11/23 12:10:10.993
  Nov 11 12:10:10.993: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename svcaccounts @ 11/11/23 12:10:10.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:10:11.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:10:11.01
  Nov 11 12:10:11.028: INFO: created pod pod-service-account-defaultsa
  Nov 11 12:10:11.028: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Nov 11 12:10:11.033: INFO: created pod pod-service-account-mountsa
  Nov 11 12:10:11.033: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Nov 11 12:10:11.040: INFO: created pod pod-service-account-nomountsa
  Nov 11 12:10:11.040: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Nov 11 12:10:11.049: INFO: created pod pod-service-account-defaultsa-mountspec
  Nov 11 12:10:11.049: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Nov 11 12:10:11.056: INFO: created pod pod-service-account-mountsa-mountspec
  Nov 11 12:10:11.056: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Nov 11 12:10:11.067: INFO: created pod pod-service-account-nomountsa-mountspec
  Nov 11 12:10:11.067: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Nov 11 12:10:11.074: INFO: created pod pod-service-account-defaultsa-nomountspec
  Nov 11 12:10:11.074: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Nov 11 12:10:11.083: INFO: created pod pod-service-account-mountsa-nomountspec
  Nov 11 12:10:11.083: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Nov 11 12:10:11.091: INFO: created pod pod-service-account-nomountsa-nomountspec
  Nov 11 12:10:11.091: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Nov 11 12:10:11.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5684" for this suite. @ 11/11/23 12:10:11.097
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 11/11/23 12:10:11.107
  Nov 11 12:10:11.107: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename job @ 11/11/23 12:10:11.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:10:11.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:10:11.128
  STEP: Creating a job @ 11/11/23 12:10:11.13
  STEP: Ensuring active pods == parallelism @ 11/11/23 12:10:11.135
  STEP: delete a job @ 11/11/23 12:10:13.138
  STEP: deleting Job.batch foo in namespace job-9535, will wait for the garbage collector to delete the pods @ 11/11/23 12:10:13.138
  Nov 11 12:10:13.198: INFO: Deleting Job.batch foo took: 4.933393ms
  Nov 11 12:10:13.299: INFO: Terminating Job.batch foo pods took: 100.760618ms
  STEP: Ensuring job was deleted @ 11/11/23 12:10:46.299
  Nov 11 12:10:46.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9535" for this suite. @ 11/11/23 12:10:46.307
• [35.206 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 11/11/23 12:10:46.313
  Nov 11 12:10:46.313: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 12:10:46.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:10:46.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:10:46.328
  STEP: validating api versions @ 11/11/23 12:10:46.33
  Nov 11 12:10:46.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-7948 api-versions'
  Nov 11 12:10:46.378: INFO: stderr: ""
  Nov 11 12:10:46.378: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Nov 11 12:10:46.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7948" for this suite. @ 11/11/23 12:10:46.382
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 11/11/23 12:10:46.389
  Nov 11 12:10:46.389: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 12:10:46.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:10:46.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:10:46.404
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/11/23 12:10:46.406
  STEP: Saw pod success @ 11/11/23 12:10:50.424
  Nov 11 12:10:50.427: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-c2270930-dd61-4547-850e-0dae6a693f0e container test-container: <nil>
  STEP: delete the pod @ 11/11/23 12:10:50.433
  Nov 11 12:10:50.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4896" for this suite. @ 11/11/23 12:10:50.448
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 11/11/23 12:10:50.454
  Nov 11 12:10:50.454: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 12:10:50.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:10:50.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:10:50.469
  STEP: Creating Pod @ 11/11/23 12:10:50.471
  STEP: Reading file content from the nginx-container @ 11/11/23 12:10:52.487
  Nov 11 12:10:52.487: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8994 PodName:pod-sharedvolume-d1b53c8a-dbcf-42e0-bd76-b9f17bc81c5f ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:10:52.487: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:10:52.487: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:10:52.487: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-8994/pods/pod-sharedvolume-d1b53c8a-dbcf-42e0-bd76-b9f17bc81c5f/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Nov 11 12:10:52.564: INFO: Exec stderr: ""
  Nov 11 12:10:52.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8994" for this suite. @ 11/11/23 12:10:52.568
• [2.119 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 11/11/23 12:10:52.573
  Nov 11 12:10:52.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename secrets @ 11/11/23 12:10:52.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:10:52.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:10:52.588
  STEP: Creating secret with name secret-test-a0fa0fa3-f5a2-45ff-a833-b5a35a14e7d0 @ 11/11/23 12:10:52.591
  STEP: Creating a pod to test consume secrets @ 11/11/23 12:10:52.594
  STEP: Saw pod success @ 11/11/23 12:10:56.615
  Nov 11 12:10:56.618: INFO: Trying to get logs from node ip-172-31-8-111 pod pod-secrets-9b218ffb-d45c-421c-b064-0910242f1826 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 12:10:56.63
  Nov 11 12:10:56.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7938" for this suite. @ 11/11/23 12:10:56.648
• [4.080 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 11/11/23 12:10:56.654
  Nov 11 12:10:56.654: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pod-network-test @ 11/11/23 12:10:56.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:10:56.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:10:56.669
  STEP: Performing setup for networking test in namespace pod-network-test-6013 @ 11/11/23 12:10:56.672
  STEP: creating a selector @ 11/11/23 12:10:56.672
  STEP: Creating the service pods in kubernetes @ 11/11/23 12:10:56.672
  Nov 11 12:10:56.672: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 11/11/23 12:11:18.761
  Nov 11 12:11:20.778: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov 11 12:11:20.779: INFO: Breadth first check of 192.168.250.76 on host 172.31.26.213...
  Nov 11 12:11:20.781: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.216.204:9080/dial?request=hostname&protocol=http&host=192.168.250.76&port=8083&tries=1'] Namespace:pod-network-test-6013 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:11:20.781: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:11:20.782: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:11:20.782: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6013/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.216.204%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.250.76%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 11 12:11:20.864: INFO: Waiting for responses: map[]
  Nov 11 12:11:20.864: INFO: reached 192.168.250.76 after 0/1 tries
  Nov 11 12:11:20.864: INFO: Breadth first check of 192.168.216.203 on host 172.31.79.254...
  Nov 11 12:11:20.867: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.216.204:9080/dial?request=hostname&protocol=http&host=192.168.216.203&port=8083&tries=1'] Namespace:pod-network-test-6013 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:11:20.867: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:11:20.867: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:11:20.867: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6013/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.216.204%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.216.203%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 11 12:11:20.958: INFO: Waiting for responses: map[]
  Nov 11 12:11:20.958: INFO: reached 192.168.216.203 after 0/1 tries
  Nov 11 12:11:20.958: INFO: Breadth first check of 192.168.144.201 on host 172.31.8.111...
  Nov 11 12:11:20.962: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.216.204:9080/dial?request=hostname&protocol=http&host=192.168.144.201&port=8083&tries=1'] Namespace:pod-network-test-6013 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:11:20.962: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:11:20.962: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:11:20.962: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6013/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.216.204%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.144.201%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 11 12:11:21.047: INFO: Waiting for responses: map[]
  Nov 11 12:11:21.047: INFO: reached 192.168.144.201 after 0/1 tries
  Nov 11 12:11:21.047: INFO: Going to retry 0 out of 3 pods....
  Nov 11 12:11:21.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6013" for this suite. @ 11/11/23 12:11:21.051
• [24.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 11/11/23 12:11:21.058
  Nov 11 12:11:21.058: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-runtime @ 11/11/23 12:11:21.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:11:21.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:11:21.074
  STEP: create the container @ 11/11/23 12:11:21.076
  W1111 12:11:21.083968      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/11/23 12:11:21.084
  STEP: get the container status @ 11/11/23 12:11:24.099
  STEP: the container should be terminated @ 11/11/23 12:11:24.102
  STEP: the termination message should be set @ 11/11/23 12:11:24.102
  Nov 11 12:11:24.102: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 11/11/23 12:11:24.102
  Nov 11 12:11:24.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5489" for this suite. @ 11/11/23 12:11:24.119
• [3.066 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 11/11/23 12:11:24.124
  Nov 11 12:11:24.124: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 12:11:24.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:11:24.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:11:24.139
  STEP: Creating configMap with name projected-configmap-test-volume-e0d4a85e-78fb-4a25-ae10-374e4671b63f @ 11/11/23 12:11:24.141
  STEP: Creating a pod to test consume configMaps @ 11/11/23 12:11:24.145
  STEP: Saw pod success @ 11/11/23 12:11:28.169
  Nov 11 12:11:28.173: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-projected-configmaps-2d9344e4-af18-4e80-ad20-a21267530e58 container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 12:11:28.179
  Nov 11 12:11:28.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2629" for this suite. @ 11/11/23 12:11:28.194
• [4.074 seconds]
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 11/11/23 12:11:28.198
  Nov 11 12:11:28.198: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename watch @ 11/11/23 12:11:28.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:11:28.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:11:28.215
  STEP: creating a watch on configmaps with a certain label @ 11/11/23 12:11:28.218
  STEP: creating a new configmap @ 11/11/23 12:11:28.219
  STEP: modifying the configmap once @ 11/11/23 12:11:28.222
  STEP: changing the label value of the configmap @ 11/11/23 12:11:28.23
  STEP: Expecting to observe a delete notification for the watched object @ 11/11/23 12:11:28.236
  Nov 11 12:11:28.236: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9201  9e2f86c2-ef16-4f7b-a5f1-9d56d58d97fc 4042 0 2023-11-11 12:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-11 12:11:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:11:28.237: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9201  9e2f86c2-ef16-4f7b-a5f1-9d56d58d97fc 4043 0 2023-11-11 12:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-11 12:11:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:11:28.237: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9201  9e2f86c2-ef16-4f7b-a5f1-9d56d58d97fc 4044 0 2023-11-11 12:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-11 12:11:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 11/11/23 12:11:28.237
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 11/11/23 12:11:28.242
  STEP: changing the label value of the configmap back @ 11/11/23 12:11:38.243
  STEP: modifying the configmap a third time @ 11/11/23 12:11:38.252
  STEP: deleting the configmap @ 11/11/23 12:11:38.258
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 11/11/23 12:11:38.264
  Nov 11 12:11:38.264: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9201  9e2f86c2-ef16-4f7b-a5f1-9d56d58d97fc 4090 0 2023-11-11 12:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-11 12:11:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:11:38.264: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9201  9e2f86c2-ef16-4f7b-a5f1-9d56d58d97fc 4091 0 2023-11-11 12:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-11 12:11:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:11:38.264: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9201  9e2f86c2-ef16-4f7b-a5f1-9d56d58d97fc 4092 0 2023-11-11 12:11:28 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-11 12:11:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:11:38.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9201" for this suite. @ 11/11/23 12:11:38.268
• [10.074 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 11/11/23 12:11:38.273
  Nov 11 12:11:38.273: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename secrets @ 11/11/23 12:11:38.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:11:38.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:11:38.288
  STEP: Creating secret with name secret-test-500cdabd-86f1-44e4-a05b-b46b1c349611 @ 11/11/23 12:11:38.291
  STEP: Creating a pod to test consume secrets @ 11/11/23 12:11:38.295
  STEP: Saw pod success @ 11/11/23 12:11:42.314
  Nov 11 12:11:42.317: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-secrets-5be7cbbb-5123-44e3-99d8-ef3ea0cfc40b container secret-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 12:11:42.324
  Nov 11 12:11:42.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7537" for this suite. @ 11/11/23 12:11:42.34
• [4.072 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 11/11/23 12:11:42.346
  Nov 11 12:11:42.346: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/11/23 12:11:42.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:11:42.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:11:42.361
  STEP: set up a multi version CRD @ 11/11/23 12:11:42.364
  Nov 11 12:11:42.364: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: mark a version not serverd @ 11/11/23 12:11:45.556
  STEP: check the unserved version gets removed @ 11/11/23 12:11:45.571
  STEP: check the other version is not changed @ 11/11/23 12:11:46.38
  Nov 11 12:11:48.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4745" for this suite. @ 11/11/23 12:11:48.906
• [6.567 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 11/11/23 12:11:48.913
  Nov 11 12:11:48.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename endpointslicemirroring @ 11/11/23 12:11:48.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:11:48.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:11:48.93
  STEP: mirroring a new custom Endpoint @ 11/11/23 12:11:48.943
  Nov 11 12:11:48.950: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 11/11/23 12:11:50.953
  Nov 11 12:11:50.960: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 11/11/23 12:11:52.964
  Nov 11 12:11:52.973: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Nov 11 12:11:54.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5885" for this suite. @ 11/11/23 12:11:54.981
• [6.073 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 11/11/23 12:11:54.987
  Nov 11 12:11:54.987: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename deployment @ 11/11/23 12:11:54.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:11:55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:11:55.002
  Nov 11 12:11:55.005: INFO: Creating deployment "test-recreate-deployment"
  Nov 11 12:11:55.011: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Nov 11 12:11:55.022: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Nov 11 12:11:57.028: INFO: Waiting deployment "test-recreate-deployment" to complete
  Nov 11 12:11:57.031: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Nov 11 12:11:57.038: INFO: Updating deployment test-recreate-deployment
  Nov 11 12:11:57.038: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Nov 11 12:11:57.116: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8970",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31ca129b-8569-42d3-b3d5-3106fd1fa023",
      ResourceVersion: (string) (len=4) "4255",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835301515,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 11 12:11:57.120: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8970",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e052f9b6-7af5-4c80-af6b-2cdf25205fb7",
      ResourceVersion: (string) (len=4) "4253",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835301517,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "31ca129b-8569-42d3-b3d5-3106fd1fa023",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 31 63 61 31 32  39 62 2d 38 35 36 39 2d  |\"31ca129b-8569-|
              00000120  34 32 64 33 2d 62 33 64  35 2d 33 31 30 36 66 64  |42d3-b3d5-3106fd|
              00000130  31 66 61 30 32 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1fa023\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 11 12:11:57.121: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Nov 11 12:11:57.121: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8970",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df6c3f9e-8275-43a6-91dc-3175f7d00f37",
      ResourceVersion: (string) (len=4) "4243",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835301515,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "31ca129b-8569-42d3-b3d5-3106fd1fa023",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 31 63 61 31 32  39 62 2d 38 35 36 39 2d  |\"31ca129b-8569-|
              00000120  34 32 64 33 2d 62 33 64  35 2d 33 31 30 36 66 64  |42d3-b3d5-3106fd|
              00000130  31 66 61 30 32 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1fa023\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 11 12:11:57.125: INFO: Pod "test-recreate-deployment-76fb77d45-c2rhr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-c2rhr",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-8970",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6922415-34c0-4d55-bb96-b30f052ea803",
      ResourceVersion: (string) (len=4) "4254",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835301517,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "e052f9b6-7af5-4c80-af6b-2cdf25205fb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  35 32 66 39 62 36 2d 37  |d\":\"e052f9b6-7|
              00000090  61 66 35 2d 34 63 38 30  2d 61 66 36 62 2d 32 63  |af5-4c80-af6b-2c|
              000000a0  64 66 32 35 32 30 35 66  62 37 5c 22 7d 22 3a 7b  |df25205fb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-855r2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-855r2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.254",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835301517,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 12:11:57.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8970" for this suite. @ 11/11/23 12:11:57.13
• [2.149 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 11/11/23 12:11:57.136
  Nov 11 12:11:57.136: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 12:11:57.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:11:57.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:11:57.15
  Nov 11 12:11:57.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-8429 version'
  Nov 11 12:11:57.199: INFO: stderr: ""
  Nov 11 12:11:57.199: INFO: stdout: "Client Version: v1.28.3\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.3\n"
  Nov 11 12:11:57.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8429" for this suite. @ 11/11/23 12:11:57.202
• [0.071 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 11/11/23 12:11:57.208
  Nov 11 12:11:57.208: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename security-context-test @ 11/11/23 12:11:57.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:11:57.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:11:57.225
  Nov 11 12:12:01.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3097" for this suite. @ 11/11/23 12:12:01.251
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 11/11/23 12:12:01.257
  Nov 11 12:12:01.257: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/11/23 12:12:01.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:12:01.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:12:01.273
  Nov 11 12:12:01.276: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/11/23 12:12:02.586
  Nov 11 12:12:02.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-9627 --namespace=crd-publish-openapi-9627 create -f -'
  Nov 11 12:12:04.918: INFO: stderr: ""
  Nov 11 12:12:04.918: INFO: stdout: "e2e-test-crd-publish-openapi-7630-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Nov 11 12:12:04.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-9627 --namespace=crd-publish-openapi-9627 delete e2e-test-crd-publish-openapi-7630-crds test-cr'
  Nov 11 12:12:04.982: INFO: stderr: ""
  Nov 11 12:12:04.982: INFO: stdout: "e2e-test-crd-publish-openapi-7630-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Nov 11 12:12:04.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-9627 --namespace=crd-publish-openapi-9627 apply -f -'
  Nov 11 12:12:05.254: INFO: stderr: ""
  Nov 11 12:12:05.254: INFO: stdout: "e2e-test-crd-publish-openapi-7630-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Nov 11 12:12:05.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-9627 --namespace=crd-publish-openapi-9627 delete e2e-test-crd-publish-openapi-7630-crds test-cr'
  Nov 11 12:12:05.309: INFO: stderr: ""
  Nov 11 12:12:05.309: INFO: stdout: "e2e-test-crd-publish-openapi-7630-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/11/23 12:12:05.309
  Nov 11 12:12:05.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-9627 explain e2e-test-crd-publish-openapi-7630-crds'
  Nov 11 12:12:05.413: INFO: stderr: ""
  Nov 11 12:12:05.413: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-7630-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Nov 11 12:12:06.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9627" for this suite. @ 11/11/23 12:12:06.704
• [5.453 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 11/11/23 12:12:06.712
  Nov 11 12:12:06.712: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 12:12:06.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:12:06.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:12:06.73
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 12:12:06.733
  STEP: Saw pod success @ 11/11/23 12:12:10.753
  Nov 11 12:12:10.756: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-52502c6c-1b0f-4d82-880f-5d5feb8437f0 container client-container: <nil>
  STEP: delete the pod @ 11/11/23 12:12:10.761
  Nov 11 12:12:10.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-897" for this suite. @ 11/11/23 12:12:10.778
• [4.071 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 11/11/23 12:12:10.783
  Nov 11 12:12:10.783: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename sysctl @ 11/11/23 12:12:10.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:12:10.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:12:10.8
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 11/11/23 12:12:10.802
  STEP: Watching for error events or started pod @ 11/11/23 12:12:10.81
  STEP: Waiting for pod completion @ 11/11/23 12:12:12.814
  STEP: Checking that the pod succeeded @ 11/11/23 12:12:14.823
  STEP: Getting logs from the pod @ 11/11/23 12:12:14.824
  STEP: Checking that the sysctl is actually updated @ 11/11/23 12:12:14.829
  Nov 11 12:12:14.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7818" for this suite. @ 11/11/23 12:12:14.833
• [4.055 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 11/11/23 12:12:14.838
  Nov 11 12:12:14.838: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename statefulset @ 11/11/23 12:12:14.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:12:14.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:12:14.854
  STEP: Creating service test in namespace statefulset-8217 @ 11/11/23 12:12:14.857
  STEP: Creating statefulset ss in namespace statefulset-8217 @ 11/11/23 12:12:14.861
  Nov 11 12:12:14.871: INFO: Found 0 stateful pods, waiting for 1
  Nov 11 12:12:24.878: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 11/11/23 12:12:24.883
  STEP: updating a scale subresource @ 11/11/23 12:12:24.886
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/11/23 12:12:24.893
  STEP: Patch a scale subresource @ 11/11/23 12:12:24.895
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/11/23 12:12:24.904
  Nov 11 12:12:24.909: INFO: Deleting all statefulset in ns statefulset-8217
  Nov 11 12:12:24.912: INFO: Scaling statefulset ss to 0
  Nov 11 12:12:34.933: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 11 12:12:34.935: INFO: Deleting statefulset ss
  Nov 11 12:12:34.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8217" for this suite. @ 11/11/23 12:12:34.949
• [20.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 11/11/23 12:12:34.957
  Nov 11 12:12:34.957: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename svcaccounts @ 11/11/23 12:12:34.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:12:34.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:12:34.973
  STEP: creating a ServiceAccount @ 11/11/23 12:12:34.976
  STEP: watching for the ServiceAccount to be added @ 11/11/23 12:12:34.982
  STEP: patching the ServiceAccount @ 11/11/23 12:12:34.985
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 11/11/23 12:12:34.99
  STEP: deleting the ServiceAccount @ 11/11/23 12:12:34.993
  Nov 11 12:12:35.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7517" for this suite. @ 11/11/23 12:12:35.013
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 11/11/23 12:12:35.019
  Nov 11 12:12:35.019: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename secrets @ 11/11/23 12:12:35.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:12:35.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:12:35.036
  Nov 11 12:12:35.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7499" for this suite. @ 11/11/23 12:12:35.076
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 11/11/23 12:12:35.083
  Nov 11 12:12:35.083: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 12:12:35.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:12:35.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:12:35.118
  STEP: Creating configMap with name configmap-test-upd-7be4c19b-950b-4d1d-922d-f2a7df72d5c6 @ 11/11/23 12:12:35.124
  STEP: Creating the pod @ 11/11/23 12:12:35.13
  STEP: Updating configmap configmap-test-upd-7be4c19b-950b-4d1d-922d-f2a7df72d5c6 @ 11/11/23 12:12:37.157
  STEP: waiting to observe update in volume @ 11/11/23 12:12:37.161
  Nov 11 12:13:59.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-557" for this suite. @ 11/11/23 12:13:59.484
• [84.407 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 11/11/23 12:13:59.49
  Nov 11 12:13:59.490: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/11/23 12:13:59.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:13:59.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:13:59.508
  STEP: create the container to handle the HTTPGet hook request. @ 11/11/23 12:13:59.515
  STEP: create the pod with lifecycle hook @ 11/11/23 12:14:01.537
  STEP: check poststart hook @ 11/11/23 12:14:03.553
  STEP: delete the pod with lifecycle hook @ 11/11/23 12:14:03.568
  Nov 11 12:14:05.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5707" for this suite. @ 11/11/23 12:14:05.585
• [6.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 11/11/23 12:14:05.593
  Nov 11 12:14:05.593: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename dns @ 11/11/23 12:14:05.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:14:05.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:14:05.608
  STEP: Creating a test headless service @ 11/11/23 12:14:05.61
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9803 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9803;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9803 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9803;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9803.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9803.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9803.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9803.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9803.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9803.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9803.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9803.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9803.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9803.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9803.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9803.svc;check="$$(dig +notcp +noall +answer +search 233.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.233_udp@PTR;check="$$(dig +tcp +noall +answer +search 233.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.233_tcp@PTR;sleep 1; done
   @ 11/11/23 12:14:05.625
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9803 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9803;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9803 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9803;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9803.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9803.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9803.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9803.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9803.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9803.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9803.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9803.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9803.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9803.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9803.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9803.svc;check="$$(dig +notcp +noall +answer +search 233.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.233_udp@PTR;check="$$(dig +tcp +noall +answer +search 233.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.233_tcp@PTR;sleep 1; done
   @ 11/11/23 12:14:05.625
  STEP: creating a pod to probe DNS @ 11/11/23 12:14:05.625
  STEP: submitting the pod to kubernetes @ 11/11/23 12:14:05.625
  STEP: retrieving the pod @ 11/11/23 12:14:11.659
  STEP: looking for the results for each expected name from probers @ 11/11/23 12:14:11.662
  Nov 11 12:14:11.666: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.669: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.673: INFO: Unable to read wheezy_udp@dns-test-service.dns-9803 from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.676: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9803 from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.679: INFO: Unable to read wheezy_udp@dns-test-service.dns-9803.svc from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.682: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9803.svc from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.685: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9803.svc from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.688: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9803.svc from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.703: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.706: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.709: INFO: Unable to read jessie_udp@dns-test-service.dns-9803 from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.712: INFO: Unable to read jessie_tcp@dns-test-service.dns-9803 from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.715: INFO: Unable to read jessie_udp@dns-test-service.dns-9803.svc from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.718: INFO: Unable to read jessie_tcp@dns-test-service.dns-9803.svc from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.721: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9803.svc from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.724: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9803.svc from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:11.738: INFO: Lookups using dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9803 wheezy_tcp@dns-test-service.dns-9803 wheezy_udp@dns-test-service.dns-9803.svc wheezy_tcp@dns-test-service.dns-9803.svc wheezy_udp@_http._tcp.dns-test-service.dns-9803.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9803.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9803 jessie_tcp@dns-test-service.dns-9803 jessie_udp@dns-test-service.dns-9803.svc jessie_tcp@dns-test-service.dns-9803.svc jessie_udp@_http._tcp.dns-test-service.dns-9803.svc jessie_tcp@_http._tcp.dns-test-service.dns-9803.svc]

  Nov 11 12:14:11.744: INFO: Pod client logs for webserver: 
  Nov 11 12:14:11.749: INFO: Pod client logs for querier: 
  Nov 11 12:14:11.756: INFO: Pod client logs for jessie-querier: 
  Nov 11 12:14:16.761: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:16.764: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:16.767: INFO: Unable to read wheezy_udp@dns-test-service.dns-9803 from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:16.770: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9803 from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:16.773: INFO: Unable to read wheezy_udp@dns-test-service.dns-9803.svc from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:16.776: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9803.svc from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:16.798: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:16.801: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:16.803: INFO: Unable to read jessie_udp@dns-test-service.dns-9803 from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:16.806: INFO: Unable to read jessie_tcp@dns-test-service.dns-9803 from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:16.810: INFO: Unable to read jessie_udp@dns-test-service.dns-9803.svc from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:16.812: INFO: Unable to read jessie_tcp@dns-test-service.dns-9803.svc from pod dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741: the server could not find the requested resource (get pods dns-test-200e0532-101b-4279-bb1c-e1c0779c5741)
  Nov 11 12:14:16.830: INFO: Lookups using dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9803 wheezy_tcp@dns-test-service.dns-9803 wheezy_udp@dns-test-service.dns-9803.svc wheezy_tcp@dns-test-service.dns-9803.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9803 jessie_tcp@dns-test-service.dns-9803 jessie_udp@dns-test-service.dns-9803.svc jessie_tcp@dns-test-service.dns-9803.svc]

  Nov 11 12:14:16.836: INFO: Pod client logs for webserver: 
  Nov 11 12:14:16.841: INFO: Pod client logs for querier: 
  Nov 11 12:14:16.846: INFO: Pod client logs for jessie-querier: 
  Nov 11 12:14:21.830: INFO: DNS probes using dns-9803/dns-test-200e0532-101b-4279-bb1c-e1c0779c5741 succeeded

  Nov 11 12:14:21.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/11/23 12:14:21.832
  STEP: deleting the test service @ 11/11/23 12:14:21.844
  STEP: deleting the test headless service @ 11/11/23 12:14:21.867
  STEP: Destroying namespace "dns-9803" for this suite. @ 11/11/23 12:14:21.877
• [16.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 11/11/23 12:14:21.89
  Nov 11 12:14:21.890: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename endpointslice @ 11/11/23 12:14:21.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:14:21.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:14:21.906
  STEP: getting /apis @ 11/11/23 12:14:21.908
  STEP: getting /apis/discovery.k8s.io @ 11/11/23 12:14:21.912
  STEP: getting /apis/discovery.k8s.iov1 @ 11/11/23 12:14:21.913
  STEP: creating @ 11/11/23 12:14:21.914
  STEP: getting @ 11/11/23 12:14:21.925
  STEP: listing @ 11/11/23 12:14:21.927
  STEP: watching @ 11/11/23 12:14:21.929
  Nov 11 12:14:21.929: INFO: starting watch
  STEP: cluster-wide listing @ 11/11/23 12:14:21.93
  STEP: cluster-wide watching @ 11/11/23 12:14:21.933
  Nov 11 12:14:21.933: INFO: starting watch
  STEP: patching @ 11/11/23 12:14:21.934
  STEP: updating @ 11/11/23 12:14:21.94
  Nov 11 12:14:21.948: INFO: waiting for watch events with expected annotations
  Nov 11 12:14:21.948: INFO: saw patched and updated annotations
  STEP: deleting @ 11/11/23 12:14:21.948
  STEP: deleting a collection @ 11/11/23 12:14:21.957
  Nov 11 12:14:21.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7201" for this suite. @ 11/11/23 12:14:21.973
• [0.089 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 11/11/23 12:14:21.979
  Nov 11 12:14:21.979: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename namespaces @ 11/11/23 12:14:21.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:14:21.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:14:21.994
  STEP: Updating Namespace "namespaces-9333" @ 11/11/23 12:14:21.996
  Nov 11 12:14:22.004: INFO: Namespace "namespaces-9333" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"11cd3da2-3978-4262-9e38-e7fccdd67f41", "kubernetes.io/metadata.name":"namespaces-9333", "namespaces-9333":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Nov 11 12:14:22.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9333" for this suite. @ 11/11/23 12:14:22.008
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 11/11/23 12:14:22.013
  Nov 11 12:14:22.014: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename secrets @ 11/11/23 12:14:22.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:14:22.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:14:22.032
  STEP: Creating projection with secret that has name secret-emptykey-test-5524127b-3eda-431d-9cda-4d7bba8c207d @ 11/11/23 12:14:22.034
  Nov 11 12:14:22.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9322" for this suite. @ 11/11/23 12:14:22.038
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 11/11/23 12:14:22.045
  Nov 11 12:14:22.045: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename var-expansion @ 11/11/23 12:14:22.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:14:22.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:14:22.058
  Nov 11 12:14:24.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 11 12:14:24.079: INFO: Deleting pod "var-expansion-cc612a5c-b8bf-459f-a0cd-c19c68ba6ce1" in namespace "var-expansion-3595"
  Nov 11 12:14:24.086: INFO: Wait up to 5m0s for pod "var-expansion-cc612a5c-b8bf-459f-a0cd-c19c68ba6ce1" to be fully deleted
  STEP: Destroying namespace "var-expansion-3595" for this suite. @ 11/11/23 12:14:26.093
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 11/11/23 12:14:26.1
  Nov 11 12:14:26.100: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 12:14:26.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:14:26.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:14:26.115
  STEP: Creating configMap with name configmap-test-volume-17c83105-b7aa-46da-80ee-d52ca53c56aa @ 11/11/23 12:14:26.117
  STEP: Creating a pod to test consume configMaps @ 11/11/23 12:14:26.121
  STEP: Saw pod success @ 11/11/23 12:14:30.142
  Nov 11 12:14:30.144: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-configmaps-a34f5e3c-122f-486d-8bd2-b9edf7b0b5a9 container configmap-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 12:14:30.15
  Nov 11 12:14:30.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6626" for this suite. @ 11/11/23 12:14:30.171
• [4.077 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 11/11/23 12:14:30.177
  Nov 11 12:14:30.177: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename replicaset @ 11/11/23 12:14:30.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:14:30.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:14:30.195
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 11/11/23 12:14:30.198
  Nov 11 12:14:30.206: INFO: Pod name sample-pod: Found 0 pods out of 1
  Nov 11 12:14:35.212: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/11/23 12:14:35.212
  STEP: getting scale subresource @ 11/11/23 12:14:35.212
  STEP: updating a scale subresource @ 11/11/23 12:14:35.215
  STEP: verifying the replicaset Spec.Replicas was modified @ 11/11/23 12:14:35.22
  STEP: Patch a scale subresource @ 11/11/23 12:14:35.223
  Nov 11 12:14:35.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5097" for this suite. @ 11/11/23 12:14:35.237
• [5.067 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 11/11/23 12:14:35.245
  Nov 11 12:14:35.245: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename job @ 11/11/23 12:14:35.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:14:35.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:14:35.26
  STEP: Creating a job @ 11/11/23 12:14:35.263
  STEP: Ensure pods equal to parallelism count is attached to the job @ 11/11/23 12:14:35.268
  STEP: patching /status @ 11/11/23 12:14:37.273
  STEP: updating /status @ 11/11/23 12:14:37.282
  STEP: get /status @ 11/11/23 12:14:37.289
  Nov 11 12:14:37.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8437" for this suite. @ 11/11/23 12:14:37.295
• [2.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 11/11/23 12:14:37.303
  Nov 11 12:14:37.303: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/11/23 12:14:37.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:14:37.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:14:37.317
  Nov 11 12:14:37.320: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 11/11/23 12:14:38.601
  Nov 11 12:14:38.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 create -f -'
  Nov 11 12:14:40.948: INFO: stderr: ""
  Nov 11 12:14:40.948: INFO: stdout: "e2e-test-crd-publish-openapi-8224-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Nov 11 12:14:40.948: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 delete e2e-test-crd-publish-openapi-8224-crds test-foo'
  Nov 11 12:14:41.009: INFO: stderr: ""
  Nov 11 12:14:41.009: INFO: stdout: "e2e-test-crd-publish-openapi-8224-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Nov 11 12:14:41.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 apply -f -'
  Nov 11 12:14:41.126: INFO: stderr: ""
  Nov 11 12:14:41.126: INFO: stdout: "e2e-test-crd-publish-openapi-8224-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Nov 11 12:14:41.126: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 delete e2e-test-crd-publish-openapi-8224-crds test-foo'
  Nov 11 12:14:41.182: INFO: stderr: ""
  Nov 11 12:14:41.182: INFO: stdout: "e2e-test-crd-publish-openapi-8224-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 11/11/23 12:14:41.182
  Nov 11 12:14:41.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 create -f -'
  Nov 11 12:14:41.501: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 11/11/23 12:14:41.501
  Nov 11 12:14:41.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 create -f -'
  Nov 11 12:14:41.604: INFO: rc: 1
  Nov 11 12:14:41.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 apply -f -'
  Nov 11 12:14:41.716: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 11/11/23 12:14:41.716
  Nov 11 12:14:41.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 create -f -'
  Nov 11 12:14:41.822: INFO: rc: 1
  Nov 11 12:14:41.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-4154 --namespace=crd-publish-openapi-4154 apply -f -'
  Nov 11 12:14:41.933: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 11/11/23 12:14:41.933
  Nov 11 12:14:41.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-4154 explain e2e-test-crd-publish-openapi-8224-crds'
  Nov 11 12:14:42.042: INFO: stderr: ""
  Nov 11 12:14:42.042: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8224-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 11/11/23 12:14:42.043
  Nov 11 12:14:42.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-4154 explain e2e-test-crd-publish-openapi-8224-crds.metadata'
  Nov 11 12:14:42.151: INFO: stderr: ""
  Nov 11 12:14:42.151: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8224-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Nov 11 12:14:42.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-4154 explain e2e-test-crd-publish-openapi-8224-crds.spec'
  Nov 11 12:14:42.259: INFO: stderr: ""
  Nov 11 12:14:42.259: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8224-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Nov 11 12:14:42.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-4154 explain e2e-test-crd-publish-openapi-8224-crds.spec.bars'
  Nov 11 12:14:42.366: INFO: stderr: ""
  Nov 11 12:14:42.366: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8224-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 11/11/23 12:14:42.366
  Nov 11 12:14:42.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-4154 explain e2e-test-crd-publish-openapi-8224-crds.spec.bars2'
  Nov 11 12:14:42.471: INFO: rc: 1
  Nov 11 12:14:43.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4154" for this suite. @ 11/11/23 12:14:43.731
• [6.433 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 11/11/23 12:14:43.737
  Nov 11 12:14:43.737: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename replicaset @ 11/11/23 12:14:43.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:14:43.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:14:43.752
  Nov 11 12:14:43.764: INFO: Pod name sample-pod: Found 0 pods out of 1
  Nov 11 12:14:48.771: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/11/23 12:14:48.771
  STEP: Scaling up "test-rs" replicaset  @ 11/11/23 12:14:48.771
  Nov 11 12:14:48.779: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 11/11/23 12:14:48.779
  Nov 11 12:14:48.789: INFO: observed ReplicaSet test-rs in namespace replicaset-3781 with ReadyReplicas 1, AvailableReplicas 1
  Nov 11 12:14:48.800: INFO: observed ReplicaSet test-rs in namespace replicaset-3781 with ReadyReplicas 1, AvailableReplicas 1
  Nov 11 12:14:48.821: INFO: observed ReplicaSet test-rs in namespace replicaset-3781 with ReadyReplicas 1, AvailableReplicas 1
  Nov 11 12:14:48.826: INFO: observed ReplicaSet test-rs in namespace replicaset-3781 with ReadyReplicas 1, AvailableReplicas 1
  Nov 11 12:14:52.196: INFO: observed ReplicaSet test-rs in namespace replicaset-3781 with ReadyReplicas 2, AvailableReplicas 2
  Nov 11 12:14:52.578: INFO: observed Replicaset test-rs in namespace replicaset-3781 with ReadyReplicas 3 found true
  Nov 11 12:14:52.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3781" for this suite. @ 11/11/23 12:14:52.582
• [8.851 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 11/11/23 12:14:52.588
  Nov 11 12:14:52.588: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename namespaces @ 11/11/23 12:14:52.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:14:52.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:14:52.605
  STEP: Creating a test namespace @ 11/11/23 12:14:52.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:14:52.62
  STEP: Creating a service in the namespace @ 11/11/23 12:14:52.623
  STEP: Deleting the namespace @ 11/11/23 12:14:52.635
  STEP: Waiting for the namespace to be removed. @ 11/11/23 12:14:52.643
  STEP: Recreating the namespace @ 11/11/23 12:14:58.646
  STEP: Verifying there is no service in the namespace @ 11/11/23 12:14:58.659
  Nov 11 12:14:58.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2303" for this suite. @ 11/11/23 12:14:58.669
  STEP: Destroying namespace "nsdeletetest-3927" for this suite. @ 11/11/23 12:14:58.675
  Nov 11 12:14:58.678: INFO: Namespace nsdeletetest-3927 was already deleted
  STEP: Destroying namespace "nsdeletetest-1197" for this suite. @ 11/11/23 12:14:58.678
• [6.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 11/11/23 12:14:58.686
  Nov 11 12:14:58.686: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/11/23 12:14:58.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:14:58.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:14:58.707
  STEP: create the container to handle the HTTPGet hook request. @ 11/11/23 12:14:58.713
  STEP: create the pod with lifecycle hook @ 11/11/23 12:15:00.73
  STEP: delete the pod with lifecycle hook @ 11/11/23 12:15:02.746
  STEP: check prestop hook @ 11/11/23 12:15:04.761
  Nov 11 12:15:04.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2636" for this suite. @ 11/11/23 12:15:04.77
• [6.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 11/11/23 12:15:04.778
  Nov 11 12:15:04.778: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 12:15:04.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:15:04.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:15:04.795
  STEP: Creating configMap with name configmap-test-volume-map-c60e9710-14ae-4b11-ad83-bd78282092b4 @ 11/11/23 12:15:04.798
  STEP: Creating a pod to test consume configMaps @ 11/11/23 12:15:04.801
  STEP: Saw pod success @ 11/11/23 12:15:06.818
  Nov 11 12:15:06.820: INFO: Trying to get logs from node ip-172-31-8-111 pod pod-configmaps-665088a8-9f48-4743-841a-2ad1af544573 container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 12:15:06.826
  Nov 11 12:15:06.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3835" for this suite. @ 11/11/23 12:15:06.845
• [2.073 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 11/11/23 12:15:06.851
  Nov 11 12:15:06.851: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename runtimeclass @ 11/11/23 12:15:06.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:15:06.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:15:06.868
  STEP: getting /apis @ 11/11/23 12:15:06.871
  STEP: getting /apis/node.k8s.io @ 11/11/23 12:15:06.874
  STEP: getting /apis/node.k8s.io/v1 @ 11/11/23 12:15:06.875
  STEP: creating @ 11/11/23 12:15:06.876
  STEP: watching @ 11/11/23 12:15:06.89
  Nov 11 12:15:06.891: INFO: starting watch
  STEP: getting @ 11/11/23 12:15:06.895
  STEP: listing @ 11/11/23 12:15:06.898
  STEP: patching @ 11/11/23 12:15:06.9
  STEP: updating @ 11/11/23 12:15:06.905
  Nov 11 12:15:06.908: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 11/11/23 12:15:06.908
  STEP: deleting a collection @ 11/11/23 12:15:06.922
  Nov 11 12:15:06.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7002" for this suite. @ 11/11/23 12:15:06.938
• [0.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 11/11/23 12:15:06.945
  Nov 11 12:15:06.945: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename dns @ 11/11/23 12:15:06.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:15:06.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:15:06.963
  STEP: Creating a test externalName service @ 11/11/23 12:15:06.965
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9664.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9664.svc.cluster.local; sleep 1; done
   @ 11/11/23 12:15:06.969
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9664.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9664.svc.cluster.local; sleep 1; done
   @ 11/11/23 12:15:06.969
  STEP: creating a pod to probe DNS @ 11/11/23 12:15:06.969
  STEP: submitting the pod to kubernetes @ 11/11/23 12:15:06.969
  STEP: retrieving the pod @ 11/11/23 12:15:12.996
  STEP: looking for the results for each expected name from probers @ 11/11/23 12:15:12.999
  Nov 11 12:15:13.011: INFO: DNS probes using dns-test-4f6c8aa9-8186-48da-966d-72f09abc1e84 succeeded

  STEP: changing the externalName to bar.example.com @ 11/11/23 12:15:13.011
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9664.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9664.svc.cluster.local; sleep 1; done
   @ 11/11/23 12:15:13.018
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9664.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9664.svc.cluster.local; sleep 1; done
   @ 11/11/23 12:15:13.018
  STEP: creating a second pod to probe DNS @ 11/11/23 12:15:13.018
  STEP: submitting the pod to kubernetes @ 11/11/23 12:15:13.018
  STEP: retrieving the pod @ 11/11/23 12:15:15.032
  STEP: looking for the results for each expected name from probers @ 11/11/23 12:15:15.035
  Nov 11 12:15:15.040: INFO: File wheezy_udp@dns-test-service-3.dns-9664.svc.cluster.local from pod  dns-9664/dns-test-75770298-e11e-4705-9a38-5cd842cb1f24 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Nov 11 12:15:15.043: INFO: File jessie_udp@dns-test-service-3.dns-9664.svc.cluster.local from pod  dns-9664/dns-test-75770298-e11e-4705-9a38-5cd842cb1f24 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Nov 11 12:15:15.043: INFO: Lookups using dns-9664/dns-test-75770298-e11e-4705-9a38-5cd842cb1f24 failed for: [wheezy_udp@dns-test-service-3.dns-9664.svc.cluster.local jessie_udp@dns-test-service-3.dns-9664.svc.cluster.local]

  Nov 11 12:15:15.049: INFO: Pod client logs for webserver: 
  Nov 11 12:15:15.054: INFO: Pod client logs for querier: 
  Nov 11 12:15:15.059: INFO: Pod client logs for jessie-querier: 
  Nov 11 12:15:20.067: INFO: DNS probes using dns-test-75770298-e11e-4705-9a38-5cd842cb1f24 succeeded

  STEP: changing the service to type=ClusterIP @ 11/11/23 12:15:20.067
  W1111 12:15:20.080095      22 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9664.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-9664.svc.cluster.local; sleep 1; done
   @ 11/11/23 12:15:20.08
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9664.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9664.svc.cluster.local; sleep 1; done
   @ 11/11/23 12:15:20.08
  STEP: creating a third pod to probe DNS @ 11/11/23 12:15:20.08
  STEP: submitting the pod to kubernetes @ 11/11/23 12:15:20.083
  STEP: retrieving the pod @ 11/11/23 12:15:22.1
  STEP: looking for the results for each expected name from probers @ 11/11/23 12:15:22.103
  Nov 11 12:15:22.110: INFO: DNS probes using dns-test-ecf8385f-a618-4a1a-8de4-36949275f0a9 succeeded

  Nov 11 12:15:22.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/11/23 12:15:22.113
  STEP: deleting the pod @ 11/11/23 12:15:22.127
  STEP: deleting the pod @ 11/11/23 12:15:22.138
  STEP: deleting the test externalName service @ 11/11/23 12:15:22.153
  STEP: Destroying namespace "dns-9664" for this suite. @ 11/11/23 12:15:22.168
• [15.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 11/11/23 12:15:22.176
  Nov 11 12:15:22.176: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 12:15:22.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:15:22.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:15:22.197
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/11/23 12:15:22.199
  STEP: Saw pod success @ 11/11/23 12:15:26.218
  Nov 11 12:15:26.221: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-b7f12852-b143-4805-95ad-f9ff0b4c6f79 container test-container: <nil>
  STEP: delete the pod @ 11/11/23 12:15:26.226
  Nov 11 12:15:26.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2464" for this suite. @ 11/11/23 12:15:26.244
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 11/11/23 12:15:26.251
  Nov 11 12:15:26.251: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename daemonsets @ 11/11/23 12:15:26.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:15:26.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:15:26.273
  Nov 11 12:15:26.296: INFO: Create a RollingUpdate DaemonSet
  Nov 11 12:15:26.303: INFO: Check that daemon pods launch on every node of the cluster
  Nov 11 12:15:26.306: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:15:26.306: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:15:26.309: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:15:26.309: INFO: Node ip-172-31-26-213 is running 0 daemon pod, expected 1
  Nov 11 12:15:27.315: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:15:27.315: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:15:27.318: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 11 12:15:27.318: INFO: Node ip-172-31-79-254 is running 0 daemon pod, expected 1
  Nov 11 12:15:28.313: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:15:28.314: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:15:28.317: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 11 12:15:28.317: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Nov 11 12:15:28.317: INFO: Update the DaemonSet to trigger a rollout
  Nov 11 12:15:28.326: INFO: Updating DaemonSet daemon-set
  Nov 11 12:15:29.341: INFO: Roll back the DaemonSet before rollout is complete
  Nov 11 12:15:29.351: INFO: Updating DaemonSet daemon-set
  Nov 11 12:15:29.351: INFO: Make sure DaemonSet rollback is complete
  Nov 11 12:15:29.358: INFO: Wrong image for pod: daemon-set-75n8h. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Nov 11 12:15:29.358: INFO: Pod daemon-set-75n8h is not available
  Nov 11 12:15:29.362: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:15:29.362: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:15:30.371: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:15:30.372: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:15:31.365: INFO: Pod daemon-set-46jzv is not available
  Nov 11 12:15:31.368: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:15:31.368: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 11/11/23 12:15:31.374
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2894, will wait for the garbage collector to delete the pods @ 11/11/23 12:15:31.374
  Nov 11 12:15:31.433: INFO: Deleting DaemonSet.extensions daemon-set took: 5.502763ms
  Nov 11 12:15:31.534: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.300926ms
  Nov 11 12:15:33.338: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:15:33.338: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 11 12:15:33.343: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5957"},"items":null}

  Nov 11 12:15:33.346: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5957"},"items":null}

  Nov 11 12:15:33.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2894" for this suite. @ 11/11/23 12:15:33.361
• [7.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 11/11/23 12:15:33.367
  Nov 11 12:15:33.367: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename discovery @ 11/11/23 12:15:33.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:15:33.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:15:33.384
  STEP: Setting up server cert @ 11/11/23 12:15:33.387
  Nov 11 12:15:33.661: INFO: Checking APIGroup: apiregistration.k8s.io
  Nov 11 12:15:33.662: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Nov 11 12:15:33.662: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Nov 11 12:15:33.662: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Nov 11 12:15:33.662: INFO: Checking APIGroup: apps
  Nov 11 12:15:33.663: INFO: PreferredVersion.GroupVersion: apps/v1
  Nov 11 12:15:33.663: INFO: Versions found [{apps/v1 v1}]
  Nov 11 12:15:33.663: INFO: apps/v1 matches apps/v1
  Nov 11 12:15:33.663: INFO: Checking APIGroup: events.k8s.io
  Nov 11 12:15:33.664: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Nov 11 12:15:33.664: INFO: Versions found [{events.k8s.io/v1 v1}]
  Nov 11 12:15:33.664: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Nov 11 12:15:33.664: INFO: Checking APIGroup: authentication.k8s.io
  Nov 11 12:15:33.665: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Nov 11 12:15:33.665: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Nov 11 12:15:33.665: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Nov 11 12:15:33.665: INFO: Checking APIGroup: authorization.k8s.io
  Nov 11 12:15:33.666: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Nov 11 12:15:33.666: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Nov 11 12:15:33.666: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Nov 11 12:15:33.666: INFO: Checking APIGroup: autoscaling
  Nov 11 12:15:33.667: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Nov 11 12:15:33.667: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Nov 11 12:15:33.667: INFO: autoscaling/v2 matches autoscaling/v2
  Nov 11 12:15:33.667: INFO: Checking APIGroup: batch
  Nov 11 12:15:33.668: INFO: PreferredVersion.GroupVersion: batch/v1
  Nov 11 12:15:33.668: INFO: Versions found [{batch/v1 v1}]
  Nov 11 12:15:33.668: INFO: batch/v1 matches batch/v1
  Nov 11 12:15:33.668: INFO: Checking APIGroup: certificates.k8s.io
  Nov 11 12:15:33.669: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Nov 11 12:15:33.669: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Nov 11 12:15:33.669: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Nov 11 12:15:33.669: INFO: Checking APIGroup: networking.k8s.io
  Nov 11 12:15:33.670: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Nov 11 12:15:33.670: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Nov 11 12:15:33.670: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Nov 11 12:15:33.670: INFO: Checking APIGroup: policy
  Nov 11 12:15:33.671: INFO: PreferredVersion.GroupVersion: policy/v1
  Nov 11 12:15:33.671: INFO: Versions found [{policy/v1 v1}]
  Nov 11 12:15:33.671: INFO: policy/v1 matches policy/v1
  Nov 11 12:15:33.671: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Nov 11 12:15:33.672: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Nov 11 12:15:33.672: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Nov 11 12:15:33.672: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Nov 11 12:15:33.672: INFO: Checking APIGroup: storage.k8s.io
  Nov 11 12:15:33.673: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Nov 11 12:15:33.673: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Nov 11 12:15:33.673: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Nov 11 12:15:33.673: INFO: Checking APIGroup: admissionregistration.k8s.io
  Nov 11 12:15:33.674: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Nov 11 12:15:33.674: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Nov 11 12:15:33.674: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Nov 11 12:15:33.674: INFO: Checking APIGroup: apiextensions.k8s.io
  Nov 11 12:15:33.675: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Nov 11 12:15:33.675: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Nov 11 12:15:33.675: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Nov 11 12:15:33.675: INFO: Checking APIGroup: scheduling.k8s.io
  Nov 11 12:15:33.676: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Nov 11 12:15:33.676: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Nov 11 12:15:33.676: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Nov 11 12:15:33.676: INFO: Checking APIGroup: coordination.k8s.io
  Nov 11 12:15:33.677: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Nov 11 12:15:33.677: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Nov 11 12:15:33.677: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Nov 11 12:15:33.677: INFO: Checking APIGroup: node.k8s.io
  Nov 11 12:15:33.678: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Nov 11 12:15:33.678: INFO: Versions found [{node.k8s.io/v1 v1}]
  Nov 11 12:15:33.678: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Nov 11 12:15:33.678: INFO: Checking APIGroup: discovery.k8s.io
  Nov 11 12:15:33.679: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Nov 11 12:15:33.679: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Nov 11 12:15:33.679: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Nov 11 12:15:33.679: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Nov 11 12:15:33.680: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Nov 11 12:15:33.680: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Nov 11 12:15:33.680: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Nov 11 12:15:33.680: INFO: Checking APIGroup: metrics.k8s.io
  Nov 11 12:15:33.681: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Nov 11 12:15:33.681: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Nov 11 12:15:33.681: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Nov 11 12:15:33.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6155" for this suite. @ 11/11/23 12:15:33.685
• [0.325 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 11/11/23 12:15:33.693
  Nov 11 12:15:33.693: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 12:15:33.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:15:33.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:15:33.713
  STEP: Starting the proxy @ 11/11/23 12:15:33.716
  Nov 11 12:15:33.716: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-2828 proxy --unix-socket=/tmp/kubectl-proxy-unix4289158259/test'
  STEP: retrieving proxy /api/ output @ 11/11/23 12:15:33.753
  Nov 11 12:15:33.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2828" for this suite. @ 11/11/23 12:15:33.756
• [0.070 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 11/11/23 12:15:33.763
  Nov 11 12:15:33.763: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename var-expansion @ 11/11/23 12:15:33.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:15:33.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:15:33.78
  STEP: Creating a pod to test env composition @ 11/11/23 12:15:33.783
  STEP: Saw pod success @ 11/11/23 12:15:37.802
  Nov 11 12:15:37.805: INFO: Trying to get logs from node ip-172-31-79-254 pod var-expansion-fbdafde3-14c2-44ce-9fd4-32c4c2d6e04c container dapi-container: <nil>
  STEP: delete the pod @ 11/11/23 12:15:37.811
  Nov 11 12:15:37.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2392" for this suite. @ 11/11/23 12:15:37.834
• [4.077 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 11/11/23 12:15:37.84
  Nov 11 12:15:37.840: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename replicaset @ 11/11/23 12:15:37.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:15:37.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:15:37.857
  STEP: Create a Replicaset @ 11/11/23 12:15:37.864
  STEP: Verify that the required pods have come up. @ 11/11/23 12:15:37.868
  Nov 11 12:15:37.871: INFO: Pod name sample-pod: Found 0 pods out of 1
  Nov 11 12:15:42.874: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/11/23 12:15:42.874
  STEP: Getting /status @ 11/11/23 12:15:42.874
  Nov 11 12:15:42.877: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 11/11/23 12:15:42.877
  Nov 11 12:15:42.885: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 11/11/23 12:15:42.885
  Nov 11 12:15:42.886: INFO: Observed &ReplicaSet event: ADDED
  Nov 11 12:15:42.886: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 11 12:15:42.886: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 11 12:15:42.887: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 11 12:15:42.887: INFO: Found replicaset test-rs in namespace replicaset-6046 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov 11 12:15:42.887: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 11/11/23 12:15:42.887
  Nov 11 12:15:42.887: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Nov 11 12:15:42.892: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 11/11/23 12:15:42.892
  Nov 11 12:15:42.894: INFO: Observed &ReplicaSet event: ADDED
  Nov 11 12:15:42.894: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 11 12:15:42.894: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 11 12:15:42.894: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 11 12:15:42.894: INFO: Observed replicaset test-rs in namespace replicaset-6046 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 11 12:15:42.894: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 11 12:15:42.895: INFO: Found replicaset test-rs in namespace replicaset-6046 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Nov 11 12:15:42.895: INFO: Replicaset test-rs has a patched status
  Nov 11 12:15:42.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6046" for this suite. @ 11/11/23 12:15:42.898
• [5.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 11/11/23 12:15:42.904
  Nov 11 12:15:42.904: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 12:15:42.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:15:42.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:15:42.921
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 12:15:42.923
  STEP: Saw pod success @ 11/11/23 12:15:46.941
  Nov 11 12:15:46.944: INFO: Trying to get logs from node ip-172-31-8-111 pod downwardapi-volume-48d5653d-2b3c-48a6-9241-fa073409d2c0 container client-container: <nil>
  STEP: delete the pod @ 11/11/23 12:15:46.95
  Nov 11 12:15:46.964: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3570" for this suite. @ 11/11/23 12:15:46.967
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 11/11/23 12:15:46.972
  Nov 11 12:15:46.972: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 12:15:46.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:15:46.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:15:46.988
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/11/23 12:15:46.991
  STEP: Saw pod success @ 11/11/23 12:15:51.008
  Nov 11 12:15:51.010: INFO: Trying to get logs from node ip-172-31-8-111 pod pod-db4292fe-4cfc-4e8a-afc5-67e659e07871 container test-container: <nil>
  STEP: delete the pod @ 11/11/23 12:15:51.017
  Nov 11 12:15:51.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8097" for this suite. @ 11/11/23 12:15:51.034
• [4.067 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 11/11/23 12:15:51.04
  Nov 11 12:15:51.040: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pods @ 11/11/23 12:15:51.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:15:51.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:15:51.056
  STEP: creating the pod @ 11/11/23 12:15:51.059
  STEP: submitting the pod to kubernetes @ 11/11/23 12:15:51.059
  W1111 12:15:51.066920      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 11/11/23 12:15:53.076
  STEP: updating the pod @ 11/11/23 12:15:53.079
  Nov 11 12:15:53.590: INFO: Successfully updated pod "pod-update-activedeadlineseconds-005233d7-f7f5-4591-bbd3-447d2318a4cd"
  Nov 11 12:15:57.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1714" for this suite. @ 11/11/23 12:15:57.606
• [6.571 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 11/11/23 12:15:57.612
  Nov 11 12:15:57.612: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 12:15:57.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:15:57.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:15:57.63
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 12:15:57.633
  STEP: Saw pod success @ 11/11/23 12:16:01.651
  Nov 11 12:16:01.654: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-f7be1d29-d70c-4fe5-aee0-631cf1f1b45e container client-container: <nil>
  STEP: delete the pod @ 11/11/23 12:16:01.66
  Nov 11 12:16:01.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9882" for this suite. @ 11/11/23 12:16:01.676
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 11/11/23 12:16:01.683
  Nov 11 12:16:01.683: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 12:16:01.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:16:01.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:16:01.698
  STEP: Creating a pod to test downward api env vars @ 11/11/23 12:16:01.701
  STEP: Saw pod success @ 11/11/23 12:16:05.722
  Nov 11 12:16:05.725: INFO: Trying to get logs from node ip-172-31-79-254 pod downward-api-8688955c-9b4f-4ee2-92de-7d4a51dd3d2e container dapi-container: <nil>
  STEP: delete the pod @ 11/11/23 12:16:05.731
  Nov 11 12:16:05.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4365" for this suite. @ 11/11/23 12:16:05.749
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 11/11/23 12:16:05.756
  Nov 11 12:16:05.756: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 12:16:05.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:16:05.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:16:05.772
  STEP: Setting up server cert @ 11/11/23 12:16:05.792
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 12:16:06.093
  STEP: Deploying the webhook pod @ 11/11/23 12:16:06.1
  STEP: Wait for the deployment to be ready @ 11/11/23 12:16:06.117
  Nov 11 12:16:06.124: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/11/23 12:16:08.133
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 12:16:08.142
  Nov 11 12:16:09.142: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/11/23 12:16:09.21
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/11/23 12:16:09.234
  STEP: Deleting the collection of validation webhooks @ 11/11/23 12:16:09.255
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/11/23 12:16:09.303
  Nov 11 12:16:09.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8065" for this suite. @ 11/11/23 12:16:09.351
  STEP: Destroying namespace "webhook-markers-1486" for this suite. @ 11/11/23 12:16:09.362
• [3.613 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 11/11/23 12:16:09.369
  Nov 11 12:16:09.369: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename disruption @ 11/11/23 12:16:09.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:16:09.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:16:09.383
  STEP: Waiting for the pdb to be processed @ 11/11/23 12:16:09.392
  STEP: Updating PodDisruptionBudget status @ 11/11/23 12:16:11.398
  STEP: Waiting for all pods to be running @ 11/11/23 12:16:11.404
  Nov 11 12:16:11.409: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 11/11/23 12:16:13.412
  STEP: Waiting for the pdb to be processed @ 11/11/23 12:16:13.424
  STEP: Patching PodDisruptionBudget status @ 11/11/23 12:16:13.432
  STEP: Waiting for the pdb to be processed @ 11/11/23 12:16:13.439
  Nov 11 12:16:13.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7569" for this suite. @ 11/11/23 12:16:13.451
• [4.088 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 11/11/23 12:16:13.458
  Nov 11 12:16:13.458: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 12:16:13.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:16:13.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:16:13.473
  STEP: creating service endpoint-test2 in namespace services-9515 @ 11/11/23 12:16:13.476
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9515 to expose endpoints map[] @ 11/11/23 12:16:13.484
  Nov 11 12:16:13.491: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Nov 11 12:16:14.497: INFO: successfully validated that service endpoint-test2 in namespace services-9515 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9515 @ 11/11/23 12:16:14.497
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9515 to expose endpoints map[pod1:[80]] @ 11/11/23 12:16:16.512
  Nov 11 12:16:16.522: INFO: successfully validated that service endpoint-test2 in namespace services-9515 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 11/11/23 12:16:16.522
  Nov 11 12:16:16.522: INFO: Creating new exec pod
  Nov 11 12:16:19.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-9515 exec execpodjcjd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Nov 11 12:16:19.662: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Nov 11 12:16:19.662: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 12:16:19.662: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-9515 exec execpodjcjd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.235 80'
  Nov 11 12:16:19.806: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.235 80\nConnection to 10.152.183.235 80 port [tcp/http] succeeded!\n"
  Nov 11 12:16:19.806: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9515 @ 11/11/23 12:16:19.806
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9515 to expose endpoints map[pod1:[80] pod2:[80]] @ 11/11/23 12:16:21.822
  Nov 11 12:16:21.834: INFO: successfully validated that service endpoint-test2 in namespace services-9515 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 11/11/23 12:16:21.834
  Nov 11 12:16:22.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-9515 exec execpodjcjd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Nov 11 12:16:22.970: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Nov 11 12:16:22.970: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 12:16:22.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-9515 exec execpodjcjd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.235 80'
  Nov 11 12:16:23.133: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.235 80\nConnection to 10.152.183.235 80 port [tcp/http] succeeded!\n"
  Nov 11 12:16:23.133: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9515 @ 11/11/23 12:16:23.133
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9515 to expose endpoints map[pod2:[80]] @ 11/11/23 12:16:23.147
  Nov 11 12:16:24.165: INFO: successfully validated that service endpoint-test2 in namespace services-9515 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 11/11/23 12:16:24.165
  Nov 11 12:16:25.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-9515 exec execpodjcjd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Nov 11 12:16:25.294: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Nov 11 12:16:25.294: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 12:16:25.294: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-9515 exec execpodjcjd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.235 80'
  Nov 11 12:16:25.410: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.235 80\nConnection to 10.152.183.235 80 port [tcp/http] succeeded!\n"
  Nov 11 12:16:25.410: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9515 @ 11/11/23 12:16:25.41
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9515 to expose endpoints map[] @ 11/11/23 12:16:25.424
  Nov 11 12:16:25.431: INFO: successfully validated that service endpoint-test2 in namespace services-9515 exposes endpoints map[]
  Nov 11 12:16:25.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9515" for this suite. @ 11/11/23 12:16:25.447
• [11.994 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 11/11/23 12:16:25.454
  Nov 11 12:16:25.454: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename containers @ 11/11/23 12:16:25.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:16:25.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:16:25.473
  Nov 11 12:16:27.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1793" for this suite. @ 11/11/23 12:16:27.497
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 11/11/23 12:16:27.503
  Nov 11 12:16:27.503: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename replication-controller @ 11/11/23 12:16:27.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:16:27.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:16:27.518
  STEP: Creating replication controller my-hostname-basic-a7d86e03-d3ab-479a-a41f-d0583764b472 @ 11/11/23 12:16:27.52
  Nov 11 12:16:27.528: INFO: Pod name my-hostname-basic-a7d86e03-d3ab-479a-a41f-d0583764b472: Found 0 pods out of 1
  Nov 11 12:16:32.532: INFO: Pod name my-hostname-basic-a7d86e03-d3ab-479a-a41f-d0583764b472: Found 1 pods out of 1
  Nov 11 12:16:32.532: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-a7d86e03-d3ab-479a-a41f-d0583764b472" are running
  Nov 11 12:16:32.535: INFO: Pod "my-hostname-basic-a7d86e03-d3ab-479a-a41f-d0583764b472-gglkp" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-11 12:16:27 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-11 12:16:28 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-11 12:16:28 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-11 12:16:27 +0000 UTC Reason: Message:}])
  Nov 11 12:16:32.535: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/11/23 12:16:32.535
  Nov 11 12:16:32.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6071" for this suite. @ 11/11/23 12:16:32.547
• [5.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 11/11/23 12:16:32.554
  Nov 11 12:16:32.554: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/11/23 12:16:32.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:16:32.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:16:32.574
  STEP: fetching the /apis discovery document @ 11/11/23 12:16:32.576
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 11/11/23 12:16:32.578
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 11/11/23 12:16:32.578
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 11/11/23 12:16:32.578
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 11/11/23 12:16:32.579
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 11/11/23 12:16:32.579
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 11/11/23 12:16:32.58
  Nov 11 12:16:32.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-215" for this suite. @ 11/11/23 12:16:32.589
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 11/11/23 12:16:32.599
  Nov 11 12:16:32.599: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 12:16:32.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:16:32.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:16:32.614
  STEP: validating cluster-info @ 11/11/23 12:16:32.616
  Nov 11 12:16:32.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-7434 cluster-info'
  Nov 11 12:16:32.666: INFO: stderr: ""
  Nov 11 12:16:32.666: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Nov 11 12:16:32.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7434" for this suite. @ 11/11/23 12:16:32.67
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 11/11/23 12:16:32.676
  Nov 11 12:16:32.676: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 12:16:32.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:16:32.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:16:32.694
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9984 @ 11/11/23 12:16:32.696
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/11/23 12:16:32.709
  STEP: creating service externalsvc in namespace services-9984 @ 11/11/23 12:16:32.709
  STEP: creating replication controller externalsvc in namespace services-9984 @ 11/11/23 12:16:32.725
  I1111 12:16:32.729665      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-9984, replica count: 2
  I1111 12:16:35.780879      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 11/11/23 12:16:35.784
  Nov 11 12:16:35.801: INFO: Creating new exec pod
  Nov 11 12:16:37.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-9984 exec execpod27x2p -- /bin/sh -x -c nslookup nodeport-service.services-9984.svc.cluster.local'
  Nov 11 12:16:37.960: INFO: stderr: "+ nslookup nodeport-service.services-9984.svc.cluster.local\n"
  Nov 11 12:16:37.960: INFO: stdout: "Server:\t\t10.152.183.243\nAddress:\t10.152.183.243#53\n\nnodeport-service.services-9984.svc.cluster.local\tcanonical name = externalsvc.services-9984.svc.cluster.local.\nName:\texternalsvc.services-9984.svc.cluster.local\nAddress: 10.152.183.247\n\n"
  Nov 11 12:16:37.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-9984, will wait for the garbage collector to delete the pods @ 11/11/23 12:16:37.964
  Nov 11 12:16:38.024: INFO: Deleting ReplicationController externalsvc took: 5.97063ms
  Nov 11 12:16:38.124: INFO: Terminating ReplicationController externalsvc pods took: 100.291496ms
  Nov 11 12:16:40.938: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-9984" for this suite. @ 11/11/23 12:16:40.952
• [8.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 11/11/23 12:16:40.959
  Nov 11 12:16:40.959: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename certificates @ 11/11/23 12:16:40.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:16:40.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:16:40.976
  STEP: getting /apis @ 11/11/23 12:16:41.225
  STEP: getting /apis/certificates.k8s.io @ 11/11/23 12:16:41.229
  STEP: getting /apis/certificates.k8s.io/v1 @ 11/11/23 12:16:41.23
  STEP: creating @ 11/11/23 12:16:41.231
  STEP: getting @ 11/11/23 12:16:41.247
  STEP: listing @ 11/11/23 12:16:41.249
  STEP: watching @ 11/11/23 12:16:41.252
  Nov 11 12:16:41.252: INFO: starting watch
  STEP: patching @ 11/11/23 12:16:41.253
  STEP: updating @ 11/11/23 12:16:41.26
  Nov 11 12:16:41.265: INFO: waiting for watch events with expected annotations
  Nov 11 12:16:41.265: INFO: saw patched and updated annotations
  STEP: getting /approval @ 11/11/23 12:16:41.265
  STEP: patching /approval @ 11/11/23 12:16:41.267
  STEP: updating /approval @ 11/11/23 12:16:41.273
  STEP: getting /status @ 11/11/23 12:16:41.28
  STEP: patching /status @ 11/11/23 12:16:41.282
  STEP: updating /status @ 11/11/23 12:16:41.289
  STEP: deleting @ 11/11/23 12:16:41.296
  STEP: deleting a collection @ 11/11/23 12:16:41.307
  Nov 11 12:16:41.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4647" for this suite. @ 11/11/23 12:16:41.322
• [0.370 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 11/11/23 12:16:41.329
  Nov 11 12:16:41.329: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename secrets @ 11/11/23 12:16:41.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:16:41.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:16:41.347
  STEP: Creating secret with name secret-test-6b0e21c4-7530-4e22-bd0d-baa05689c266 @ 11/11/23 12:16:41.35
  STEP: Creating a pod to test consume secrets @ 11/11/23 12:16:41.353
  STEP: Saw pod success @ 11/11/23 12:16:45.374
  Nov 11 12:16:45.377: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-secrets-023031d8-c153-4457-9fec-0705cade826e container secret-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 12:16:45.383
  Nov 11 12:16:45.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8972" for this suite. @ 11/11/23 12:16:45.403
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 11/11/23 12:16:45.409
  Nov 11 12:16:45.409: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/11/23 12:16:45.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:16:45.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:16:45.423
  STEP: creating @ 11/11/23 12:16:45.426
  STEP: getting @ 11/11/23 12:16:45.442
  STEP: listing in namespace @ 11/11/23 12:16:45.444
  STEP: patching @ 11/11/23 12:16:45.447
  STEP: deleting @ 11/11/23 12:16:45.46
  Nov 11 12:16:45.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7702" for this suite. @ 11/11/23 12:16:45.472
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 11/11/23 12:16:45.478
  Nov 11 12:16:45.478: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename cronjob @ 11/11/23 12:16:45.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:16:45.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:16:45.493
  STEP: Creating a ReplaceConcurrent cronjob @ 11/11/23 12:16:45.497
  STEP: Ensuring a job is scheduled @ 11/11/23 12:16:45.502
  STEP: Ensuring exactly one is scheduled @ 11/11/23 12:17:01.508
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/11/23 12:17:01.51
  STEP: Ensuring the job is replaced with a new one @ 11/11/23 12:17:01.513
  STEP: Removing cronjob @ 11/11/23 12:18:01.518
  Nov 11 12:18:01.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4556" for this suite. @ 11/11/23 12:18:01.528
• [76.060 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 11/11/23 12:18:01.538
  Nov 11 12:18:01.538: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 12:18:01.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:18:01.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:18:01.56
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 11/11/23 12:18:01.562
  STEP: Saw pod success @ 11/11/23 12:18:05.582
  Nov 11 12:18:05.584: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-e3b6e07a-283e-4640-869e-5fad24627277 container test-container: <nil>
  STEP: delete the pod @ 11/11/23 12:18:05.591
  Nov 11 12:18:05.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5691" for this suite. @ 11/11/23 12:18:05.626
• [4.093 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 11/11/23 12:18:05.631
  Nov 11 12:18:05.631: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 12:18:05.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:18:05.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:18:05.646
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 12:18:05.648
  STEP: Saw pod success @ 11/11/23 12:18:09.669
  Nov 11 12:18:09.672: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-1fa2264a-776d-4912-8c2c-9c9a7637731d container client-container: <nil>
  STEP: delete the pod @ 11/11/23 12:18:09.679
  Nov 11 12:18:09.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8358" for this suite. @ 11/11/23 12:18:09.693
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 11/11/23 12:18:09.699
  Nov 11 12:18:09.699: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename containers @ 11/11/23 12:18:09.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:18:09.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:18:09.716
  STEP: Creating a pod to test override command @ 11/11/23 12:18:09.718
  STEP: Saw pod success @ 11/11/23 12:18:13.736
  Nov 11 12:18:13.739: INFO: Trying to get logs from node ip-172-31-79-254 pod client-containers-8a8e2a71-7b0a-4f19-ac96-405a8b92c312 container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 12:18:13.745
  Nov 11 12:18:13.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7986" for this suite. @ 11/11/23 12:18:13.762
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 11/11/23 12:18:13.768
  Nov 11 12:18:13.768: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename sched-preemption @ 11/11/23 12:18:13.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:18:13.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:18:13.785
  Nov 11 12:18:13.800: INFO: Waiting up to 1m0s for all nodes to be ready
  Nov 11 12:19:13.820: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/11/23 12:19:13.823
  Nov 11 12:19:13.836: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Nov 11 12:19:13.844: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Nov 11 12:19:13.856: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Nov 11 12:19:13.866: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Nov 11 12:19:13.879: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Nov 11 12:19:13.893: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/11/23 12:19:13.893
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 11/11/23 12:19:15.916
  Nov 11 12:19:19.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6067" for this suite. @ 11/11/23 12:19:20.012
• [66.249 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 11/11/23 12:19:20.018
  Nov 11 12:19:20.018: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename resourcequota @ 11/11/23 12:19:20.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:19:20.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:19:20.036
  STEP: Creating a ResourceQuota with best effort scope @ 11/11/23 12:19:20.039
  STEP: Ensuring ResourceQuota status is calculated @ 11/11/23 12:19:20.042
  STEP: Creating a ResourceQuota with not best effort scope @ 11/11/23 12:19:22.046
  STEP: Ensuring ResourceQuota status is calculated @ 11/11/23 12:19:22.049
  STEP: Creating a best-effort pod @ 11/11/23 12:19:24.054
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 11/11/23 12:19:24.066
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 11/11/23 12:19:26.076
  STEP: Deleting the pod @ 11/11/23 12:19:28.08
  STEP: Ensuring resource quota status released the pod usage @ 11/11/23 12:19:28.09
  STEP: Creating a not best-effort pod @ 11/11/23 12:19:30.095
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 11/11/23 12:19:30.103
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 11/11/23 12:19:32.106
  STEP: Deleting the pod @ 11/11/23 12:19:34.11
  STEP: Ensuring resource quota status released the pod usage @ 11/11/23 12:19:34.123
  Nov 11 12:19:36.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5991" for this suite. @ 11/11/23 12:19:36.13
• [16.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 11/11/23 12:19:36.136
  Nov 11 12:19:36.136: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename disruption @ 11/11/23 12:19:36.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:19:36.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:19:36.151
  STEP: Waiting for the pdb to be processed @ 11/11/23 12:19:36.157
  STEP: Waiting for all pods to be running @ 11/11/23 12:19:38.188
  Nov 11 12:19:38.190: INFO: running pods: 0 < 3
  Nov 11 12:19:40.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9321" for this suite. @ 11/11/23 12:19:40.201
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 11/11/23 12:19:40.22
  Nov 11 12:19:40.220: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename podtemplate @ 11/11/23 12:19:40.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:19:40.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:19:40.233
  Nov 11 12:19:40.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2838" for this suite. @ 11/11/23 12:19:40.263
• [0.049 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 11/11/23 12:19:40.269
  Nov 11 12:19:40.269: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename svcaccounts @ 11/11/23 12:19:40.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:19:40.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:19:40.285
  STEP: reading a file in the container @ 11/11/23 12:19:42.305
  Nov 11 12:19:42.306: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-822 pod-service-account-1517026c-0847-4ea9-bcc7-50543c0ac499 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 11/11/23 12:19:42.445
  Nov 11 12:19:42.445: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-822 pod-service-account-1517026c-0847-4ea9-bcc7-50543c0ac499 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 11/11/23 12:19:42.573
  Nov 11 12:19:42.573: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-822 pod-service-account-1517026c-0847-4ea9-bcc7-50543c0ac499 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Nov 11 12:19:42.703: INFO: Got root ca configmap in namespace "svcaccounts-822"
  Nov 11 12:19:42.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-822" for this suite. @ 11/11/23 12:19:42.709
• [2.446 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 11/11/23 12:19:42.716
  Nov 11 12:19:42.716: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename deployment @ 11/11/23 12:19:42.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:19:42.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:19:42.734
  Nov 11 12:19:42.746: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Nov 11 12:19:47.749: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/11/23 12:19:47.749
  Nov 11 12:19:47.749: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Nov 11 12:19:49.753: INFO: Creating deployment "test-rollover-deployment"
  Nov 11 12:19:49.760: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Nov 11 12:19:51.767: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Nov 11 12:19:51.774: INFO: Ensure that both replica sets have 1 created replica
  Nov 11 12:19:51.779: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Nov 11 12:19:51.788: INFO: Updating deployment test-rollover-deployment
  Nov 11 12:19:51.788: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Nov 11 12:19:53.794: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Nov 11 12:19:53.800: INFO: Make sure deployment "test-rollover-deployment" is complete
  Nov 11 12:19:53.808: INFO: all replica sets need to contain the pod-template-hash label
  Nov 11 12:19:53.808: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 19, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:19:55.815: INFO: all replica sets need to contain the pod-template-hash label
  Nov 11 12:19:55.815: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 19, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:19:57.816: INFO: all replica sets need to contain the pod-template-hash label
  Nov 11 12:19:57.816: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 19, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:19:59.815: INFO: all replica sets need to contain the pod-template-hash label
  Nov 11 12:19:59.815: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 19, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:20:01.815: INFO: all replica sets need to contain the pod-template-hash label
  Nov 11 12:20:01.815: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 19, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 19, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:20:03.814: INFO: 
  Nov 11 12:20:03.814: INFO: Ensure that both old replica sets have no replicas
  Nov 11 12:20:03.824: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-304",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb1ad621-57ee-4352-a3af-b65b360ddd10",
      ResourceVersion: (string) (len=4) "7976",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835301989,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 11 12:20:03.828: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-304",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e8a39c6-6988-44f0-88ea-aa9e4b4a3605",
      ResourceVersion: (string) (len=4) "7966",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835301991,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "bb1ad621-57ee-4352-a3af-b65b360ddd10",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 62 31 61 64 36  32 31 2d 35 37 65 65 2d  |\"bb1ad621-57ee-|
              00000120  34 33 35 32 2d 61 33 61  66 2d 62 36 35 62 33 36  |4352-a3af-b65b36|
              00000130  30 64 64 64 31 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0ddd10\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 11 12:20:03.829: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Nov 11 12:20:03.829: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-304",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c8d236d-36de-4734-a210-de636dcb614e",
      ResourceVersion: (string) (len=4) "7975",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835301982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "bb1ad621-57ee-4352-a3af-b65b360ddd10",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  62 62 31 61 64 36 32 31  2d 35 37 65 65 2d 34 33  |bb1ad621-57ee-43|
              000000c0  35 32 2d 61 33 61 66 2d  62 36 35 62 33 36 30 64  |52-a3af-b65b360d|
              000000d0  64 64 31 30 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |dd10\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 11 12:20:03.830: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-304",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69d7fddc-ce1b-4af1-9356-00ce33b88366",
      ResourceVersion: (string) (len=4) "7925",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835301989,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "bb1ad621-57ee-4352-a3af-b65b360ddd10",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 62 31 61 64 36  32 31 2d 35 37 65 65 2d  |\"bb1ad621-57ee-|
              00000120  34 33 35 32 2d 61 33 61  66 2d 62 36 35 62 33 36  |4352-a3af-b65b36|
              00000130  30 64 64 64 31 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0ddd10\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 11 12:20:03.834: INFO: Pod "test-rollover-deployment-5d484bf7f9-8d24g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-8d24g",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=14) "deployment-304",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d005b80-de8d-4af0-ba00-9d53651b9937",
      ResourceVersion: (string) (len=4) "7944",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835301991,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "0e8a39c6-6988-44f0-88ea-aa9e4b4a3605",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  38 61 33 39 63 36 2d 36  |d\":\"0e8a39c6-6|
              00000090  39 38 38 2d 34 34 66 30  2d 38 38 65 61 2d 61 61  |988-44f0-88ea-aa|
              000000a0  39 65 34 62 34 61 33 36  30 35 5c 22 7d 22 3a 7b  |9e4b4a3605\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301993,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 31 36 2e 32 34 37 5c  |192.168.216.247\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8zf26",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8zf26",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301993,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301993,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835301991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.254",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.216.247",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.216.247"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835301991,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835301992,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://beed1549563d7c7c03c037f325225131deaec2bfcae9499deccb08049f86ef63",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 12:20:03.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-304" for this suite. @ 11/11/23 12:20:03.839
• [21.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 11/11/23 12:20:03.848
  Nov 11 12:20:03.848: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 12:20:03.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:20:03.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:20:03.861
  STEP: Setting up server cert @ 11/11/23 12:20:03.883
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 12:20:04.129
  STEP: Deploying the webhook pod @ 11/11/23 12:20:04.135
  STEP: Wait for the deployment to be ready @ 11/11/23 12:20:04.148
  Nov 11 12:20:04.153: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/11/23 12:20:06.162
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 12:20:06.172
  Nov 11 12:20:07.173: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 11 12:20:07.179: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6094-crds.webhook.example.com via the AdmissionRegistration API @ 11/11/23 12:20:07.688
  STEP: Creating a custom resource while v1 is storage version @ 11/11/23 12:20:07.701
  STEP: Patching Custom Resource Definition to set v2 as storage @ 11/11/23 12:20:09.734
  STEP: Patching the custom resource while v2 is storage version @ 11/11/23 12:20:09.748
  Nov 11 12:20:09.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6505" for this suite. @ 11/11/23 12:20:10.329
  STEP: Destroying namespace "webhook-markers-2534" for this suite. @ 11/11/23 12:20:10.335
• [6.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 11/11/23 12:20:10.341
  Nov 11 12:20:10.341: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename sched-preemption @ 11/11/23 12:20:10.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:20:10.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:20:10.357
  Nov 11 12:20:10.371: INFO: Waiting up to 1m0s for all nodes to be ready
  Nov 11 12:21:10.390: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/11/23 12:21:10.393
  Nov 11 12:21:10.393: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/11/23 12:21:10.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:21:10.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:21:10.41
  Nov 11 12:21:10.425: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Nov 11 12:21:10.428: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Nov 11 12:21:10.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 11 12:21:10.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7827" for this suite. @ 11/11/23 12:21:10.49
  STEP: Destroying namespace "sched-preemption-6576" for this suite. @ 11/11/23 12:21:10.498
• [60.162 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 11/11/23 12:21:10.504
  Nov 11 12:21:10.504: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename security-context @ 11/11/23 12:21:10.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:21:10.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:21:10.518
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/11/23 12:21:10.521
  STEP: Saw pod success @ 11/11/23 12:21:12.533
  Nov 11 12:21:12.535: INFO: Trying to get logs from node ip-172-31-79-254 pod security-context-5891b7f4-f423-4d0e-af20-434a60353bfa container test-container: <nil>
  STEP: delete the pod @ 11/11/23 12:21:12.55
  Nov 11 12:21:12.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-279" for this suite. @ 11/11/23 12:21:12.571
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 11/11/23 12:21:12.577
  Nov 11 12:21:12.577: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/11/23 12:21:12.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:21:12.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:21:12.596
  STEP: create the container to handle the HTTPGet hook request. @ 11/11/23 12:21:12.601
  STEP: create the pod with lifecycle hook @ 11/11/23 12:21:14.62
  STEP: delete the pod with lifecycle hook @ 11/11/23 12:21:16.636
  STEP: check prestop hook @ 11/11/23 12:21:18.648
  Nov 11 12:21:18.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9577" for this suite. @ 11/11/23 12:21:18.658
• [6.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 11/11/23 12:21:18.665
  Nov 11 12:21:18.665: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename namespaces @ 11/11/23 12:21:18.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:21:18.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:21:18.679
  STEP: Creating a test namespace @ 11/11/23 12:21:18.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:21:18.695
  STEP: Creating a pod in the namespace @ 11/11/23 12:21:18.697
  STEP: Waiting for the pod to have running status @ 11/11/23 12:21:18.705
  STEP: Deleting the namespace @ 11/11/23 12:21:20.712
  STEP: Waiting for the namespace to be removed. @ 11/11/23 12:21:20.72
  STEP: Recreating the namespace @ 11/11/23 12:21:31.723
  STEP: Verifying there are no pods in the namespace @ 11/11/23 12:21:31.738
  Nov 11 12:21:31.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7479" for this suite. @ 11/11/23 12:21:31.744
  STEP: Destroying namespace "nsdeletetest-6461" for this suite. @ 11/11/23 12:21:31.751
  Nov 11 12:21:31.754: INFO: Namespace nsdeletetest-6461 was already deleted
  STEP: Destroying namespace "nsdeletetest-8765" for this suite. @ 11/11/23 12:21:31.754
• [13.094 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 11/11/23 12:21:31.759
  Nov 11 12:21:31.759: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 12:21:31.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:21:31.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:21:31.774
  STEP: Creating configMap with name projected-configmap-test-volume-e216dde3-fd32-4535-8772-22f6080c42a4 @ 11/11/23 12:21:31.776
  STEP: Creating a pod to test consume configMaps @ 11/11/23 12:21:31.783
  STEP: Saw pod success @ 11/11/23 12:21:35.803
  Nov 11 12:21:35.806: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-projected-configmaps-b0843211-b745-4735-b162-714cd8f1f27c container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 12:21:35.812
  Nov 11 12:21:35.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-319" for this suite. @ 11/11/23 12:21:35.829
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 11/11/23 12:21:35.835
  Nov 11 12:21:35.835: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename watch @ 11/11/23 12:21:35.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:21:35.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:21:35.85
  STEP: creating a new configmap @ 11/11/23 12:21:35.853
  STEP: modifying the configmap once @ 11/11/23 12:21:35.857
  STEP: modifying the configmap a second time @ 11/11/23 12:21:35.866
  STEP: deleting the configmap @ 11/11/23 12:21:35.871
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 11/11/23 12:21:35.876
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 11/11/23 12:21:35.877
  Nov 11 12:21:35.877: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2877  66a1e488-e550-401f-8900-4e18da4ba93d 8501 0 2023-11-11 12:21:35 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-11-11 12:21:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:21:35.877: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2877  66a1e488-e550-401f-8900-4e18da4ba93d 8502 0 2023-11-11 12:21:35 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-11-11 12:21:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:21:35.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2877" for this suite. @ 11/11/23 12:21:35.88
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 11/11/23 12:21:35.886
  Nov 11 12:21:35.886: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/11/23 12:21:35.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:21:35.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:21:35.903
  Nov 11 12:21:35.905: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:21:36.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3854" for this suite. @ 11/11/23 12:21:36.928
• [1.047 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 11/11/23 12:21:36.934
  Nov 11 12:21:36.934: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename subpath @ 11/11/23 12:21:36.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:21:36.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:21:36.95
  STEP: Setting up data @ 11/11/23 12:21:36.954
  STEP: Creating pod pod-subpath-test-configmap-xzlk @ 11/11/23 12:21:36.965
  STEP: Creating a pod to test atomic-volume-subpath @ 11/11/23 12:21:36.965
  STEP: Saw pod success @ 11/11/23 12:22:01.038
  Nov 11 12:22:01.041: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-subpath-test-configmap-xzlk container test-container-subpath-configmap-xzlk: <nil>
  STEP: delete the pod @ 11/11/23 12:22:01.047
  STEP: Deleting pod pod-subpath-test-configmap-xzlk @ 11/11/23 12:22:01.062
  Nov 11 12:22:01.062: INFO: Deleting pod "pod-subpath-test-configmap-xzlk" in namespace "subpath-1605"
  Nov 11 12:22:01.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1605" for this suite. @ 11/11/23 12:22:01.068
• [24.142 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 11/11/23 12:22:01.075
  Nov 11 12:22:01.075: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename var-expansion @ 11/11/23 12:22:01.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:22:01.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:22:01.091
  STEP: Creating a pod to test substitution in container's command @ 11/11/23 12:22:01.093
  STEP: Saw pod success @ 11/11/23 12:22:05.114
  Nov 11 12:22:05.117: INFO: Trying to get logs from node ip-172-31-79-254 pod var-expansion-0686065c-edfa-421b-8056-613edaeacf02 container dapi-container: <nil>
  STEP: delete the pod @ 11/11/23 12:22:05.122
  Nov 11 12:22:05.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6721" for this suite. @ 11/11/23 12:22:05.143
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 11/11/23 12:22:05.158
  Nov 11 12:22:05.158: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename init-container @ 11/11/23 12:22:05.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:22:05.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:22:05.178
  STEP: creating the pod @ 11/11/23 12:22:05.18
  Nov 11 12:22:05.180: INFO: PodSpec: initContainers in spec.initContainers
  Nov 11 12:22:45.511: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-914a28c5-ec27-4d68-a7af-446bd3a5477d", GenerateName:"", Namespace:"init-container-9775", SelfLink:"", UID:"ee0abd4b-bdf9-4823-9268-0b35232fddf8", ResourceVersion:"8788", Generation:0, CreationTimestamp:time.Date(2023, time.November, 11, 12, 22, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"180831438"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.November, 11, 12, 22, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047c44b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.November, 11, 12, 22, 45, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047c44e0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-ljbv7", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00543a3a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-ljbv7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-ljbv7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-ljbv7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0013d9ff8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-79-254", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0005a8a10), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004982080)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0049820a0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0049820a8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0049820ac), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00150e250), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 11, 12, 22, 5, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 11, 12, 22, 5, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 11, 12, 22, 5, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 11, 12, 22, 5, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.79.254", HostIPs:[]v1.HostIP(nil), PodIP:"192.168.216.253", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.216.253"}}, StartTime:time.Date(2023, time.November, 11, 12, 22, 5, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0005a8af0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0005a8b60)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://4a96ccffccb90b62fead6a85729749519d053faeb8ff2ea503b38dd6427d2c90", Started:(*bool)(0xc00498214f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00543a420), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc004982155), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00543a400), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc004982124), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Nov 11 12:22:45.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9775" for this suite. @ 11/11/23 12:22:45.516
• [40.364 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 11/11/23 12:22:45.523
  Nov 11 12:22:45.523: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 12:22:45.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:22:45.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:22:45.538
  STEP: creating a collection of services @ 11/11/23 12:22:45.541
  Nov 11 12:22:45.541: INFO: Creating e2e-svc-a-l5t88
  Nov 11 12:22:45.549: INFO: Creating e2e-svc-b-x866b
  Nov 11 12:22:45.560: INFO: Creating e2e-svc-c-xc6rl
  STEP: deleting service collection @ 11/11/23 12:22:45.57
  Nov 11 12:22:45.594: INFO: Collection of services has been deleted
  Nov 11 12:22:45.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2159" for this suite. @ 11/11/23 12:22:45.597
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 11/11/23 12:22:45.602
  Nov 11 12:22:45.602: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/11/23 12:22:45.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:22:45.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:22:45.62
  Nov 11 12:22:47.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 11/11/23 12:22:47.652
  STEP: Cleaning up the configmap @ 11/11/23 12:22:47.657
  STEP: Cleaning up the pod @ 11/11/23 12:22:47.662
  STEP: Destroying namespace "emptydir-wrapper-7135" for this suite. @ 11/11/23 12:22:47.682
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 11/11/23 12:22:47.689
  Nov 11 12:22:47.689: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename field-validation @ 11/11/23 12:22:47.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:22:47.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:22:47.706
  STEP: apply creating a deployment @ 11/11/23 12:22:47.708
  Nov 11 12:22:47.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1747" for this suite. @ 11/11/23 12:22:47.724
• [0.040 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 11/11/23 12:22:47.729
  Nov 11 12:22:47.729: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename secrets @ 11/11/23 12:22:47.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:22:47.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:22:47.747
  STEP: Creating secret with name secret-test-e871fb80-d2ec-4e81-ac8f-3a00e12c49f7 @ 11/11/23 12:22:47.766
  STEP: Creating a pod to test consume secrets @ 11/11/23 12:22:47.77
  STEP: Saw pod success @ 11/11/23 12:22:51.79
  Nov 11 12:22:51.792: INFO: Trying to get logs from node ip-172-31-8-111 pod pod-secrets-bc6681cb-de5b-4fa6-906f-ff29ae033d47 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 12:22:51.808
  Nov 11 12:22:51.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-39" for this suite. @ 11/11/23 12:22:51.828
  STEP: Destroying namespace "secret-namespace-6749" for this suite. @ 11/11/23 12:22:51.833
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 11/11/23 12:22:51.839
  Nov 11 12:22:51.839: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename runtimeclass @ 11/11/23 12:22:51.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:22:51.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:22:51.853
  Nov 11 12:22:53.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1989" for this suite. @ 11/11/23 12:22:53.884
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 11/11/23 12:22:53.893
  Nov 11 12:22:53.893: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename dns @ 11/11/23 12:22:53.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:22:53.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:22:53.906
  STEP: Creating a test headless service @ 11/11/23 12:22:53.909
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4488.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4488.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4488.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4488.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4488.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4488.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4488.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4488.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4488.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4488.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4488.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4488.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 151.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.151_udp@PTR;check="$$(dig +tcp +noall +answer +search 151.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.151_tcp@PTR;sleep 1; done
   @ 11/11/23 12:22:53.924
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4488.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4488.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4488.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4488.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4488.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4488.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4488.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4488.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4488.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4488.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4488.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4488.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 151.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.151_udp@PTR;check="$$(dig +tcp +noall +answer +search 151.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.151_tcp@PTR;sleep 1; done
   @ 11/11/23 12:22:53.925
  STEP: creating a pod to probe DNS @ 11/11/23 12:22:53.925
  STEP: submitting the pod to kubernetes @ 11/11/23 12:22:53.925
  STEP: retrieving the pod @ 11/11/23 12:22:55.946
  STEP: looking for the results for each expected name from probers @ 11/11/23 12:22:55.949
  Nov 11 12:22:55.952: INFO: Unable to read wheezy_udp@dns-test-service.dns-4488.svc.cluster.local from pod dns-4488/dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e: the server could not find the requested resource (get pods dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e)
  Nov 11 12:22:55.956: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4488.svc.cluster.local from pod dns-4488/dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e: the server could not find the requested resource (get pods dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e)
  Nov 11 12:22:55.960: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4488.svc.cluster.local from pod dns-4488/dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e: the server could not find the requested resource (get pods dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e)
  Nov 11 12:22:55.962: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4488.svc.cluster.local from pod dns-4488/dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e: the server could not find the requested resource (get pods dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e)
  Nov 11 12:22:55.981: INFO: Unable to read jessie_udp@dns-test-service.dns-4488.svc.cluster.local from pod dns-4488/dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e: the server could not find the requested resource (get pods dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e)
  Nov 11 12:22:55.984: INFO: Unable to read jessie_tcp@dns-test-service.dns-4488.svc.cluster.local from pod dns-4488/dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e: the server could not find the requested resource (get pods dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e)
  Nov 11 12:22:55.987: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4488.svc.cluster.local from pod dns-4488/dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e: the server could not find the requested resource (get pods dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e)
  Nov 11 12:22:55.990: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4488.svc.cluster.local from pod dns-4488/dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e: the server could not find the requested resource (get pods dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e)
  Nov 11 12:22:56.002: INFO: Lookups using dns-4488/dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e failed for: [wheezy_udp@dns-test-service.dns-4488.svc.cluster.local wheezy_tcp@dns-test-service.dns-4488.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4488.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4488.svc.cluster.local jessie_udp@dns-test-service.dns-4488.svc.cluster.local jessie_tcp@dns-test-service.dns-4488.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4488.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4488.svc.cluster.local]

  Nov 11 12:22:56.007: INFO: Pod client logs for webserver: 
  Nov 11 12:22:56.013: INFO: Pod client logs for querier: 
  Nov 11 12:22:56.018: INFO: Pod client logs for jessie-querier: 
  Nov 11 12:23:01.070: INFO: DNS probes using dns-4488/dns-test-86515bef-9e79-49cd-a36b-ac4837471e4e succeeded

  Nov 11 12:23:01.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/11/23 12:23:01.073
  STEP: deleting the test service @ 11/11/23 12:23:01.087
  STEP: deleting the test headless service @ 11/11/23 12:23:01.108
  STEP: Destroying namespace "dns-4488" for this suite. @ 11/11/23 12:23:01.117
• [7.231 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 11/11/23 12:23:01.124
  Nov 11 12:23:01.124: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename resourcequota @ 11/11/23 12:23:01.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:23:01.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:23:01.14
  STEP: Discovering how many secrets are in namespace by default @ 11/11/23 12:23:01.144
  STEP: Counting existing ResourceQuota @ 11/11/23 12:23:06.148
  STEP: Creating a ResourceQuota @ 11/11/23 12:23:11.152
  STEP: Ensuring resource quota status is calculated @ 11/11/23 12:23:11.156
  STEP: Creating a Secret @ 11/11/23 12:23:13.161
  STEP: Ensuring resource quota status captures secret creation @ 11/11/23 12:23:13.172
  STEP: Deleting a secret @ 11/11/23 12:23:15.176
  STEP: Ensuring resource quota status released usage @ 11/11/23 12:23:15.181
  Nov 11 12:23:17.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1631" for this suite. @ 11/11/23 12:23:17.189
• [16.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 11/11/23 12:23:17.198
  Nov 11 12:23:17.198: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename field-validation @ 11/11/23 12:23:17.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:23:17.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:23:17.215
  Nov 11 12:23:17.217: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  W1111 12:23:19.755744      22 warnings.go:70] unknown field "alpha"
  W1111 12:23:19.755764      22 warnings.go:70] unknown field "beta"
  W1111 12:23:19.755770      22 warnings.go:70] unknown field "delta"
  W1111 12:23:19.755775      22 warnings.go:70] unknown field "epsilon"
  W1111 12:23:19.755781      22 warnings.go:70] unknown field "gamma"
  Nov 11 12:23:20.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-476" for this suite. @ 11/11/23 12:23:20.292
• [3.100 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 11/11/23 12:23:20.298
  Nov 11 12:23:20.298: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 12:23:20.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:23:20.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:23:20.313
  STEP: Creating configMap configmap-1764/configmap-test-580a1594-d42c-44dc-81e0-a68850e25f7b @ 11/11/23 12:23:20.315
  STEP: Creating a pod to test consume configMaps @ 11/11/23 12:23:20.32
  STEP: Saw pod success @ 11/11/23 12:23:24.337
  Nov 11 12:23:24.340: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-configmaps-dace281d-c9f8-4d39-afcb-c4ed9c60e430 container env-test: <nil>
  STEP: delete the pod @ 11/11/23 12:23:24.347
  Nov 11 12:23:24.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1764" for this suite. @ 11/11/23 12:23:24.366
• [4.072 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 11/11/23 12:23:24.371
  Nov 11 12:23:24.371: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename watch @ 11/11/23 12:23:24.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:23:24.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:23:24.386
  STEP: creating a watch on configmaps @ 11/11/23 12:23:24.388
  STEP: creating a new configmap @ 11/11/23 12:23:24.389
  STEP: modifying the configmap once @ 11/11/23 12:23:24.394
  STEP: closing the watch once it receives two notifications @ 11/11/23 12:23:24.402
  Nov 11 12:23:24.402: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2399  5c2d42d3-5f43-4478-9e08-87a1717069c3 9179 0 2023-11-11 12:23:24 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-11 12:23:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:23:24.402: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2399  5c2d42d3-5f43-4478-9e08-87a1717069c3 9180 0 2023-11-11 12:23:24 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-11 12:23:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 11/11/23 12:23:24.403
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 11/11/23 12:23:24.409
  STEP: deleting the configmap @ 11/11/23 12:23:24.41
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 11/11/23 12:23:24.415
  Nov 11 12:23:24.416: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2399  5c2d42d3-5f43-4478-9e08-87a1717069c3 9181 0 2023-11-11 12:23:24 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-11 12:23:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:23:24.416: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2399  5c2d42d3-5f43-4478-9e08-87a1717069c3 9182 0 2023-11-11 12:23:24 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-11 12:23:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:23:24.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2399" for this suite. @ 11/11/23 12:23:24.418
• [0.053 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 11/11/23 12:23:24.424
  Nov 11 12:23:24.424: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pod-network-test @ 11/11/23 12:23:24.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:23:24.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:23:24.44
  STEP: Performing setup for networking test in namespace pod-network-test-5264 @ 11/11/23 12:23:24.443
  STEP: creating a selector @ 11/11/23 12:23:24.443
  STEP: Creating the service pods in kubernetes @ 11/11/23 12:23:24.443
  Nov 11 12:23:24.443: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 11/11/23 12:23:46.529
  Nov 11 12:23:48.546: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov 11 12:23:48.546: INFO: Breadth first check of 192.168.250.83 on host 172.31.26.213...
  Nov 11 12:23:48.548: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.216.194:9080/dial?request=hostname&protocol=udp&host=192.168.250.83&port=8081&tries=1'] Namespace:pod-network-test-5264 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:23:48.548: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:23:48.548: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:23:48.548: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5264/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.216.194%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.250.83%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 11 12:23:48.623: INFO: Waiting for responses: map[]
  Nov 11 12:23:48.623: INFO: reached 192.168.250.83 after 0/1 tries
  Nov 11 12:23:48.623: INFO: Breadth first check of 192.168.216.255 on host 172.31.79.254...
  Nov 11 12:23:48.626: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.216.194:9080/dial?request=hostname&protocol=udp&host=192.168.216.255&port=8081&tries=1'] Namespace:pod-network-test-5264 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:23:48.626: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:23:48.626: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:23:48.627: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5264/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.216.194%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.216.255%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 11 12:23:48.701: INFO: Waiting for responses: map[]
  Nov 11 12:23:48.701: INFO: reached 192.168.216.255 after 0/1 tries
  Nov 11 12:23:48.701: INFO: Breadth first check of 192.168.144.227 on host 172.31.8.111...
  Nov 11 12:23:48.705: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.216.194:9080/dial?request=hostname&protocol=udp&host=192.168.144.227&port=8081&tries=1'] Namespace:pod-network-test-5264 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:23:48.705: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:23:48.705: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:23:48.705: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5264/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.216.194%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.144.227%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 11 12:23:48.786: INFO: Waiting for responses: map[]
  Nov 11 12:23:48.786: INFO: reached 192.168.144.227 after 0/1 tries
  Nov 11 12:23:48.786: INFO: Going to retry 0 out of 3 pods....
  Nov 11 12:23:48.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5264" for this suite. @ 11/11/23 12:23:48.79
• [24.373 seconds]
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 11/11/23 12:23:48.798
  Nov 11 12:23:48.798: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 12:23:48.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:23:48.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:23:48.814
  STEP: Creating a pod to test downward api env vars @ 11/11/23 12:23:48.816
  STEP: Saw pod success @ 11/11/23 12:23:52.837
  Nov 11 12:23:52.840: INFO: Trying to get logs from node ip-172-31-8-111 pod downward-api-d2ecff1b-4cdd-4149-b457-0480336744ca container dapi-container: <nil>
  STEP: delete the pod @ 11/11/23 12:23:52.846
  Nov 11 12:23:52.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2666" for this suite. @ 11/11/23 12:23:52.864
• [4.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 11/11/23 12:23:52.871
  Nov 11 12:23:52.871: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename svc-latency @ 11/11/23 12:23:52.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:23:52.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:23:52.886
  Nov 11 12:23:52.889: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-941 @ 11/11/23 12:23:52.89
  I1111 12:23:52.895078      22 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-941, replica count: 1
  I1111 12:23:53.946937      22 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 11 12:23:54.056: INFO: Created: latency-svc-fh44j
  Nov 11 12:23:54.064: INFO: Got endpoints: latency-svc-fh44j [16.38501ms]
  Nov 11 12:23:54.073: INFO: Created: latency-svc-pjbrb
  Nov 11 12:23:54.080: INFO: Got endpoints: latency-svc-pjbrb [15.204924ms]
  Nov 11 12:23:54.082: INFO: Created: latency-svc-5njz9
  Nov 11 12:23:54.087: INFO: Got endpoints: latency-svc-5njz9 [22.334689ms]
  Nov 11 12:23:54.093: INFO: Created: latency-svc-5knrg
  Nov 11 12:23:54.100: INFO: Got endpoints: latency-svc-5knrg [34.996113ms]
  Nov 11 12:23:54.102: INFO: Created: latency-svc-j6w7c
  Nov 11 12:23:54.107: INFO: Created: latency-svc-nh7mz
  Nov 11 12:23:54.109: INFO: Got endpoints: latency-svc-j6w7c [45.309296ms]
  Nov 11 12:23:54.110: INFO: Got endpoints: latency-svc-nh7mz [45.455503ms]
  Nov 11 12:23:54.119: INFO: Created: latency-svc-mqktt
  Nov 11 12:23:54.121: INFO: Got endpoints: latency-svc-mqktt [55.968698ms]
  Nov 11 12:23:54.126: INFO: Created: latency-svc-fjz2s
  Nov 11 12:23:54.130: INFO: Got endpoints: latency-svc-fjz2s [64.710853ms]
  Nov 11 12:23:54.132: INFO: Created: latency-svc-44tl6
  Nov 11 12:23:54.137: INFO: Got endpoints: latency-svc-44tl6 [72.429455ms]
  Nov 11 12:23:54.139: INFO: Created: latency-svc-sn7f2
  Nov 11 12:23:54.145: INFO: Got endpoints: latency-svc-sn7f2 [79.85114ms]
  Nov 11 12:23:54.147: INFO: Created: latency-svc-tz474
  Nov 11 12:23:54.152: INFO: Got endpoints: latency-svc-tz474 [87.467952ms]
  Nov 11 12:23:54.160: INFO: Created: latency-svc-4lgkc
  Nov 11 12:23:54.164: INFO: Got endpoints: latency-svc-4lgkc [99.317979ms]
  Nov 11 12:23:54.168: INFO: Created: latency-svc-blqhw
  Nov 11 12:23:54.175: INFO: Got endpoints: latency-svc-blqhw [109.809251ms]
  Nov 11 12:23:54.175: INFO: Created: latency-svc-6dxqp
  Nov 11 12:23:54.182: INFO: Got endpoints: latency-svc-6dxqp [116.946113ms]
  Nov 11 12:23:54.187: INFO: Created: latency-svc-d6skr
  Nov 11 12:23:54.198: INFO: Created: latency-svc-dslqq
  Nov 11 12:23:54.198: INFO: Got endpoints: latency-svc-d6skr [132.640468ms]
  Nov 11 12:23:54.206: INFO: Got endpoints: latency-svc-dslqq [141.216574ms]
  Nov 11 12:23:54.207: INFO: Created: latency-svc-8j9q8
  Nov 11 12:23:54.211: INFO: Created: latency-svc-tfbsb
  Nov 11 12:23:54.213: INFO: Got endpoints: latency-svc-8j9q8 [133.031484ms]
  Nov 11 12:23:54.219: INFO: Got endpoints: latency-svc-tfbsb [131.785868ms]
  Nov 11 12:23:54.224: INFO: Created: latency-svc-zrmmk
  Nov 11 12:23:54.228: INFO: Got endpoints: latency-svc-zrmmk [128.576578ms]
  Nov 11 12:23:54.242: INFO: Created: latency-svc-8zfh2
  Nov 11 12:23:54.249: INFO: Got endpoints: latency-svc-8zfh2 [139.191747ms]
  Nov 11 12:23:54.252: INFO: Created: latency-svc-dw47z
  Nov 11 12:23:54.270: INFO: Created: latency-svc-tjkh6
  Nov 11 12:23:54.274: INFO: Got endpoints: latency-svc-dw47z [164.034218ms]
  Nov 11 12:23:54.277: INFO: Got endpoints: latency-svc-tjkh6 [156.246793ms]
  Nov 11 12:23:54.284: INFO: Created: latency-svc-ddwxf
  Nov 11 12:23:54.288: INFO: Created: latency-svc-b4xvs
  Nov 11 12:23:54.291: INFO: Got endpoints: latency-svc-ddwxf [161.905472ms]
  Nov 11 12:23:54.295: INFO: Got endpoints: latency-svc-b4xvs [157.252529ms]
  Nov 11 12:23:54.301: INFO: Created: latency-svc-ndnzg
  Nov 11 12:23:54.306: INFO: Got endpoints: latency-svc-ndnzg [160.936329ms]
  Nov 11 12:23:54.310: INFO: Created: latency-svc-mgd56
  Nov 11 12:23:54.315: INFO: Created: latency-svc-l7gjr
  Nov 11 12:23:54.321: INFO: Got endpoints: latency-svc-mgd56 [168.929149ms]
  Nov 11 12:23:54.323: INFO: Got endpoints: latency-svc-l7gjr [159.011564ms]
  Nov 11 12:23:54.331: INFO: Created: latency-svc-fqwfh
  Nov 11 12:23:54.331: INFO: Got endpoints: latency-svc-fqwfh [156.609934ms]
  Nov 11 12:23:54.336: INFO: Created: latency-svc-bpx74
  Nov 11 12:23:54.339: INFO: Created: latency-svc-784wg
  Nov 11 12:23:54.346: INFO: Got endpoints: latency-svc-bpx74 [164.301231ms]
  Nov 11 12:23:54.348: INFO: Got endpoints: latency-svc-784wg [149.882688ms]
  Nov 11 12:23:54.351: INFO: Created: latency-svc-cpqcf
  Nov 11 12:23:54.361: INFO: Got endpoints: latency-svc-cpqcf [153.985646ms]
  Nov 11 12:23:54.361: INFO: Created: latency-svc-wmf6p
  Nov 11 12:23:54.362: INFO: Created: latency-svc-l4jxf
  Nov 11 12:23:54.370: INFO: Got endpoints: latency-svc-wmf6p [157.728153ms]
  Nov 11 12:23:54.371: INFO: Created: latency-svc-jbz7s
  Nov 11 12:23:54.372: INFO: Got endpoints: latency-svc-l4jxf [152.794119ms]
  Nov 11 12:23:54.376: INFO: Created: latency-svc-5w8vn
  Nov 11 12:23:54.377: INFO: Got endpoints: latency-svc-jbz7s [148.609087ms]
  Nov 11 12:23:54.384: INFO: Got endpoints: latency-svc-5w8vn [135.280131ms]
  Nov 11 12:23:54.448: INFO: Created: latency-svc-85wgr
  Nov 11 12:23:54.448: INFO: Created: latency-svc-8t97p
  Nov 11 12:23:54.451: INFO: Created: latency-svc-cqwxm
  Nov 11 12:23:54.452: INFO: Created: latency-svc-pj78b
  Nov 11 12:23:54.452: INFO: Created: latency-svc-x4ct9
  Nov 11 12:23:54.452: INFO: Created: latency-svc-97qjt
  Nov 11 12:23:54.452: INFO: Created: latency-svc-z44vv
  Nov 11 12:23:54.453: INFO: Created: latency-svc-jhc57
  Nov 11 12:23:54.453: INFO: Created: latency-svc-lkbzz
  Nov 11 12:23:54.453: INFO: Created: latency-svc-62w9b
  Nov 11 12:23:54.453: INFO: Created: latency-svc-4znxp
  Nov 11 12:23:54.454: INFO: Created: latency-svc-fwxrd
  Nov 11 12:23:54.455: INFO: Created: latency-svc-xq8pj
  Nov 11 12:23:54.455: INFO: Created: latency-svc-sk4kd
  Nov 11 12:23:54.455: INFO: Created: latency-svc-nd7l9
  Nov 11 12:23:54.456: INFO: Got endpoints: latency-svc-85wgr [161.257046ms]
  Nov 11 12:23:54.460: INFO: Got endpoints: latency-svc-8t97p [75.799579ms]
  Nov 11 12:23:54.464: INFO: Got endpoints: latency-svc-pj78b [93.848627ms]
  Nov 11 12:23:54.467: INFO: Created: latency-svc-f4n7d
  Nov 11 12:23:54.474: INFO: Created: latency-svc-dztjt
  Nov 11 12:23:54.481: INFO: Created: latency-svc-r5w9t
  Nov 11 12:23:54.512: INFO: Got endpoints: latency-svc-cqwxm [191.140038ms]
  Nov 11 12:23:54.519: INFO: Created: latency-svc-7bn4j
  Nov 11 12:23:54.568: INFO: Got endpoints: latency-svc-z44vv [196.535959ms]
  Nov 11 12:23:54.578: INFO: Created: latency-svc-khjpz
  Nov 11 12:23:54.611: INFO: Got endpoints: latency-svc-62w9b [337.00878ms]
  Nov 11 12:23:54.620: INFO: Created: latency-svc-9xmsj
  Nov 11 12:23:54.662: INFO: Got endpoints: latency-svc-x4ct9 [338.267182ms]
  Nov 11 12:23:54.671: INFO: Created: latency-svc-d2bgj
  Nov 11 12:23:54.711: INFO: Got endpoints: latency-svc-lkbzz [405.40531ms]
  Nov 11 12:23:54.720: INFO: Created: latency-svc-swgmf
  Nov 11 12:23:54.763: INFO: Got endpoints: latency-svc-4znxp [431.502831ms]
  Nov 11 12:23:54.772: INFO: Created: latency-svc-vgmxj
  Nov 11 12:23:54.812: INFO: Got endpoints: latency-svc-jhc57 [435.427573ms]
  Nov 11 12:23:54.820: INFO: Created: latency-svc-4ff7j
  Nov 11 12:23:54.861: INFO: Got endpoints: latency-svc-97qjt [514.361022ms]
  Nov 11 12:23:54.870: INFO: Created: latency-svc-kpmpt
  Nov 11 12:23:54.912: INFO: Got endpoints: latency-svc-sk4kd [564.13869ms]
  Nov 11 12:23:54.921: INFO: Created: latency-svc-jmh7g
  Nov 11 12:23:54.962: INFO: Got endpoints: latency-svc-nd7l9 [685.428102ms]
  Nov 11 12:23:54.970: INFO: Created: latency-svc-grlgg
  Nov 11 12:23:55.014: INFO: Got endpoints: latency-svc-xq8pj [722.393331ms]
  Nov 11 12:23:55.024: INFO: Created: latency-svc-jnls6
  Nov 11 12:23:55.060: INFO: Got endpoints: latency-svc-fwxrd [699.296606ms]
  Nov 11 12:23:55.072: INFO: Created: latency-svc-gjz4r
  Nov 11 12:23:55.110: INFO: Got endpoints: latency-svc-f4n7d [654.470794ms]
  Nov 11 12:23:55.120: INFO: Created: latency-svc-fjh7q
  Nov 11 12:23:55.162: INFO: Got endpoints: latency-svc-dztjt [702.069633ms]
  Nov 11 12:23:55.172: INFO: Created: latency-svc-fhfz6
  Nov 11 12:23:55.211: INFO: Got endpoints: latency-svc-r5w9t [746.995361ms]
  Nov 11 12:23:55.221: INFO: Created: latency-svc-vqxzn
  Nov 11 12:23:55.263: INFO: Got endpoints: latency-svc-7bn4j [751.218851ms]
  Nov 11 12:23:55.273: INFO: Created: latency-svc-wlkgk
  Nov 11 12:23:55.311: INFO: Got endpoints: latency-svc-khjpz [743.000288ms]
  Nov 11 12:23:55.321: INFO: Created: latency-svc-hrjpp
  Nov 11 12:23:55.361: INFO: Got endpoints: latency-svc-9xmsj [749.347187ms]
  Nov 11 12:23:55.370: INFO: Created: latency-svc-jpglc
  Nov 11 12:23:55.413: INFO: Got endpoints: latency-svc-d2bgj [751.039494ms]
  Nov 11 12:23:55.423: INFO: Created: latency-svc-r47bw
  Nov 11 12:23:55.460: INFO: Got endpoints: latency-svc-swgmf [748.942906ms]
  Nov 11 12:23:55.469: INFO: Created: latency-svc-mgxg6
  Nov 11 12:23:55.512: INFO: Got endpoints: latency-svc-vgmxj [748.582454ms]
  Nov 11 12:23:55.522: INFO: Created: latency-svc-mgb2h
  Nov 11 12:23:55.560: INFO: Got endpoints: latency-svc-4ff7j [747.764654ms]
  Nov 11 12:23:55.573: INFO: Created: latency-svc-6x9bz
  Nov 11 12:23:55.610: INFO: Got endpoints: latency-svc-kpmpt [749.671626ms]
  Nov 11 12:23:55.619: INFO: Created: latency-svc-874mp
  Nov 11 12:23:55.662: INFO: Got endpoints: latency-svc-jmh7g [750.362261ms]
  Nov 11 12:23:55.672: INFO: Created: latency-svc-2pl7g
  Nov 11 12:23:55.714: INFO: Got endpoints: latency-svc-grlgg [751.579517ms]
  Nov 11 12:23:55.722: INFO: Created: latency-svc-75w9b
  Nov 11 12:23:55.761: INFO: Got endpoints: latency-svc-jnls6 [747.271124ms]
  Nov 11 12:23:55.771: INFO: Created: latency-svc-bfvxh
  Nov 11 12:23:55.811: INFO: Got endpoints: latency-svc-gjz4r [750.813312ms]
  Nov 11 12:23:55.822: INFO: Created: latency-svc-59zfq
  Nov 11 12:23:55.861: INFO: Got endpoints: latency-svc-fjh7q [750.423666ms]
  Nov 11 12:23:55.868: INFO: Created: latency-svc-srwzk
  Nov 11 12:23:55.913: INFO: Got endpoints: latency-svc-fhfz6 [751.534944ms]
  Nov 11 12:23:55.924: INFO: Created: latency-svc-whxsj
  Nov 11 12:23:55.962: INFO: Got endpoints: latency-svc-vqxzn [750.849751ms]
  Nov 11 12:23:55.972: INFO: Created: latency-svc-54bd2
  Nov 11 12:23:56.011: INFO: Got endpoints: latency-svc-wlkgk [747.95485ms]
  Nov 11 12:23:56.020: INFO: Created: latency-svc-vqzgx
  Nov 11 12:23:56.062: INFO: Got endpoints: latency-svc-hrjpp [750.573094ms]
  Nov 11 12:23:56.071: INFO: Created: latency-svc-kn4zf
  Nov 11 12:23:56.110: INFO: Got endpoints: latency-svc-jpglc [749.659277ms]
  Nov 11 12:23:56.124: INFO: Created: latency-svc-cw4k7
  Nov 11 12:23:56.162: INFO: Got endpoints: latency-svc-r47bw [748.906877ms]
  Nov 11 12:23:56.171: INFO: Created: latency-svc-kzplq
  Nov 11 12:23:56.213: INFO: Got endpoints: latency-svc-mgxg6 [752.213921ms]
  Nov 11 12:23:56.222: INFO: Created: latency-svc-jgjz8
  Nov 11 12:23:56.262: INFO: Got endpoints: latency-svc-mgb2h [750.009325ms]
  Nov 11 12:23:56.271: INFO: Created: latency-svc-hlr8g
  Nov 11 12:23:56.311: INFO: Got endpoints: latency-svc-6x9bz [750.505036ms]
  Nov 11 12:23:56.323: INFO: Created: latency-svc-8dsnv
  Nov 11 12:23:56.361: INFO: Got endpoints: latency-svc-874mp [750.961808ms]
  Nov 11 12:23:56.370: INFO: Created: latency-svc-9b97w
  Nov 11 12:23:56.412: INFO: Got endpoints: latency-svc-2pl7g [749.181668ms]
  Nov 11 12:23:56.423: INFO: Created: latency-svc-zzbt8
  Nov 11 12:23:56.462: INFO: Got endpoints: latency-svc-75w9b [747.973609ms]
  Nov 11 12:23:56.470: INFO: Created: latency-svc-8bxv9
  Nov 11 12:23:56.511: INFO: Got endpoints: latency-svc-bfvxh [750.152694ms]
  Nov 11 12:23:56.523: INFO: Created: latency-svc-29nkx
  Nov 11 12:23:56.560: INFO: Got endpoints: latency-svc-59zfq [749.278776ms]
  Nov 11 12:23:56.572: INFO: Created: latency-svc-m2kg2
  Nov 11 12:23:56.611: INFO: Got endpoints: latency-svc-srwzk [749.637587ms]
  Nov 11 12:23:56.621: INFO: Created: latency-svc-skzx5
  Nov 11 12:23:56.662: INFO: Got endpoints: latency-svc-whxsj [748.894216ms]
  Nov 11 12:23:56.671: INFO: Created: latency-svc-6v4rs
  Nov 11 12:23:56.713: INFO: Got endpoints: latency-svc-54bd2 [751.039757ms]
  Nov 11 12:23:56.723: INFO: Created: latency-svc-25sgx
  Nov 11 12:23:56.762: INFO: Got endpoints: latency-svc-vqzgx [750.716425ms]
  Nov 11 12:23:56.771: INFO: Created: latency-svc-dc7jk
  Nov 11 12:23:56.811: INFO: Got endpoints: latency-svc-kn4zf [749.527827ms]
  Nov 11 12:23:56.820: INFO: Created: latency-svc-gbnq6
  Nov 11 12:23:56.862: INFO: Got endpoints: latency-svc-cw4k7 [752.056207ms]
  Nov 11 12:23:56.871: INFO: Created: latency-svc-g7zvc
  Nov 11 12:23:56.911: INFO: Got endpoints: latency-svc-kzplq [749.308281ms]
  Nov 11 12:23:56.920: INFO: Created: latency-svc-lv65q
  Nov 11 12:23:56.962: INFO: Got endpoints: latency-svc-jgjz8 [749.485926ms]
  Nov 11 12:23:56.972: INFO: Created: latency-svc-8plqw
  Nov 11 12:23:57.010: INFO: Got endpoints: latency-svc-hlr8g [748.572211ms]
  Nov 11 12:23:57.020: INFO: Created: latency-svc-6mdrw
  Nov 11 12:23:57.065: INFO: Got endpoints: latency-svc-8dsnv [754.590226ms]
  Nov 11 12:23:57.076: INFO: Created: latency-svc-fsswl
  Nov 11 12:23:57.113: INFO: Got endpoints: latency-svc-9b97w [751.609642ms]
  Nov 11 12:23:57.122: INFO: Created: latency-svc-g28z5
  Nov 11 12:23:57.162: INFO: Got endpoints: latency-svc-zzbt8 [750.91442ms]
  Nov 11 12:23:57.173: INFO: Created: latency-svc-59mkm
  Nov 11 12:23:57.210: INFO: Got endpoints: latency-svc-8bxv9 [748.073545ms]
  Nov 11 12:23:57.219: INFO: Created: latency-svc-wdxjk
  Nov 11 12:23:57.261: INFO: Got endpoints: latency-svc-29nkx [749.511273ms]
  Nov 11 12:23:57.270: INFO: Created: latency-svc-wv7t6
  Nov 11 12:23:57.312: INFO: Got endpoints: latency-svc-m2kg2 [752.114518ms]
  Nov 11 12:23:57.322: INFO: Created: latency-svc-ffg5k
  Nov 11 12:23:57.363: INFO: Got endpoints: latency-svc-skzx5 [752.544999ms]
  Nov 11 12:23:57.370: INFO: Created: latency-svc-q2c8c
  Nov 11 12:23:57.413: INFO: Got endpoints: latency-svc-6v4rs [750.830192ms]
  Nov 11 12:23:57.422: INFO: Created: latency-svc-55vww
  Nov 11 12:23:57.460: INFO: Got endpoints: latency-svc-25sgx [746.889202ms]
  Nov 11 12:23:57.469: INFO: Created: latency-svc-qdtcf
  Nov 11 12:23:57.512: INFO: Got endpoints: latency-svc-dc7jk [750.101855ms]
  Nov 11 12:23:57.520: INFO: Created: latency-svc-wfc28
  Nov 11 12:23:57.562: INFO: Got endpoints: latency-svc-gbnq6 [750.923665ms]
  Nov 11 12:23:57.570: INFO: Created: latency-svc-kr7v6
  Nov 11 12:23:57.614: INFO: Got endpoints: latency-svc-g7zvc [751.881854ms]
  Nov 11 12:23:57.623: INFO: Created: latency-svc-gsd2k
  Nov 11 12:23:57.660: INFO: Got endpoints: latency-svc-lv65q [749.183776ms]
  Nov 11 12:23:57.672: INFO: Created: latency-svc-zd87v
  Nov 11 12:23:57.711: INFO: Got endpoints: latency-svc-8plqw [748.441553ms]
  Nov 11 12:23:57.723: INFO: Created: latency-svc-mz4vq
  Nov 11 12:23:57.761: INFO: Got endpoints: latency-svc-6mdrw [751.117387ms]
  Nov 11 12:23:57.771: INFO: Created: latency-svc-v5ss2
  Nov 11 12:23:57.812: INFO: Got endpoints: latency-svc-fsswl [746.70059ms]
  Nov 11 12:23:57.821: INFO: Created: latency-svc-bvngw
  Nov 11 12:23:57.863: INFO: Got endpoints: latency-svc-g28z5 [750.300024ms]
  Nov 11 12:23:57.871: INFO: Created: latency-svc-k7kmh
  Nov 11 12:23:57.910: INFO: Got endpoints: latency-svc-59mkm [747.645849ms]
  Nov 11 12:23:57.926: INFO: Created: latency-svc-vsw4j
  Nov 11 12:23:57.960: INFO: Got endpoints: latency-svc-wdxjk [749.496871ms]
  Nov 11 12:23:57.968: INFO: Created: latency-svc-7r46d
  Nov 11 12:23:58.010: INFO: Got endpoints: latency-svc-wv7t6 [749.392715ms]
  Nov 11 12:23:58.019: INFO: Created: latency-svc-k7vfp
  Nov 11 12:23:58.061: INFO: Got endpoints: latency-svc-ffg5k [748.558718ms]
  Nov 11 12:23:58.073: INFO: Created: latency-svc-2gchf
  Nov 11 12:23:58.111: INFO: Got endpoints: latency-svc-q2c8c [747.548489ms]
  Nov 11 12:23:58.119: INFO: Created: latency-svc-ls26l
  Nov 11 12:23:58.163: INFO: Got endpoints: latency-svc-55vww [749.491024ms]
  Nov 11 12:23:58.170: INFO: Created: latency-svc-wztnx
  Nov 11 12:23:58.213: INFO: Got endpoints: latency-svc-qdtcf [752.623573ms]
  Nov 11 12:23:58.222: INFO: Created: latency-svc-zw7bk
  Nov 11 12:23:58.260: INFO: Got endpoints: latency-svc-wfc28 [747.590087ms]
  Nov 11 12:23:58.269: INFO: Created: latency-svc-j8vbp
  Nov 11 12:23:58.311: INFO: Got endpoints: latency-svc-kr7v6 [748.484885ms]
  Nov 11 12:23:58.323: INFO: Created: latency-svc-mxtbk
  Nov 11 12:23:58.363: INFO: Got endpoints: latency-svc-gsd2k [748.346147ms]
  Nov 11 12:23:58.374: INFO: Created: latency-svc-brdj7
  Nov 11 12:23:58.412: INFO: Got endpoints: latency-svc-zd87v [751.375523ms]
  Nov 11 12:23:58.424: INFO: Created: latency-svc-dnzfp
  Nov 11 12:23:58.462: INFO: Got endpoints: latency-svc-mz4vq [751.41738ms]
  Nov 11 12:23:58.470: INFO: Created: latency-svc-59pj6
  Nov 11 12:23:58.511: INFO: Got endpoints: latency-svc-v5ss2 [749.059389ms]
  Nov 11 12:23:58.521: INFO: Created: latency-svc-tzdxm
  Nov 11 12:23:58.560: INFO: Got endpoints: latency-svc-bvngw [748.135297ms]
  Nov 11 12:23:58.571: INFO: Created: latency-svc-tnmtm
  Nov 11 12:23:58.612: INFO: Got endpoints: latency-svc-k7kmh [748.937473ms]
  Nov 11 12:23:58.619: INFO: Created: latency-svc-p6rfp
  Nov 11 12:23:58.664: INFO: Got endpoints: latency-svc-vsw4j [753.625305ms]
  Nov 11 12:23:58.673: INFO: Created: latency-svc-lltvq
  Nov 11 12:23:58.711: INFO: Got endpoints: latency-svc-7r46d [750.750262ms]
  Nov 11 12:23:58.722: INFO: Created: latency-svc-r54bf
  Nov 11 12:23:58.763: INFO: Got endpoints: latency-svc-k7vfp [752.268815ms]
  Nov 11 12:23:58.771: INFO: Created: latency-svc-rs8fn
  Nov 11 12:23:58.812: INFO: Got endpoints: latency-svc-2gchf [751.277492ms]
  Nov 11 12:23:58.823: INFO: Created: latency-svc-ltf4s
  Nov 11 12:23:58.862: INFO: Got endpoints: latency-svc-ls26l [751.254697ms]
  Nov 11 12:23:58.871: INFO: Created: latency-svc-5hhr4
  Nov 11 12:23:58.912: INFO: Got endpoints: latency-svc-wztnx [749.272057ms]
  Nov 11 12:23:58.920: INFO: Created: latency-svc-gwbxk
  Nov 11 12:23:58.963: INFO: Got endpoints: latency-svc-zw7bk [750.24285ms]
  Nov 11 12:23:58.972: INFO: Created: latency-svc-mbjfc
  Nov 11 12:23:59.010: INFO: Got endpoints: latency-svc-j8vbp [750.135353ms]
  Nov 11 12:23:59.020: INFO: Created: latency-svc-lgnnm
  Nov 11 12:23:59.061: INFO: Got endpoints: latency-svc-mxtbk [749.805786ms]
  Nov 11 12:23:59.069: INFO: Created: latency-svc-ztjxc
  Nov 11 12:23:59.111: INFO: Got endpoints: latency-svc-brdj7 [748.517798ms]
  Nov 11 12:23:59.122: INFO: Created: latency-svc-js726
  Nov 11 12:23:59.162: INFO: Got endpoints: latency-svc-dnzfp [750.15274ms]
  Nov 11 12:23:59.170: INFO: Created: latency-svc-kxn76
  Nov 11 12:23:59.214: INFO: Got endpoints: latency-svc-59pj6 [752.313347ms]
  Nov 11 12:23:59.222: INFO: Created: latency-svc-bz8zm
  Nov 11 12:23:59.260: INFO: Got endpoints: latency-svc-tzdxm [749.607637ms]
  Nov 11 12:23:59.268: INFO: Created: latency-svc-z94mg
  Nov 11 12:23:59.313: INFO: Got endpoints: latency-svc-tnmtm [752.826551ms]
  Nov 11 12:23:59.323: INFO: Created: latency-svc-bqf5c
  Nov 11 12:23:59.363: INFO: Got endpoints: latency-svc-p6rfp [750.940112ms]
  Nov 11 12:23:59.371: INFO: Created: latency-svc-bvf6z
  Nov 11 12:23:59.411: INFO: Got endpoints: latency-svc-lltvq [747.319747ms]
  Nov 11 12:23:59.423: INFO: Created: latency-svc-2s4t6
  Nov 11 12:23:59.465: INFO: Got endpoints: latency-svc-r54bf [754.294459ms]
  Nov 11 12:23:59.474: INFO: Created: latency-svc-4qndz
  Nov 11 12:23:59.511: INFO: Got endpoints: latency-svc-rs8fn [748.688451ms]
  Nov 11 12:23:59.519: INFO: Created: latency-svc-9h8wr
  Nov 11 12:23:59.563: INFO: Got endpoints: latency-svc-ltf4s [750.920466ms]
  Nov 11 12:23:59.577: INFO: Created: latency-svc-kk4gk
  Nov 11 12:23:59.614: INFO: Got endpoints: latency-svc-5hhr4 [752.274475ms]
  Nov 11 12:23:59.623: INFO: Created: latency-svc-mds8q
  Nov 11 12:23:59.661: INFO: Got endpoints: latency-svc-gwbxk [749.032355ms]
  Nov 11 12:23:59.673: INFO: Created: latency-svc-lwvl2
  Nov 11 12:23:59.710: INFO: Got endpoints: latency-svc-mbjfc [746.631972ms]
  Nov 11 12:23:59.718: INFO: Created: latency-svc-lj76d
  Nov 11 12:23:59.763: INFO: Got endpoints: latency-svc-lgnnm [752.636141ms]
  Nov 11 12:23:59.772: INFO: Created: latency-svc-cdnrg
  Nov 11 12:23:59.812: INFO: Got endpoints: latency-svc-ztjxc [751.43586ms]
  Nov 11 12:23:59.821: INFO: Created: latency-svc-24b7k
  Nov 11 12:23:59.863: INFO: Got endpoints: latency-svc-js726 [751.601435ms]
  Nov 11 12:23:59.871: INFO: Created: latency-svc-5hhkg
  Nov 11 12:23:59.911: INFO: Got endpoints: latency-svc-kxn76 [748.699881ms]
  Nov 11 12:23:59.921: INFO: Created: latency-svc-4j6tf
  Nov 11 12:23:59.959: INFO: Got endpoints: latency-svc-bz8zm [745.111035ms]
  Nov 11 12:23:59.967: INFO: Created: latency-svc-j7z87
  Nov 11 12:24:00.012: INFO: Got endpoints: latency-svc-z94mg [751.509792ms]
  Nov 11 12:24:00.021: INFO: Created: latency-svc-ccps5
  Nov 11 12:24:00.062: INFO: Got endpoints: latency-svc-bqf5c [749.358846ms]
  Nov 11 12:24:00.072: INFO: Created: latency-svc-jlzjs
  Nov 11 12:24:00.112: INFO: Got endpoints: latency-svc-bvf6z [748.300961ms]
  Nov 11 12:24:00.121: INFO: Created: latency-svc-sfqdm
  Nov 11 12:24:00.161: INFO: Got endpoints: latency-svc-2s4t6 [750.187384ms]
  Nov 11 12:24:00.172: INFO: Created: latency-svc-whwvx
  Nov 11 12:24:00.211: INFO: Got endpoints: latency-svc-4qndz [745.645929ms]
  Nov 11 12:24:00.220: INFO: Created: latency-svc-gdn4j
  Nov 11 12:24:00.261: INFO: Got endpoints: latency-svc-9h8wr [749.687212ms]
  Nov 11 12:24:00.269: INFO: Created: latency-svc-8q5hj
  Nov 11 12:24:00.313: INFO: Got endpoints: latency-svc-kk4gk [749.248886ms]
  Nov 11 12:24:00.321: INFO: Created: latency-svc-hccw8
  Nov 11 12:24:00.363: INFO: Got endpoints: latency-svc-mds8q [748.110443ms]
  Nov 11 12:24:00.372: INFO: Created: latency-svc-p4z97
  Nov 11 12:24:00.411: INFO: Got endpoints: latency-svc-lwvl2 [750.104487ms]
  Nov 11 12:24:00.421: INFO: Created: latency-svc-ttdzx
  Nov 11 12:24:00.461: INFO: Got endpoints: latency-svc-lj76d [750.707383ms]
  Nov 11 12:24:00.469: INFO: Created: latency-svc-qph98
  Nov 11 12:24:00.512: INFO: Got endpoints: latency-svc-cdnrg [749.688032ms]
  Nov 11 12:24:00.520: INFO: Created: latency-svc-9k9qh
  Nov 11 12:24:00.564: INFO: Got endpoints: latency-svc-24b7k [752.070087ms]
  Nov 11 12:24:00.572: INFO: Created: latency-svc-j2frz
  Nov 11 12:24:00.612: INFO: Got endpoints: latency-svc-5hhkg [748.694235ms]
  Nov 11 12:24:00.620: INFO: Created: latency-svc-hrgll
  Nov 11 12:24:00.662: INFO: Got endpoints: latency-svc-4j6tf [751.289077ms]
  Nov 11 12:24:00.674: INFO: Created: latency-svc-swclh
  Nov 11 12:24:00.714: INFO: Got endpoints: latency-svc-j7z87 [754.665972ms]
  Nov 11 12:24:00.723: INFO: Created: latency-svc-5grc8
  Nov 11 12:24:00.762: INFO: Got endpoints: latency-svc-ccps5 [749.794431ms]
  Nov 11 12:24:00.771: INFO: Created: latency-svc-29h4n
  Nov 11 12:24:00.813: INFO: Got endpoints: latency-svc-jlzjs [750.173041ms]
  Nov 11 12:24:00.821: INFO: Created: latency-svc-k9pfg
  Nov 11 12:24:00.860: INFO: Got endpoints: latency-svc-sfqdm [748.507311ms]
  Nov 11 12:24:00.871: INFO: Created: latency-svc-t8tlf
  Nov 11 12:24:00.910: INFO: Got endpoints: latency-svc-whwvx [748.838529ms]
  Nov 11 12:24:00.962: INFO: Got endpoints: latency-svc-gdn4j [751.712884ms]
  Nov 11 12:24:01.011: INFO: Got endpoints: latency-svc-8q5hj [749.386132ms]
  Nov 11 12:24:01.062: INFO: Got endpoints: latency-svc-hccw8 [749.844072ms]
  Nov 11 12:24:01.112: INFO: Got endpoints: latency-svc-p4z97 [749.351561ms]
  Nov 11 12:24:01.135: INFO: Created: latency-svc-654cm
  Nov 11 12:24:01.143: INFO: Created: latency-svc-nm52t
  Nov 11 12:24:01.147: INFO: Created: latency-svc-b7svn
  Nov 11 12:24:01.152: INFO: Created: latency-svc-x2gzf
  Nov 11 12:24:01.159: INFO: Created: latency-svc-wlr2j
  Nov 11 12:24:01.163: INFO: Got endpoints: latency-svc-ttdzx [751.293815ms]
  Nov 11 12:24:01.171: INFO: Created: latency-svc-422sd
  Nov 11 12:24:01.214: INFO: Got endpoints: latency-svc-qph98 [753.108433ms]
  Nov 11 12:24:01.223: INFO: Created: latency-svc-f7thx
  Nov 11 12:24:01.262: INFO: Got endpoints: latency-svc-9k9qh [749.310436ms]
  Nov 11 12:24:01.270: INFO: Created: latency-svc-7fxkv
  Nov 11 12:24:01.313: INFO: Got endpoints: latency-svc-j2frz [748.598889ms]
  Nov 11 12:24:01.321: INFO: Created: latency-svc-7ltbr
  Nov 11 12:24:01.363: INFO: Got endpoints: latency-svc-hrgll [751.101271ms]
  Nov 11 12:24:01.372: INFO: Created: latency-svc-84fgm
  Nov 11 12:24:01.411: INFO: Got endpoints: latency-svc-swclh [749.134633ms]
  Nov 11 12:24:01.421: INFO: Created: latency-svc-8r8n8
  Nov 11 12:24:01.462: INFO: Got endpoints: latency-svc-5grc8 [747.326934ms]
  Nov 11 12:24:01.471: INFO: Created: latency-svc-f775j
  Nov 11 12:24:01.514: INFO: Got endpoints: latency-svc-29h4n [752.022743ms]
  Nov 11 12:24:01.522: INFO: Created: latency-svc-vtdl4
  Nov 11 12:24:01.562: INFO: Got endpoints: latency-svc-k9pfg [748.885045ms]
  Nov 11 12:24:01.570: INFO: Created: latency-svc-6q24b
  Nov 11 12:24:01.610: INFO: Got endpoints: latency-svc-t8tlf [750.114336ms]
  Nov 11 12:24:01.622: INFO: Created: latency-svc-p48fl
  Nov 11 12:24:01.661: INFO: Got endpoints: latency-svc-654cm [750.224675ms]
  Nov 11 12:24:01.668: INFO: Created: latency-svc-v5rcq
  Nov 11 12:24:01.712: INFO: Got endpoints: latency-svc-nm52t [749.309372ms]
  Nov 11 12:24:01.721: INFO: Created: latency-svc-l6k82
  Nov 11 12:24:01.762: INFO: Got endpoints: latency-svc-b7svn [751.554446ms]
  Nov 11 12:24:01.770: INFO: Created: latency-svc-fwvhm
  Nov 11 12:24:01.813: INFO: Got endpoints: latency-svc-x2gzf [750.251905ms]
  Nov 11 12:24:01.822: INFO: Created: latency-svc-vrxz7
  Nov 11 12:24:01.861: INFO: Got endpoints: latency-svc-wlr2j [748.88221ms]
  Nov 11 12:24:01.875: INFO: Created: latency-svc-mfrwp
  Nov 11 12:24:01.911: INFO: Got endpoints: latency-svc-422sd [748.025536ms]
  Nov 11 12:24:01.964: INFO: Got endpoints: latency-svc-f7thx [750.588463ms]
  Nov 11 12:24:02.012: INFO: Got endpoints: latency-svc-7fxkv [750.662907ms]
  Nov 11 12:24:02.062: INFO: Got endpoints: latency-svc-7ltbr [748.773791ms]
  Nov 11 12:24:02.111: INFO: Got endpoints: latency-svc-84fgm [748.136039ms]
  Nov 11 12:24:02.162: INFO: Got endpoints: latency-svc-8r8n8 [750.717747ms]
  Nov 11 12:24:02.213: INFO: Got endpoints: latency-svc-f775j [751.293579ms]
  Nov 11 12:24:02.261: INFO: Got endpoints: latency-svc-vtdl4 [747.733945ms]
  Nov 11 12:24:02.313: INFO: Got endpoints: latency-svc-6q24b [751.507498ms]
  Nov 11 12:24:02.361: INFO: Got endpoints: latency-svc-p48fl [750.599002ms]
  Nov 11 12:24:02.413: INFO: Got endpoints: latency-svc-v5rcq [752.814486ms]
  Nov 11 12:24:02.461: INFO: Got endpoints: latency-svc-l6k82 [748.82287ms]
  Nov 11 12:24:02.513: INFO: Got endpoints: latency-svc-fwvhm [750.404066ms]
  Nov 11 12:24:02.561: INFO: Got endpoints: latency-svc-vrxz7 [748.435884ms]
  Nov 11 12:24:02.613: INFO: Got endpoints: latency-svc-mfrwp [752.504617ms]
  Nov 11 12:24:02.613: INFO: Latencies: [15.204924ms 22.334689ms 34.996113ms 45.309296ms 45.455503ms 55.968698ms 64.710853ms 72.429455ms 75.799579ms 79.85114ms 87.467952ms 93.848627ms 99.317979ms 109.809251ms 116.946113ms 128.576578ms 131.785868ms 132.640468ms 133.031484ms 135.280131ms 139.191747ms 141.216574ms 148.609087ms 149.882688ms 152.794119ms 153.985646ms 156.246793ms 156.609934ms 157.252529ms 157.728153ms 159.011564ms 160.936329ms 161.257046ms 161.905472ms 164.034218ms 164.301231ms 168.929149ms 191.140038ms 196.535959ms 337.00878ms 338.267182ms 405.40531ms 431.502831ms 435.427573ms 514.361022ms 564.13869ms 654.470794ms 685.428102ms 699.296606ms 702.069633ms 722.393331ms 743.000288ms 745.111035ms 745.645929ms 746.631972ms 746.70059ms 746.889202ms 746.995361ms 747.271124ms 747.319747ms 747.326934ms 747.548489ms 747.590087ms 747.645849ms 747.733945ms 747.764654ms 747.95485ms 747.973609ms 748.025536ms 748.073545ms 748.110443ms 748.135297ms 748.136039ms 748.300961ms 748.346147ms 748.435884ms 748.441553ms 748.484885ms 748.507311ms 748.517798ms 748.558718ms 748.572211ms 748.582454ms 748.598889ms 748.688451ms 748.694235ms 748.699881ms 748.773791ms 748.82287ms 748.838529ms 748.88221ms 748.885045ms 748.894216ms 748.906877ms 748.937473ms 748.942906ms 749.032355ms 749.059389ms 749.134633ms 749.181668ms 749.183776ms 749.248886ms 749.272057ms 749.278776ms 749.308281ms 749.309372ms 749.310436ms 749.347187ms 749.351561ms 749.358846ms 749.386132ms 749.392715ms 749.485926ms 749.491024ms 749.496871ms 749.511273ms 749.527827ms 749.607637ms 749.637587ms 749.659277ms 749.671626ms 749.687212ms 749.688032ms 749.794431ms 749.805786ms 749.844072ms 750.009325ms 750.101855ms 750.104487ms 750.114336ms 750.135353ms 750.152694ms 750.15274ms 750.173041ms 750.187384ms 750.224675ms 750.24285ms 750.251905ms 750.300024ms 750.362261ms 750.404066ms 750.423666ms 750.505036ms 750.573094ms 750.588463ms 750.599002ms 750.662907ms 750.707383ms 750.716425ms 750.717747ms 750.750262ms 750.813312ms 750.830192ms 750.849751ms 750.91442ms 750.920466ms 750.923665ms 750.940112ms 750.961808ms 751.039494ms 751.039757ms 751.101271ms 751.117387ms 751.218851ms 751.254697ms 751.277492ms 751.289077ms 751.293579ms 751.293815ms 751.375523ms 751.41738ms 751.43586ms 751.507498ms 751.509792ms 751.534944ms 751.554446ms 751.579517ms 751.601435ms 751.609642ms 751.712884ms 751.881854ms 752.022743ms 752.056207ms 752.070087ms 752.114518ms 752.213921ms 752.268815ms 752.274475ms 752.313347ms 752.504617ms 752.544999ms 752.623573ms 752.636141ms 752.814486ms 752.826551ms 753.108433ms 753.625305ms 754.294459ms 754.590226ms 754.665972ms]
  Nov 11 12:24:02.614: INFO: 50 %ile: 749.183776ms
  Nov 11 12:24:02.614: INFO: 90 %ile: 751.881854ms
  Nov 11 12:24:02.614: INFO: 99 %ile: 754.590226ms
  Nov 11 12:24:02.614: INFO: Total sample count: 200
  Nov 11 12:24:02.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-941" for this suite. @ 11/11/23 12:24:02.62
• [9.754 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 11/11/23 12:24:02.626
  Nov 11 12:24:02.626: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename gc @ 11/11/23 12:24:02.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:24:02.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:24:02.644
  STEP: create the deployment @ 11/11/23 12:24:02.646
  W1111 12:24:02.651766      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/11/23 12:24:02.651
  STEP: delete the deployment @ 11/11/23 12:24:03.163
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 11/11/23 12:24:03.17
  STEP: Gathering metrics @ 11/11/23 12:24:03.689
  W1111 12:24:03.693484      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 11 12:24:03.693: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 11 12:24:03.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4558" for this suite. @ 11/11/23 12:24:03.696
• [1.076 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 11/11/23 12:24:03.702
  Nov 11 12:24:03.702: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/11/23 12:24:03.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:24:03.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:24:03.718
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 11/11/23 12:24:03.722
  Nov 11 12:24:03.722: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:24:05.051: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:24:10.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3581" for this suite. @ 11/11/23 12:24:10.188
• [6.491 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 11/11/23 12:24:10.194
  Nov 11 12:24:10.194: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 12:24:10.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:24:10.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:24:10.212
  STEP: Setting up server cert @ 11/11/23 12:24:10.236
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 12:24:10.565
  STEP: Deploying the webhook pod @ 11/11/23 12:24:10.573
  STEP: Wait for the deployment to be ready @ 11/11/23 12:24:10.584
  Nov 11 12:24:10.592: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/11/23 12:24:12.602
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 12:24:12.617
  Nov 11 12:24:13.617: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 11 12:24:13.621: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  Nov 11 12:24:14.618: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 11 12:24:14.621: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  Nov 11 12:24:15.618: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 11 12:24:15.621: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  Nov 11 12:24:16.618: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 11 12:24:16.621: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  Nov 11 12:24:17.618: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 11 12:24:17.621: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  Nov 11 12:24:18.617: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 11 12:24:18.621: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  Nov 11 12:24:19.617: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 11 12:24:19.620: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  Nov 11 12:24:20.618: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 11/11/23 12:24:20.625
  STEP: Creating a custom resource definition that should be denied by the webhook @ 11/11/23 12:24:20.639
  Nov 11 12:24:20.639: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:24:20.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7074" for this suite. @ 11/11/23 12:24:20.691
  STEP: Destroying namespace "webhook-markers-3357" for this suite. @ 11/11/23 12:24:20.697
• [10.512 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 11/11/23 12:24:20.707
  Nov 11 12:24:20.707: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 12:24:20.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:24:20.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:24:20.725
  STEP: Creating configMap with name projected-configmap-test-volume-4ad766d1-88ff-457f-909e-609bd3bbaadc @ 11/11/23 12:24:20.727
  STEP: Creating a pod to test consume configMaps @ 11/11/23 12:24:20.732
  STEP: Saw pod success @ 11/11/23 12:24:24.753
  Nov 11 12:24:24.756: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-projected-configmaps-c63f79f3-e949-4cbd-985c-b5e90bf4c4f0 container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 12:24:24.767
  Nov 11 12:24:24.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5320" for this suite. @ 11/11/23 12:24:24.783
• [4.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 11/11/23 12:24:24.788
  Nov 11 12:24:24.788: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename dns @ 11/11/23 12:24:24.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:24:24.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:24:24.805
  STEP: Creating a test headless service @ 11/11/23 12:24:24.807
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4422.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4422.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4422.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4422.svc.cluster.local;sleep 1; done
   @ 11/11/23 12:24:24.814
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4422.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4422.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4422.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4422.svc.cluster.local;sleep 1; done
   @ 11/11/23 12:24:24.814
  STEP: creating a pod to probe DNS @ 11/11/23 12:24:24.814
  STEP: submitting the pod to kubernetes @ 11/11/23 12:24:24.814
  STEP: retrieving the pod @ 11/11/23 12:24:26.83
  STEP: looking for the results for each expected name from probers @ 11/11/23 12:24:26.833
  Nov 11 12:24:26.836: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local from pod dns-4422/dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966: the server could not find the requested resource (get pods dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966)
  Nov 11 12:24:26.839: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local from pod dns-4422/dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966: the server could not find the requested resource (get pods dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966)
  Nov 11 12:24:26.842: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4422.svc.cluster.local from pod dns-4422/dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966: the server could not find the requested resource (get pods dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966)
  Nov 11 12:24:26.845: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4422.svc.cluster.local from pod dns-4422/dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966: the server could not find the requested resource (get pods dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966)
  Nov 11 12:24:26.847: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local from pod dns-4422/dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966: the server could not find the requested resource (get pods dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966)
  Nov 11 12:24:26.850: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local from pod dns-4422/dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966: the server could not find the requested resource (get pods dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966)
  Nov 11 12:24:26.853: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4422.svc.cluster.local from pod dns-4422/dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966: the server could not find the requested resource (get pods dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966)
  Nov 11 12:24:26.855: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4422.svc.cluster.local from pod dns-4422/dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966: the server could not find the requested resource (get pods dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966)
  Nov 11 12:24:26.855: INFO: Lookups using dns-4422/dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4422.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4422.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4422.svc.cluster.local jessie_udp@dns-test-service-2.dns-4422.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4422.svc.cluster.local]

  Nov 11 12:24:26.860: INFO: Pod client logs for webserver: 
  Nov 11 12:24:26.865: INFO: Pod client logs for querier: 
  Nov 11 12:24:26.870: INFO: Pod client logs for jessie-querier: 
  Nov 11 12:24:31.895: INFO: DNS probes using dns-4422/dns-test-a6196b9f-c87d-46e8-9317-29cda78c0966 succeeded

  Nov 11 12:24:31.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/11/23 12:24:31.898
  STEP: deleting the test headless service @ 11/11/23 12:24:31.91
  STEP: Destroying namespace "dns-4422" for this suite. @ 11/11/23 12:24:31.925
• [7.145 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 11/11/23 12:24:31.933
  Nov 11 12:24:31.933: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 12:24:31.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:24:31.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:24:31.949
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 12:24:31.951
  STEP: Saw pod success @ 11/11/23 12:24:35.972
  Nov 11 12:24:35.976: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-0d64bf32-f3bb-4400-a6d4-fc5dbe49e5b1 container client-container: <nil>
  STEP: delete the pod @ 11/11/23 12:24:35.981
  Nov 11 12:24:35.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4015" for this suite. @ 11/11/23 12:24:35.996
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 11/11/23 12:24:36.002
  Nov 11 12:24:36.002: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename deployment @ 11/11/23 12:24:36.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:24:36.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:24:36.022
  STEP: creating a Deployment @ 11/11/23 12:24:36.028
  STEP: waiting for Deployment to be created @ 11/11/23 12:24:36.033
  STEP: waiting for all Replicas to be Ready @ 11/11/23 12:24:36.034
  Nov 11 12:24:36.035: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 11 12:24:36.035: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 11 12:24:36.044: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 11 12:24:36.044: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 11 12:24:36.057: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 11 12:24:36.057: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 11 12:24:36.076: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 11 12:24:36.076: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 11 12:24:37.571: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Nov 11 12:24:37.571: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Nov 11 12:24:37.739: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 11/11/23 12:24:37.739
  Nov 11 12:24:37.747: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 11/11/23 12:24:37.747
  Nov 11 12:24:37.748: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0
  Nov 11 12:24:37.748: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0
  Nov 11 12:24:37.748: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0
  Nov 11 12:24:37.748: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0
  Nov 11 12:24:37.748: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0
  Nov 11 12:24:37.748: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0
  Nov 11 12:24:37.748: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0
  Nov 11 12:24:37.748: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 0
  Nov 11 12:24:37.748: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1
  Nov 11 12:24:37.748: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1
  Nov 11 12:24:37.748: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2
  Nov 11 12:24:37.748: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2
  Nov 11 12:24:37.748: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2
  Nov 11 12:24:37.748: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2
  Nov 11 12:24:37.759: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2
  Nov 11 12:24:37.759: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2
  Nov 11 12:24:37.773: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2
  Nov 11 12:24:37.773: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2
  Nov 11 12:24:37.791: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1
  Nov 11 12:24:37.791: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1
  Nov 11 12:24:37.821: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1
  Nov 11 12:24:37.821: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1
  Nov 11 12:24:38.749: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2
  Nov 11 12:24:38.749: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2
  Nov 11 12:24:38.771: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1
  STEP: listing Deployments @ 11/11/23 12:24:38.771
  Nov 11 12:24:38.775: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 11/11/23 12:24:38.775
  Nov 11 12:24:38.785: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 11/11/23 12:24:38.785
  Nov 11 12:24:38.792: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 11 12:24:38.798: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 11 12:24:38.831: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 11 12:24:38.845: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 11 12:24:39.591: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 11 12:24:39.760: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 11 12:24:39.798: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 11 12:24:39.806: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 11 12:24:40.591: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 11/11/23 12:24:40.611
  STEP: fetching the DeploymentStatus @ 11/11/23 12:24:40.62
  Nov 11 12:24:40.625: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1
  Nov 11 12:24:40.625: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1
  Nov 11 12:24:40.626: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1
  Nov 11 12:24:40.626: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 1
  Nov 11 12:24:40.626: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2
  Nov 11 12:24:40.626: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 3
  Nov 11 12:24:40.626: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2
  Nov 11 12:24:40.626: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 2
  Nov 11 12:24:40.626: INFO: observed Deployment test-deployment in namespace deployment-5269 with ReadyReplicas 3
  STEP: deleting the Deployment @ 11/11/23 12:24:40.626
  Nov 11 12:24:40.634: INFO: observed event type MODIFIED
  Nov 11 12:24:40.634: INFO: observed event type MODIFIED
  Nov 11 12:24:40.634: INFO: observed event type MODIFIED
  Nov 11 12:24:40.634: INFO: observed event type MODIFIED
  Nov 11 12:24:40.634: INFO: observed event type MODIFIED
  Nov 11 12:24:40.634: INFO: observed event type MODIFIED
  Nov 11 12:24:40.634: INFO: observed event type MODIFIED
  Nov 11 12:24:40.634: INFO: observed event type MODIFIED
  Nov 11 12:24:40.634: INFO: observed event type MODIFIED
  Nov 11 12:24:40.634: INFO: observed event type MODIFIED
  Nov 11 12:24:40.635: INFO: observed event type MODIFIED
  Nov 11 12:24:40.635: INFO: observed event type MODIFIED
  Nov 11 12:24:40.637: INFO: Log out all the ReplicaSets if there is no deployment created
  Nov 11 12:24:40.640: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5269",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d73d98dd-5313-4d51-aad2-44a7ab1f7933",
      ResourceVersion: (string) (len=5) "11761",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "081881f3-767f-41b4-825a-ccb6cb12a972",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 38 31 38  38 31 66 33 2d 37 36 37  |":\"081881f3-767|
              00000130  66 2d 34 31 62 34 2d 38  32 35 61 2d 63 63 62 36  |f-41b4-825a-ccb6|
              00000140  63 62 31 32 61 39 37 32  5c 22 7d 22 3a 7b 7d 7d  |cb12a972\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Nov 11 12:24:40.645: INFO: pod: "test-deployment-64fd565c98-cx2h4":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-cx2h4",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-5269",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2be4c321-867f-4e8e-9177-d21935558159",
      ResourceVersion: (string) (len=5) "11756",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "d73d98dd-5313-4d51-aad2-44a7ab1f7933",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 37 33 64 39 38 64 64  |uid\":\"d73d98dd|
              000000a0  2d 35 33 31 33 2d 34 64  35 31 2d 61 61 64 32 2d  |-5313-4d51-aad2-|
              000000b0  34 34 61 37 61 62 31 66  37 39 33 33 5c 22 7d 22  |44a7ab1f7933\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 34 34 2e 32 33 31 5c  |192.168.144.231\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lxrbp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lxrbp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.144.231",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.144.231"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835302279,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://16f426089362a2079ac4e3fafb499c257f1ed47304b1a8d89318e6fe1059df54",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Nov 11 12:24:40.648: INFO: pod: "test-deployment-64fd565c98-x88wn":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-x88wn",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-5269",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac01c823-c3db-4b07-8a70-1ac3041dd1c1",
      ResourceVersion: (string) (len=5) "11744",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "d73d98dd-5313-4d51-aad2-44a7ab1f7933",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 37 33 64 39 38 64 64  |uid\":\"d73d98dd|
              000000a0  2d 35 33 31 33 2d 34 64  35 31 2d 61 61 64 32 2d  |-5313-4d51-aad2-|
              000000b0  34 34 61 37 61 62 31 66  37 39 33 33 5c 22 7d 22  |44a7ab1f7933\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=479) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              00000130  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              00000140  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000160  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000170  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000180  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              00000190  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001a0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001b0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001c0  22 66 3a 70 68 61 73 65  22 3a 7b 7d 2c 22 66 3a  |"f:phase":{},"f:|
              000001d0  73 74 61 72 74 54 69 6d  65 22 3a 7b 7d 7d 7d     |startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q8n2d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q8n2d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.254",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835302278,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835302279,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://9b88f6e566c352e6ca61fca441ee0b3a89ca4aa8e0b70e6c3f3233f847891aab"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://9b88f6e566c352e6ca61fca441ee0b3a89ca4aa8e0b70e6c3f3233f847891aab",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Nov 11 12:24:40.650: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5269",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b006505d-391d-4849-bb4f-80921668f033",
      ResourceVersion: (string) (len=5) "11665",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302276,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "081881f3-767f-41b4-825a-ccb6cb12a972",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 38 31 38  38 31 66 33 2d 37 36 37  |":\"081881f3-767|
              00000130  66 2d 34 31 62 34 2d 38  32 35 61 2d 63 63 62 36  |f-41b4-825a-ccb6|
              00000140  63 62 31 32 61 39 37 32  5c 22 7d 22 3a 7b 7d 7d  |cb12a972\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Nov 11 12:24:40.657: INFO: pod: "test-deployment-69d58987ff-qrnh7":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-69d58987ff-qrnh7",
      GenerateName: (string) (len=27) "test-deployment-69d58987ff-",
      Namespace: (string) (len=15) "deployment-5269",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1c9f382-bede-4a3f-9f1f-e784336bd0d6",
      ResourceVersion: (string) (len=5) "11740",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302276,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-69d58987ff",
          UID: (types.UID) (len=36) "b006505d-391d-4849-bb4f-80921668f033",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 30 30 36 35 30 35 64  |uid\":\"b006505d|
              000000a0  2d 33 39 31 64 2d 34 38  34 39 2d 62 62 34 66 2d  |-391d-4849-bb4f-|
              000000b0  38 30 39 32 31 36 36 38  66 30 33 33 5c 22 7d 22  |80921668f033\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=465) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000100  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000110  2c 22 6b 3a 7b 5c 22 74  79 70 65 5c 22 3a 5c 22  |,"k:{\"type\":\"|
              00000120  52 65 61 64 79 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |Ready\"}":{".":{|
              00000130  7d 2c 22 66 3a 6c 61 73  74 50 72 6f 62 65 54 69  |},"f:lastProbeTi|
              00000140  6d 65 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 54 72  |me":{},"f:lastTr|
              00000150  61 6e 73 69 74 69 6f 6e  54 69 6d 65 22 3a 7b 7d  |ansitionTime":{}|
              00000160  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000170  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              00000180  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 63 6f  |type":{}}},"f:co|
              00000190  6e 74 61 69 6e 65 72 53  74 61 74 75 73 65 73 22  |ntainerStatuses"|
              000001a0  3a 7b 7d 2c 22 66 3a 68  6f 73 74 49 50 22 3a 7b  |:{},"f:hostIP":{|
              000001b0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000001c0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000001d0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cdbm8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cdbm8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=6) "Failed",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=9) "PodFailed",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=9) "PodFailed",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.254",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302276,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 2,
              Signal: (int32) 0,
              Reason: (string) (len=5) "Error",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835302276,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835302279,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://ee287f22e56387d8c1a6ca2e2761d68563399e0958d424b07c444d40e50d0fbf"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://ee287f22e56387d8c1a6ca2e2761d68563399e0958d424b07c444d40e50d0fbf",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Nov 11 12:24:40.659: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5269",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96f41385-dda0-4048-91be-7fc517e569a2",
      ResourceVersion: (string) (len=5) "11753",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "081881f3-767f-41b4-825a-ccb6cb12a972",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 38 31 38  38 31 66 33 2d 37 36 37  |":\"081881f3-767|
              00000130  66 2d 34 31 62 34 2d 38  32 35 61 2d 63 63 62 36  |f-41b4-825a-ccb6|
              00000140  63 62 31 32 61 39 37 32  5c 22 7d 22 3a 7b 7d 7d  |cb12a972\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Nov 11 12:24:40.678: INFO: pod: "test-deployment-79ff746c4-82nn6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-82nn6",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-5269",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "272b86ef-209c-4132-b139-c4eed5031681",
      ResourceVersion: (string) (len=5) "11770",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "96f41385-dda0-4048-91be-7fc517e569a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 36 66 34 31 33 38 35  |uid\":\"96f41385|
              000000a0  2d 64 64 61 30 2d 34 30  34 38 2d 39 31 62 65 2d  |-dda0-4048-91be-|
              000000b0  37 66 63 35 31 37 65 35  36 39 61 32 5c 22 7d 22  |7fc517e569a2\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 31 36 2e 32 30 35 5c  |192.168.216.205\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-85rmm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-85rmm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.254",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.216.205",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.216.205"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835302279,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://98a979add8269aeb9bd7029b17a4854f2cb3857a6275a835a4ff911fc979087f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Nov 11 12:24:40.680: INFO: pod: "test-deployment-79ff746c4-wshn9":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-wshn9",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-5269",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f6102444-a2e8-45eb-aba5-ab860cb60e6e",
      ResourceVersion: (string) (len=5) "11769",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302279,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "96f41385-dda0-4048-91be-7fc517e569a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 36 66 34 31 33 38 35  |uid\":\"96f41385|
              000000a0  2d 64 64 61 30 2d 34 30  34 38 2d 39 31 62 65 2d  |-dda0-4048-91be-|
              000000b0  37 66 63 35 31 37 65 35  36 39 61 32 5c 22 7d 22  |7fc517e569a2\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 34 34 2e 32 33 32 5c  |192.168.144.232\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-prl84",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-prl84",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.144.232",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.144.232"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302279,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835302280,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://67d85976a1f7a0b6451096ea0fa66b6f61d382bc5fb60705ed5c3e964e92cca7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Nov 11 12:24:40.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5269" for this suite. @ 11/11/23 12:24:40.685
• [4.690 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 11/11/23 12:24:40.693
  Nov 11 12:24:40.693: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 12:24:40.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:24:40.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:24:40.713
  STEP: creating a replication controller @ 11/11/23 12:24:40.716
  Nov 11 12:24:40.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 create -f -'
  Nov 11 12:24:40.921: INFO: stderr: ""
  Nov 11 12:24:40.921: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/11/23 12:24:40.921
  Nov 11 12:24:40.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 11 12:24:40.981: INFO: stderr: ""
  Nov 11 12:24:40.981: INFO: stdout: "update-demo-nautilus-c8lnt update-demo-nautilus-mtb9q "
  Nov 11 12:24:40.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods update-demo-nautilus-c8lnt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 11 12:24:41.030: INFO: stderr: ""
  Nov 11 12:24:41.030: INFO: stdout: ""
  Nov 11 12:24:41.030: INFO: update-demo-nautilus-c8lnt is created but not running
  Nov 11 12:24:46.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 11 12:24:46.085: INFO: stderr: ""
  Nov 11 12:24:46.085: INFO: stdout: "update-demo-nautilus-c8lnt update-demo-nautilus-mtb9q "
  Nov 11 12:24:46.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods update-demo-nautilus-c8lnt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 11 12:24:46.133: INFO: stderr: ""
  Nov 11 12:24:46.133: INFO: stdout: "true"
  Nov 11 12:24:46.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods update-demo-nautilus-c8lnt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 11 12:24:46.181: INFO: stderr: ""
  Nov 11 12:24:46.181: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 11 12:24:46.181: INFO: validating pod update-demo-nautilus-c8lnt
  Nov 11 12:24:46.185: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 11 12:24:46.185: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 11 12:24:46.185: INFO: update-demo-nautilus-c8lnt is verified up and running
  Nov 11 12:24:46.185: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods update-demo-nautilus-mtb9q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 11 12:24:46.233: INFO: stderr: ""
  Nov 11 12:24:46.233: INFO: stdout: "true"
  Nov 11 12:24:46.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods update-demo-nautilus-mtb9q -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 11 12:24:46.280: INFO: stderr: ""
  Nov 11 12:24:46.280: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 11 12:24:46.280: INFO: validating pod update-demo-nautilus-mtb9q
  Nov 11 12:24:46.285: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 11 12:24:46.285: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 11 12:24:46.285: INFO: update-demo-nautilus-mtb9q is verified up and running
  STEP: scaling down the replication controller @ 11/11/23 12:24:46.285
  Nov 11 12:24:46.286: INFO: scanned /root for discovery docs: <nil>
  Nov 11 12:24:46.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Nov 11 12:24:47.349: INFO: stderr: ""
  Nov 11 12:24:47.349: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/11/23 12:24:47.349
  Nov 11 12:24:47.349: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 11 12:24:47.401: INFO: stderr: ""
  Nov 11 12:24:47.401: INFO: stdout: "update-demo-nautilus-c8lnt update-demo-nautilus-mtb9q "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 11/11/23 12:24:47.401
  Nov 11 12:24:52.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 11 12:24:52.453: INFO: stderr: ""
  Nov 11 12:24:52.453: INFO: stdout: "update-demo-nautilus-mtb9q "
  Nov 11 12:24:52.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods update-demo-nautilus-mtb9q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 11 12:24:52.501: INFO: stderr: ""
  Nov 11 12:24:52.501: INFO: stdout: "true"
  Nov 11 12:24:52.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods update-demo-nautilus-mtb9q -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 11 12:24:52.551: INFO: stderr: ""
  Nov 11 12:24:52.551: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 11 12:24:52.551: INFO: validating pod update-demo-nautilus-mtb9q
  Nov 11 12:24:52.555: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 11 12:24:52.555: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 11 12:24:52.555: INFO: update-demo-nautilus-mtb9q is verified up and running
  STEP: scaling up the replication controller @ 11/11/23 12:24:52.555
  Nov 11 12:24:52.556: INFO: scanned /root for discovery docs: <nil>
  Nov 11 12:24:52.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Nov 11 12:24:53.621: INFO: stderr: ""
  Nov 11 12:24:53.621: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/11/23 12:24:53.621
  Nov 11 12:24:53.622: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 11 12:24:53.673: INFO: stderr: ""
  Nov 11 12:24:53.673: INFO: stdout: "update-demo-nautilus-mtb9q update-demo-nautilus-pd5vf "
  Nov 11 12:24:53.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods update-demo-nautilus-mtb9q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 11 12:24:53.723: INFO: stderr: ""
  Nov 11 12:24:53.723: INFO: stdout: "true"
  Nov 11 12:24:53.723: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods update-demo-nautilus-mtb9q -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 11 12:24:53.773: INFO: stderr: ""
  Nov 11 12:24:53.773: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 11 12:24:53.773: INFO: validating pod update-demo-nautilus-mtb9q
  Nov 11 12:24:53.777: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 11 12:24:53.777: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 11 12:24:53.777: INFO: update-demo-nautilus-mtb9q is verified up and running
  Nov 11 12:24:53.777: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods update-demo-nautilus-pd5vf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 11 12:24:53.828: INFO: stderr: ""
  Nov 11 12:24:53.828: INFO: stdout: "true"
  Nov 11 12:24:53.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods update-demo-nautilus-pd5vf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 11 12:24:53.876: INFO: stderr: ""
  Nov 11 12:24:53.876: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 11 12:24:53.876: INFO: validating pod update-demo-nautilus-pd5vf
  Nov 11 12:24:53.880: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 11 12:24:53.880: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 11 12:24:53.880: INFO: update-demo-nautilus-pd5vf is verified up and running
  STEP: using delete to clean up resources @ 11/11/23 12:24:53.88
  Nov 11 12:24:53.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 delete --grace-period=0 --force -f -'
  Nov 11 12:24:53.935: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 11 12:24:53.935: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Nov 11 12:24:53.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get rc,svc -l name=update-demo --no-headers'
  Nov 11 12:24:53.995: INFO: stderr: "No resources found in kubectl-6383 namespace.\n"
  Nov 11 12:24:53.995: INFO: stdout: ""
  Nov 11 12:24:53.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6383 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Nov 11 12:24:54.048: INFO: stderr: ""
  Nov 11 12:24:54.048: INFO: stdout: ""
  Nov 11 12:24:54.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6383" for this suite. @ 11/11/23 12:24:54.052
• [13.364 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 11/11/23 12:24:54.058
  Nov 11 12:24:54.058: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-probe @ 11/11/23 12:24:54.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:24:54.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:24:54.077
  STEP: Creating pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740 @ 11/11/23 12:24:54.08
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/11/23 12:24:56.096
  Nov 11 12:24:56.099: INFO: Initial restart count of pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 is 0
  Nov 11 12:24:56.102: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:24:58.107: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:00.110: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:02.114: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:04.118: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:06.122: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:08.127: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:10.132: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:12.137: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:14.141: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:16.147: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:18.152: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:20.156: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:22.160: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:24.163: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:26.167: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:28.172: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:30.176: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:32.181: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:34.186: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:36.190: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:38.194: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:40.197: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:42.201: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:44.204: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:46.209: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:48.212: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:50.217: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:52.221: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:54.225: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:56.230: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:25:58.234: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:00.237: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:02.242: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:04.246: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:06.251: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:08.255: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:10.263: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:12.266: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:14.270: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:16.273: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:18.278: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:20.282: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:22.285: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:24.290: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:26.294: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:28.298: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:30.302: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:32.305: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:34.310: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:36.314: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:38.318: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:40.322: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:42.325: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:44.330: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:46.334: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:48.339: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:50.343: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:52.347: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:54.351: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:56.356: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:26:58.360: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:00.364: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:02.369: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:04.374: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:06.378: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:08.383: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:10.386: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:12.390: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:14.394: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:16.397: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:18.401: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:20.406: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:22.409: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:24.414: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:26.419: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:28.423: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:30.428: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:32.431: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:34.436: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:36.440: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:38.444: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:40.449: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:42.452: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:44.457: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:46.461: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:48.465: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:50.469: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:52.472: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:54.476: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:56.481: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:27:58.486: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:00.490: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:02.493: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:04.498: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:06.502: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:08.506: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:10.509: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:12.513: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:14.517: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:16.522: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:18.526: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:20.530: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:22.534: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:24.538: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:26.542: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:28.546: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:30.550: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:32.555: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:34.558: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:36.563: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:38.568: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:40.572: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:42.576: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:44.580: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:46.584: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:48.588: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:50.592: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:52.596: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:54.600: INFO: Get pod busybox-6e517826-a1c9-46d2-9e3a-c57caec4daa3 in namespace container-probe-2740
  Nov 11 12:28:56.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/11/23 12:28:56.606
  STEP: Destroying namespace "container-probe-2740" for this suite. @ 11/11/23 12:28:56.619
• [242.567 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 11/11/23 12:28:56.625
  Nov 11 12:28:56.625: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename statefulset @ 11/11/23 12:28:56.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:28:56.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:28:56.645
  STEP: Creating service test in namespace statefulset-2156 @ 11/11/23 12:28:56.647
  STEP: Creating stateful set ss in namespace statefulset-2156 @ 11/11/23 12:28:56.651
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2156 @ 11/11/23 12:28:56.655
  Nov 11 12:28:56.658: INFO: Found 0 stateful pods, waiting for 1
  Nov 11 12:29:06.662: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 11/11/23 12:29:06.662
  Nov 11 12:29:06.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-2156 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 11 12:29:06.803: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 11 12:29:06.803: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 11 12:29:06.803: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 11 12:29:06.806: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Nov 11 12:29:16.811: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov 11 12:29:16.811: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov 11 12:29:16.824: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Nov 11 12:29:16.824: INFO: ss-0  ip-172-31-79-254  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:28:56 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:28:56 +0000 UTC  }]
  Nov 11 12:29:16.824: INFO: 
  Nov 11 12:29:16.824: INFO: StatefulSet ss has not reached scale 3, at 1
  Nov 11 12:29:17.827: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997023697s
  Nov 11 12:29:18.831: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993546107s
  Nov 11 12:29:19.835: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.989779618s
  Nov 11 12:29:20.839: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.985298595s
  Nov 11 12:29:21.843: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.982011515s
  Nov 11 12:29:22.847: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.977545558s
  Nov 11 12:29:23.851: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.973536245s
  Nov 11 12:29:24.855: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.969465502s
  Nov 11 12:29:25.859: INFO: Verifying statefulset ss doesn't scale past 3 for another 965.497121ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2156 @ 11/11/23 12:29:26.86
  Nov 11 12:29:26.864: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-2156 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 11 12:29:26.993: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 11 12:29:26.993: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 11 12:29:26.993: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 11 12:29:26.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-2156 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 11 12:29:27.130: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Nov 11 12:29:27.130: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 11 12:29:27.130: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 11 12:29:27.130: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-2156 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 11 12:29:27.277: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Nov 11 12:29:27.277: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 11 12:29:27.277: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 11 12:29:27.280: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 11 12:29:27.280: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 11 12:29:27.280: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 11/11/23 12:29:27.28
  Nov 11 12:29:27.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-2156 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 11 12:29:27.377: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 11 12:29:27.377: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 11 12:29:27.377: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 11 12:29:27.377: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-2156 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 11 12:29:27.511: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 11 12:29:27.511: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 11 12:29:27.511: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 11 12:29:27.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-2156 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 11 12:29:27.653: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 11 12:29:27.653: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 11 12:29:27.653: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 11 12:29:27.653: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov 11 12:29:27.657: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Nov 11 12:29:37.664: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov 11 12:29:37.664: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Nov 11 12:29:37.664: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Nov 11 12:29:37.676: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Nov 11 12:29:37.676: INFO: ss-0  ip-172-31-79-254  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:28:56 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:28:56 +0000 UTC  }]
  Nov 11 12:29:37.676: INFO: ss-1  ip-172-31-26-213  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:16 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:16 +0000 UTC  }]
  Nov 11 12:29:37.676: INFO: ss-2  ip-172-31-8-111   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:16 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:16 +0000 UTC  }]
  Nov 11 12:29:37.676: INFO: 
  Nov 11 12:29:37.676: INFO: StatefulSet ss has not reached scale 0, at 3
  Nov 11 12:29:38.679: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Nov 11 12:29:38.679: INFO: ss-1  ip-172-31-26-213  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:16 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:28 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:28 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:29:16 +0000 UTC  }]
  Nov 11 12:29:38.679: INFO: 
  Nov 11 12:29:38.679: INFO: StatefulSet ss has not reached scale 0, at 1
  Nov 11 12:29:39.683: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.993645585s
  Nov 11 12:29:40.686: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.990042745s
  Nov 11 12:29:41.690: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.986745567s
  Nov 11 12:29:42.694: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.983221995s
  Nov 11 12:29:43.697: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.979567242s
  Nov 11 12:29:44.701: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.975940478s
  Nov 11 12:29:45.704: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.971864767s
  Nov 11 12:29:46.709: INFO: Verifying statefulset ss doesn't scale past 0 for another 967.926776ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2156 @ 11/11/23 12:29:47.709
  Nov 11 12:29:47.713: INFO: Scaling statefulset ss to 0
  Nov 11 12:29:47.722: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 11 12:29:47.725: INFO: Deleting all statefulset in ns statefulset-2156
  Nov 11 12:29:47.727: INFO: Scaling statefulset ss to 0
  Nov 11 12:29:47.737: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 11 12:29:47.739: INFO: Deleting statefulset ss
  Nov 11 12:29:47.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2156" for this suite. @ 11/11/23 12:29:47.753
• [51.135 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 11/11/23 12:29:47.761
  Nov 11 12:29:47.761: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/11/23 12:29:47.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:29:47.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:29:47.777
  Nov 11 12:29:47.781: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/11/23 12:29:49.046
  Nov 11 12:29:49.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-6359 --namespace=crd-publish-openapi-6359 create -f -'
  Nov 11 12:29:49.430: INFO: stderr: ""
  Nov 11 12:29:49.430: INFO: stdout: "e2e-test-crd-publish-openapi-7762-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Nov 11 12:29:49.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-6359 --namespace=crd-publish-openapi-6359 delete e2e-test-crd-publish-openapi-7762-crds test-cr'
  Nov 11 12:29:49.488: INFO: stderr: ""
  Nov 11 12:29:49.488: INFO: stdout: "e2e-test-crd-publish-openapi-7762-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Nov 11 12:29:49.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-6359 --namespace=crd-publish-openapi-6359 apply -f -'
  Nov 11 12:29:49.816: INFO: stderr: ""
  Nov 11 12:29:49.816: INFO: stdout: "e2e-test-crd-publish-openapi-7762-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Nov 11 12:29:49.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-6359 --namespace=crd-publish-openapi-6359 delete e2e-test-crd-publish-openapi-7762-crds test-cr'
  Nov 11 12:29:49.871: INFO: stderr: ""
  Nov 11 12:29:49.871: INFO: stdout: "e2e-test-crd-publish-openapi-7762-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 11/11/23 12:29:49.871
  Nov 11 12:29:49.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-6359 explain e2e-test-crd-publish-openapi-7762-crds'
  Nov 11 12:29:49.973: INFO: stderr: ""
  Nov 11 12:29:49.973: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-7762-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Nov 11 12:29:51.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6359" for this suite. @ 11/11/23 12:29:51.254
• [3.500 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 11/11/23 12:29:51.261
  Nov 11 12:29:51.261: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename watch @ 11/11/23 12:29:51.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:29:51.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:29:51.278
  STEP: creating a watch on configmaps with label A @ 11/11/23 12:29:51.28
  STEP: creating a watch on configmaps with label B @ 11/11/23 12:29:51.282
  STEP: creating a watch on configmaps with label A or B @ 11/11/23 12:29:51.283
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 11/11/23 12:29:51.284
  Nov 11 12:29:51.288: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7781  4f305ac6-fef8-4176-a220-f668714e3c9e 12801 0 2023-11-11 12:29:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-11 12:29:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:29:51.288: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7781  4f305ac6-fef8-4176-a220-f668714e3c9e 12801 0 2023-11-11 12:29:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-11 12:29:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 11/11/23 12:29:51.288
  Nov 11 12:29:51.297: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7781  4f305ac6-fef8-4176-a220-f668714e3c9e 12802 0 2023-11-11 12:29:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-11 12:29:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:29:51.297: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7781  4f305ac6-fef8-4176-a220-f668714e3c9e 12802 0 2023-11-11 12:29:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-11 12:29:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 11/11/23 12:29:51.297
  Nov 11 12:29:51.304: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7781  4f305ac6-fef8-4176-a220-f668714e3c9e 12804 0 2023-11-11 12:29:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-11 12:29:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:29:51.304: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7781  4f305ac6-fef8-4176-a220-f668714e3c9e 12804 0 2023-11-11 12:29:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-11 12:29:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 11/11/23 12:29:51.304
  Nov 11 12:29:51.310: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7781  4f305ac6-fef8-4176-a220-f668714e3c9e 12805 0 2023-11-11 12:29:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-11 12:29:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:29:51.310: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7781  4f305ac6-fef8-4176-a220-f668714e3c9e 12805 0 2023-11-11 12:29:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-11 12:29:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 11/11/23 12:29:51.31
  Nov 11 12:29:51.314: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7781  07dd8bc0-e3ff-4c1b-af5d-715f24a0551a 12806 0 2023-11-11 12:29:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-11 12:29:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:29:51.314: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7781  07dd8bc0-e3ff-4c1b-af5d-715f24a0551a 12806 0 2023-11-11 12:29:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-11 12:29:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 11/11/23 12:30:01.318
  Nov 11 12:30:01.324: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7781  07dd8bc0-e3ff-4c1b-af5d-715f24a0551a 12865 0 2023-11-11 12:29:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-11 12:29:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:30:01.325: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7781  07dd8bc0-e3ff-4c1b-af5d-715f24a0551a 12865 0 2023-11-11 12:29:51 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-11 12:29:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 11 12:30:11.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7781" for this suite. @ 11/11/23 12:30:11.332
• [20.076 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 11/11/23 12:30:11.338
  Nov 11 12:30:11.338: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 12:30:11.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:30:11.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:30:11.355
  STEP: creating an Endpoint @ 11/11/23 12:30:11.36
  STEP: waiting for available Endpoint @ 11/11/23 12:30:11.365
  STEP: listing all Endpoints @ 11/11/23 12:30:11.366
  STEP: updating the Endpoint @ 11/11/23 12:30:11.368
  STEP: fetching the Endpoint @ 11/11/23 12:30:11.376
  STEP: patching the Endpoint @ 11/11/23 12:30:11.379
  STEP: fetching the Endpoint @ 11/11/23 12:30:11.385
  STEP: deleting the Endpoint by Collection @ 11/11/23 12:30:11.388
  STEP: waiting for Endpoint deletion @ 11/11/23 12:30:11.394
  STEP: fetching the Endpoint @ 11/11/23 12:30:11.396
  Nov 11 12:30:11.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3202" for this suite. @ 11/11/23 12:30:11.402
• [0.069 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 11/11/23 12:30:11.407
  Nov 11 12:30:11.407: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/11/23 12:30:11.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:30:11.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:30:11.422
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 11/11/23 12:30:11.425
  Nov 11 12:30:11.425: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 11/11/23 12:30:16.507
  Nov 11 12:30:16.507: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:30:17.799: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:30:22.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7855" for this suite. @ 11/11/23 12:30:22.856
• [11.456 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 11/11/23 12:30:22.864
  Nov 11 12:30:22.864: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pod-network-test @ 11/11/23 12:30:22.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:30:22.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:30:22.881
  STEP: Performing setup for networking test in namespace pod-network-test-8108 @ 11/11/23 12:30:22.883
  STEP: creating a selector @ 11/11/23 12:30:22.883
  STEP: Creating the service pods in kubernetes @ 11/11/23 12:30:22.883
  Nov 11 12:30:22.883: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 11/11/23 12:30:34.959
  Nov 11 12:30:36.984: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov 11 12:30:36.984: INFO: Going to poll 192.168.250.85 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Nov 11 12:30:36.987: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.250.85:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8108 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:30:36.987: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:30:36.987: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:30:36.987: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8108/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.250.85%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 11 12:30:37.071: INFO: Found all 1 expected endpoints: [netserver-0]
  Nov 11 12:30:37.071: INFO: Going to poll 192.168.216.208 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Nov 11 12:30:37.075: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.216.208:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8108 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:30:37.075: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:30:37.075: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:30:37.075: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8108/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.216.208%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 11 12:30:37.154: INFO: Found all 1 expected endpoints: [netserver-1]
  Nov 11 12:30:37.154: INFO: Going to poll 192.168.144.235 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Nov 11 12:30:37.157: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.144.235:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8108 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:30:37.157: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:30:37.157: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:30:37.157: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8108/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.144.235%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 11 12:30:37.239: INFO: Found all 1 expected endpoints: [netserver-2]
  Nov 11 12:30:37.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8108" for this suite. @ 11/11/23 12:30:37.243
• [14.386 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 11/11/23 12:30:37.251
  Nov 11 12:30:37.251: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename gc @ 11/11/23 12:30:37.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:30:37.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:30:37.266
  STEP: create the rc1 @ 11/11/23 12:30:37.271
  STEP: create the rc2 @ 11/11/23 12:30:37.277
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 11/11/23 12:30:43.286
  STEP: delete the rc simpletest-rc-to-be-deleted @ 11/11/23 12:30:43.673
  STEP: wait for the rc to be deleted @ 11/11/23 12:30:43.68
  Nov 11 12:30:48.694: INFO: 69 pods remaining
  Nov 11 12:30:48.694: INFO: 69 pods has nil DeletionTimestamp
  Nov 11 12:30:48.694: INFO: 
  STEP: Gathering metrics @ 11/11/23 12:30:53.692
  W1111 12:30:53.696832      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 11 12:30:53.696: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 11 12:30:53.696: INFO: Deleting pod "simpletest-rc-to-be-deleted-2md59" in namespace "gc-7572"
  Nov 11 12:30:53.706: INFO: Deleting pod "simpletest-rc-to-be-deleted-2tsg7" in namespace "gc-7572"
  Nov 11 12:30:53.717: INFO: Deleting pod "simpletest-rc-to-be-deleted-2txrv" in namespace "gc-7572"
  Nov 11 12:30:53.726: INFO: Deleting pod "simpletest-rc-to-be-deleted-2x5rb" in namespace "gc-7572"
  Nov 11 12:30:53.740: INFO: Deleting pod "simpletest-rc-to-be-deleted-44gwm" in namespace "gc-7572"
  Nov 11 12:30:53.754: INFO: Deleting pod "simpletest-rc-to-be-deleted-4dns4" in namespace "gc-7572"
  Nov 11 12:30:53.766: INFO: Deleting pod "simpletest-rc-to-be-deleted-5dj95" in namespace "gc-7572"
  Nov 11 12:30:53.780: INFO: Deleting pod "simpletest-rc-to-be-deleted-5gb8l" in namespace "gc-7572"
  Nov 11 12:30:53.791: INFO: Deleting pod "simpletest-rc-to-be-deleted-5ndsn" in namespace "gc-7572"
  Nov 11 12:30:53.807: INFO: Deleting pod "simpletest-rc-to-be-deleted-6cjz9" in namespace "gc-7572"
  Nov 11 12:30:53.819: INFO: Deleting pod "simpletest-rc-to-be-deleted-6q67x" in namespace "gc-7572"
  Nov 11 12:30:53.834: INFO: Deleting pod "simpletest-rc-to-be-deleted-6rjzh" in namespace "gc-7572"
  Nov 11 12:30:53.845: INFO: Deleting pod "simpletest-rc-to-be-deleted-6z4nz" in namespace "gc-7572"
  Nov 11 12:30:53.856: INFO: Deleting pod "simpletest-rc-to-be-deleted-76lpl" in namespace "gc-7572"
  Nov 11 12:30:53.870: INFO: Deleting pod "simpletest-rc-to-be-deleted-8r7pp" in namespace "gc-7572"
  Nov 11 12:30:53.885: INFO: Deleting pod "simpletest-rc-to-be-deleted-8rc68" in namespace "gc-7572"
  Nov 11 12:30:53.900: INFO: Deleting pod "simpletest-rc-to-be-deleted-9l9gd" in namespace "gc-7572"
  Nov 11 12:30:53.919: INFO: Deleting pod "simpletest-rc-to-be-deleted-9lhz6" in namespace "gc-7572"
  Nov 11 12:30:53.930: INFO: Deleting pod "simpletest-rc-to-be-deleted-9nv2m" in namespace "gc-7572"
  Nov 11 12:30:53.946: INFO: Deleting pod "simpletest-rc-to-be-deleted-b4fwh" in namespace "gc-7572"
  Nov 11 12:30:53.957: INFO: Deleting pod "simpletest-rc-to-be-deleted-br7wl" in namespace "gc-7572"
  Nov 11 12:30:53.970: INFO: Deleting pod "simpletest-rc-to-be-deleted-bv6lm" in namespace "gc-7572"
  Nov 11 12:30:53.980: INFO: Deleting pod "simpletest-rc-to-be-deleted-bx6bq" in namespace "gc-7572"
  Nov 11 12:30:53.995: INFO: Deleting pod "simpletest-rc-to-be-deleted-cbszq" in namespace "gc-7572"
  Nov 11 12:30:54.017: INFO: Deleting pod "simpletest-rc-to-be-deleted-chjqd" in namespace "gc-7572"
  Nov 11 12:30:54.035: INFO: Deleting pod "simpletest-rc-to-be-deleted-cwtph" in namespace "gc-7572"
  Nov 11 12:30:54.049: INFO: Deleting pod "simpletest-rc-to-be-deleted-dmj6s" in namespace "gc-7572"
  Nov 11 12:30:54.064: INFO: Deleting pod "simpletest-rc-to-be-deleted-fk5dv" in namespace "gc-7572"
  Nov 11 12:30:54.084: INFO: Deleting pod "simpletest-rc-to-be-deleted-frlzc" in namespace "gc-7572"
  Nov 11 12:30:54.104: INFO: Deleting pod "simpletest-rc-to-be-deleted-ftccs" in namespace "gc-7572"
  Nov 11 12:30:54.121: INFO: Deleting pod "simpletest-rc-to-be-deleted-gc8cf" in namespace "gc-7572"
  Nov 11 12:30:54.135: INFO: Deleting pod "simpletest-rc-to-be-deleted-gc9ns" in namespace "gc-7572"
  Nov 11 12:30:54.145: INFO: Deleting pod "simpletest-rc-to-be-deleted-gd6f5" in namespace "gc-7572"
  Nov 11 12:30:54.162: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfc9m" in namespace "gc-7572"
  Nov 11 12:30:54.173: INFO: Deleting pod "simpletest-rc-to-be-deleted-gffcl" in namespace "gc-7572"
  Nov 11 12:30:54.190: INFO: Deleting pod "simpletest-rc-to-be-deleted-gn7wv" in namespace "gc-7572"
  Nov 11 12:30:54.204: INFO: Deleting pod "simpletest-rc-to-be-deleted-h7wx8" in namespace "gc-7572"
  Nov 11 12:30:54.214: INFO: Deleting pod "simpletest-rc-to-be-deleted-h827m" in namespace "gc-7572"
  Nov 11 12:30:54.232: INFO: Deleting pod "simpletest-rc-to-be-deleted-hk8hh" in namespace "gc-7572"
  Nov 11 12:30:54.246: INFO: Deleting pod "simpletest-rc-to-be-deleted-htj9b" in namespace "gc-7572"
  Nov 11 12:30:54.263: INFO: Deleting pod "simpletest-rc-to-be-deleted-j4jww" in namespace "gc-7572"
  Nov 11 12:30:54.279: INFO: Deleting pod "simpletest-rc-to-be-deleted-jdsr5" in namespace "gc-7572"
  Nov 11 12:30:54.301: INFO: Deleting pod "simpletest-rc-to-be-deleted-jkd7p" in namespace "gc-7572"
  Nov 11 12:30:54.315: INFO: Deleting pod "simpletest-rc-to-be-deleted-jkrtq" in namespace "gc-7572"
  Nov 11 12:30:54.341: INFO: Deleting pod "simpletest-rc-to-be-deleted-k6rmf" in namespace "gc-7572"
  Nov 11 12:30:54.360: INFO: Deleting pod "simpletest-rc-to-be-deleted-kbd8j" in namespace "gc-7572"
  Nov 11 12:30:54.375: INFO: Deleting pod "simpletest-rc-to-be-deleted-kd46t" in namespace "gc-7572"
  Nov 11 12:30:54.391: INFO: Deleting pod "simpletest-rc-to-be-deleted-kddc6" in namespace "gc-7572"
  Nov 11 12:30:54.409: INFO: Deleting pod "simpletest-rc-to-be-deleted-krp2h" in namespace "gc-7572"
  Nov 11 12:30:54.418: INFO: Deleting pod "simpletest-rc-to-be-deleted-ksglh" in namespace "gc-7572"
  Nov 11 12:30:54.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7572" for this suite. @ 11/11/23 12:30:54.441
• [17.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 11/11/23 12:30:54.449
  Nov 11 12:30:54.449: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename secrets @ 11/11/23 12:30:54.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:30:54.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:30:54.472
  STEP: Creating secret with name secret-test-09a870c0-5545-4513-bc05-eb199378fcd5 @ 11/11/23 12:30:54.475
  STEP: Creating a pod to test consume secrets @ 11/11/23 12:30:54.478
  STEP: Saw pod success @ 11/11/23 12:30:58.498
  Nov 11 12:30:58.500: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-secrets-4707a707-9204-4bbb-a8eb-7712ae3fe97b container secret-env-test: <nil>
  STEP: delete the pod @ 11/11/23 12:30:58.515
  Nov 11 12:30:58.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-171" for this suite. @ 11/11/23 12:30:58.533
• [4.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 11/11/23 12:30:58.538
  Nov 11 12:30:58.538: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-runtime @ 11/11/23 12:30:58.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:30:58.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:30:58.555
  STEP: create the container @ 11/11/23 12:30:58.557
  W1111 12:30:58.564635      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/11/23 12:30:58.564
  STEP: get the container status @ 11/11/23 12:31:01.579
  STEP: the container should be terminated @ 11/11/23 12:31:01.582
  STEP: the termination message should be set @ 11/11/23 12:31:01.582
  Nov 11 12:31:01.582: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 11/11/23 12:31:01.582
  Nov 11 12:31:01.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3598" for this suite. @ 11/11/23 12:31:01.612
• [3.079 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 11/11/23 12:31:01.617
  Nov 11 12:31:01.617: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 12:31:01.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:31:01.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:31:01.636
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/11/23 12:31:01.64
  STEP: Saw pod success @ 11/11/23 12:31:05.66
  Nov 11 12:31:05.664: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-602349d0-6a49-426f-9d63-adf40b92f16b container test-container: <nil>
  STEP: delete the pod @ 11/11/23 12:31:05.67
  Nov 11 12:31:05.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8480" for this suite. @ 11/11/23 12:31:05.687
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 11/11/23 12:31:05.693
  Nov 11 12:31:05.693: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pods @ 11/11/23 12:31:05.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:31:05.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:31:05.709
  STEP: creating a Pod with a static label @ 11/11/23 12:31:05.715
  STEP: watching for Pod to be ready @ 11/11/23 12:31:05.722
  Nov 11 12:31:05.727: INFO: observed Pod pod-test in namespace pods-2995 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Nov 11 12:31:05.732: INFO: observed Pod pod-test in namespace pods-2995 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:31:05 +0000 UTC  }]
  Nov 11 12:31:05.746: INFO: observed Pod pod-test in namespace pods-2995 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:31:05 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:31:05 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:31:05 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:31:05 +0000 UTC  }]
  Nov 11 12:31:06.653: INFO: Found Pod pod-test in namespace pods-2995 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:31:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:31:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:31:06 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-11 12:31:05 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 11/11/23 12:31:06.655
  STEP: getting the Pod and ensuring that it's patched @ 11/11/23 12:31:06.665
  STEP: replacing the Pod's status Ready condition to False @ 11/11/23 12:31:06.667
  STEP: check the Pod again to ensure its Ready conditions are False @ 11/11/23 12:31:06.683
  STEP: deleting the Pod via a Collection with a LabelSelector @ 11/11/23 12:31:06.684
  STEP: watching for the Pod to be deleted @ 11/11/23 12:31:06.692
  Nov 11 12:31:06.693: INFO: observed event type MODIFIED
  Nov 11 12:31:07.429: INFO: observed event type MODIFIED
  Nov 11 12:31:08.657: INFO: observed event type MODIFIED
  Nov 11 12:31:08.835: INFO: observed event type MODIFIED
  Nov 11 12:31:09.662: INFO: observed event type MODIFIED
  Nov 11 12:31:09.675: INFO: observed event type MODIFIED
  Nov 11 12:31:09.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2995" for this suite. @ 11/11/23 12:31:09.687
• [4.003 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 11/11/23 12:31:09.698
  Nov 11 12:31:09.698: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pods @ 11/11/23 12:31:09.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:31:09.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:31:09.714
  STEP: Create set of pods @ 11/11/23 12:31:09.716
  Nov 11 12:31:09.723: INFO: created test-pod-1
  Nov 11 12:31:09.732: INFO: created test-pod-2
  Nov 11 12:31:09.739: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 11/11/23 12:31:09.739
  STEP: waiting for all pods to be deleted @ 11/11/23 12:31:11.783
  Nov 11 12:31:11.786: INFO: Pod quantity 3 is different from expected quantity 0
  Nov 11 12:31:12.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5283" for this suite. @ 11/11/23 12:31:12.794
• [3.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 11/11/23 12:31:12.8
  Nov 11 12:31:12.800: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename field-validation @ 11/11/23 12:31:12.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:31:12.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:31:12.815
  Nov 11 12:31:12.817: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  W1111 12:31:15.354836      22 warnings.go:70] unknown field "alpha"
  W1111 12:31:15.354852      22 warnings.go:70] unknown field "beta"
  W1111 12:31:15.354856      22 warnings.go:70] unknown field "delta"
  W1111 12:31:15.354860      22 warnings.go:70] unknown field "epsilon"
  W1111 12:31:15.354863      22 warnings.go:70] unknown field "gamma"
  Nov 11 12:31:15.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-202" for this suite. @ 11/11/23 12:31:15.893
• [3.100 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 11/11/23 12:31:15.9
  Nov 11 12:31:15.900: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename replication-controller @ 11/11/23 12:31:15.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:31:15.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:31:15.919
  STEP: Creating ReplicationController "e2e-rc-dxh5l" @ 11/11/23 12:31:15.922
  Nov 11 12:31:15.926: INFO: Get Replication Controller "e2e-rc-dxh5l" to confirm replicas
  Nov 11 12:31:16.929: INFO: Get Replication Controller "e2e-rc-dxh5l" to confirm replicas
  Nov 11 12:31:16.933: INFO: Found 1 replicas for "e2e-rc-dxh5l" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-dxh5l" @ 11/11/23 12:31:16.933
  STEP: Updating a scale subresource @ 11/11/23 12:31:16.936
  STEP: Verifying replicas where modified for replication controller "e2e-rc-dxh5l" @ 11/11/23 12:31:16.942
  Nov 11 12:31:16.942: INFO: Get Replication Controller "e2e-rc-dxh5l" to confirm replicas
  Nov 11 12:31:17.947: INFO: Get Replication Controller "e2e-rc-dxh5l" to confirm replicas
  Nov 11 12:31:17.950: INFO: Found 2 replicas for "e2e-rc-dxh5l" replication controller
  Nov 11 12:31:17.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8735" for this suite. @ 11/11/23 12:31:17.953
• [2.058 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 11/11/23 12:31:17.959
  Nov 11 12:31:17.959: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/11/23 12:31:17.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:31:17.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:31:17.973
  Nov 11 12:31:17.977: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:31:21.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5636" for this suite. @ 11/11/23 12:31:21.158
• [3.204 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 11/11/23 12:31:21.164
  Nov 11 12:31:21.164: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 12:31:21.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:31:21.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:31:21.181
  STEP: Creating configMap with name projected-configmap-test-volume-map-27e3953a-f33a-40b1-9db9-dfeabb77cc61 @ 11/11/23 12:31:21.184
  STEP: Creating a pod to test consume configMaps @ 11/11/23 12:31:21.189
  STEP: Saw pod success @ 11/11/23 12:31:25.209
  Nov 11 12:31:25.213: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-projected-configmaps-87c33f88-e333-42da-ac53-0635a603416d container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 12:31:25.219
  Nov 11 12:31:25.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1615" for this suite. @ 11/11/23 12:31:25.235
• [4.076 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 11/11/23 12:31:25.24
  Nov 11 12:31:25.240: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename resourcequota @ 11/11/23 12:31:25.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:31:25.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:31:25.255
  STEP: Counting existing ResourceQuota @ 11/11/23 12:31:25.258
  STEP: Creating a ResourceQuota @ 11/11/23 12:31:30.261
  STEP: Ensuring resource quota status is calculated @ 11/11/23 12:31:30.265
  STEP: Creating a Pod that fits quota @ 11/11/23 12:31:32.269
  STEP: Ensuring ResourceQuota status captures the pod usage @ 11/11/23 12:31:32.284
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 11/11/23 12:31:34.287
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 11/11/23 12:31:34.29
  STEP: Ensuring a pod cannot update its resource requirements @ 11/11/23 12:31:34.291
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 11/11/23 12:31:34.295
  STEP: Deleting the pod @ 11/11/23 12:31:36.299
  STEP: Ensuring resource quota status released the pod usage @ 11/11/23 12:31:36.307
  Nov 11 12:31:38.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8476" for this suite. @ 11/11/23 12:31:38.314
• [13.082 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 11/11/23 12:31:38.323
  Nov 11 12:31:38.323: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubelet-test @ 11/11/23 12:31:38.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:31:38.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:31:38.339
  Nov 11 12:31:38.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9488" for this suite. @ 11/11/23 12:31:38.515
• [0.200 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 11/11/23 12:31:38.523
  Nov 11 12:31:38.523: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename secrets @ 11/11/23 12:31:38.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:31:38.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:31:38.543
  STEP: Creating secret with name secret-test-7b80c07a-23e7-4e79-9847-3047096428db @ 11/11/23 12:31:38.546
  STEP: Creating a pod to test consume secrets @ 11/11/23 12:31:38.55
  STEP: Saw pod success @ 11/11/23 12:31:42.569
  Nov 11 12:31:42.572: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-secrets-a3501bec-2c64-46f0-8c19-9fd818220974 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 12:31:42.577
  Nov 11 12:31:42.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9108" for this suite. @ 11/11/23 12:31:42.598
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 11/11/23 12:31:42.607
  Nov 11 12:31:42.607: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename gc @ 11/11/23 12:31:42.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:31:42.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:31:42.62
  STEP: create the rc @ 11/11/23 12:31:42.628
  W1111 12:31:42.633240      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 11/11/23 12:31:48.637
  STEP: wait for the rc to be deleted @ 11/11/23 12:31:48.643
  Nov 11 12:31:49.654: INFO: 80 pods remaining
  Nov 11 12:31:49.654: INFO: 80 pods has nil DeletionTimestamp
  Nov 11 12:31:49.654: INFO: 
  Nov 11 12:31:50.654: INFO: 71 pods remaining
  Nov 11 12:31:50.654: INFO: 71 pods has nil DeletionTimestamp
  Nov 11 12:31:50.654: INFO: 
  Nov 11 12:31:51.653: INFO: 60 pods remaining
  Nov 11 12:31:51.653: INFO: 60 pods has nil DeletionTimestamp
  Nov 11 12:31:51.653: INFO: 
  Nov 11 12:31:52.657: INFO: 40 pods remaining
  Nov 11 12:31:52.657: INFO: 40 pods has nil DeletionTimestamp
  Nov 11 12:31:52.658: INFO: 
  Nov 11 12:31:53.653: INFO: 31 pods remaining
  Nov 11 12:31:53.653: INFO: 31 pods has nil DeletionTimestamp
  Nov 11 12:31:53.653: INFO: 
  Nov 11 12:31:54.651: INFO: 20 pods remaining
  Nov 11 12:31:54.651: INFO: 20 pods has nil DeletionTimestamp
  Nov 11 12:31:54.651: INFO: 
  STEP: Gathering metrics @ 11/11/23 12:31:55.653
  W1111 12:31:55.659499      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 11 12:31:55.659: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 11 12:31:55.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4802" for this suite. @ 11/11/23 12:31:55.664
• [13.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 11/11/23 12:31:55.674
  Nov 11 12:31:55.674: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename dns @ 11/11/23 12:31:55.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:31:55.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:31:55.69
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/11/23 12:31:55.692
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/11/23 12:31:55.692
  STEP: creating a pod to probe DNS @ 11/11/23 12:31:55.692
  STEP: submitting the pod to kubernetes @ 11/11/23 12:31:55.692
  STEP: retrieving the pod @ 11/11/23 12:31:57.72
  STEP: looking for the results for each expected name from probers @ 11/11/23 12:31:57.723
  Nov 11 12:31:57.736: INFO: DNS probes using dns-3717/dns-test-f129f69e-9f28-47f0-9650-b64eb0ab0a99 succeeded

  Nov 11 12:31:57.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/11/23 12:31:57.74
  STEP: Destroying namespace "dns-3717" for this suite. @ 11/11/23 12:31:57.751
• [2.083 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 11/11/23 12:31:57.757
  Nov 11 12:31:57.757: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename controllerrevisions @ 11/11/23 12:31:57.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:31:57.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:31:57.772
  STEP: Creating DaemonSet "e2e-kvkz2-daemon-set" @ 11/11/23 12:31:57.79
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/11/23 12:31:57.795
  Nov 11 12:31:57.798: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:31:57.798: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:31:57.801: INFO: Number of nodes with available pods controlled by daemonset e2e-kvkz2-daemon-set: 0
  Nov 11 12:31:57.801: INFO: Node ip-172-31-26-213 is running 0 daemon pod, expected 1
  Nov 11 12:31:58.804: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:31:58.805: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:31:58.810: INFO: Number of nodes with available pods controlled by daemonset e2e-kvkz2-daemon-set: 0
  Nov 11 12:31:58.810: INFO: Node ip-172-31-26-213 is running 0 daemon pod, expected 1
  Nov 11 12:31:59.805: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:31:59.805: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:31:59.809: INFO: Number of nodes with available pods controlled by daemonset e2e-kvkz2-daemon-set: 3
  Nov 11 12:31:59.809: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-kvkz2-daemon-set
  STEP: Confirm DaemonSet "e2e-kvkz2-daemon-set" successfully created with "daemonset-name=e2e-kvkz2-daemon-set" label @ 11/11/23 12:31:59.812
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-kvkz2-daemon-set" @ 11/11/23 12:31:59.817
  Nov 11 12:31:59.820: INFO: Located ControllerRevision: "e2e-kvkz2-daemon-set-79fc47947c"
  STEP: Patching ControllerRevision "e2e-kvkz2-daemon-set-79fc47947c" @ 11/11/23 12:31:59.823
  Nov 11 12:31:59.828: INFO: e2e-kvkz2-daemon-set-79fc47947c has been patched
  STEP: Create a new ControllerRevision @ 11/11/23 12:31:59.828
  Nov 11 12:31:59.833: INFO: Created ControllerRevision: e2e-kvkz2-daemon-set-75c4cff745
  STEP: Confirm that there are two ControllerRevisions @ 11/11/23 12:31:59.833
  Nov 11 12:31:59.833: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 11 12:31:59.836: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-kvkz2-daemon-set-79fc47947c" @ 11/11/23 12:31:59.836
  STEP: Confirm that there is only one ControllerRevision @ 11/11/23 12:31:59.842
  Nov 11 12:31:59.842: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 11 12:31:59.845: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-kvkz2-daemon-set-75c4cff745" @ 11/11/23 12:31:59.848
  Nov 11 12:31:59.854: INFO: e2e-kvkz2-daemon-set-75c4cff745 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 11/11/23 12:31:59.855
  W1111 12:31:59.861437      22 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 11/11/23 12:31:59.861
  Nov 11 12:31:59.861: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 11 12:32:00.868: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 11 12:32:00.872: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-kvkz2-daemon-set-75c4cff745=updated" @ 11/11/23 12:32:00.872
  STEP: Confirm that there is only one ControllerRevision @ 11/11/23 12:32:00.881
  Nov 11 12:32:00.881: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 11 12:32:00.885: INFO: Found 1 ControllerRevisions
  Nov 11 12:32:00.887: INFO: ControllerRevision "e2e-kvkz2-daemon-set-97cdb6fd4" has revision 3
  STEP: Deleting DaemonSet "e2e-kvkz2-daemon-set" @ 11/11/23 12:32:00.89
  STEP: deleting DaemonSet.extensions e2e-kvkz2-daemon-set in namespace controllerrevisions-1183, will wait for the garbage collector to delete the pods @ 11/11/23 12:32:00.89
  Nov 11 12:32:00.951: INFO: Deleting DaemonSet.extensions e2e-kvkz2-daemon-set took: 7.866118ms
  Nov 11 12:32:01.052: INFO: Terminating DaemonSet.extensions e2e-kvkz2-daemon-set pods took: 100.800539ms
  Nov 11 12:32:02.957: INFO: Number of nodes with available pods controlled by daemonset e2e-kvkz2-daemon-set: 0
  Nov 11 12:32:02.957: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-kvkz2-daemon-set
  Nov 11 12:32:02.962: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18609"},"items":null}

  Nov 11 12:32:02.964: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18610"},"items":null}

  Nov 11 12:32:02.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1183" for this suite. @ 11/11/23 12:32:02.981
• [5.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 11/11/23 12:32:02.99
  Nov 11 12:32:02.990: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pods @ 11/11/23 12:32:02.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:32:03.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:32:03.007
  STEP: creating the pod @ 11/11/23 12:32:03.009
  STEP: submitting the pod to kubernetes @ 11/11/23 12:32:03.009
  STEP: verifying QOS class is set on the pod @ 11/11/23 12:32:03.017
  Nov 11 12:32:03.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9267" for this suite. @ 11/11/23 12:32:03.031
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 11/11/23 12:32:03.039
  Nov 11 12:32:03.039: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 12:32:03.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:32:03.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:32:03.054
  STEP: creating service in namespace services-4407 @ 11/11/23 12:32:03.057
  STEP: creating service affinity-nodeport-transition in namespace services-4407 @ 11/11/23 12:32:03.057
  STEP: creating replication controller affinity-nodeport-transition in namespace services-4407 @ 11/11/23 12:32:03.071
  I1111 12:32:03.078049      22 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-4407, replica count: 3
  I1111 12:32:06.128615      22 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 11 12:32:06.139: INFO: Creating new exec pod
  Nov 11 12:32:09.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-4407 exec execpod-affinitykl928 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Nov 11 12:32:09.304: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Nov 11 12:32:09.304: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 12:32:09.304: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-4407 exec execpod-affinitykl928 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.113 80'
  Nov 11 12:32:09.435: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.113 80\nConnection to 10.152.183.113 80 port [tcp/http] succeeded!\n"
  Nov 11 12:32:09.435: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 12:32:09.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-4407 exec execpod-affinitykl928 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.26.213 30396'
  Nov 11 12:32:09.579: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.26.213 30396\nConnection to 172.31.26.213 30396 port [tcp/*] succeeded!\n"
  Nov 11 12:32:09.579: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 12:32:09.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-4407 exec execpod-affinitykl928 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.111 30396'
  Nov 11 12:32:09.699: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.8.111 30396\nConnection to 172.31.8.111 30396 port [tcp/*] succeeded!\n"
  Nov 11 12:32:09.699: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 12:32:09.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-4407 exec execpod-affinitykl928 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.26.213:30396/ ; done'
  Nov 11 12:32:09.935: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n"
  Nov 11 12:32:09.935: INFO: stdout: "\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-zdjc2\naffinity-nodeport-transition-zdjc2\naffinity-nodeport-transition-7rn4r\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-zdjc2\naffinity-nodeport-transition-zdjc2\naffinity-nodeport-transition-7rn4r\naffinity-nodeport-transition-zdjc2\naffinity-nodeport-transition-7rn4r\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-zdjc2\naffinity-nodeport-transition-7rn4r\naffinity-nodeport-transition-zdjc2"
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-zdjc2
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-zdjc2
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-7rn4r
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-zdjc2
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-zdjc2
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-7rn4r
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-zdjc2
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-7rn4r
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-zdjc2
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-7rn4r
  Nov 11 12:32:09.935: INFO: Received response from host: affinity-nodeport-transition-zdjc2
  Nov 11 12:32:09.945: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-4407 exec execpod-affinitykl928 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.26.213:30396/ ; done'
  Nov 11 12:32:10.134: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30396/\n"
  Nov 11 12:32:10.134: INFO: stdout: "\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4\naffinity-nodeport-transition-smjs4"
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Received response from host: affinity-nodeport-transition-smjs4
  Nov 11 12:32:10.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 11 12:32:10.138: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4407, will wait for the garbage collector to delete the pods @ 11/11/23 12:32:10.152
  Nov 11 12:32:10.211: INFO: Deleting ReplicationController affinity-nodeport-transition took: 5.175902ms
  Nov 11 12:32:10.311: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.463971ms
  STEP: Destroying namespace "services-4407" for this suite. @ 11/11/23 12:32:13.236
• [10.204 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 11/11/23 12:32:13.243
  Nov 11 12:32:13.243: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 12:32:13.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:32:13.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:32:13.259
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 12:32:13.261
  STEP: Saw pod success @ 11/11/23 12:32:15.277
  Nov 11 12:32:15.279: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-04a95f15-a34c-479f-b00e-aaa17c30f035 container client-container: <nil>
  STEP: delete the pod @ 11/11/23 12:32:15.285
  Nov 11 12:32:15.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6900" for this suite. @ 11/11/23 12:32:15.301
• [2.063 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 11/11/23 12:32:15.306
  Nov 11 12:32:15.306: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/11/23 12:32:15.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:32:15.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:32:15.32
  STEP: create the container to handle the HTTPGet hook request. @ 11/11/23 12:32:15.33
  STEP: create the pod with lifecycle hook @ 11/11/23 12:32:17.346
  STEP: check poststart hook @ 11/11/23 12:32:19.362
  STEP: delete the pod with lifecycle hook @ 11/11/23 12:32:19.376
  Nov 11 12:32:21.390: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8257" for this suite. @ 11/11/23 12:32:21.393
• [6.092 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 11/11/23 12:32:21.398
  Nov 11 12:32:21.398: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 12:32:21.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:32:21.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:32:21.415
  STEP: Setting up server cert @ 11/11/23 12:32:21.439
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 12:32:21.753
  STEP: Deploying the webhook pod @ 11/11/23 12:32:21.76
  STEP: Wait for the deployment to be ready @ 11/11/23 12:32:21.772
  Nov 11 12:32:21.779: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/11/23 12:32:23.79
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 12:32:23.799
  Nov 11 12:32:24.800: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/11/23 12:32:24.806
  STEP: create a pod that should be denied by the webhook @ 11/11/23 12:32:24.821
  STEP: create a pod that causes the webhook to hang @ 11/11/23 12:32:24.833
  STEP: create a configmap that should be denied by the webhook @ 11/11/23 12:32:34.84
  STEP: create a configmap that should be admitted by the webhook @ 11/11/23 12:32:35.059
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/11/23 12:32:35.067
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/11/23 12:32:35.074
  STEP: create a namespace that bypass the webhook @ 11/11/23 12:32:35.078
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 11/11/23 12:32:35.094
  Nov 11 12:32:35.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3918" for this suite. @ 11/11/23 12:32:35.14
  STEP: Destroying namespace "webhook-markers-6920" for this suite. @ 11/11/23 12:32:35.146
  STEP: Destroying namespace "exempted-namespace-5923" for this suite. @ 11/11/23 12:32:35.154
• [13.761 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 11/11/23 12:32:35.161
  Nov 11 12:32:35.161: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename var-expansion @ 11/11/23 12:32:35.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:32:35.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:32:35.177
  STEP: creating the pod @ 11/11/23 12:32:35.179
  STEP: waiting for pod running @ 11/11/23 12:32:35.187
  STEP: creating a file in subpath @ 11/11/23 12:32:37.194
  Nov 11 12:32:37.197: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-856 PodName:var-expansion-79c7c986-d3c8-447d-b04a-6a6ed0c7632d ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:32:37.197: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:32:37.198: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:32:37.198: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-856/pods/var-expansion-79c7c986-d3c8-447d-b04a-6a6ed0c7632d/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 11/11/23 12:32:37.279
  Nov 11 12:32:37.282: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-856 PodName:var-expansion-79c7c986-d3c8-447d-b04a-6a6ed0c7632d ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:32:37.282: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:32:37.283: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:32:37.283: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-856/pods/var-expansion-79c7c986-d3c8-447d-b04a-6a6ed0c7632d/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 11/11/23 12:32:37.372
  Nov 11 12:32:37.883: INFO: Successfully updated pod "var-expansion-79c7c986-d3c8-447d-b04a-6a6ed0c7632d"
  STEP: waiting for annotated pod running @ 11/11/23 12:32:37.883
  STEP: deleting the pod gracefully @ 11/11/23 12:32:37.886
  Nov 11 12:32:37.886: INFO: Deleting pod "var-expansion-79c7c986-d3c8-447d-b04a-6a6ed0c7632d" in namespace "var-expansion-856"
  Nov 11 12:32:37.894: INFO: Wait up to 5m0s for pod "var-expansion-79c7c986-d3c8-447d-b04a-6a6ed0c7632d" to be fully deleted
  Nov 11 12:33:09.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-856" for this suite. @ 11/11/23 12:33:09.966
• [34.811 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 11/11/23 12:33:09.972
  Nov 11 12:33:09.972: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename deployment @ 11/11/23 12:33:09.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:33:09.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:33:09.987
  Nov 11 12:33:09.990: INFO: Creating simple deployment test-new-deployment
  Nov 11 12:33:10.001: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 11/11/23 12:33:12.014
  STEP: updating a scale subresource @ 11/11/23 12:33:12.017
  STEP: verifying the deployment Spec.Replicas was modified @ 11/11/23 12:33:12.022
  STEP: Patch a scale subresource @ 11/11/23 12:33:12.025
  Nov 11 12:33:12.046: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5134",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d693ffb-ad00-4431-b853-ae1a69612616",
      ResourceVersion: (string) (len=5) "19352",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302789,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 11 12:33:12.058: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5134",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc065af0-8edc-4da3-b9f1-0f688db987a8",
      ResourceVersion: (string) (len=5) "19360",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302789,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "3d693ffb-ad00-4431-b853-ae1a69612616",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 64 36 39 33 66  66 62 2d 61 64 30 30 2d  |\"3d693ffb-ad00-|
              00000120  34 34 33 31 2d 62 38 35  33 2d 61 65 31 61 36 39  |4431-b853-ae1a69|
              00000130  36 31 32 36 31 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |612616\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 11 12:33:12.066: INFO: Pod "test-new-deployment-557759b7c7-4rkbf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-4rkbf",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5134",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52ac4722-e6a5-4f14-ba9d-96efc73500a3",
      ResourceVersion: (string) (len=5) "19346",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302790,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "dc065af0-8edc-4da3-b9f1-0f688db987a8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302790,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 63  30 36 35 61 66 30 2d 38  |d\":\"dc065af0-8|
              00000090  65 64 63 2d 34 64 61 33  2d 62 39 66 31 2d 30 66  |edc-4da3-b9f1-0f|
              000000a0  36 38 38 64 62 39 38 37  61 38 5c 22 7d 22 3a 7b  |688db987a8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 31 36 2e 32 31 36 5c  |192.168.216.216\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j5r75",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j5r75",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302790,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302790,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.254",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.216.216",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.216.216"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302790,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835302790,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a279b782b8b9baa5cd170fba6f4c1745dd8fa024781179f8a018216ae274769d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 12:33:12.069: INFO: Pod "test-new-deployment-557759b7c7-f76vh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-f76vh",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5134",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f9eeba7-fe99-4165-81ea-0471684e462a",
      ResourceVersion: (string) (len=5) "19359",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302792,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "dc065af0-8edc-4da3-b9f1-0f688db987a8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 63  30 36 35 61 66 30 2d 38  |d\":\"dc065af0-8|
              00000090  65 64 63 2d 34 64 61 33  2d 62 39 66 31 2d 30 66  |edc-4da3-b9f1-0f|
              000000a0  36 38 38 64 62 39 38 37  61 38 5c 22 7d 22 3a 7b  |688db987a8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z9pp5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z9pp5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835302792,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835302792,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 12:33:12.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5134" for this suite. @ 11/11/23 12:33:12.074
• [2.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 11/11/23 12:33:12.085
  Nov 11 12:33:12.085: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename security-context-test @ 11/11/23 12:33:12.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:33:12.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:33:12.104
  Nov 11 12:33:16.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7191" for this suite. @ 11/11/23 12:33:16.131
• [4.052 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 11/11/23 12:33:16.137
  Nov 11 12:33:16.137: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename runtimeclass @ 11/11/23 12:33:16.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:33:16.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:33:16.153
  Nov 11 12:33:16.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7212" for this suite. @ 11/11/23 12:33:16.165
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 11/11/23 12:33:16.173
  Nov 11 12:33:16.173: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubelet-test @ 11/11/23 12:33:16.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:33:16.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:33:16.186
  Nov 11 12:33:20.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8585" for this suite. @ 11/11/23 12:33:20.209
• [4.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 11/11/23 12:33:20.215
  Nov 11 12:33:20.215: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename secrets @ 11/11/23 12:33:20.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:33:20.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:33:20.231
  STEP: creating a secret @ 11/11/23 12:33:20.234
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 11/11/23 12:33:20.239
  STEP: patching the secret @ 11/11/23 12:33:20.242
  STEP: deleting the secret using a LabelSelector @ 11/11/23 12:33:20.249
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 11/11/23 12:33:20.256
  Nov 11 12:33:20.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2411" for this suite. @ 11/11/23 12:33:20.263
• [0.053 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 11/11/23 12:33:20.269
  Nov 11 12:33:20.269: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename aggregator @ 11/11/23 12:33:20.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:33:20.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:33:20.284
  Nov 11 12:33:20.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Registering the sample API server. @ 11/11/23 12:33:20.287
  Nov 11 12:33:20.509: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Nov 11 12:33:20.535: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Nov 11 12:33:22.569: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:33:24.573: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:33:26.574: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:33:28.574: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:33:30.573: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:33:32.574: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:33:34.574: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:33:36.573: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:33:38.574: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:33:40.574: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:33:42.573: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 11 12:33:44.690: INFO: Waited 110.649431ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 11/11/23 12:33:44.718
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 11/11/23 12:33:44.721
  STEP: List APIServices @ 11/11/23 12:33:44.726
  Nov 11 12:33:44.730: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 11/11/23 12:33:44.73
  Nov 11 12:33:44.740: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 11/11/23 12:33:44.74
  Nov 11 12:33:44.753: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.November, 11, 12, 33, 44, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 11/11/23 12:33:44.753
  Nov 11 12:33:44.757: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-11-11 12:33:44 +0000 UTC Passed all checks passed}
  Nov 11 12:33:44.757: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 11 12:33:44.757: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 11/11/23 12:33:44.757
  Nov 11 12:33:44.768: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-397176161" @ 11/11/23 12:33:44.768
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 11/11/23 12:33:44.775
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 11/11/23 12:33:44.78
  STEP: Patch APIService Status @ 11/11/23 12:33:44.782
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 11/11/23 12:33:44.789
  Nov 11 12:33:44.792: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-11-11 12:33:44 +0000 UTC Passed all checks passed}
  Nov 11 12:33:44.792: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 11 12:33:44.792: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Nov 11 12:33:44.792: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 11/11/23 12:33:44.792
  STEP: Confirm that the generated APIService has been deleted @ 11/11/23 12:33:44.795
  Nov 11 12:33:44.795: INFO: Requesting list of APIServices to confirm quantity
  Nov 11 12:33:44.799: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Nov 11 12:33:44.799: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Nov 11 12:33:44.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1022" for this suite. @ 11/11/23 12:33:44.893
• [24.633 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 11/11/23 12:33:44.902
  Nov 11 12:33:44.902: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 12:33:44.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:33:44.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:33:44.918
  STEP: Creating the pod @ 11/11/23 12:33:44.92
  Nov 11 12:33:49.464: INFO: Successfully updated pod "labelsupdate309228db-5412-4756-b5cf-638319e2785c"
  Nov 11 12:33:51.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-74" for this suite. @ 11/11/23 12:33:51.483
• [6.588 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 11/11/23 12:33:51.491
  Nov 11 12:33:51.491: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename podtemplate @ 11/11/23 12:33:51.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:33:51.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:33:51.505
  STEP: Create set of pod templates @ 11/11/23 12:33:51.509
  Nov 11 12:33:51.514: INFO: created test-podtemplate-1
  Nov 11 12:33:51.518: INFO: created test-podtemplate-2
  Nov 11 12:33:51.523: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 11/11/23 12:33:51.523
  STEP: delete collection of pod templates @ 11/11/23 12:33:51.525
  Nov 11 12:33:51.525: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 11/11/23 12:33:51.54
  Nov 11 12:33:51.540: INFO: requesting list of pod templates to confirm quantity
  Nov 11 12:33:51.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3597" for this suite. @ 11/11/23 12:33:51.546
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 11/11/23 12:33:51.552
  Nov 11 12:33:51.552: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename daemonsets @ 11/11/23 12:33:51.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:33:51.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:33:51.571
  STEP: Creating simple DaemonSet "daemon-set" @ 11/11/23 12:33:51.591
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/11/23 12:33:51.596
  Nov 11 12:33:51.598: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:33:51.598: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:33:51.601: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:33:51.601: INFO: Node ip-172-31-26-213 is running 0 daemon pod, expected 1
  Nov 11 12:33:52.605: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:33:52.605: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:33:52.609: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:33:52.609: INFO: Node ip-172-31-26-213 is running 0 daemon pod, expected 1
  Nov 11 12:33:53.605: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:33:53.605: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:33:53.608: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 11 12:33:53.608: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 11/11/23 12:33:53.611
  STEP: DeleteCollection of the DaemonSets @ 11/11/23 12:33:53.613
  STEP: Verify that ReplicaSets have been deleted @ 11/11/23 12:33:53.62
  Nov 11 12:33:53.629: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19775"},"items":null}

  Nov 11 12:33:53.636: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19778"},"items":[{"metadata":{"name":"daemon-set-95xj5","generateName":"daemon-set-","namespace":"daemonsets-9308","uid":"bf89bd62-faec-4485-8d5b-7e1238119f94","resourceVersion":"19778","creationTimestamp":"2023-11-11T12:33:51Z","deletionTimestamp":"2023-11-11T12:34:23Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4bc856da-2de7-4002-b120-6a25cfcc6ca4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-11-11T12:33:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4bc856da-2de7-4002-b120-6a25cfcc6ca4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-11-11T12:33:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.144.252\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-97xj4","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-97xj4","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-8-111","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-8-111"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-11T12:33:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-11T12:33:53Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-11T12:33:53Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-11T12:33:51Z"}],"hostIP":"172.31.8.111","podIP":"192.168.144.252","podIPs":[{"ip":"192.168.144.252"}],"startTime":"2023-11-11T12:33:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-11-11T12:33:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://ad0b9687c6127463282e18927ca043d0e5ee53acc3d41708804e5166d3d110bd","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-9sn7r","generateName":"daemon-set-","namespace":"daemonsets-9308","uid":"efba0512-3fd2-4329-817f-7b67858f05ec","resourceVersion":"19776","creationTimestamp":"2023-11-11T12:33:51Z","deletionTimestamp":"2023-11-11T12:34:23Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4bc856da-2de7-4002-b120-6a25cfcc6ca4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-11-11T12:33:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4bc856da-2de7-4002-b120-6a25cfcc6ca4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-11-11T12:33:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.250.107\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-z9kc7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-z9kc7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-26-213","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-26-213"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-11T12:33:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-11T12:33:53Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-11T12:33:53Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-11T12:33:51Z"}],"hostIP":"172.31.26.213","podIP":"192.168.250.107","podIPs":[{"ip":"192.168.250.107"}],"startTime":"2023-11-11T12:33:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-11-11T12:33:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://73ebb6d3e7c3dfc3aa56442ea17228685ca0928bc7c9ab5de55090a7a1929436","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-gbrrj","generateName":"daemon-set-","namespace":"daemonsets-9308","uid":"c8cd04a3-fd43-418c-b681-36f8e0ef7d4e","resourceVersion":"19777","creationTimestamp":"2023-11-11T12:33:51Z","deletionTimestamp":"2023-11-11T12:34:23Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4bc856da-2de7-4002-b120-6a25cfcc6ca4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-11-11T12:33:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4bc856da-2de7-4002-b120-6a25cfcc6ca4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-11-11T12:33:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.216.236\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-ccrxw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-ccrxw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-79-254","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-79-254"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-11T12:33:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-11T12:33:53Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-11T12:33:53Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-11T12:33:51Z"}],"hostIP":"172.31.79.254","podIP":"192.168.216.236","podIPs":[{"ip":"192.168.216.236"}],"startTime":"2023-11-11T12:33:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-11-11T12:33:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://997cebb5d745bc6be85590c38997e09f82403384366b3b1544606462d00d7830","started":true}],"qosClass":"BestEffort"}}]}

  Nov 11 12:33:53.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9308" for this suite. @ 11/11/23 12:33:53.655
• [2.109 seconds]
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 11/11/23 12:33:53.66
  Nov 11 12:33:53.660: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename taint-single-pod @ 11/11/23 12:33:53.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:33:53.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:33:53.674
  Nov 11 12:33:53.677: INFO: Waiting up to 1m0s for all nodes to be ready
  Nov 11 12:34:53.701: INFO: Waiting for terminating namespaces to be deleted...
  Nov 11 12:34:53.704: INFO: Starting informer...
  STEP: Starting pod... @ 11/11/23 12:34:53.704
  Nov 11 12:34:53.917: INFO: Pod is running on ip-172-31-79-254. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/11/23 12:34:53.917
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/11/23 12:34:53.926
  STEP: Waiting short time to make sure Pod is queued for deletion @ 11/11/23 12:34:53.93
  Nov 11 12:34:53.930: INFO: Pod wasn't evicted. Proceeding
  Nov 11 12:34:53.930: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/11/23 12:34:53.942
  STEP: Waiting some time to make sure that toleration time passed. @ 11/11/23 12:34:53.958
  Nov 11 12:36:08.958: INFO: Pod wasn't evicted. Test successful
  Nov 11 12:36:08.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-9108" for this suite. @ 11/11/23 12:36:08.962
• [135.309 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 11/11/23 12:36:08.971
  Nov 11 12:36:08.971: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename daemonsets @ 11/11/23 12:36:08.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:36:08.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:36:08.988
  Nov 11 12:36:09.006: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 11/11/23 12:36:09.011
  Nov 11 12:36:09.015: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:36:09.015: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 11/11/23 12:36:09.015
  Nov 11 12:36:09.031: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:36:09.031: INFO: Node ip-172-31-79-254 is running 0 daemon pod, expected 1
  Nov 11 12:36:10.035: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:36:10.035: INFO: Node ip-172-31-79-254 is running 0 daemon pod, expected 1
  Nov 11 12:36:11.033: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 11 12:36:11.033: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 11/11/23 12:36:11.036
  Nov 11 12:36:11.049: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 11 12:36:11.049: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Nov 11 12:36:12.052: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:36:12.052: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 11/11/23 12:36:12.052
  Nov 11 12:36:12.061: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:36:12.061: INFO: Node ip-172-31-79-254 is running 0 daemon pod, expected 1
  Nov 11 12:36:13.065: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:36:13.065: INFO: Node ip-172-31-79-254 is running 0 daemon pod, expected 1
  Nov 11 12:36:14.064: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 11 12:36:14.064: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/11/23 12:36:14.069
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4311, will wait for the garbage collector to delete the pods @ 11/11/23 12:36:14.069
  Nov 11 12:36:14.129: INFO: Deleting DaemonSet.extensions daemon-set took: 5.740014ms
  Nov 11 12:36:14.229: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.814926ms
  Nov 11 12:36:15.633: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:36:15.633: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 11 12:36:15.636: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20256"},"items":null}

  Nov 11 12:36:15.639: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20256"},"items":null}

  Nov 11 12:36:15.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4311" for this suite. @ 11/11/23 12:36:15.661
• [6.697 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 11/11/23 12:36:15.668
  Nov 11 12:36:15.668: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename sched-pred @ 11/11/23 12:36:15.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:36:15.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:36:15.704
  Nov 11 12:36:15.706: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov 11 12:36:15.712: INFO: Waiting for terminating namespaces to be deleted...
  Nov 11 12:36:15.715: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-26-213 before test
  Nov 11 12:36:15.720: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-kbzzn from ingress-nginx-kubernetes-worker started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 12:36:15.720: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov 11 12:36:15.720: INFO: nginx-ingress-controller-kubernetes-worker-mhlhs from ingress-nginx-kubernetes-worker started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 12:36:15.720: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 11 12:36:15.720: INFO: calico-node-4wwdr from kube-system started at 2023-11-11 11:56:55 +0000 UTC (1 container statuses recorded)
  Nov 11 12:36:15.720: INFO: 	Container calico-node ready: true, restart count 0
  Nov 11 12:36:15.720: INFO: coredns-59cfb5bf46-r5pf5 from kube-system started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 12:36:15.720: INFO: 	Container coredns ready: true, restart count 0
  Nov 11 12:36:15.720: INFO: kube-state-metrics-78c475f58b-zzxqs from kube-system started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 12:36:15.720: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov 11 12:36:15.720: INFO: metrics-server-v0.6.3-69d7fbfdf8-rptqk from kube-system started at 2023-11-11 11:57:09 +0000 UTC (2 container statuses recorded)
  Nov 11 12:36:15.720: INFO: 	Container metrics-server ready: true, restart count 0
  Nov 11 12:36:15.720: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov 11 12:36:15.720: INFO: dashboard-metrics-scraper-5dd7cb5fc-5tw2q from kubernetes-dashboard started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 12:36:15.720: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov 11 12:36:15.720: INFO: kubernetes-dashboard-7b899cb9d9-jpjst from kubernetes-dashboard started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 12:36:15.720: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov 11 12:36:15.720: INFO: sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-sqgqx from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 12:36:15.720: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 12:36:15.720: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 11 12:36:15.720: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-79-254 before test
  Nov 11 12:36:15.724: INFO: nginx-ingress-controller-kubernetes-worker-zczgn from ingress-nginx-kubernetes-worker started at 2023-11-11 12:35:05 +0000 UTC (1 container statuses recorded)
  Nov 11 12:36:15.724: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 11 12:36:15.724: INFO: calico-node-pm2sm from kube-system started at 2023-11-11 12:02:39 +0000 UTC (1 container statuses recorded)
  Nov 11 12:36:15.724: INFO: 	Container calico-node ready: true, restart count 0
  Nov 11 12:36:15.724: INFO: sonobuoy from sonobuoy started at 2023-11-11 12:08:18 +0000 UTC (1 container statuses recorded)
  Nov 11 12:36:15.724: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov 11 12:36:15.724: INFO: sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-868rn from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 12:36:15.724: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 12:36:15.724: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 11 12:36:15.724: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-8-111 before test
  Nov 11 12:36:15.728: INFO: nginx-ingress-controller-kubernetes-worker-bmzsg from ingress-nginx-kubernetes-worker started at 2023-11-11 12:00:58 +0000 UTC (1 container statuses recorded)
  Nov 11 12:36:15.728: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 11 12:36:15.728: INFO: calico-node-pvf6s from kube-system started at 2023-11-11 12:00:29 +0000 UTC (1 container statuses recorded)
  Nov 11 12:36:15.728: INFO: 	Container calico-node ready: true, restart count 0
  Nov 11 12:36:15.728: INFO: sonobuoy-e2e-job-88b8298f84e34478 from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 12:36:15.728: INFO: 	Container e2e ready: true, restart count 0
  Nov 11 12:36:15.728: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 12:36:15.728: INFO: sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-cst9b from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 12:36:15.728: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 12:36:15.728: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/11/23 12:36:15.729
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/11/23 12:36:17.743
  STEP: Trying to apply a random label on the found node. @ 11/11/23 12:36:17.753
  STEP: verifying the node has the label kubernetes.io/e2e-265c1ecb-32aa-4527-bcf6-9bdcf5ba76c9 42 @ 11/11/23 12:36:17.762
  STEP: Trying to relaunch the pod, now with labels. @ 11/11/23 12:36:17.765
  STEP: removing the label kubernetes.io/e2e-265c1ecb-32aa-4527-bcf6-9bdcf5ba76c9 off the node ip-172-31-79-254 @ 11/11/23 12:36:19.781
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-265c1ecb-32aa-4527-bcf6-9bdcf5ba76c9 @ 11/11/23 12:36:19.792
  Nov 11 12:36:19.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-383" for this suite. @ 11/11/23 12:36:19.799
• [4.138 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 11/11/23 12:36:19.807
  Nov 11 12:36:19.807: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-probe @ 11/11/23 12:36:19.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:36:19.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:36:19.823
  STEP: Creating pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298 @ 11/11/23 12:36:19.825
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/11/23 12:36:21.838
  Nov 11 12:36:21.841: INFO: Initial restart count of pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 is 0
  Nov 11 12:36:21.844: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:23.848: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:25.851: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:27.855: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:29.859: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:31.862: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:33.867: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:35.871: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:37.875: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:39.880: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:41.883: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:43.887: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:45.891: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:47.896: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:49.900: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:51.903: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:53.907: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:55.911: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:57.915: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:36:59.919: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:01.924: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:03.928: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:05.933: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:07.937: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:09.940: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:11.944: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:13.948: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:15.952: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:17.957: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:19.961: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:21.965: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:23.969: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:25.973: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:27.977: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:29.982: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:31.987: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:33.990: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:35.995: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:37.998: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:40.003: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:42.006: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:44.010: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:46.014: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:48.017: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:50.021: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:52.025: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:54.030: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:56.033: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:37:58.036: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:00.040: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:02.044: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:04.048: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:06.052: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:08.056: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:10.062: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:12.065: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:14.068: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:16.072: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:18.077: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:20.081: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:22.086: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:24.090: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:26.093: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:28.097: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:30.102: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:32.106: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:34.109: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:36.113: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:38.118: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:40.122: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:42.125: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:44.129: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:46.133: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:48.137: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:50.142: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:52.146: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:54.149: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:56.153: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:38:58.157: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:00.161: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:02.164: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:04.169: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:06.172: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:08.175: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:10.179: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:12.182: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:14.187: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:16.191: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:18.196: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:20.201: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:22.205: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:24.209: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:26.212: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:28.216: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:30.221: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:32.224: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:34.229: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:36.234: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:38.237: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:40.242: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:42.247: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:44.251: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:46.254: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:48.258: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:50.262: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:52.267: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:54.270: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:56.275: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:39:58.280: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:40:00.283: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:40:02.288: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:40:04.291: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:40:06.295: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:40:08.299: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:40:10.304: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:40:12.308: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:40:14.311: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:40:16.315: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:40:18.319: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:40:20.324: INFO: Get pod test-webserver-ca713c0e-e261-45c2-a74f-eaeb6f2e8413 in namespace container-probe-3298
  Nov 11 12:40:22.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/11/23 12:40:22.329
  STEP: Destroying namespace "container-probe-3298" for this suite. @ 11/11/23 12:40:22.343
• [242.543 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 11/11/23 12:40:22.35
  Nov 11 12:40:22.350: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename replication-controller @ 11/11/23 12:40:22.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:40:22.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:40:22.368
  STEP: creating a ReplicationController @ 11/11/23 12:40:22.373
  STEP: waiting for RC to be added @ 11/11/23 12:40:22.379
  STEP: waiting for available Replicas @ 11/11/23 12:40:22.38
  STEP: patching ReplicationController @ 11/11/23 12:40:23.946
  STEP: waiting for RC to be modified @ 11/11/23 12:40:23.955
  STEP: patching ReplicationController status @ 11/11/23 12:40:23.955
  STEP: waiting for RC to be modified @ 11/11/23 12:40:23.959
  STEP: waiting for available Replicas @ 11/11/23 12:40:23.96
  STEP: fetching ReplicationController status @ 11/11/23 12:40:23.965
  STEP: patching ReplicationController scale @ 11/11/23 12:40:23.968
  STEP: waiting for RC to be modified @ 11/11/23 12:40:23.973
  STEP: waiting for ReplicationController's scale to be the max amount @ 11/11/23 12:40:23.973
  STEP: fetching ReplicationController; ensuring that it's patched @ 11/11/23 12:40:25.624
  STEP: updating ReplicationController status @ 11/11/23 12:40:25.628
  STEP: waiting for RC to be modified @ 11/11/23 12:40:25.634
  STEP: listing all ReplicationControllers @ 11/11/23 12:40:25.634
  STEP: checking that ReplicationController has expected values @ 11/11/23 12:40:25.637
  STEP: deleting ReplicationControllers by collection @ 11/11/23 12:40:25.637
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 11/11/23 12:40:25.645
  Nov 11 12:40:25.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1111 12:40:25.688359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7438" for this suite. @ 11/11/23 12:40:25.691
• [3.347 seconds]
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 11/11/23 12:40:25.697
  Nov 11 12:40:25.697: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename security-context @ 11/11/23 12:40:25.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:40:25.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:40:25.714
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/11/23 12:40:25.717
  E1111 12:40:26.689210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:27.689433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:28.689746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:29.689894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 12:40:29.737
  Nov 11 12:40:29.740: INFO: Trying to get logs from node ip-172-31-79-254 pod security-context-e0a4edef-9b15-4f1d-8588-783d8120b09b container test-container: <nil>
  STEP: delete the pod @ 11/11/23 12:40:29.757
  Nov 11 12:40:29.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6447" for this suite. @ 11/11/23 12:40:29.78
• [4.104 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 11/11/23 12:40:29.801
  Nov 11 12:40:29.801: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename job @ 11/11/23 12:40:29.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:40:29.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:40:29.833
  STEP: Creating a job @ 11/11/23 12:40:29.835
  STEP: Ensuring active pods == parallelism @ 11/11/23 12:40:29.84
  E1111 12:40:30.690912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:31.691736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 11/11/23 12:40:31.846
  Nov 11 12:40:32.361: INFO: Successfully updated pod "adopt-release-rcn8h"
  STEP: Checking that the Job readopts the Pod @ 11/11/23 12:40:32.361
  E1111 12:40:32.692369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:33.692589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 11/11/23 12:40:34.369
  E1111 12:40:34.693485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:40:34.878: INFO: Successfully updated pod "adopt-release-rcn8h"
  STEP: Checking that the Job releases the Pod @ 11/11/23 12:40:34.878
  E1111 12:40:35.693632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:36.693832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:40:36.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7644" for this suite. @ 11/11/23 12:40:36.89
• [7.096 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 11/11/23 12:40:36.898
  Nov 11 12:40:36.898: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 12:40:36.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:40:36.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:40:36.917
  STEP: Creating the pod @ 11/11/23 12:40:36.919
  E1111 12:40:37.694094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:38.694241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:40:39.460: INFO: Successfully updated pod "annotationupdate01d8bab3-3d50-46d0-a094-c2fda596ced6"
  E1111 12:40:39.695117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:40.695747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:40:41.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1858" for this suite. @ 11/11/23 12:40:41.477
• [4.586 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 11/11/23 12:40:41.484
  Nov 11 12:40:41.484: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 12:40:41.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:40:41.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:40:41.499
  STEP: Setting up server cert @ 11/11/23 12:40:41.519
  E1111 12:40:41.696771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 12:40:41.732
  STEP: Deploying the webhook pod @ 11/11/23 12:40:41.741
  STEP: Wait for the deployment to be ready @ 11/11/23 12:40:41.754
  Nov 11 12:40:41.760: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1111 12:40:42.697010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:43.697186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 12:40:43.77
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 12:40:43.779
  E1111 12:40:44.697265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:40:44.780: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 11/11/23 12:40:44.786
  STEP: create a pod that should be updated by the webhook @ 11/11/23 12:40:44.799
  Nov 11 12:40:44.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2523" for this suite. @ 11/11/23 12:40:44.857
  STEP: Destroying namespace "webhook-markers-9365" for this suite. @ 11/11/23 12:40:44.863
• [3.389 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 11/11/23 12:40:44.874
  Nov 11 12:40:44.874: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename ingress @ 11/11/23 12:40:44.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:40:44.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:40:44.888
  STEP: getting /apis @ 11/11/23 12:40:44.891
  STEP: getting /apis/networking.k8s.io @ 11/11/23 12:40:44.894
  STEP: getting /apis/networking.k8s.iov1 @ 11/11/23 12:40:44.895
  STEP: creating @ 11/11/23 12:40:44.896
  STEP: getting @ 11/11/23 12:40:44.912
  STEP: listing @ 11/11/23 12:40:44.919
  STEP: watching @ 11/11/23 12:40:44.922
  Nov 11 12:40:44.922: INFO: starting watch
  STEP: cluster-wide listing @ 11/11/23 12:40:44.923
  STEP: cluster-wide watching @ 11/11/23 12:40:44.927
  Nov 11 12:40:44.927: INFO: starting watch
  STEP: patching @ 11/11/23 12:40:44.928
  STEP: updating @ 11/11/23 12:40:44.932
  Nov 11 12:40:44.942: INFO: waiting for watch events with expected annotations
  Nov 11 12:40:44.942: INFO: saw patched and updated annotations
  STEP: patching /status @ 11/11/23 12:40:44.942
  STEP: updating /status @ 11/11/23 12:40:44.95
  STEP: get /status @ 11/11/23 12:40:44.96
  STEP: deleting @ 11/11/23 12:40:44.963
  STEP: deleting a collection @ 11/11/23 12:40:44.975
  Nov 11 12:40:44.989: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4857" for this suite. @ 11/11/23 12:40:44.992
• [0.124 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 11/11/23 12:40:44.998
  Nov 11 12:40:44.998: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pods @ 11/11/23 12:40:44.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:40:45.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:40:45.014
  STEP: creating the pod @ 11/11/23 12:40:45.016
  STEP: submitting the pod to kubernetes @ 11/11/23 12:40:45.016
  E1111 12:40:45.698108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:46.698524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 11/11/23 12:40:47.034
  STEP: updating the pod @ 11/11/23 12:40:47.037
  Nov 11 12:40:47.548: INFO: Successfully updated pod "pod-update-f6302e84-8ee7-4324-856d-32c0a107c577"
  STEP: verifying the updated pod is in kubernetes @ 11/11/23 12:40:47.551
  Nov 11 12:40:47.556: INFO: Pod update OK
  Nov 11 12:40:47.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8075" for this suite. @ 11/11/23 12:40:47.56
• [2.568 seconds]
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 11/11/23 12:40:47.566
  Nov 11 12:40:47.566: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 12:40:47.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:40:47.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:40:47.579
  STEP: creating a ConfigMap @ 11/11/23 12:40:47.581
  STEP: fetching the ConfigMap @ 11/11/23 12:40:47.585
  STEP: patching the ConfigMap @ 11/11/23 12:40:47.588
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 11/11/23 12:40:47.597
  STEP: deleting the ConfigMap by collection with a label selector @ 11/11/23 12:40:47.6
  STEP: listing all ConfigMaps in test namespace @ 11/11/23 12:40:47.606
  Nov 11 12:40:47.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-291" for this suite. @ 11/11/23 12:40:47.612
• [0.051 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 11/11/23 12:40:47.617
  Nov 11 12:40:47.617: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/11/23 12:40:47.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:40:47.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:40:47.631
  Nov 11 12:40:47.633: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  E1111 12:40:47.699212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:48.700158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:49.700325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:50.700875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:51.701561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:52.702516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:53.702637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:40:53.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-431" for this suite. @ 11/11/23 12:40:53.816
• [6.206 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 11/11/23 12:40:53.824
  Nov 11 12:40:53.824: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename statefulset @ 11/11/23 12:40:53.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:40:53.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:40:53.845
  STEP: Creating service test in namespace statefulset-5898 @ 11/11/23 12:40:53.847
  STEP: Creating a new StatefulSet @ 11/11/23 12:40:53.852
  Nov 11 12:40:53.863: INFO: Found 0 stateful pods, waiting for 3
  E1111 12:40:54.702721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:55.703776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:56.704612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:57.704724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:58.704857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:40:59.704989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:00.705124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:01.705486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:02.705574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:03.705708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:41:03.867: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 11 12:41:03.867: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 11 12:41:03.867: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/11/23 12:41:03.876
  Nov 11 12:41:03.895: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 11/11/23 12:41:03.895
  E1111 12:41:04.706034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:05.706118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:06.706625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:07.706684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:08.706780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:09.707758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:10.707895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:11.708360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:12.708503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:13.708640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 11/11/23 12:41:13.908
  STEP: Performing a canary update @ 11/11/23 12:41:13.908
  Nov 11 12:41:13.927: INFO: Updating stateful set ss2
  Nov 11 12:41:13.932: INFO: Waiting for Pod statefulset-5898/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1111 12:41:14.709689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:15.709852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:16.710093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:17.710231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:18.710766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:19.711746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:20.712539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:21.712878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:22.713022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:23.713159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 11/11/23 12:41:23.94
  Nov 11 12:41:23.979: INFO: Found 1 stateful pods, waiting for 3
  E1111 12:41:24.713674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:25.713835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:26.714147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:27.714297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:28.714322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:29.714492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:30.714706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:31.715589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:32.715733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:33.715878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:41:33.984: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 11 12:41:33.984: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 11 12:41:33.984: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 11/11/23 12:41:33.99
  Nov 11 12:41:34.009: INFO: Updating stateful set ss2
  Nov 11 12:41:34.017: INFO: Waiting for Pod statefulset-5898/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1111 12:41:34.716935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:35.717070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:36.717627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:37.717735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:38.717883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:39.718040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:40.718208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:41.718926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:42.719741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:43.719887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:41:44.043: INFO: Updating stateful set ss2
  Nov 11 12:41:44.051: INFO: Waiting for StatefulSet statefulset-5898/ss2 to complete update
  Nov 11 12:41:44.051: INFO: Waiting for Pod statefulset-5898/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1111 12:41:44.720243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:45.720404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:46.720666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:47.720811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:48.720870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:49.721032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:50.721194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:51.722077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:52.722222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:53.722383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:41:54.058: INFO: Deleting all statefulset in ns statefulset-5898
  Nov 11 12:41:54.061: INFO: Scaling statefulset ss2 to 0
  E1111 12:41:54.722704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:55.722780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:56.723056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:57.723748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:58.723854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:41:59.724009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:00.724160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:01.724825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:02.724976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:03.725262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:42:04.078: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 11 12:42:04.081: INFO: Deleting statefulset ss2
  Nov 11 12:42:04.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5898" for this suite. @ 11/11/23 12:42:04.095
• [70.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 11/11/23 12:42:04.105
  Nov 11 12:42:04.105: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename gc @ 11/11/23 12:42:04.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:42:04.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:42:04.125
  STEP: create the rc @ 11/11/23 12:42:04.13
  W1111 12:42:04.135219      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1111 12:42:04.725989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:05.726120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:06.728771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:07.732767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:08.733361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:09.733847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 11/11/23 12:42:10.138
  STEP: wait for the rc to be deleted @ 11/11/23 12:42:10.146
  E1111 12:42:10.734899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:11.734971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:12.735730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:13.735828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:14.735970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 11/11/23 12:42:15.149
  E1111 12:42:15.736052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:16.736308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:17.737135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:18.737751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:19.737851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:20.738038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:21.738491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:22.738648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:23.738704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:24.739755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:25.740664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:26.741662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:27.742552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:28.742697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:29.743751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:30.743850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:31.744232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:32.744371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:33.744466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:34.744608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:35.744760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:36.745090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:37.745559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:38.745698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:39.745844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:40.745932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:41.746293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:42.746427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:43.746572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:44.746685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/11/23 12:42:45.158
  W1111 12:42:45.163715      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 11 12:42:45.163: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 11 12:42:45.163: INFO: Deleting pod "simpletest.rc-2b762" in namespace "gc-3773"
  Nov 11 12:42:45.175: INFO: Deleting pod "simpletest.rc-2dzwb" in namespace "gc-3773"
  Nov 11 12:42:45.187: INFO: Deleting pod "simpletest.rc-2hjrh" in namespace "gc-3773"
  Nov 11 12:42:45.203: INFO: Deleting pod "simpletest.rc-2kdwc" in namespace "gc-3773"
  Nov 11 12:42:45.216: INFO: Deleting pod "simpletest.rc-2pmc7" in namespace "gc-3773"
  Nov 11 12:42:45.229: INFO: Deleting pod "simpletest.rc-2qvcj" in namespace "gc-3773"
  Nov 11 12:42:45.240: INFO: Deleting pod "simpletest.rc-2thwd" in namespace "gc-3773"
  Nov 11 12:42:45.254: INFO: Deleting pod "simpletest.rc-42c8j" in namespace "gc-3773"
  Nov 11 12:42:45.269: INFO: Deleting pod "simpletest.rc-458d8" in namespace "gc-3773"
  Nov 11 12:42:45.280: INFO: Deleting pod "simpletest.rc-4xpwj" in namespace "gc-3773"
  Nov 11 12:42:45.295: INFO: Deleting pod "simpletest.rc-562wb" in namespace "gc-3773"
  Nov 11 12:42:45.307: INFO: Deleting pod "simpletest.rc-5grfm" in namespace "gc-3773"
  Nov 11 12:42:45.320: INFO: Deleting pod "simpletest.rc-5mw7l" in namespace "gc-3773"
  Nov 11 12:42:45.332: INFO: Deleting pod "simpletest.rc-5wqvw" in namespace "gc-3773"
  Nov 11 12:42:45.342: INFO: Deleting pod "simpletest.rc-5xhrz" in namespace "gc-3773"
  Nov 11 12:42:45.355: INFO: Deleting pod "simpletest.rc-62psr" in namespace "gc-3773"
  Nov 11 12:42:45.369: INFO: Deleting pod "simpletest.rc-6b524" in namespace "gc-3773"
  Nov 11 12:42:45.380: INFO: Deleting pod "simpletest.rc-6bvvb" in namespace "gc-3773"
  Nov 11 12:42:45.393: INFO: Deleting pod "simpletest.rc-6jctk" in namespace "gc-3773"
  Nov 11 12:42:45.401: INFO: Deleting pod "simpletest.rc-6thzj" in namespace "gc-3773"
  Nov 11 12:42:45.527: INFO: Deleting pod "simpletest.rc-6z9p6" in namespace "gc-3773"
  Nov 11 12:42:45.546: INFO: Deleting pod "simpletest.rc-78wpr" in namespace "gc-3773"
  Nov 11 12:42:45.561: INFO: Deleting pod "simpletest.rc-79vxk" in namespace "gc-3773"
  Nov 11 12:42:45.570: INFO: Deleting pod "simpletest.rc-7dpb6" in namespace "gc-3773"
  Nov 11 12:42:45.583: INFO: Deleting pod "simpletest.rc-7fzdn" in namespace "gc-3773"
  Nov 11 12:42:45.594: INFO: Deleting pod "simpletest.rc-7spdt" in namespace "gc-3773"
  Nov 11 12:42:45.608: INFO: Deleting pod "simpletest.rc-8w47m" in namespace "gc-3773"
  Nov 11 12:42:45.619: INFO: Deleting pod "simpletest.rc-9q7dl" in namespace "gc-3773"
  Nov 11 12:42:45.633: INFO: Deleting pod "simpletest.rc-9tvwb" in namespace "gc-3773"
  Nov 11 12:42:45.647: INFO: Deleting pod "simpletest.rc-9znrf" in namespace "gc-3773"
  Nov 11 12:42:45.664: INFO: Deleting pod "simpletest.rc-bc2gg" in namespace "gc-3773"
  Nov 11 12:42:45.679: INFO: Deleting pod "simpletest.rc-bcz9w" in namespace "gc-3773"
  Nov 11 12:42:45.698: INFO: Deleting pod "simpletest.rc-bnpnk" in namespace "gc-3773"
  Nov 11 12:42:45.718: INFO: Deleting pod "simpletest.rc-bx6hz" in namespace "gc-3773"
  Nov 11 12:42:45.732: INFO: Deleting pod "simpletest.rc-bxr9n" in namespace "gc-3773"
  E1111 12:42:45.746864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:42:45.750: INFO: Deleting pod "simpletest.rc-c5n5s" in namespace "gc-3773"
  Nov 11 12:42:45.770: INFO: Deleting pod "simpletest.rc-cs8gn" in namespace "gc-3773"
  Nov 11 12:42:45.779: INFO: Deleting pod "simpletest.rc-ffrht" in namespace "gc-3773"
  Nov 11 12:42:45.802: INFO: Deleting pod "simpletest.rc-fmgz4" in namespace "gc-3773"
  Nov 11 12:42:45.816: INFO: Deleting pod "simpletest.rc-fwqbf" in namespace "gc-3773"
  Nov 11 12:42:45.830: INFO: Deleting pod "simpletest.rc-g8jfc" in namespace "gc-3773"
  Nov 11 12:42:45.841: INFO: Deleting pod "simpletest.rc-gpqzb" in namespace "gc-3773"
  Nov 11 12:42:45.857: INFO: Deleting pod "simpletest.rc-gtxq8" in namespace "gc-3773"
  Nov 11 12:42:45.871: INFO: Deleting pod "simpletest.rc-gv4zq" in namespace "gc-3773"
  Nov 11 12:42:45.891: INFO: Deleting pod "simpletest.rc-gv787" in namespace "gc-3773"
  Nov 11 12:42:45.906: INFO: Deleting pod "simpletest.rc-gvnw5" in namespace "gc-3773"
  Nov 11 12:42:45.915: INFO: Deleting pod "simpletest.rc-h5kml" in namespace "gc-3773"
  Nov 11 12:42:45.932: INFO: Deleting pod "simpletest.rc-h5wgl" in namespace "gc-3773"
  Nov 11 12:42:45.955: INFO: Deleting pod "simpletest.rc-hblvz" in namespace "gc-3773"
  Nov 11 12:42:45.970: INFO: Deleting pod "simpletest.rc-hdjgb" in namespace "gc-3773"
  Nov 11 12:42:45.991: INFO: Deleting pod "simpletest.rc-hnxzq" in namespace "gc-3773"
  Nov 11 12:42:46.006: INFO: Deleting pod "simpletest.rc-hp7fx" in namespace "gc-3773"
  Nov 11 12:42:46.018: INFO: Deleting pod "simpletest.rc-jnh6b" in namespace "gc-3773"
  Nov 11 12:42:46.039: INFO: Deleting pod "simpletest.rc-jtk2l" in namespace "gc-3773"
  Nov 11 12:42:46.062: INFO: Deleting pod "simpletest.rc-jwnc9" in namespace "gc-3773"
  Nov 11 12:42:46.080: INFO: Deleting pod "simpletest.rc-k9mwf" in namespace "gc-3773"
  Nov 11 12:42:46.092: INFO: Deleting pod "simpletest.rc-kkt9c" in namespace "gc-3773"
  Nov 11 12:42:46.108: INFO: Deleting pod "simpletest.rc-kplt7" in namespace "gc-3773"
  Nov 11 12:42:46.124: INFO: Deleting pod "simpletest.rc-kspr2" in namespace "gc-3773"
  Nov 11 12:42:46.140: INFO: Deleting pod "simpletest.rc-lcwsv" in namespace "gc-3773"
  Nov 11 12:42:46.155: INFO: Deleting pod "simpletest.rc-lnw6z" in namespace "gc-3773"
  Nov 11 12:42:46.172: INFO: Deleting pod "simpletest.rc-lrcrb" in namespace "gc-3773"
  Nov 11 12:42:46.188: INFO: Deleting pod "simpletest.rc-lz5f7" in namespace "gc-3773"
  Nov 11 12:42:46.219: INFO: Deleting pod "simpletest.rc-m6chw" in namespace "gc-3773"
  Nov 11 12:42:46.234: INFO: Deleting pod "simpletest.rc-mcr6p" in namespace "gc-3773"
  Nov 11 12:42:46.250: INFO: Deleting pod "simpletest.rc-mm4lt" in namespace "gc-3773"
  Nov 11 12:42:46.261: INFO: Deleting pod "simpletest.rc-mtpv4" in namespace "gc-3773"
  Nov 11 12:42:46.275: INFO: Deleting pod "simpletest.rc-mv6lv" in namespace "gc-3773"
  Nov 11 12:42:46.290: INFO: Deleting pod "simpletest.rc-mx2cv" in namespace "gc-3773"
  Nov 11 12:42:46.303: INFO: Deleting pod "simpletest.rc-n2wvn" in namespace "gc-3773"
  Nov 11 12:42:46.318: INFO: Deleting pod "simpletest.rc-nlwqz" in namespace "gc-3773"
  Nov 11 12:42:46.331: INFO: Deleting pod "simpletest.rc-p2qlr" in namespace "gc-3773"
  Nov 11 12:42:46.361: INFO: Deleting pod "simpletest.rc-p4dhs" in namespace "gc-3773"
  Nov 11 12:42:46.411: INFO: Deleting pod "simpletest.rc-p6558" in namespace "gc-3773"
  Nov 11 12:42:46.462: INFO: Deleting pod "simpletest.rc-pbz5z" in namespace "gc-3773"
  Nov 11 12:42:46.518: INFO: Deleting pod "simpletest.rc-phfhx" in namespace "gc-3773"
  Nov 11 12:42:46.563: INFO: Deleting pod "simpletest.rc-pt6wl" in namespace "gc-3773"
  Nov 11 12:42:46.614: INFO: Deleting pod "simpletest.rc-q2cwd" in namespace "gc-3773"
  Nov 11 12:42:46.664: INFO: Deleting pod "simpletest.rc-qqwbb" in namespace "gc-3773"
  Nov 11 12:42:46.718: INFO: Deleting pod "simpletest.rc-qrp64" in namespace "gc-3773"
  E1111 12:42:46.755040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:42:46.766: INFO: Deleting pod "simpletest.rc-sfc5w" in namespace "gc-3773"
  Nov 11 12:42:46.817: INFO: Deleting pod "simpletest.rc-svknl" in namespace "gc-3773"
  Nov 11 12:42:46.869: INFO: Deleting pod "simpletest.rc-t29mx" in namespace "gc-3773"
  Nov 11 12:42:46.912: INFO: Deleting pod "simpletest.rc-tbxjz" in namespace "gc-3773"
  Nov 11 12:42:46.966: INFO: Deleting pod "simpletest.rc-v25j2" in namespace "gc-3773"
  Nov 11 12:42:47.019: INFO: Deleting pod "simpletest.rc-v6s6z" in namespace "gc-3773"
  Nov 11 12:42:47.062: INFO: Deleting pod "simpletest.rc-wc8fl" in namespace "gc-3773"
  Nov 11 12:42:47.118: INFO: Deleting pod "simpletest.rc-wk9qq" in namespace "gc-3773"
  Nov 11 12:42:47.200: INFO: Deleting pod "simpletest.rc-wlghn" in namespace "gc-3773"
  Nov 11 12:42:47.214: INFO: Deleting pod "simpletest.rc-wqmrj" in namespace "gc-3773"
  Nov 11 12:42:47.261: INFO: Deleting pod "simpletest.rc-wwgrx" in namespace "gc-3773"
  Nov 11 12:42:47.322: INFO: Deleting pod "simpletest.rc-x5qbp" in namespace "gc-3773"
  Nov 11 12:42:47.363: INFO: Deleting pod "simpletest.rc-xhrv7" in namespace "gc-3773"
  Nov 11 12:42:47.411: INFO: Deleting pod "simpletest.rc-xk5wl" in namespace "gc-3773"
  Nov 11 12:42:47.460: INFO: Deleting pod "simpletest.rc-xkz76" in namespace "gc-3773"
  Nov 11 12:42:47.521: INFO: Deleting pod "simpletest.rc-xmfx9" in namespace "gc-3773"
  Nov 11 12:42:47.563: INFO: Deleting pod "simpletest.rc-xtdbn" in namespace "gc-3773"
  Nov 11 12:42:47.624: INFO: Deleting pod "simpletest.rc-zgz68" in namespace "gc-3773"
  Nov 11 12:42:47.660: INFO: Deleting pod "simpletest.rc-zmr2z" in namespace "gc-3773"
  Nov 11 12:42:47.713: INFO: Deleting pod "simpletest.rc-zp5ff" in namespace "gc-3773"
  E1111 12:42:47.755677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:42:47.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3773" for this suite. @ 11/11/23 12:42:47.804
• [43.753 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 11/11/23 12:42:47.858
  Nov 11 12:42:47.858: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename daemonsets @ 11/11/23 12:42:47.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:42:47.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:42:47.887
  STEP: Creating simple DaemonSet "daemon-set" @ 11/11/23 12:42:47.918
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/11/23 12:42:47.924
  Nov 11 12:42:47.927: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:42:47.927: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:42:47.930: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:42:47.931: INFO: Node ip-172-31-26-213 is running 0 daemon pod, expected 1
  E1111 12:42:48.756121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:42:48.935: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:42:48.935: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:42:48.937: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:42:48.937: INFO: Node ip-172-31-26-213 is running 0 daemon pod, expected 1
  E1111 12:42:49.756606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:42:49.935: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:42:49.935: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:42:49.938: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 11 12:42:49.938: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 11/11/23 12:42:49.941
  Nov 11 12:42:49.944: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 11/11/23 12:42:49.944
  Nov 11 12:42:49.953: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 11/11/23 12:42:49.953
  Nov 11 12:42:49.954: INFO: Observed &DaemonSet event: ADDED
  Nov 11 12:42:49.955: INFO: Observed &DaemonSet event: MODIFIED
  Nov 11 12:42:49.955: INFO: Observed &DaemonSet event: MODIFIED
  Nov 11 12:42:49.955: INFO: Observed &DaemonSet event: MODIFIED
  Nov 11 12:42:49.955: INFO: Observed &DaemonSet event: MODIFIED
  Nov 11 12:42:49.955: INFO: Found daemon set daemon-set in namespace daemonsets-7925 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov 11 12:42:49.955: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 11/11/23 12:42:49.955
  STEP: watching for the daemon set status to be patched @ 11/11/23 12:42:49.961
  Nov 11 12:42:49.962: INFO: Observed &DaemonSet event: ADDED
  Nov 11 12:42:49.962: INFO: Observed &DaemonSet event: MODIFIED
  Nov 11 12:42:49.963: INFO: Observed &DaemonSet event: MODIFIED
  Nov 11 12:42:49.963: INFO: Observed &DaemonSet event: MODIFIED
  Nov 11 12:42:49.963: INFO: Observed &DaemonSet event: MODIFIED
  Nov 11 12:42:49.963: INFO: Observed daemon set daemon-set in namespace daemonsets-7925 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov 11 12:42:49.963: INFO: Observed &DaemonSet event: MODIFIED
  Nov 11 12:42:49.963: INFO: Found daemon set daemon-set in namespace daemonsets-7925 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Nov 11 12:42:49.963: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 11/11/23 12:42:49.969
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7925, will wait for the garbage collector to delete the pods @ 11/11/23 12:42:49.969
  Nov 11 12:42:50.028: INFO: Deleting DaemonSet.extensions daemon-set took: 6.691651ms
  Nov 11 12:42:50.129: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.508657ms
  E1111 12:42:50.756775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:42:51.732: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:42:51.732: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 11 12:42:51.734: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23985"},"items":null}

  Nov 11 12:42:51.737: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23985"},"items":null}

  Nov 11 12:42:51.749: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7925" for this suite. @ 11/11/23 12:42:51.752
  E1111 12:42:51.757276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [3.900 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 11/11/23 12:42:51.758
  Nov 11 12:42:51.758: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename crd-webhook @ 11/11/23 12:42:51.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:42:51.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:42:51.775
  STEP: Setting up server cert @ 11/11/23 12:42:51.778
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/11/23 12:42:52.072
  STEP: Deploying the custom resource conversion webhook pod @ 11/11/23 12:42:52.08
  STEP: Wait for the deployment to be ready @ 11/11/23 12:42:52.091
  Nov 11 12:42:52.096: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E1111 12:42:52.757725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:53.757983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 12:42:54.108
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 12:42:54.118
  E1111 12:42:54.758205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:42:55.118: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Nov 11 12:42:55.126: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  E1111 12:42:55.758121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:56.758509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 11/11/23 12:42:57.682
  STEP: Create a v2 custom resource @ 11/11/23 12:42:57.698
  STEP: List CRs in v1 @ 11/11/23 12:42:57.728
  STEP: List CRs in v2 @ 11/11/23 12:42:57.732
  Nov 11 12:42:57.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1111 12:42:57.759117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-5128" for this suite. @ 11/11/23 12:42:58.285
• [6.542 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 11/11/23 12:42:58.3
  Nov 11 12:42:58.300: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-runtime @ 11/11/23 12:42:58.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:42:58.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:42:58.318
  STEP: create the container @ 11/11/23 12:42:58.321
  W1111 12:42:58.328754      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 11/11/23 12:42:58.328
  E1111 12:42:58.759331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:42:59.760378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:00.760603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/11/23 12:43:01.344
  STEP: the container should be terminated @ 11/11/23 12:43:01.347
  STEP: the termination message should be set @ 11/11/23 12:43:01.347
  Nov 11 12:43:01.347: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/11/23 12:43:01.347
  Nov 11 12:43:01.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3746" for this suite. @ 11/11/23 12:43:01.365
• [3.071 seconds]
------------------------------
SSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 11/11/23 12:43:01.371
  Nov 11 12:43:01.371: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename events @ 11/11/23 12:43:01.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:43:01.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:43:01.389
  STEP: creating a test event @ 11/11/23 12:43:01.391
  STEP: listing events in all namespaces @ 11/11/23 12:43:01.4
  STEP: listing events in test namespace @ 11/11/23 12:43:01.405
  STEP: listing events with field selection filtering on source @ 11/11/23 12:43:01.408
  STEP: listing events with field selection filtering on reportingController @ 11/11/23 12:43:01.41
  STEP: getting the test event @ 11/11/23 12:43:01.413
  STEP: patching the test event @ 11/11/23 12:43:01.415
  STEP: getting the test event @ 11/11/23 12:43:01.424
  STEP: updating the test event @ 11/11/23 12:43:01.426
  STEP: getting the test event @ 11/11/23 12:43:01.433
  STEP: deleting the test event @ 11/11/23 12:43:01.435
  STEP: listing events in all namespaces @ 11/11/23 12:43:01.442
  STEP: listing events in test namespace @ 11/11/23 12:43:01.45
  Nov 11 12:43:01.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1309" for this suite. @ 11/11/23 12:43:01.456
• [0.091 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 11/11/23 12:43:01.463
  Nov 11 12:43:01.463: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename runtimeclass @ 11/11/23 12:43:01.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:43:01.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:43:01.481
  STEP: Deleting RuntimeClass runtimeclass-3275-delete-me @ 11/11/23 12:43:01.489
  STEP: Waiting for the RuntimeClass to disappear @ 11/11/23 12:43:01.495
  Nov 11 12:43:01.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3275" for this suite. @ 11/11/23 12:43:01.507
• [0.050 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 11/11/23 12:43:01.513
  Nov 11 12:43:01.513: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename subpath @ 11/11/23 12:43:01.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:43:01.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:43:01.528
  STEP: Setting up data @ 11/11/23 12:43:01.531
  STEP: Creating pod pod-subpath-test-configmap-rdc2 @ 11/11/23 12:43:01.538
  STEP: Creating a pod to test atomic-volume-subpath @ 11/11/23 12:43:01.538
  E1111 12:43:01.761610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:02.762039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:03.762695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:04.762784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:05.763588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:06.763747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:07.763773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:08.764181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:09.764772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:10.765245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:11.765937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:12.766077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:13.766308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:14.766392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:15.767057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:16.767673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:17.767888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:18.768035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:19.769007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:20.769785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:21.770645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:22.771659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:23.772093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:24.773051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 12:43:25.594
  Nov 11 12:43:25.598: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-subpath-test-configmap-rdc2 container test-container-subpath-configmap-rdc2: <nil>
  STEP: delete the pod @ 11/11/23 12:43:25.61
  STEP: Deleting pod pod-subpath-test-configmap-rdc2 @ 11/11/23 12:43:25.626
  Nov 11 12:43:25.627: INFO: Deleting pod "pod-subpath-test-configmap-rdc2" in namespace "subpath-6763"
  Nov 11 12:43:25.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6763" for this suite. @ 11/11/23 12:43:25.633
• [24.126 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 11/11/23 12:43:25.639
  Nov 11 12:43:25.639: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename cronjob @ 11/11/23 12:43:25.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:43:25.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:43:25.66
  STEP: Creating a ForbidConcurrent cronjob @ 11/11/23 12:43:25.663
  STEP: Ensuring a job is scheduled @ 11/11/23 12:43:25.667
  E1111 12:43:25.773088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:26.773379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:27.774418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:28.775187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:29.775967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:30.776067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:31.776637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:32.776757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:33.777671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:34.778299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:35.779070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:36.779332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:37.779812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:38.780649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:39.781210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:40.782132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:41.783021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:42.783756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:43.784866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:44.785397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:45.786297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:46.786709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:47.787588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:48.787700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:49.788431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:50.788589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:51.789258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:52.789425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:53.789958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:54.790105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:55.791029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:56.792006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:57.792942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:58.793107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:43:59.793913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:00.794065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 11/11/23 12:44:01.671
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/11/23 12:44:01.674
  STEP: Ensuring no more jobs are scheduled @ 11/11/23 12:44:01.677
  E1111 12:44:01.794837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:02.795767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:03.796409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:04.796559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:05.797365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:06.797704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:07.798480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:08.798649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:09.799607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:10.799747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:11.800339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:12.801370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:13.802183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:14.802290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:15.802694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:16.802977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:17.803342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:18.803759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:19.804454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:20.804622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:21.805670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:22.805754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:23.806069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:24.806215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:25.806336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:26.806693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:27.807578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:28.807733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:29.808726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:30.808978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:31.809769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:32.809947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:33.810689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:34.810773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:35.811318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:36.811630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:37.812309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:38.812455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:39.813297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:40.813437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:41.813518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:42.814422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:43.814998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:44.815745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:45.815807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:46.816737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:47.817289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:48.817441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:49.817512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:50.817689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:51.818651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:52.818683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:53.818762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:54.819066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:55.819529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:56.819738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:57.820031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:58.820125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:44:59.821120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:00.821261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:01.821392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:02.821486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:03.821654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:04.821787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:05.822787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:06.822966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:07.823757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:08.823912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:09.824063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:10.824197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:11.824472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:12.824607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:13.825461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:14.825558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:15.826443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:16.826772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:17.827760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:18.827852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:19.828552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:20.828774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:21.829228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:22.829366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:23.830090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:24.830172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:25.831120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:26.831320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:27.831987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:28.832552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:29.833560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:30.833651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:31.833700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:32.833852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:33.834344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:34.834498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:35.835524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:36.835717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:37.836753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:38.836885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:39.837869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:40.838007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:41.838914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:42.839014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:43.839636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:44.839784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:45.839962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:46.840158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:47.841009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:48.841117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:49.841952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:50.842045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:51.843002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:52.843091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:53.843799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:54.843894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:55.844488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:56.844701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:57.845259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:58.845510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:45:59.846341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:00.846473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:01.847399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:02.847550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:03.848526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:04.848638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:05.849392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:06.849704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:07.850536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:08.850683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:09.851092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:10.852056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:11.852896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:12.853032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:13.853677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:14.853826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:15.854802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:16.854895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:17.855449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:18.855754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:19.856530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:20.856622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:21.857193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:22.857925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:23.858680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:24.858832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:25.859748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:26.859961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:27.860673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:28.861175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:29.862131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:30.862267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:31.862629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:32.862692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:33.863170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:34.863307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:35.863673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:36.864575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:37.864660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:38.864797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:39.865310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:40.865439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:41.865577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:42.865671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:43.865846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:44.865985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:45.866403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:46.866663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:47.867267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:48.867747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:49.868584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:50.868729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:51.869467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:52.869609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:53.870325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:54.870440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:55.871324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:56.871562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:57.871743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:58.871884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:46:59.872611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:00.872766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:01.872858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:02.872998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:03.873399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:04.873531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:05.874451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:06.874685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:07.875108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:08.875201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:09.875745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:10.875871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:11.876637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:12.876725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:13.877245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:14.877384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:15.878283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:16.878543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:17.879190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:18.879772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:19.880755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:20.880858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:21.881888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:22.881977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:23.882455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:24.882607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:25.883313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:26.883677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:27.884224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:28.884372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:29.884748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:30.884884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:31.885456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:32.885593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:33.886668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:34.886798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:35.887414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:36.887668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:37.888739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:38.888892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:39.889831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:40.889918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:41.890865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:42.891008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:43.891322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:44.891826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:45.892591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:46.892775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:47.893656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:48.893809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:49.893878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:50.894300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:51.895059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:52.895745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:53.895816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:54.895961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:55.896826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:56.897821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:57.898020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:58.898117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:47:59.898648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:00.898797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:01.898886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:02.899759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:03.900406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:04.900550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:05.901080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:06.901822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:07.901873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:08.902010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:09.902807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:10.902895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:11.903748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:12.904144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:13.905030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:14.905192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:15.905734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:16.905927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:17.906056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:18.907023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:19.907630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:20.907776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:21.908710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:22.908849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:23.908909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:24.909042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:25.909733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:26.909778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:27.909888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:28.910037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:29.910297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:30.910433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:31.911324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:32.911464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:33.912451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:34.912535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:35.913492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:36.913695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:37.914640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:38.914702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:39.915741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:40.915883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:41.916396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:42.916535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:43.917259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:44.917396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:45.918029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:46.918254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:47.919159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:48.919920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:49.920596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:50.920681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:51.921652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:52.921797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:53.922271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:54.922627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:55.922613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:56.922696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:57.923607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:58.924084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:48:59.924167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:00.924264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 11/11/23 12:49:01.684
  Nov 11 12:49:01.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6596" for this suite. @ 11/11/23 12:49:01.694
• [336.061 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 11/11/23 12:49:01.7
  Nov 11 12:49:01.700: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 12:49:01.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:49:01.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:49:01.718
  STEP: Creating projection with secret that has name projected-secret-test-7b6f5cb1-24aa-4667-aeb6-ad899175d0a5 @ 11/11/23 12:49:01.721
  STEP: Creating a pod to test consume secrets @ 11/11/23 12:49:01.725
  E1111 12:49:01.925111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:02.925298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:03.926172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:04.926317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 12:49:05.742
  Nov 11 12:49:05.746: INFO: Trying to get logs from node ip-172-31-8-111 pod pod-projected-secrets-60ae8184-0c28-4c70-b8ea-d1d9786f760b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 12:49:05.76
  Nov 11 12:49:05.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4370" for this suite. @ 11/11/23 12:49:05.775
• [4.081 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 11/11/23 12:49:05.781
  Nov 11 12:49:05.781: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename statefulset @ 11/11/23 12:49:05.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:49:05.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:49:05.794
  STEP: Creating service test in namespace statefulset-6325 @ 11/11/23 12:49:05.797
  STEP: Creating statefulset ss in namespace statefulset-6325 @ 11/11/23 12:49:05.805
  Nov 11 12:49:05.814: INFO: Found 0 stateful pods, waiting for 1
  E1111 12:49:05.926393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:06.926710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:07.926853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:08.927755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:09.927917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:10.928000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:11.928457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:12.928607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:13.928697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:14.928833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:49:15.817: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 11/11/23 12:49:15.823
  STEP: Getting /status @ 11/11/23 12:49:15.834
  Nov 11 12:49:15.838: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 11/11/23 12:49:15.838
  Nov 11 12:49:15.846: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 11/11/23 12:49:15.846
  Nov 11 12:49:15.848: INFO: Observed &StatefulSet event: ADDED
  Nov 11 12:49:15.848: INFO: Found Statefulset ss in namespace statefulset-6325 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 11 12:49:15.848: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 11/11/23 12:49:15.848
  Nov 11 12:49:15.848: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Nov 11 12:49:15.853: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 11/11/23 12:49:15.853
  Nov 11 12:49:15.855: INFO: Observed &StatefulSet event: ADDED
  Nov 11 12:49:15.855: INFO: Deleting all statefulset in ns statefulset-6325
  Nov 11 12:49:15.857: INFO: Scaling statefulset ss to 0
  E1111 12:49:15.929738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:16.930010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:17.930170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:18.930329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:19.930426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:20.930514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:21.931269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:22.931364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:23.931870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:24.932008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:49:25.873: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 11 12:49:25.876: INFO: Deleting statefulset ss
  Nov 11 12:49:25.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6325" for this suite. @ 11/11/23 12:49:25.889
• [20.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 11/11/23 12:49:25.898
  Nov 11 12:49:25.898: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 12:49:25.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:49:25.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:49:25.913
  E1111 12:49:25.932181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 11/11/23 12:49:25.938
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 12:49:26.17
  STEP: Deploying the webhook pod @ 11/11/23 12:49:26.176
  STEP: Wait for the deployment to be ready @ 11/11/23 12:49:26.187
  Nov 11 12:49:26.194: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1111 12:49:26.932879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:27.933023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 12:49:28.202
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 12:49:28.211
  E1111 12:49:28.934101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:49:29.211: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 11 12:49:29.218: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-791-crds.webhook.example.com via the AdmissionRegistration API @ 11/11/23 12:49:29.729
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/11/23 12:49:29.742
  E1111 12:49:29.934491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:30.934695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:49:31.792: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1111 12:49:31.935731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-632" for this suite. @ 11/11/23 12:49:32.347
  STEP: Destroying namespace "webhook-markers-1217" for this suite. @ 11/11/23 12:49:32.354
• [6.462 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 11/11/23 12:49:32.361
  Nov 11 12:49:32.361: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 12:49:32.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:49:32.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:49:32.376
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/11/23 12:49:32.378
  E1111 12:49:32.936420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:33.937357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:34.938264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:35.938408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 12:49:36.395
  Nov 11 12:49:36.398: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-bf5b8c20-d751-428b-ba04-4d6045be8dd5 container test-container: <nil>
  STEP: delete the pod @ 11/11/23 12:49:36.413
  Nov 11 12:49:36.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1878" for this suite. @ 11/11/23 12:49:36.43
• [4.076 seconds]
------------------------------
SS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 11/11/23 12:49:36.437
  Nov 11 12:49:36.437: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/11/23 12:49:36.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:49:36.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:49:36.452
  STEP: creating a target pod @ 11/11/23 12:49:36.455
  E1111 12:49:36.938471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:37.938676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 11/11/23 12:49:38.472
  E1111 12:49:38.939130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:39.939718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 11/11/23 12:49:40.49
  Nov 11 12:49:40.490: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9699 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:49:40.490: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:49:40.490: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:49:40.490: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-9699/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Nov 11 12:49:40.572: INFO: Exec stderr: ""
  Nov 11 12:49:40.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9699" for this suite. @ 11/11/23 12:49:40.581
• [4.150 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 11/11/23 12:49:40.587
  Nov 11 12:49:40.587: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 12:49:40.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:49:40.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:49:40.605
  STEP: creating service nodeport-test with type=NodePort in namespace services-2042 @ 11/11/23 12:49:40.607
  STEP: creating replication controller nodeport-test in namespace services-2042 @ 11/11/23 12:49:40.621
  I1111 12:49:40.625931      22 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-2042, replica count: 2
  E1111 12:49:40.940481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:41.941302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:42.941972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 12:49:43.677838      22 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 11 12:49:43.677: INFO: Creating new exec pod
  E1111 12:49:43.942400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:44.942548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:45.942969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:49:46.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-2042 exec execpodc45m9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Nov 11 12:49:46.826: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Nov 11 12:49:46.826: INFO: stdout: ""
  E1111 12:49:46.943210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:49:47.827: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-2042 exec execpodc45m9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E1111 12:49:47.943883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:49:47.967: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Nov 11 12:49:47.967: INFO: stdout: "nodeport-test-8g6tr"
  Nov 11 12:49:47.967: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-2042 exec execpodc45m9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.142 80'
  Nov 11 12:49:48.090: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.142 80\nConnection to 10.152.183.142 80 port [tcp/http] succeeded!\n"
  Nov 11 12:49:48.090: INFO: stdout: "nodeport-test-8g6tr"
  Nov 11 12:49:48.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-2042 exec execpodc45m9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.111 32099'
  Nov 11 12:49:48.229: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.8.111 32099\nConnection to 172.31.8.111 32099 port [tcp/*] succeeded!\n"
  Nov 11 12:49:48.229: INFO: stdout: "nodeport-test-bzpvm"
  Nov 11 12:49:48.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-2042 exec execpodc45m9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.254 32099'
  Nov 11 12:49:48.363: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.79.254 32099\nConnection to 172.31.79.254 32099 port [tcp/*] succeeded!\n"
  Nov 11 12:49:48.363: INFO: stdout: "nodeport-test-bzpvm"
  Nov 11 12:49:48.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2042" for this suite. @ 11/11/23 12:49:48.366
• [7.790 seconds]
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 11/11/23 12:49:48.378
  Nov 11 12:49:48.378: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename ingressclass @ 11/11/23 12:49:48.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:49:48.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:49:48.399
  STEP: getting /apis @ 11/11/23 12:49:48.406
  STEP: getting /apis/networking.k8s.io @ 11/11/23 12:49:48.409
  STEP: getting /apis/networking.k8s.iov1 @ 11/11/23 12:49:48.41
  STEP: creating @ 11/11/23 12:49:48.411
  STEP: getting @ 11/11/23 12:49:48.428
  STEP: listing @ 11/11/23 12:49:48.43
  STEP: watching @ 11/11/23 12:49:48.433
  Nov 11 12:49:48.433: INFO: starting watch
  STEP: patching @ 11/11/23 12:49:48.434
  STEP: updating @ 11/11/23 12:49:48.439
  Nov 11 12:49:48.444: INFO: waiting for watch events with expected annotations
  Nov 11 12:49:48.444: INFO: saw patched and updated annotations
  STEP: deleting @ 11/11/23 12:49:48.444
  STEP: deleting a collection @ 11/11/23 12:49:48.455
  Nov 11 12:49:48.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-1290" for this suite. @ 11/11/23 12:49:48.483
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 11/11/23 12:49:48.491
  Nov 11 12:49:48.491: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pods @ 11/11/23 12:49:48.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:49:48.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:49:48.514
  Nov 11 12:49:48.516: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: creating the pod @ 11/11/23 12:49:48.517
  STEP: submitting the pod to kubernetes @ 11/11/23 12:49:48.517
  E1111 12:49:48.944178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:49.944331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:49:50.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3687" for this suite. @ 11/11/23 12:49:50.629
• [2.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 11/11/23 12:49:50.64
  Nov 11 12:49:50.640: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename security-context-test @ 11/11/23 12:49:50.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:49:50.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:49:50.659
  E1111 12:49:50.944607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:51.945061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:52.945252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:53.945400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:49:54.687: INFO: Got logs for pod "busybox-privileged-false-ff602f44-14bb-47b6-8286-bc6f9863b4b0": "ip: RTNETLINK answers: Operation not permitted\n"
  Nov 11 12:49:54.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7095" for this suite. @ 11/11/23 12:49:54.69
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 11/11/23 12:49:54.699
  Nov 11 12:49:54.699: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 12:49:54.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:49:54.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:49:54.717
  STEP: Setting up server cert @ 11/11/23 12:49:54.74
  E1111 12:49:54.946278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 12:49:55.146
  STEP: Deploying the webhook pod @ 11/11/23 12:49:55.151
  STEP: Wait for the deployment to be ready @ 11/11/23 12:49:55.164
  Nov 11 12:49:55.172: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1111 12:49:55.946390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:56.946674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 12:49:57.182
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 12:49:57.192
  E1111 12:49:57.946720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:49:58.193: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/11/23 12:49:58.198
  STEP: create a pod @ 11/11/23 12:49:58.212
  E1111 12:49:58.946896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:49:59.947762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 11/11/23 12:50:00.224
  Nov 11 12:50:00.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=webhook-6235 attach --namespace=webhook-6235 to-be-attached-pod -i -c=container1'
  Nov 11 12:50:00.284: INFO: rc: 1
  Nov 11 12:50:00.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6235" for this suite. @ 11/11/23 12:50:00.324
  STEP: Destroying namespace "webhook-markers-7202" for this suite. @ 11/11/23 12:50:00.333
• [5.641 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 11/11/23 12:50:00.341
  Nov 11 12:50:00.341: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename sched-pred @ 11/11/23 12:50:00.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:50:00.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:50:00.358
  Nov 11 12:50:00.361: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov 11 12:50:00.368: INFO: Waiting for terminating namespaces to be deleted...
  Nov 11 12:50:00.371: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-26-213 before test
  Nov 11 12:50:00.376: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-kbzzn from ingress-nginx-kubernetes-worker started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.376: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov 11 12:50:00.376: INFO: nginx-ingress-controller-kubernetes-worker-mhlhs from ingress-nginx-kubernetes-worker started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.376: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 11 12:50:00.376: INFO: calico-node-4wwdr from kube-system started at 2023-11-11 11:56:55 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.376: INFO: 	Container calico-node ready: true, restart count 0
  Nov 11 12:50:00.376: INFO: coredns-59cfb5bf46-r5pf5 from kube-system started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.376: INFO: 	Container coredns ready: true, restart count 0
  Nov 11 12:50:00.376: INFO: kube-state-metrics-78c475f58b-zzxqs from kube-system started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.376: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov 11 12:50:00.376: INFO: metrics-server-v0.6.3-69d7fbfdf8-rptqk from kube-system started at 2023-11-11 11:57:09 +0000 UTC (2 container statuses recorded)
  Nov 11 12:50:00.376: INFO: 	Container metrics-server ready: true, restart count 0
  Nov 11 12:50:00.376: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov 11 12:50:00.376: INFO: dashboard-metrics-scraper-5dd7cb5fc-5tw2q from kubernetes-dashboard started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.376: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov 11 12:50:00.376: INFO: kubernetes-dashboard-7b899cb9d9-jpjst from kubernetes-dashboard started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.376: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov 11 12:50:00.376: INFO: sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-sqgqx from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 12:50:00.376: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 12:50:00.376: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 11 12:50:00.376: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-79-254 before test
  Nov 11 12:50:00.380: INFO: ephemeral-containers-target-pod from ephemeral-containers-test-9699 started at 2023-11-11 12:49:36 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.380: INFO: 	Container test-container-1 ready: true, restart count 0
  Nov 11 12:50:00.380: INFO: nginx-ingress-controller-kubernetes-worker-zczgn from ingress-nginx-kubernetes-worker started at 2023-11-11 12:35:05 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.380: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 11 12:50:00.380: INFO: calico-node-pm2sm from kube-system started at 2023-11-11 12:02:39 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.380: INFO: 	Container calico-node ready: true, restart count 0
  Nov 11 12:50:00.380: INFO: pod-exec-websocket-1f2a9997-0cd2-4de4-a31d-e1989ef48ba2 from pods-3687 started at 2023-11-11 12:49:48 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.380: INFO: 	Container main ready: true, restart count 0
  Nov 11 12:50:00.380: INFO: sonobuoy from sonobuoy started at 2023-11-11 12:08:18 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.380: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov 11 12:50:00.380: INFO: sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-868rn from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 12:50:00.380: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 12:50:00.380: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 11 12:50:00.380: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-8-111 before test
  Nov 11 12:50:00.385: INFO: nginx-ingress-controller-kubernetes-worker-bmzsg from ingress-nginx-kubernetes-worker started at 2023-11-11 12:00:58 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.385: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 11 12:50:00.385: INFO: calico-node-pvf6s from kube-system started at 2023-11-11 12:00:29 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.385: INFO: 	Container calico-node ready: true, restart count 0
  Nov 11 12:50:00.385: INFO: sonobuoy-e2e-job-88b8298f84e34478 from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 12:50:00.385: INFO: 	Container e2e ready: true, restart count 0
  Nov 11 12:50:00.385: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 12:50:00.385: INFO: sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-cst9b from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 12:50:00.385: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 12:50:00.385: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 11 12:50:00.385: INFO: to-be-attached-pod from webhook-6235 started at 2023-11-11 12:49:58 +0000 UTC (1 container statuses recorded)
  Nov 11 12:50:00.385: INFO: 	Container container1 ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-26-213 @ 11/11/23 12:50:00.399
  STEP: verifying the node has the label node ip-172-31-79-254 @ 11/11/23 12:50:00.41
  STEP: verifying the node has the label node ip-172-31-8-111 @ 11/11/23 12:50:00.422
  Nov 11 12:50:00.435: INFO: Pod ephemeral-containers-target-pod requesting resource cpu=0m on Node ip-172-31-79-254
  Nov 11 12:50:00.435: INFO: Pod default-http-backend-kubernetes-worker-5c79cc75ff-kbzzn requesting resource cpu=10m on Node ip-172-31-26-213
  Nov 11 12:50:00.435: INFO: Pod nginx-ingress-controller-kubernetes-worker-bmzsg requesting resource cpu=0m on Node ip-172-31-8-111
  Nov 11 12:50:00.435: INFO: Pod nginx-ingress-controller-kubernetes-worker-mhlhs requesting resource cpu=0m on Node ip-172-31-26-213
  Nov 11 12:50:00.435: INFO: Pod nginx-ingress-controller-kubernetes-worker-zczgn requesting resource cpu=0m on Node ip-172-31-79-254
  Nov 11 12:50:00.435: INFO: Pod calico-node-4wwdr requesting resource cpu=250m on Node ip-172-31-26-213
  Nov 11 12:50:00.435: INFO: Pod calico-node-pm2sm requesting resource cpu=250m on Node ip-172-31-79-254
  Nov 11 12:50:00.435: INFO: Pod calico-node-pvf6s requesting resource cpu=250m on Node ip-172-31-8-111
  Nov 11 12:50:00.435: INFO: Pod coredns-59cfb5bf46-r5pf5 requesting resource cpu=100m on Node ip-172-31-26-213
  Nov 11 12:50:00.435: INFO: Pod kube-state-metrics-78c475f58b-zzxqs requesting resource cpu=0m on Node ip-172-31-26-213
  Nov 11 12:50:00.435: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-rptqk requesting resource cpu=5m on Node ip-172-31-26-213
  Nov 11 12:50:00.435: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-5tw2q requesting resource cpu=0m on Node ip-172-31-26-213
  Nov 11 12:50:00.435: INFO: Pod kubernetes-dashboard-7b899cb9d9-jpjst requesting resource cpu=0m on Node ip-172-31-26-213
  Nov 11 12:50:00.435: INFO: Pod pod-exec-websocket-1f2a9997-0cd2-4de4-a31d-e1989ef48ba2 requesting resource cpu=0m on Node ip-172-31-79-254
  Nov 11 12:50:00.435: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-79-254
  Nov 11 12:50:00.435: INFO: Pod sonobuoy-e2e-job-88b8298f84e34478 requesting resource cpu=0m on Node ip-172-31-8-111
  Nov 11 12:50:00.435: INFO: Pod sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-868rn requesting resource cpu=0m on Node ip-172-31-79-254
  Nov 11 12:50:00.435: INFO: Pod sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-cst9b requesting resource cpu=0m on Node ip-172-31-8-111
  Nov 11 12:50:00.435: INFO: Pod sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-sqgqx requesting resource cpu=0m on Node ip-172-31-26-213
  Nov 11 12:50:00.435: INFO: Pod to-be-attached-pod requesting resource cpu=0m on Node ip-172-31-8-111
  STEP: Starting Pods to consume most of the cluster CPU. @ 11/11/23 12:50:00.435
  Nov 11 12:50:00.435: INFO: Creating a pod which consumes cpu=2544m on Node ip-172-31-26-213
  Nov 11 12:50:00.443: INFO: Creating a pod which consumes cpu=2625m on Node ip-172-31-79-254
  Nov 11 12:50:00.456: INFO: Creating a pod which consumes cpu=2625m on Node ip-172-31-8-111
  E1111 12:50:00.948535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:01.948990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 11/11/23 12:50:02.476
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-53f3294b-3ec5-48a6-90af-f2245d465def.17969282eff5131c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3461/filler-pod-53f3294b-3ec5-48a6-90af-f2245d465def to ip-172-31-26-213] @ 11/11/23 12:50:02.479
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-53f3294b-3ec5-48a6-90af-f2245d465def.1796928313536ce1], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 11/11/23 12:50:02.479
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-53f3294b-3ec5-48a6-90af-f2245d465def.17969283144837f9], Reason = [Created], Message = [Created container filler-pod-53f3294b-3ec5-48a6-90af-f2245d465def] @ 11/11/23 12:50:02.479
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-53f3294b-3ec5-48a6-90af-f2245d465def.179692831ab92e4c], Reason = [Started], Message = [Started container filler-pod-53f3294b-3ec5-48a6-90af-f2245d465def] @ 11/11/23 12:50:02.48
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e47b6975-f19e-4b30-9d2a-c1b3214fded7.17969282f1320458], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3461/filler-pod-e47b6975-f19e-4b30-9d2a-c1b3214fded7 to ip-172-31-8-111] @ 11/11/23 12:50:02.48
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e47b6975-f19e-4b30-9d2a-c1b3214fded7.1796928313bb97a4], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 11/11/23 12:50:02.48
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e47b6975-f19e-4b30-9d2a-c1b3214fded7.1796928314ad413e], Reason = [Created], Message = [Created container filler-pod-e47b6975-f19e-4b30-9d2a-c1b3214fded7] @ 11/11/23 12:50:02.48
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e47b6975-f19e-4b30-9d2a-c1b3214fded7.179692831b5ddb6f], Reason = [Started], Message = [Started container filler-pod-e47b6975-f19e-4b30-9d2a-c1b3214fded7] @ 11/11/23 12:50:02.48
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ece67335-5953-4bee-9651-5a790757a3ea.17969282f0c12dbd], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3461/filler-pod-ece67335-5953-4bee-9651-5a790757a3ea to ip-172-31-79-254] @ 11/11/23 12:50:02.48
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ece67335-5953-4bee-9651-5a790757a3ea.179692831383fd3c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 11/11/23 12:50:02.48
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ece67335-5953-4bee-9651-5a790757a3ea.17969283146eb800], Reason = [Created], Message = [Created container filler-pod-ece67335-5953-4bee-9651-5a790757a3ea] @ 11/11/23 12:50:02.48
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ece67335-5953-4bee-9651-5a790757a3ea.179692831b0f6586], Reason = [Started], Message = [Started container filler-pod-ece67335-5953-4bee-9651-5a790757a3ea] @ 11/11/23 12:50:02.48
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.179692836964059f], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod..] @ 11/11/23 12:50:02.491
  E1111 12:50:02.949094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-26-213 @ 11/11/23 12:50:03.49
  STEP: verifying the node doesn't have the label node @ 11/11/23 12:50:03.501
  STEP: removing the label node off the node ip-172-31-79-254 @ 11/11/23 12:50:03.504
  STEP: verifying the node doesn't have the label node @ 11/11/23 12:50:03.515
  STEP: removing the label node off the node ip-172-31-8-111 @ 11/11/23 12:50:03.521
  STEP: verifying the node doesn't have the label node @ 11/11/23 12:50:03.531
  Nov 11 12:50:03.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3461" for this suite. @ 11/11/23 12:50:03.543
• [3.207 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 11/11/23 12:50:03.549
  Nov 11 12:50:03.549: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename disruption @ 11/11/23 12:50:03.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:50:03.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:50:03.566
  STEP: Creating a pdb that targets all three pods in a test replica set @ 11/11/23 12:50:03.576
  STEP: Waiting for the pdb to be processed @ 11/11/23 12:50:03.58
  E1111 12:50:03.949150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:04.949382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 11/11/23 12:50:05.59
  STEP: Waiting for all pods to be running @ 11/11/23 12:50:05.591
  Nov 11 12:50:05.595: INFO: pods: 0 < 3
  E1111 12:50:05.949472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:06.950295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 11/11/23 12:50:07.599
  STEP: Updating the pdb to allow a pod to be evicted @ 11/11/23 12:50:07.607
  STEP: Waiting for the pdb to be processed @ 11/11/23 12:50:07.617
  E1111 12:50:07.950799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:08.951726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/11/23 12:50:09.622
  STEP: Waiting for all pods to be running @ 11/11/23 12:50:09.622
  STEP: Waiting for the pdb to observed all healthy pods @ 11/11/23 12:50:09.626
  STEP: Patching the pdb to disallow a pod to be evicted @ 11/11/23 12:50:09.651
  STEP: Waiting for the pdb to be processed @ 11/11/23 12:50:09.673
  E1111 12:50:09.952323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:10.952346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 11/11/23 12:50:11.679
  STEP: locating a running pod @ 11/11/23 12:50:11.682
  STEP: Deleting the pdb to allow a pod to be evicted @ 11/11/23 12:50:11.69
  STEP: Waiting for the pdb to be deleted @ 11/11/23 12:50:11.696
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/11/23 12:50:11.698
  STEP: Waiting for all pods to be running @ 11/11/23 12:50:11.698
  Nov 11 12:50:11.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-279" for this suite. @ 11/11/23 12:50:11.719
• [8.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 11/11/23 12:50:11.727
  Nov 11 12:50:11.727: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 12:50:11.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:50:11.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:50:11.751
  STEP: Setting up server cert @ 11/11/23 12:50:11.771
  E1111 12:50:11.953193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 12:50:12.132
  STEP: Deploying the webhook pod @ 11/11/23 12:50:12.14
  STEP: Wait for the deployment to be ready @ 11/11/23 12:50:12.15
  Nov 11 12:50:12.158: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1111 12:50:12.953928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:13.954021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 12:50:14.168
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 12:50:14.177
  E1111 12:50:14.954702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:15.179: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 11/11/23 12:50:15.184
  STEP: create a configmap that should be updated by the webhook @ 11/11/23 12:50:15.197
  Nov 11 12:50:15.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3684" for this suite. @ 11/11/23 12:50:15.251
  STEP: Destroying namespace "webhook-markers-3889" for this suite. @ 11/11/23 12:50:15.262
• [3.543 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 11/11/23 12:50:15.271
  Nov 11 12:50:15.271: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-probe @ 11/11/23 12:50:15.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:50:15.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:50:15.288
  STEP: Creating pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443 @ 11/11/23 12:50:15.291
  E1111 12:50:15.955756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:16.955829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/11/23 12:50:17.308
  Nov 11 12:50:17.311: INFO: Initial restart count of pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 is 0
  Nov 11 12:50:17.314: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:17.956642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:18.956883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:19.318: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:19.957363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:20.957500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:21.321: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:21.957782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:22.958823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:23.325: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:23.958929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:24.959747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:25.329: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:25.960696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:26.960981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:27.333: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:27.962046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:28.962206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:29.338: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:29.963078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:30.963156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:31.342: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:31.964183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:32.964325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:33.345: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:33.964931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:34.965285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:35.349: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:35.966118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:36.966910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:37.353: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:37.967669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:38.968506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:39.358: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:39.968587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:40.968749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:41.362: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:41.968770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:42.968913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:43.366: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:43.969749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:44.969897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:45.371: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:45.970835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:46.971020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:47.374: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:47.971305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:48.971479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:49.378: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:49.972377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:50.972496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:51.381: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:51.972668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:52.972835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:53.385: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:53.972896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:54.973194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:55.388: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:55.974187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:56.974388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:57.392: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:57.975403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:50:58.975764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:50:59.396: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:50:59.976358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:00.976530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:01.400: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:01.977346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:02.977727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:03.404: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:03.977789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:04.977945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:05.407: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:05.978055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:06.978243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:07.411: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:07.978754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:08.979750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:09.415: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:09.980486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:10.980633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:11.419: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:11.980944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:12.981504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:13.423: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:13.981746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:14.982299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:15.427: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:15.982699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:16.983748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:17.430: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:17.984775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:18.984920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:19.434: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:19.985961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:20.986078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:21.437: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:21.986202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:22.986359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:23.441: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:23.986996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:24.987081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:25.444: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:25.987765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:26.987969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:27.449: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:27.988057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:28.988149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:29.453: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:29.988192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:30.988279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:31.457: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:31.988328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:32.989324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:33.461: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:33.990138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:34.991179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:35.466: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:35.991604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:36.991816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:37.469: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:37.991887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:38.991984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:39.473: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:39.992970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:40.993124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:41.476: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:41.994198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:42.994286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:43.480: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:43.995377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:44.995429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:45.484: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:45.995821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:46.996092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:47.487: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:47.997164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:48.997322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:49.491: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:49.997492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:50.997580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:51.496: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:51.997846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:52.997942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:53.500: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:53.998400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:54.998542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:55.504: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:55.998696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:56.999739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:57.508: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:51:58.000259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:51:59.000398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:51:59.512: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:00.000439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:01.000542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:01.515: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:02.001360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:03.001533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:03.519: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:04.002260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:05.002424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:05.523: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:06.003322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:07.003470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:07.527: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:08.003540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:09.003721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:09.530: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:10.004001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:11.004155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:11.533: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:12.004409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:13.004834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:13.536: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:14.005208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:15.005357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:15.540: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:16.005915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:17.006669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:17.544: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:18.006762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:19.007753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:19.548: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:20.008423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:21.008568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:21.552: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:22.008973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:23.009112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:23.556: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:24.009854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:25.010811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:25.559: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:26.011419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:27.011511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:27.562: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:28.012281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:29.012415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:29.567: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:30.012520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:31.012656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:31.570: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:32.012697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:33.012833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:33.573: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:34.012893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:35.013037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:35.577: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:36.013760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:37.013987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:37.581: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:38.014563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:39.014687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:39.585: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:40.015642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:41.015774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:41.588: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:42.015972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:43.016104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:43.591: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:44.016795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:45.017746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:45.595: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:46.018631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:47.019464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:47.599: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:48.019643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:49.019790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:49.602: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:50.020388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:51.020525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:51.606: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:52.021102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:53.021339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:53.610: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:54.022089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:55.022227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:55.614: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:56.022890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:57.023744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:57.618: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:52:58.024365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:52:59.024459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:52:59.622: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:00.024552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:01.024692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:01.625: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:02.025381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:03.025527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:03.629: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:04.026047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:05.026181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:05.633: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:06.026918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:07.027153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:07.637: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:08.027742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:09.027888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:09.642: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:10.028821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:11.028967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:11.646: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:12.029972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:13.030110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:13.649: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:14.030323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:15.030467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:15.653: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:16.030931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:17.031749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:17.657: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:18.031817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:19.031955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:19.661: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:20.032986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:21.033215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:21.665: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:22.033785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:23.033928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:23.669: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:24.034568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:25.034690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:25.672: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:26.035752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:27.035970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:27.675: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:28.036423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:29.036516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:29.679: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:30.037316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:31.037459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:31.682: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:32.038155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:33.038262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:33.687: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:34.038349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:35.038488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:35.691: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:36.039453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:37.039708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:37.693: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:38.040382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:39.040522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:39.698: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:40.041509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:41.041651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:41.701: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:42.041762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:43.041855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:43.705: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:44.042504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:45.042657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:45.708: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:46.043191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:47.043393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:47.712: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:48.044431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:49.044569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:49.716: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:50.044658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:51.044796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:51.720: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:52.045727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:53.046592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:53.724: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:54.047420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:55.047764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:55.727: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:56.048200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:57.048391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:57.730: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:53:58.048849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:53:59.048992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:53:59.734: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:54:00.049885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:01.050024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:54:01.738: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:54:02.050530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:03.050555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:54:03.741: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:54:04.051228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:05.051746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:54:05.745: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:54:06.052604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:07.052684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:54:07.748: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:54:08.053237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:09.053375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:54:09.752: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:54:10.053809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:11.053956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:54:11.756: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:54:12.054314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:13.054362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:54:13.761: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:54:14.054454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:15.054624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:54:15.764: INFO: Get pod test-grpc-f3a0f492-ad6a-48d7-8fd0-60d7c7dda4c9 in namespace container-probe-2443
  E1111 12:54:16.055350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:17.055592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:54:17.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/11/23 12:54:17.769
  STEP: Destroying namespace "container-probe-2443" for this suite. @ 11/11/23 12:54:17.781
• [242.519 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 11/11/23 12:54:17.79
  Nov 11 12:54:17.790: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 12:54:17.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:54:17.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:54:17.807
  STEP: Setting up server cert @ 11/11/23 12:54:17.828
  E1111 12:54:18.056314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 12:54:18.118
  STEP: Deploying the webhook pod @ 11/11/23 12:54:18.124
  STEP: Wait for the deployment to be ready @ 11/11/23 12:54:18.136
  Nov 11 12:54:18.142: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1111 12:54:19.057185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:20.058091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 12:54:20.152
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 12:54:20.16
  E1111 12:54:21.058176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:54:21.161: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 11 12:54:21.168: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 11/11/23 12:54:21.676
  STEP: Creating a custom resource that should be denied by the webhook @ 11/11/23 12:54:21.69
  E1111 12:54:22.058904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:23.059752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 11/11/23 12:54:23.728
  STEP: Updating the custom resource with disallowed data should be denied @ 11/11/23 12:54:23.733
  STEP: Deleting the custom resource should be denied @ 11/11/23 12:54:23.742
  STEP: Remove the offending key and value from the custom resource data @ 11/11/23 12:54:23.747
  STEP: Deleting the updated custom resource should be successful @ 11/11/23 12:54:23.755
  Nov 11 12:54:23.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1111 12:54:24.060675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-8171" for this suite. @ 11/11/23 12:54:24.316
  STEP: Destroying namespace "webhook-markers-2188" for this suite. @ 11/11/23 12:54:24.322
• [6.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 11/11/23 12:54:24.331
  Nov 11 12:54:24.331: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename var-expansion @ 11/11/23 12:54:24.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:54:24.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:54:24.348
  E1111 12:54:25.061487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:26.062042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:54:26.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 11 12:54:26.374: INFO: Deleting pod "var-expansion-0d4a313f-c086-4716-8802-dac7731de5ec" in namespace "var-expansion-6726"
  Nov 11 12:54:26.381: INFO: Wait up to 5m0s for pod "var-expansion-0d4a313f-c086-4716-8802-dac7731de5ec" to be fully deleted
  E1111 12:54:27.062068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:28.062229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-6726" for this suite. @ 11/11/23 12:54:28.387
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 11/11/23 12:54:28.396
  Nov 11 12:54:28.396: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 12:54:28.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:54:28.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:54:28.413
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 12:54:28.415
  E1111 12:54:29.062643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:30.062701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:31.063653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:32.064086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 12:54:32.432
  Nov 11 12:54:32.436: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-db30bf2a-5efe-4f3e-a349-3a61c71d68a1 container client-container: <nil>
  STEP: delete the pod @ 11/11/23 12:54:32.447
  Nov 11 12:54:32.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7891" for this suite. @ 11/11/23 12:54:32.476
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 11/11/23 12:54:32.483
  Nov 11 12:54:32.483: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename statefulset @ 11/11/23 12:54:32.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:54:32.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:54:32.5
  STEP: Creating service test in namespace statefulset-8045 @ 11/11/23 12:54:32.503
  STEP: Creating a new StatefulSet @ 11/11/23 12:54:32.506
  Nov 11 12:54:32.517: INFO: Found 0 stateful pods, waiting for 3
  E1111 12:54:33.065067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:34.065153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:35.065296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:36.066157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:37.066490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:38.066666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:39.066804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:40.067755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:41.067840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:42.068215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:54:42.522: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 11 12:54:42.522: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 11 12:54:42.522: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Nov 11 12:54:42.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-8045 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 11 12:54:42.651: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 11 12:54:42.651: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 11 12:54:42.651: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1111 12:54:43.068986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:44.069919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:45.070086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:46.070237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:47.070503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:48.071217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:49.071413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:50.071550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:51.071645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:52.072036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/11/23 12:54:52.665
  Nov 11 12:54:52.684: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 11/11/23 12:54:52.684
  E1111 12:54:53.072186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:54.072331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:55.072418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:56.072560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:57.072816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:58.072909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:54:59.073157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:00.073303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:01.074364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:02.075353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 11/11/23 12:55:02.699
  Nov 11 12:55:02.702: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-8045 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 11 12:55:02.829: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 11 12:55:02.829: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 11 12:55:02.829: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1111 12:55:03.075589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:04.075660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:05.076549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:06.076706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:07.077563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:08.077653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:09.078109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:10.078268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:11.078354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:12.079342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 11/11/23 12:55:12.847
  Nov 11 12:55:12.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-8045 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 11 12:55:12.995: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 11 12:55:12.996: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 11 12:55:12.996: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1111 12:55:13.079757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:14.079898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:15.080857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:16.080970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:17.081157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:18.081797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:19.082644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:20.082692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:21.083763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:22.083842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:55:23.029: INFO: Updating stateful set ss2
  E1111 12:55:23.084807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:24.085122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:25.085267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:26.085363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:27.085619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:28.086303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:29.086406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:30.086551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:31.086687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:32.087752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 11/11/23 12:55:33.042
  Nov 11 12:55:33.045: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-8045 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1111 12:55:33.088645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:55:33.189: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 11 12:55:33.189: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 11 12:55:33.189: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1111 12:55:34.089162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:35.090101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:36.090973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:37.091759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:38.091895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:39.092039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:40.092927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:41.093070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:42.093419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:43.093576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:55:43.209: INFO: Deleting all statefulset in ns statefulset-8045
  Nov 11 12:55:43.211: INFO: Scaling statefulset ss2 to 0
  E1111 12:55:44.094522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:45.094690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:46.095751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:47.095955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:48.096057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:49.096228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:50.096395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:51.096546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:52.096866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:53.096957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:55:53.228: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 11 12:55:53.231: INFO: Deleting statefulset ss2
  Nov 11 12:55:53.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8045" for this suite. @ 11/11/23 12:55:53.248
• [80.772 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 11/11/23 12:55:53.255
  Nov 11 12:55:53.255: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 12:55:53.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:55:53.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:55:53.275
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/11/23 12:55:53.278
  E1111 12:55:54.097602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:55.097764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:56.098694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:57.099669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 12:55:57.296
  Nov 11 12:55:57.299: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-cf1680ce-3c49-4dee-945a-d93da0016bdc container test-container: <nil>
  STEP: delete the pod @ 11/11/23 12:55:57.307
  Nov 11 12:55:57.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-230" for this suite. @ 11/11/23 12:55:57.325
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 11/11/23 12:55:57.332
  Nov 11 12:55:57.332: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 12:55:57.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:55:57.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:55:57.348
  STEP: creating service in namespace services-9912 @ 11/11/23 12:55:57.35
  STEP: creating service affinity-nodeport in namespace services-9912 @ 11/11/23 12:55:57.35
  STEP: creating replication controller affinity-nodeport in namespace services-9912 @ 11/11/23 12:55:57.362
  I1111 12:55:57.369298      22 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-9912, replica count: 3
  E1111 12:55:58.099807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:55:59.100376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:00.101051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 12:56:00.421343      22 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 11 12:56:00.430: INFO: Creating new exec pod
  E1111 12:56:01.101808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:02.102247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:03.102623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:03.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-9912 exec execpod-affinitygfcgt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Nov 11 12:56:03.576: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Nov 11 12:56:03.576: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 12:56:03.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-9912 exec execpod-affinitygfcgt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.23 80'
  Nov 11 12:56:03.710: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.23 80\nConnection to 10.152.183.23 80 port [tcp/http] succeeded!\n"
  Nov 11 12:56:03.710: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 12:56:03.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-9912 exec execpod-affinitygfcgt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.26.213 30709'
  Nov 11 12:56:03.834: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.26.213 30709\nConnection to 172.31.26.213 30709 port [tcp/*] succeeded!\n"
  Nov 11 12:56:03.834: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 12:56:03.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-9912 exec execpod-affinitygfcgt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.254 30709'
  Nov 11 12:56:03.974: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.79.254 30709\nConnection to 172.31.79.254 30709 port [tcp/*] succeeded!\n"
  Nov 11 12:56:03.974: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 12:56:03.974: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-9912 exec execpod-affinitygfcgt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.26.213:30709/ ; done'
  E1111 12:56:04.103605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:04.143: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.213:30709/\n"
  Nov 11 12:56:04.143: INFO: stdout: "\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f\naffinity-nodeport-6rp7f"
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Received response from host: affinity-nodeport-6rp7f
  Nov 11 12:56:04.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 11 12:56:04.147: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-9912, will wait for the garbage collector to delete the pods @ 11/11/23 12:56:04.161
  Nov 11 12:56:04.225: INFO: Deleting ReplicationController affinity-nodeport took: 10.400017ms
  Nov 11 12:56:04.325: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.735818ms
  E1111 12:56:05.104386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:06.104480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-9912" for this suite. @ 11/11/23 12:56:07.048
• [9.721 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 11/11/23 12:56:07.054
  Nov 11 12:56:07.054: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename podtemplate @ 11/11/23 12:56:07.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:56:07.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:56:07.073
  STEP: Create a pod template @ 11/11/23 12:56:07.076
  STEP: Replace a pod template @ 11/11/23 12:56:07.079
  Nov 11 12:56:07.086: INFO: Found updated podtemplate annotation: "true"

  Nov 11 12:56:07.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4527" for this suite. @ 11/11/23 12:56:07.089
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 11/11/23 12:56:07.096
  Nov 11 12:56:07.096: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 12:56:07.097
  E1111 12:56:07.105095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:56:07.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:56:07.109
  STEP: Creating projection with secret that has name projected-secret-test-map-572c947c-3c38-439a-aca5-547e0c28e306 @ 11/11/23 12:56:07.112
  STEP: Creating a pod to test consume secrets @ 11/11/23 12:56:07.116
  E1111 12:56:08.105555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:09.105729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:10.105949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:11.106115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 12:56:11.14
  Nov 11 12:56:11.143: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-projected-secrets-eeb615f4-cd68-4540-b743-1c0a453734c5 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 12:56:11.149
  Nov 11 12:56:11.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2368" for this suite. @ 11/11/23 12:56:11.168
• [4.078 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 11/11/23 12:56:11.175
  Nov 11 12:56:11.175: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename replicaset @ 11/11/23 12:56:11.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:56:11.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:56:11.195
  STEP: Create a ReplicaSet @ 11/11/23 12:56:11.198
  STEP: Verify that the required pods have come up @ 11/11/23 12:56:11.203
  Nov 11 12:56:11.206: INFO: Pod name sample-pod: Found 0 pods out of 3
  E1111 12:56:12.106396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:13.106313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:14.106699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:15.106794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:16.106932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:16.210: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 11/11/23 12:56:16.21
  Nov 11 12:56:16.215: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 11/11/23 12:56:16.215
  STEP: DeleteCollection of the ReplicaSets @ 11/11/23 12:56:16.217
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 11/11/23 12:56:16.226
  Nov 11 12:56:16.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-883" for this suite. @ 11/11/23 12:56:16.233
• [5.078 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 11/11/23 12:56:16.254
  Nov 11 12:56:16.254: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 12:56:16.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:56:16.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:56:16.271
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 12:56:16.273
  E1111 12:56:17.107561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:18.107709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:19.107778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:20.107871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 12:56:20.292
  Nov 11 12:56:20.296: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-cea6b082-80a2-4b43-a4e7-c6a697d351fa container client-container: <nil>
  STEP: delete the pod @ 11/11/23 12:56:20.301
  Nov 11 12:56:20.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3843" for this suite. @ 11/11/23 12:56:20.319
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 11/11/23 12:56:20.325
  Nov 11 12:56:20.325: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename daemonsets @ 11/11/23 12:56:20.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:56:20.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:56:20.341
  Nov 11 12:56:20.365: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/11/23 12:56:20.37
  Nov 11 12:56:20.373: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:20.373: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:20.376: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:56:20.376: INFO: Node ip-172-31-26-213 is running 0 daemon pod, expected 1
  E1111 12:56:21.108120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:21.380: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:21.380: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:21.384: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:56:21.384: INFO: Node ip-172-31-26-213 is running 0 daemon pod, expected 1
  E1111 12:56:22.109013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:22.380: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:22.380: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:22.384: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 11 12:56:22.384: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 11/11/23 12:56:22.395
  STEP: Check that daemon pods images are updated. @ 11/11/23 12:56:22.403
  Nov 11 12:56:22.405: INFO: Wrong image for pod: daemon-set-kbxdv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 11 12:56:22.405: INFO: Wrong image for pod: daemon-set-rv6lv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 11 12:56:22.405: INFO: Wrong image for pod: daemon-set-rzvr5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 11 12:56:22.409: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:22.409: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1111 12:56:23.109975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:23.412: INFO: Wrong image for pod: daemon-set-kbxdv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 11 12:56:23.412: INFO: Wrong image for pod: daemon-set-rzvr5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 11 12:56:23.415: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:23.415: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1111 12:56:24.110423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:24.412: INFO: Pod daemon-set-4zp58 is not available
  Nov 11 12:56:24.412: INFO: Wrong image for pod: daemon-set-kbxdv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 11 12:56:24.412: INFO: Wrong image for pod: daemon-set-rzvr5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 11 12:56:24.415: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:24.415: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1111 12:56:25.111451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:25.413: INFO: Pod daemon-set-4zp58 is not available
  Nov 11 12:56:25.413: INFO: Wrong image for pod: daemon-set-kbxdv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 11 12:56:25.413: INFO: Wrong image for pod: daemon-set-rzvr5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 11 12:56:25.415: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:25.415: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1111 12:56:26.111532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:26.412: INFO: Pod daemon-set-2rf6q is not available
  Nov 11 12:56:26.412: INFO: Wrong image for pod: daemon-set-kbxdv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 11 12:56:26.415: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:26.415: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1111 12:56:27.112381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:27.413: INFO: Pod daemon-set-2rf6q is not available
  Nov 11 12:56:27.413: INFO: Wrong image for pod: daemon-set-kbxdv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 11 12:56:27.416: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:27.416: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1111 12:56:28.113035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:28.412: INFO: Pod daemon-set-xklbp is not available
  Nov 11 12:56:28.414: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:28.414: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 11/11/23 12:56:28.414
  Nov 11 12:56:28.418: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:28.418: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:28.421: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 11 12:56:28.421: INFO: Node ip-172-31-8-111 is running 0 daemon pod, expected 1
  E1111 12:56:29.113173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:29.426: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:29.426: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:29.430: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 11 12:56:29.430: INFO: Node ip-172-31-8-111 is running 0 daemon pod, expected 1
  E1111 12:56:30.113727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:30.426: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:30.426: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 12:56:30.429: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 11 12:56:30.429: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/11/23 12:56:30.444
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4636, will wait for the garbage collector to delete the pods @ 11/11/23 12:56:30.444
  Nov 11 12:56:30.503: INFO: Deleting DaemonSet.extensions daemon-set took: 5.671197ms
  Nov 11 12:56:30.603: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.388479ms
  E1111 12:56:31.114274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:31.907: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 12:56:31.907: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 11 12:56:31.910: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28399"},"items":null}

  Nov 11 12:56:31.912: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28399"},"items":null}

  Nov 11 12:56:31.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4636" for this suite. @ 11/11/23 12:56:31.926
• [11.606 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 11/11/23 12:56:31.932
  Nov 11 12:56:31.932: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 12:56:31.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:56:31.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:56:31.949
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 12:56:31.951
  E1111 12:56:32.114828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:33.115758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:34.116627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:35.116770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 12:56:35.971
  Nov 11 12:56:35.974: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-fbd7ca66-4b3b-4a38-8b34-0e1e773c0f16 container client-container: <nil>
  STEP: delete the pod @ 11/11/23 12:56:35.979
  Nov 11 12:56:35.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2949" for this suite. @ 11/11/23 12:56:35.998
• [4.071 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 11/11/23 12:56:36.003
  Nov 11 12:56:36.003: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pod-network-test @ 11/11/23 12:56:36.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:56:36.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:56:36.018
  STEP: Performing setup for networking test in namespace pod-network-test-1386 @ 11/11/23 12:56:36.02
  STEP: creating a selector @ 11/11/23 12:56:36.02
  STEP: Creating the service pods in kubernetes @ 11/11/23 12:56:36.02
  Nov 11 12:56:36.020: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1111 12:56:36.117705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:37.117917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:38.118059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:39.118236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:40.118919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:41.119767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:42.119918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:43.120004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:44.120673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:45.120790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:46.121495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:47.121761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/11/23 12:56:48.086
  E1111 12:56:48.122256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:49.122439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:50.112: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov 11 12:56:50.112: INFO: Going to poll 192.168.250.113 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Nov 11 12:56:50.115: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.250.113 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1386 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:56:50.115: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:56:50.115: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:56:50.115: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1386/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.250.113+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1111 12:56:50.122649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:51.122780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:51.197: INFO: Found all 1 expected endpoints: [netserver-0]
  Nov 11 12:56:51.197: INFO: Going to poll 192.168.216.208 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Nov 11 12:56:51.200: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.216.208 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1386 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:56:51.200: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:56:51.200: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:56:51.200: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1386/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.216.208+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1111 12:56:52.123408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:52.276: INFO: Found all 1 expected endpoints: [netserver-1]
  Nov 11 12:56:52.276: INFO: Going to poll 192.168.144.235 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Nov 11 12:56:52.280: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.144.235 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1386 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 12:56:52.280: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 12:56:52.280: INFO: ExecWithOptions: Clientset creation
  Nov 11 12:56:52.280: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1386/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.144.235+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1111 12:56:53.123487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:53.356: INFO: Found all 1 expected endpoints: [netserver-2]
  Nov 11 12:56:53.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1386" for this suite. @ 11/11/23 12:56:53.361
• [17.363 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 11/11/23 12:56:53.366
  Nov 11 12:56:53.366: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 12:56:53.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:56:53.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:56:53.382
  STEP: creating Agnhost RC @ 11/11/23 12:56:53.385
  Nov 11 12:56:53.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-3043 create -f -'
  Nov 11 12:56:53.561: INFO: stderr: ""
  Nov 11 12:56:53.561: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/11/23 12:56:53.561
  E1111 12:56:54.123578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:54.565: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 11 12:56:54.565: INFO: Found 0 / 1
  E1111 12:56:55.124031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:55.565: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 11 12:56:55.565: INFO: Found 1 / 1
  Nov 11 12:56:55.565: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 11/11/23 12:56:55.565
  Nov 11 12:56:55.567: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 11 12:56:55.567: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov 11 12:56:55.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-3043 patch pod agnhost-primary-tq9hc -p {"metadata":{"annotations":{"x":"y"}}}'
  Nov 11 12:56:55.622: INFO: stderr: ""
  Nov 11 12:56:55.622: INFO: stdout: "pod/agnhost-primary-tq9hc patched\n"
  STEP: checking annotations @ 11/11/23 12:56:55.622
  Nov 11 12:56:55.625: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 11 12:56:55.626: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov 11 12:56:55.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3043" for this suite. @ 11/11/23 12:56:55.629
• [2.271 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 11/11/23 12:56:55.638
  Nov 11 12:56:55.638: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 12:56:55.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:56:55.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:56:55.652
  STEP: Setting up server cert @ 11/11/23 12:56:55.674
  E1111 12:56:56.124260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 12:56:56.201
  STEP: Deploying the webhook pod @ 11/11/23 12:56:56.208
  STEP: Wait for the deployment to be ready @ 11/11/23 12:56:56.217
  Nov 11 12:56:56.225: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1111 12:56:57.124656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:56:58.125589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 12:56:58.235
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 12:56:58.242
  E1111 12:56:59.125648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:56:59.242: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 11/11/23 12:56:59.248
  STEP: create a namespace for the webhook @ 11/11/23 12:56:59.262
  STEP: create a configmap should be unconditionally rejected by the webhook @ 11/11/23 12:56:59.272
  Nov 11 12:56:59.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9041" for this suite. @ 11/11/23 12:56:59.321
  STEP: Destroying namespace "webhook-markers-4120" for this suite. @ 11/11/23 12:56:59.328
  STEP: Destroying namespace "fail-closed-namespace-6742" for this suite. @ 11/11/23 12:56:59.336
• [3.707 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 11/11/23 12:56:59.347
  Nov 11 12:56:59.347: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename field-validation @ 11/11/23 12:56:59.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:56:59.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:56:59.361
  STEP: apply creating a deployment @ 11/11/23 12:56:59.365
  Nov 11 12:56:59.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1034" for this suite. @ 11/11/23 12:56:59.379
• [0.037 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 11/11/23 12:56:59.384
  Nov 11 12:56:59.384: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename statefulset @ 11/11/23 12:56:59.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:56:59.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:56:59.403
  STEP: Creating service test in namespace statefulset-7622 @ 11/11/23 12:56:59.405
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 11/11/23 12:56:59.41
  STEP: Creating stateful set ss in namespace statefulset-7622 @ 11/11/23 12:56:59.414
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7622 @ 11/11/23 12:56:59.42
  Nov 11 12:56:59.422: INFO: Found 0 stateful pods, waiting for 1
  E1111 12:57:00.126460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:01.126752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:02.127744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:03.128411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:04.128580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:05.128720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:06.128863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:07.128970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:08.129134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:09.129312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:09.428: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 11/11/23 12:57:09.428
  Nov 11 12:57:09.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-7622 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 11 12:57:09.572: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 11 12:57:09.572: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 11 12:57:09.572: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 11 12:57:09.576: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1111 12:57:10.130104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:11.130288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:12.131315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:13.131749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:14.131886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:15.131980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:16.132450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:17.132720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:18.133673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:19.133842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:19.580: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov 11 12:57:19.580: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov 11 12:57:19.594: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999854s
  E1111 12:57:20.134629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:20.598: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996669694s
  E1111 12:57:21.134720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:21.602: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.993440973s
  E1111 12:57:22.135239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:22.606: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.988918381s
  E1111 12:57:23.135355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:23.611: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.984307946s
  E1111 12:57:24.135788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:24.617: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.979593649s
  E1111 12:57:25.136662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:25.620: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.974755935s
  E1111 12:57:26.136805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:26.624: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.971594288s
  E1111 12:57:27.136885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:27.628: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.967548467s
  E1111 12:57:28.137715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:28.631: INFO: Verifying statefulset ss doesn't scale past 1 for another 963.748775ms
  E1111 12:57:29.137828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7622 @ 11/11/23 12:57:29.631
  Nov 11 12:57:29.635: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-7622 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 11 12:57:29.769: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 11 12:57:29.769: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 11 12:57:29.769: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 11 12:57:29.772: INFO: Found 1 stateful pods, waiting for 3
  E1111 12:57:30.138069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:31.138403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:32.138542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:33.138705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:34.138798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:35.139764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:36.139854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:37.139895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:38.140038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:39.140195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:39.776: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 11 12:57:39.777: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 11 12:57:39.777: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 11/11/23 12:57:39.777
  STEP: Scale down will halt with unhealthy stateful pod @ 11/11/23 12:57:39.777
  Nov 11 12:57:39.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-7622 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 11 12:57:39.913: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 11 12:57:39.913: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 11 12:57:39.913: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 11 12:57:39.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-7622 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 11 12:57:40.055: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 11 12:57:40.055: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 11 12:57:40.055: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 11 12:57:40.055: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-7622 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1111 12:57:40.140703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:40.186: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 11 12:57:40.186: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 11 12:57:40.186: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 11 12:57:40.186: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov 11 12:57:40.189: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E1111 12:57:41.141178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:42.141530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:43.141688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:44.141784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:45.141854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:46.141993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:47.142185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:48.142264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:49.142401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:57:50.142487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:50.195: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov 11 12:57:50.195: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Nov 11 12:57:50.195: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Nov 11 12:57:50.207: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999842s
  E1111 12:57:51.142699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:51.211: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995945209s
  E1111 12:57:52.143545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:52.215: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992138305s
  E1111 12:57:53.143648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:53.219: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.987987519s
  E1111 12:57:54.143718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:54.223: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.983939207s
  E1111 12:57:55.144469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:55.228: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.980205749s
  E1111 12:57:56.144837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:56.232: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.974835565s
  E1111 12:57:57.145279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:57.236: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.970326817s
  E1111 12:57:58.145661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:58.240: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.967007923s
  E1111 12:57:59.145763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:57:59.244: INFO: Verifying statefulset ss doesn't scale past 3 for another 962.833973ms
  E1111 12:58:00.146785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7622 @ 11/11/23 12:58:00.245
  Nov 11 12:58:00.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-7622 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 11 12:58:00.381: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 11 12:58:00.381: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 11 12:58:00.381: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 11 12:58:00.381: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-7622 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 11 12:58:00.508: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 11 12:58:00.508: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 11 12:58:00.508: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 11 12:58:00.508: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=statefulset-7622 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 11 12:58:00.638: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 11 12:58:00.638: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 11 12:58:00.638: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 11 12:58:00.638: INFO: Scaling statefulset ss to 0
  E1111 12:58:01.147014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:02.147761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:03.148209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:04.148910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:05.149864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:06.150709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:07.151745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:08.151885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:09.152639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:10.152732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 11/11/23 12:58:10.653
  Nov 11 12:58:10.653: INFO: Deleting all statefulset in ns statefulset-7622
  Nov 11 12:58:10.655: INFO: Scaling statefulset ss to 0
  Nov 11 12:58:10.664: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 11 12:58:10.666: INFO: Deleting statefulset ss
  Nov 11 12:58:10.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7622" for this suite. @ 11/11/23 12:58:10.681
• [71.302 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 11/11/23 12:58:10.687
  Nov 11 12:58:10.687: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 12:58:10.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:58:10.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:58:10.701
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 12:58:10.703
  E1111 12:58:11.153406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:12.153690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:13.154112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:14.154198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 12:58:14.724
  Nov 11 12:58:14.726: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-bc0c5d66-bf31-4507-8d60-70f455bfad1f container client-container: <nil>
  STEP: delete the pod @ 11/11/23 12:58:14.739
  Nov 11 12:58:14.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7960" for this suite. @ 11/11/23 12:58:14.757
• [4.076 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 11/11/23 12:58:14.763
  Nov 11 12:58:14.763: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 12:58:14.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:58:14.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:58:14.777
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/11/23 12:58:14.78
  E1111 12:58:15.155093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:16.155168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:17.155753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:18.155911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 12:58:18.799
  Nov 11 12:58:18.802: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-2ece26aa-43c8-40cd-bd8e-a71bcc2c9617 container test-container: <nil>
  STEP: delete the pod @ 11/11/23 12:58:18.808
  Nov 11 12:58:18.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-916" for this suite. @ 11/11/23 12:58:18.823
• [4.065 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 11/11/23 12:58:18.829
  Nov 11 12:58:18.829: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename limitrange @ 11/11/23 12:58:18.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:58:18.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:58:18.844
  STEP: Creating a LimitRange @ 11/11/23 12:58:18.846
  STEP: Setting up watch @ 11/11/23 12:58:18.846
  STEP: Submitting a LimitRange @ 11/11/23 12:58:18.95
  STEP: Verifying LimitRange creation was observed @ 11/11/23 12:58:18.956
  STEP: Fetching the LimitRange to ensure it has proper values @ 11/11/23 12:58:18.956
  Nov 11 12:58:18.959: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Nov 11 12:58:18.959: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 11/11/23 12:58:18.959
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 11/11/23 12:58:18.964
  Nov 11 12:58:18.968: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Nov 11 12:58:18.968: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 11/11/23 12:58:18.968
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 11/11/23 12:58:18.973
  Nov 11 12:58:18.979: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Nov 11 12:58:18.979: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 11/11/23 12:58:18.979
  STEP: Failing to create a Pod with more than max resources @ 11/11/23 12:58:18.98
  STEP: Updating a LimitRange @ 11/11/23 12:58:18.982
  STEP: Verifying LimitRange updating is effective @ 11/11/23 12:58:18.987
  E1111 12:58:19.156599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:20.156770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 11/11/23 12:58:20.991
  STEP: Failing to create a Pod with more than max resources @ 11/11/23 12:58:20.996
  STEP: Deleting a LimitRange @ 11/11/23 12:58:20.998
  STEP: Verifying the LimitRange was deleted @ 11/11/23 12:58:21.006
  E1111 12:58:21.157248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:22.157393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:23.157476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:24.157630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:25.157798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 12:58:26.010: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 11/11/23 12:58:26.01
  Nov 11 12:58:26.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3663" for this suite. @ 11/11/23 12:58:26.023
• [7.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 11/11/23 12:58:26.031
  Nov 11 12:58:26.031: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename resourcequota @ 11/11/23 12:58:26.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:58:26.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:58:26.047
  STEP: Creating a ResourceQuota @ 11/11/23 12:58:26.05
  STEP: Getting a ResourceQuota @ 11/11/23 12:58:26.054
  STEP: Updating a ResourceQuota @ 11/11/23 12:58:26.057
  STEP: Verifying a ResourceQuota was modified @ 11/11/23 12:58:26.062
  STEP: Deleting a ResourceQuota @ 11/11/23 12:58:26.065
  STEP: Verifying the deleted ResourceQuota @ 11/11/23 12:58:26.072
  Nov 11 12:58:26.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3542" for this suite. @ 11/11/23 12:58:26.077
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 11/11/23 12:58:26.083
  Nov 11 12:58:26.083: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename cronjob @ 11/11/23 12:58:26.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 12:58:26.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 12:58:26.096
  STEP: Creating a cronjob @ 11/11/23 12:58:26.098
  STEP: Ensuring more than one job is running at a time @ 11/11/23 12:58:26.103
  E1111 12:58:26.157832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:27.158050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:28.159110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:29.159749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:30.159867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:31.159980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:32.160428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:33.160620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:34.161491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:35.161725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:36.162492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:37.162696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:38.163490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:39.163576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:40.163923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:41.164791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:42.165730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:43.165901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:44.165959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:45.166115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:46.166880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:47.167753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:48.168481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:49.168626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:50.169108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:51.169190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:52.169529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:53.169926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:54.170805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:55.171799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:56.172182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:57.173050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:58.173992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:58:59.175050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:00.175487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:01.175767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:02.176067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:03.176161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:04.176267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:05.176441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:06.176669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:07.176940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:08.176944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:09.177101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:10.178007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:11.178823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:12.179745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:13.179913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:14.179972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:15.180787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:16.180817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:17.181015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:18.181302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:19.182134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:20.182972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:21.183763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:22.183962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:23.184649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:24.185345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:25.185489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:26.186367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:27.186564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:28.186611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:29.186839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:30.187361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:31.187762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:32.187987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:33.188129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:34.188383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:35.188528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:36.188775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:37.188986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:38.189684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:39.189811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:40.190679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:41.190796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:42.191493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:43.192040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:44.192762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:45.192911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:46.193790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:47.194030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:48.195052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:49.195156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:50.196055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:51.196208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:52.196748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:53.196877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:54.196953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:55.197104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:56.197733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:57.197969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:58.198683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 12:59:59.198845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:00.199756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:01.199845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 11/11/23 13:00:02.108
  STEP: Removing cronjob @ 11/11/23 13:00:02.111
  Nov 11 13:00:02.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8176" for this suite. @ 11/11/23 13:00:02.12
• [96.044 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 11/11/23 13:00:02.127
  Nov 11 13:00:02.127: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-probe @ 11/11/23 13:00:02.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:00:02.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:00:02.154
  STEP: Creating pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578 @ 11/11/23 13:00:02.156
  E1111 13:00:02.200578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:03.200732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/11/23 13:00:04.169
  Nov 11 13:00:04.173: INFO: Initial restart count of pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e is 0
  Nov 11 13:00:04.175: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:04.201005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:05.201768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:06.180: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:06.202320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:07.202572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:08.184: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:08.202752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:09.203760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:10.188: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:10.204573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:11.204752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:12.192: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:12.204983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:13.205090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:14.196: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:14.205968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:15.206070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:16.200: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:16.206956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:17.207061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:18.204: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:18.207933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:19.208025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:20.208160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:20.208: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:21.208700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:22.209029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:22.213: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:23.209180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:24.209323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:24.216: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  Nov 11 13:00:24.216: INFO: Restart count of pod container-probe-578/liveness-62b51b52-263b-4f59-8f94-0215289cba6e is now 1 (20.04359442s elapsed)
  E1111 13:00:25.209609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:26.209703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:26.220: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:27.210772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:28.211761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:28.224: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:29.212619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:30.212778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:30.228: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:31.213624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:32.214020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:32.233: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:33.214505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:34.214682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:34.237: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:35.215398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:36.215932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:36.242: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:37.216064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:38.216230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:38.245: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:39.216563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:40.216719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:40.249: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:41.217503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:42.217951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:42.254: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:43.218053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:44.218205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:44.259: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  Nov 11 13:00:44.259: INFO: Restart count of pod container-probe-578/liveness-62b51b52-263b-4f59-8f94-0215289cba6e is now 2 (40.086019669s elapsed)
  E1111 13:00:45.218309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:46.218461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:46.262: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:47.218893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:48.219758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:48.278: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:49.220249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:50.220392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:50.282: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:51.220504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:52.221116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:52.286: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:53.221798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:54.222053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:54.290: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:55.222910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:56.223765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:56.295: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:57.224582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:00:58.224693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:00:58.299: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:00:59.224782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:00.224932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:00.303: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:01.225731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:02.226114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:02.308: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:03.226311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:04.226489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:04.311: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  Nov 11 13:01:04.311: INFO: Restart count of pod container-probe-578/liveness-62b51b52-263b-4f59-8f94-0215289cba6e is now 3 (1m0.138875052s elapsed)
  E1111 13:01:05.226712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:06.227760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:06.316: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:07.228215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:08.228369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:08.319: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:09.228625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:10.228768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:10.323: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:11.229077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:12.229131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:12.327: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:13.229319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:14.229409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:14.330: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:15.229865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:16.229943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:16.335: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:17.230053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:18.230744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:18.339: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:19.231200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:20.231253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:20.345: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:21.231769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:22.232237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:22.350: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:23.232835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:24.233010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:24.354: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  Nov 11 13:01:24.355: INFO: Restart count of pod container-probe-578/liveness-62b51b52-263b-4f59-8f94-0215289cba6e is now 4 (1m20.181971136s elapsed)
  E1111 13:01:25.234023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:26.234189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:26.359: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:27.235049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:28.235767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:28.363: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:29.236277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:30.236443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:30.367: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:31.236537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:32.237109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:32.372: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:33.237187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:34.237338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:34.376: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:35.237439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:36.237651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:36.380: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:37.238622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:38.238715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:38.384: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:39.239772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:40.240141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:40.388: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:41.240853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:42.241737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:42.394: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:43.241865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:44.241951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:44.398: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:45.242704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:46.243772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:46.402: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:47.243960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:48.244545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:48.406: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:49.245120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:50.246004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:50.411: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:51.246732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:52.247762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:52.416: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:53.248028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:54.248172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:54.419: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:55.248769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:56.248912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:56.423: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:57.249087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:01:58.249195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:01:58.426: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:01:59.249341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:00.249478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:00.430: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:02:01.249579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:02.249981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:02.434: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:02:03.250698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:04.251773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:04.438: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:02:05.251874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:06.252028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:06.443: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:02:07.252984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:08.253132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:08.446: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:02:09.253245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:10.253407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:10.450: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:02:11.253492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:12.253879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:12.454: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:02:13.253684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:14.253836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:14.458: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:02:15.254768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:16.255761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:16.462: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:02:17.256724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:18.256866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:18.466: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:02:19.257825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:20.257959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:20.470: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:02:21.258506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:22.258556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:22.474: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:02:23.258680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:24.258708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:24.478: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  E1111 13:02:25.259754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:26.260822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:26.482: INFO: Get pod liveness-62b51b52-263b-4f59-8f94-0215289cba6e in namespace container-probe-578
  Nov 11 13:02:26.482: INFO: Restart count of pod container-probe-578/liveness-62b51b52-263b-4f59-8f94-0215289cba6e is now 5 (2m22.3098699s elapsed)
  Nov 11 13:02:26.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/11/23 13:02:26.486
  STEP: Destroying namespace "container-probe-578" for this suite. @ 11/11/23 13:02:26.499
• [144.376 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 11/11/23 13:02:26.504
  Nov 11 13:02:26.504: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 13:02:26.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:02:26.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:02:26.52
  STEP: Creating configMap with name configmap-test-volume-map-a91734fc-95b2-4f8b-bf39-57266ea37f0c @ 11/11/23 13:02:26.522
  STEP: Creating a pod to test consume configMaps @ 11/11/23 13:02:26.527
  E1111 13:02:27.261771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:28.262101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:29.262992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:30.263089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:02:30.544
  Nov 11 13:02:30.547: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-configmaps-9a1e4c9c-a03b-41c8-9c02-dc17402772ff container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 13:02:30.562
  Nov 11 13:02:30.575: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5750" for this suite. @ 11/11/23 13:02:30.579
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 11/11/23 13:02:30.585
  Nov 11 13:02:30.585: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubelet-test @ 11/11/23 13:02:30.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:02:30.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:02:30.601
  E1111 13:02:31.263652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:32.264093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:32.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1130" for this suite. @ 11/11/23 13:02:32.63
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 11/11/23 13:02:32.637
  Nov 11 13:02:32.637: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 13:02:32.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:02:32.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:02:32.655
  STEP: creating all guestbook components @ 11/11/23 13:02:32.657
  Nov 11 13:02:32.657: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Nov 11 13:02:32.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6555 create -f -'
  Nov 11 13:02:32.818: INFO: stderr: ""
  Nov 11 13:02:32.818: INFO: stdout: "service/agnhost-replica created\n"
  Nov 11 13:02:32.818: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Nov 11 13:02:32.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6555 create -f -'
  Nov 11 13:02:32.980: INFO: stderr: ""
  Nov 11 13:02:32.980: INFO: stdout: "service/agnhost-primary created\n"
  Nov 11 13:02:32.980: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Nov 11 13:02:32.980: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6555 create -f -'
  E1111 13:02:33.264190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:33.327: INFO: stderr: ""
  Nov 11 13:02:33.327: INFO: stdout: "service/frontend created\n"
  Nov 11 13:02:33.327: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Nov 11 13:02:33.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6555 create -f -'
  Nov 11 13:02:33.462: INFO: stderr: ""
  Nov 11 13:02:33.462: INFO: stdout: "deployment.apps/frontend created\n"
  Nov 11 13:02:33.462: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Nov 11 13:02:33.462: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6555 create -f -'
  Nov 11 13:02:33.596: INFO: stderr: ""
  Nov 11 13:02:33.596: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Nov 11 13:02:33.596: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Nov 11 13:02:33.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6555 create -f -'
  Nov 11 13:02:33.725: INFO: stderr: ""
  Nov 11 13:02:33.725: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 11/11/23 13:02:33.725
  Nov 11 13:02:33.725: INFO: Waiting for all frontend pods to be Running.
  E1111 13:02:34.264699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:35.265041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:36.265201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:37.265867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:38.266012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:02:38.776: INFO: Waiting for frontend to serve content.
  Nov 11 13:02:38.786: INFO: Trying to add a new entry to the guestbook.
  Nov 11 13:02:38.796: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 11/11/23 13:02:38.803
  Nov 11 13:02:38.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6555 delete --grace-period=0 --force -f -'
  Nov 11 13:02:38.866: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 11 13:02:38.866: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 11/11/23 13:02:38.866
  Nov 11 13:02:38.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6555 delete --grace-period=0 --force -f -'
  Nov 11 13:02:38.928: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 11 13:02:38.928: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/11/23 13:02:38.928
  Nov 11 13:02:38.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6555 delete --grace-period=0 --force -f -'
  Nov 11 13:02:38.994: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 11 13:02:38.994: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/11/23 13:02:38.994
  Nov 11 13:02:38.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6555 delete --grace-period=0 --force -f -'
  Nov 11 13:02:39.046: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 11 13:02:39.046: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/11/23 13:02:39.046
  Nov 11 13:02:39.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6555 delete --grace-period=0 --force -f -'
  Nov 11 13:02:39.103: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 11 13:02:39.103: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/11/23 13:02:39.103
  Nov 11 13:02:39.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6555 delete --grace-period=0 --force -f -'
  Nov 11 13:02:39.157: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 11 13:02:39.157: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Nov 11 13:02:39.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6555" for this suite. @ 11/11/23 13:02:39.161
• [6.530 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 11/11/23 13:02:39.167
  Nov 11 13:02:39.167: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename secrets @ 11/11/23 13:02:39.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:02:39.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:02:39.186
  STEP: Creating secret with name s-test-opt-del-ac6a0919-0ccf-4cd9-9651-dec6c9509218 @ 11/11/23 13:02:39.193
  STEP: Creating secret with name s-test-opt-upd-0d82f7ab-ade6-4b83-89d7-ba8728229b78 @ 11/11/23 13:02:39.197
  STEP: Creating the pod @ 11/11/23 13:02:39.2
  E1111 13:02:39.270808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:40.270893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-ac6a0919-0ccf-4cd9-9651-dec6c9509218 @ 11/11/23 13:02:41.238
  STEP: Updating secret s-test-opt-upd-0d82f7ab-ade6-4b83-89d7-ba8728229b78 @ 11/11/23 13:02:41.245
  STEP: Creating secret with name s-test-opt-create-2506ff54-7dd1-4eeb-afc9-30da92393c42 @ 11/11/23 13:02:41.249
  STEP: waiting to observe update in volume @ 11/11/23 13:02:41.253
  E1111 13:02:41.271733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:42.271789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:43.272530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:44.273227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:45.274050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:46.274184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:47.274439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:48.274693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:49.274786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:50.275741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:51.275899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:52.275959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:53.276105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:54.276226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:55.276379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:56.276955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:57.277168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:58.277255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:02:59.277953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:00.278557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:01.278709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:02.279110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:03.279191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:04.280045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:05.280206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:06.281106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:07.281289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:08.282031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:09.282141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:10.282517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:11.283431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:12.283587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:13.283740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:14.284658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:15.284891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:16.285609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:17.285909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:18.286546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:19.286697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:20.287780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:21.287932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:22.287981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:23.288137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:24.288426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:25.288569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:26.289225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:27.289418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:28.290087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:29.290257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:30.290884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:31.291872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:32.292950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:33.293029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:34.293597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:35.293758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:36.294521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:37.294688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:38.295763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:39.295924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:40.296953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:41.297111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:42.297318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:43.297463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:44.298129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:45.298242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:46.298683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:47.299771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:03:47.509: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4790" for this suite. @ 11/11/23 13:03:47.512
• [68.350 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 11/11/23 13:03:47.518
  Nov 11 13:03:47.518: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:03:47.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:03:47.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:03:47.535
  STEP: Creating projection with secret that has name projected-secret-test-581def5b-27cd-46ab-97d0-8b527af80195 @ 11/11/23 13:03:47.538
  STEP: Creating a pod to test consume secrets @ 11/11/23 13:03:47.545
  E1111 13:03:48.299861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:49.299934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:50.300834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:51.300991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:03:51.563
  Nov 11 13:03:51.565: INFO: Trying to get logs from node ip-172-31-8-111 pod pod-projected-secrets-1e871b76-18eb-4183-bf5d-b189784237aa container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 13:03:51.582
  Nov 11 13:03:51.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7973" for this suite. @ 11/11/23 13:03:51.599
• [4.087 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 11/11/23 13:03:51.605
  Nov 11 13:03:51.605: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 13:03:51.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:03:51.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:03:51.628
  STEP: Creating configMap with name configmap-test-volume-map-063d0cb6-17cf-4ed2-927d-c0e54df678a8 @ 11/11/23 13:03:51.631
  STEP: Creating a pod to test consume configMaps @ 11/11/23 13:03:51.636
  E1111 13:03:52.301172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:53.301401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:54.301626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:55.301787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:03:55.654
  Nov 11 13:03:55.657: INFO: Trying to get logs from node ip-172-31-8-111 pod pod-configmaps-55733eff-c987-4703-a5e5-15e469a87d0d container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 13:03:55.663
  Nov 11 13:03:55.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7022" for this suite. @ 11/11/23 13:03:55.682
• [4.083 seconds]
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 11/11/23 13:03:55.688
  Nov 11 13:03:55.688: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename prestop @ 11/11/23 13:03:55.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:03:55.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:03:55.704
  STEP: Creating server pod server in namespace prestop-3583 @ 11/11/23 13:03:55.706
  STEP: Waiting for pods to come up. @ 11/11/23 13:03:55.713
  E1111 13:03:56.302132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:57.302389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-3583 @ 11/11/23 13:03:57.722
  E1111 13:03:58.303221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:03:59.303355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 11/11/23 13:03:59.738
  E1111 13:04:00.303709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:01.303812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:02.304276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:03.304444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:04.304590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:04:04.750: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Nov 11 13:04:04.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 11/11/23 13:04:04.754
  STEP: Destroying namespace "prestop-3583" for this suite. @ 11/11/23 13:04:04.765
• [9.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 11/11/23 13:04:04.771
  Nov 11 13:04:04.771: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pods @ 11/11/23 13:04:04.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:04:04.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:04:04.787
  E1111 13:04:05.304704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:06.305010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:07.305283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:08.305515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:09.306491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:10.306650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:04:10.96
  Nov 11 13:04:10.963: INFO: Trying to get logs from node ip-172-31-79-254 pod client-envvars-cae7d23c-2cf8-4907-b077-58baa80e95ef container env3cont: <nil>
  STEP: delete the pod @ 11/11/23 13:04:10.97
  Nov 11 13:04:10.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3933" for this suite. @ 11/11/23 13:04:10.985
• [6.219 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 11/11/23 13:04:10.99
  Nov 11 13:04:10.990: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-runtime @ 11/11/23 13:04:10.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:04:11.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:04:11.008
  STEP: create the container @ 11/11/23 13:04:11.012
  W1111 13:04:11.020227      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/11/23 13:04:11.02
  E1111 13:04:11.307478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:12.307788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/11/23 13:04:13.03
  STEP: the container should be terminated @ 11/11/23 13:04:13.033
  STEP: the termination message should be set @ 11/11/23 13:04:13.033
  Nov 11 13:04:13.033: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/11/23 13:04:13.033
  Nov 11 13:04:13.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3372" for this suite. @ 11/11/23 13:04:13.052
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 11/11/23 13:04:13.06
  Nov 11 13:04:13.060: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-probe @ 11/11/23 13:04:13.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:04:13.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:04:13.075
  E1111 13:04:13.308395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:14.308523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:15.308665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:16.309258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:17.310135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:18.310348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:19.311388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:20.312032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:21.312763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:22.313679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:23.313858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:24.314524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:25.314951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:26.315512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:27.315768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:28.316549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:29.317339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:30.317675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:31.318372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:32.319108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:33.319596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:34.320487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:35.320633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:36.321491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:37.321631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:38.322413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:39.322688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:40.323094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:41.323705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:42.324368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:43.324936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:44.325744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:45.326649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:46.327219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:47.327618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:48.328589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:49.329465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:50.330251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:51.331243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:52.331975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:53.332206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:54.332822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:55.333538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:56.334358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:57.334405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:58.335249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:04:59.335981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:00.336823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:01.337476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:02.338043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:03.338297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:04.338950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:05.339418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:06.339546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:07.340593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:08.341188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:09.341984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:10.342391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:11.343380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:12.343891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:05:13.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8053" for this suite. @ 11/11/23 13:05:13.09
• [60.036 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 11/11/23 13:05:13.097
  Nov 11 13:05:13.097: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 13:05:13.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:05:13.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:05:13.114
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/11/23 13:05:13.116
  Nov 11 13:05:13.117: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-5775 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Nov 11 13:05:13.172: INFO: stderr: ""
  Nov 11 13:05:13.172: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/11/23 13:05:13.172
  Nov 11 13:05:13.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-5775 delete pods e2e-test-httpd-pod'
  E1111 13:05:13.344544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:14.344733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:05:14.651: INFO: stderr: ""
  Nov 11 13:05:14.651: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Nov 11 13:05:14.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5775" for this suite. @ 11/11/23 13:05:14.654
• [1.563 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 11/11/23 13:05:14.66
  Nov 11 13:05:14.660: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 13:05:14.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:05:14.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:05:14.675
  STEP: Creating configMap with name cm-test-opt-del-fb99faea-0ebd-4318-baa9-fa7ae36db752 @ 11/11/23 13:05:14.681
  STEP: Creating configMap with name cm-test-opt-upd-934386b8-ae9b-4e5b-87be-aa1749770bef @ 11/11/23 13:05:14.685
  STEP: Creating the pod @ 11/11/23 13:05:14.688
  E1111 13:05:15.345194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:16.345480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-fb99faea-0ebd-4318-baa9-fa7ae36db752 @ 11/11/23 13:05:16.722
  STEP: Updating configmap cm-test-opt-upd-934386b8-ae9b-4e5b-87be-aa1749770bef @ 11/11/23 13:05:16.728
  STEP: Creating configMap with name cm-test-opt-create-d6292993-ea5c-4892-b73e-19aea6a076ce @ 11/11/23 13:05:16.734
  STEP: waiting to observe update in volume @ 11/11/23 13:05:16.739
  E1111 13:05:17.345993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:18.346324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:19.346715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:20.346882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:21.347761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:22.348154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:23.348336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:24.348747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:25.348790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:26.348942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:27.349857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:28.350014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:29.350331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:30.350955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:31.351343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:32.351418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:33.352008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:34.352175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:35.352581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:36.353540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:37.354598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:38.354699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:39.355704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:40.355845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:41.356052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:42.356409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:43.356599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:44.356754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:45.357772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:46.357926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:47.358965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:48.359057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:49.359750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:50.359905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:51.360726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:52.360956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:53.361724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:54.361894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:55.361910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:56.362157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:57.363026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:58.363111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:05:59.363256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:00.363743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:01.364650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:02.364888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:03.365938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:04.366116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:05.366928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:06.367069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:07.367631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:08.367777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:09.368229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:10.368396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:11.369112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:12.369400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:13.369984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:14.370133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:15.371117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:16.371944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:17.372486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:18.372628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:19.373257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:20.373410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:21.374220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:22.374559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:23.375400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:24.375757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:25.376507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:26.376599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:27.376986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:28.377068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:29.377822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:30.377953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:31.378410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:32.378699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:06:33.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3036" for this suite. @ 11/11/23 13:06:33.041
• [78.387 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 11/11/23 13:06:33.047
  Nov 11 13:06:33.047: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 13:06:33.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:06:33.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:06:33.065
  STEP: Creating configMap with name configmap-test-volume-4ae33108-2aa1-4016-bd1f-616f4d43cee8 @ 11/11/23 13:06:33.068
  STEP: Creating a pod to test consume configMaps @ 11/11/23 13:06:33.076
  E1111 13:06:33.379772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:34.379863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:35.380438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:36.380533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:06:37.101
  Nov 11 13:06:37.104: INFO: Trying to get logs from node ip-172-31-8-111 pod pod-configmaps-f8da58f8-e061-4992-abd1-356c6649a437 container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 13:06:37.116
  Nov 11 13:06:37.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2859" for this suite. @ 11/11/23 13:06:37.134
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 11/11/23 13:06:37.14
  Nov 11 13:06:37.140: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:06:37.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:06:37.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:06:37.155
  STEP: Creating configMap with name projected-configmap-test-volume-279630d8-3b97-4821-b1d1-6374fea8d9f3 @ 11/11/23 13:06:37.157
  STEP: Creating a pod to test consume configMaps @ 11/11/23 13:06:37.161
  E1111 13:06:37.381247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:38.381418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:39.381461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:40.381624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:06:41.179
  Nov 11 13:06:41.182: INFO: Trying to get logs from node ip-172-31-8-111 pod pod-projected-configmaps-d84d519d-0805-41c5-83b9-72cf339bc2cd container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 13:06:41.188
  Nov 11 13:06:41.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5174" for this suite. @ 11/11/23 13:06:41.204
• [4.069 seconds]
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 11/11/23 13:06:41.209
  Nov 11 13:06:41.209: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename csistoragecapacity @ 11/11/23 13:06:41.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:06:41.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:06:41.224
  STEP: getting /apis @ 11/11/23 13:06:41.228
  STEP: getting /apis/storage.k8s.io @ 11/11/23 13:06:41.231
  STEP: getting /apis/storage.k8s.io/v1 @ 11/11/23 13:06:41.232
  STEP: creating @ 11/11/23 13:06:41.233
  STEP: watching @ 11/11/23 13:06:41.248
  Nov 11 13:06:41.248: INFO: starting watch
  STEP: getting @ 11/11/23 13:06:41.254
  STEP: listing in namespace @ 11/11/23 13:06:41.256
  STEP: listing across namespaces @ 11/11/23 13:06:41.259
  STEP: patching @ 11/11/23 13:06:41.261
  STEP: updating @ 11/11/23 13:06:41.266
  Nov 11 13:06:41.271: INFO: waiting for watch events with expected annotations in namespace
  Nov 11 13:06:41.271: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 11/11/23 13:06:41.271
  STEP: deleting a collection @ 11/11/23 13:06:41.282
  Nov 11 13:06:41.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-6436" for this suite. @ 11/11/23 13:06:41.298
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 11/11/23 13:06:41.308
  Nov 11 13:06:41.309: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename daemonsets @ 11/11/23 13:06:41.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:06:41.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:06:41.325
  STEP: Creating simple DaemonSet "daemon-set" @ 11/11/23 13:06:41.344
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/11/23 13:06:41.35
  Nov 11 13:06:41.353: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:06:41.353: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:06:41.356: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 13:06:41.356: INFO: Node ip-172-31-26-213 is running 0 daemon pod, expected 1
  E1111 13:06:41.382026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:06:42.361: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:06:42.361: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:06:42.363: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 11 13:06:42.364: INFO: Node ip-172-31-79-254 is running 0 daemon pod, expected 1
  E1111 13:06:42.383210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:06:43.360: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:06:43.361: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:06:43.363: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 11 13:06:43.363: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 11/11/23 13:06:43.366
  Nov 11 13:06:43.381: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:06:43.381: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1111 13:06:43.383591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:06:43.384: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 11 13:06:43.384: INFO: Node ip-172-31-26-213 is running 0 daemon pod, expected 1
  E1111 13:06:44.383865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:06:44.388: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:06:44.388: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:06:44.391: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 11 13:06:44.391: INFO: Node ip-172-31-26-213 is running 0 daemon pod, expected 1
  E1111 13:06:45.384815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:06:45.389: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:06:45.389: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:06:45.392: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 11 13:06:45.392: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/11/23 13:06:45.396
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3456, will wait for the garbage collector to delete the pods @ 11/11/23 13:06:45.396
  Nov 11 13:06:45.455: INFO: Deleting DaemonSet.extensions daemon-set took: 6.625736ms
  Nov 11 13:06:45.555: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.139678ms
  E1111 13:06:46.384986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:06:47.260: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 13:06:47.260: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 11 13:06:47.263: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31378"},"items":null}

  Nov 11 13:06:47.265: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31378"},"items":null}

  Nov 11 13:06:47.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3456" for this suite. @ 11/11/23 13:06:47.281
• [5.978 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 11/11/23 13:06:47.286
  Nov 11 13:06:47.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename init-container @ 11/11/23 13:06:47.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:06:47.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:06:47.304
  STEP: creating the pod @ 11/11/23 13:06:47.307
  Nov 11 13:06:47.307: INFO: PodSpec: initContainers in spec.initContainers
  E1111 13:06:47.385763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:48.386627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:49.386703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:06:50.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3538" for this suite. @ 11/11/23 13:06:50.249
• [2.973 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 11/11/23 13:06:50.259
  Nov 11 13:06:50.259: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:06:50.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:06:50.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:06:50.281
  STEP: Creating projection with secret that has name projected-secret-test-map-a5ff4a4b-917b-4603-af52-bcc19bba29a3 @ 11/11/23 13:06:50.284
  STEP: Creating a pod to test consume secrets @ 11/11/23 13:06:50.289
  E1111 13:06:50.387373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:51.387483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:06:52.306
  Nov 11 13:06:52.309: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-projected-secrets-1fa6e6fc-233a-4cc3-abf3-6949a06f9e16 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 13:06:52.315
  Nov 11 13:06:52.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4602" for this suite. @ 11/11/23 13:06:52.335
• [2.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 11/11/23 13:06:52.343
  Nov 11 13:06:52.343: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename gc @ 11/11/23 13:06:52.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:06:52.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:06:52.362
  E1111 13:06:52.388238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:06:52.400: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"36f63b43-3ddf-4ccd-9d37-7a493f244dcc", Controller:(*bool)(0xc0032e3b86), BlockOwnerDeletion:(*bool)(0xc0032e3b87)}}
  Nov 11 13:06:52.413: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"8b07f4c5-38a3-4863-afc3-49f78f9fe7f2", Controller:(*bool)(0xc0032e3e66), BlockOwnerDeletion:(*bool)(0xc0032e3e67)}}
  Nov 11 13:06:52.419: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"5ac25daf-cb7c-4f46-927b-1dce08a50936", Controller:(*bool)(0xc004fc280e), BlockOwnerDeletion:(*bool)(0xc004fc280f)}}
  E1111 13:06:53.388812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:54.388968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:55.389048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:56.389240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:57.389505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:06:57.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4721" for this suite. @ 11/11/23 13:06:57.434
• [5.098 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 11/11/23 13:06:57.441
  Nov 11 13:06:57.441: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename sched-preemption @ 11/11/23 13:06:57.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:06:57.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:06:57.458
  Nov 11 13:06:57.472: INFO: Waiting up to 1m0s for all nodes to be ready
  E1111 13:06:58.389611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:06:59.389769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:00.389913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:01.390027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:02.390277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:03.390435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:04.391273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:05.391761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:06.391876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:07.392125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:08.392599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:09.392752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:10.393642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:11.394054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:12.394328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:13.394415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:14.394699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:15.394793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:16.394809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:17.395752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:18.396222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:19.396391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:20.396481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:21.396629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:22.397464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:23.398009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:24.398136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:25.398287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:26.398507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:27.398933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:28.399053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:29.399124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:30.399214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:31.399310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:32.399554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:33.399691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:34.399740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:35.399878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:36.400935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:37.401210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:38.401608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:39.401899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:40.402330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:41.402469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:42.402679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:43.403748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:44.404151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:45.404302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:46.405350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:47.405604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:48.406288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:49.406428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:50.406680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:51.406712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:52.406797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:53.407746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:54.407842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:55.407981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:56.409032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:57.409246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:07:57.492: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/11/23 13:07:57.495
  Nov 11 13:07:57.495: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/11/23 13:07:57.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:07:57.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:07:57.512
  STEP: Finding an available node @ 11/11/23 13:07:57.514
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/11/23 13:07:57.514
  E1111 13:07:58.410077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:07:59.410323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/11/23 13:07:59.53
  Nov 11 13:07:59.541: INFO: found a healthy node: ip-172-31-79-254
  E1111 13:08:00.411382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:01.411775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:02.411797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:03.412738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:04.412821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:05.412903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:08:05.603: INFO: pods created so far: [1 1 1]
  Nov 11 13:08:05.603: INFO: length of pods created so far: 3
  E1111 13:08:06.413593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:07.413736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:08:07.615: INFO: pods created so far: [2 2 1]
  E1111 13:08:08.414372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:09.414528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:10.414702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:11.414802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:12.415745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:13.415836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:14.415931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:08:14.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 11 13:08:14.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9987" for this suite. @ 11/11/23 13:08:14.681
  STEP: Destroying namespace "sched-preemption-7709" for this suite. @ 11/11/23 13:08:14.688
• [77.252 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 11/11/23 13:08:14.693
  Nov 11 13:08:14.693: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 13:08:14.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:08:14.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:08:14.707
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3301 @ 11/11/23 13:08:14.71
  STEP: changing the ExternalName service to type=NodePort @ 11/11/23 13:08:14.715
  STEP: creating replication controller externalname-service in namespace services-3301 @ 11/11/23 13:08:14.73
  I1111 13:08:14.736125      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3301, replica count: 2
  E1111 13:08:15.416973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:16.417022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:17.417238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:08:17.787710      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 11 13:08:17.787: INFO: Creating new exec pod
  E1111 13:08:18.417897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:19.418902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:20.419775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:08:20.804: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-3301 exec execpodzkdc7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov 11 13:08:20.930: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov 11 13:08:20.930: INFO: stdout: "externalname-service-qvtks"
  Nov 11 13:08:20.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-3301 exec execpodzkdc7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.88 80'
  Nov 11 13:08:21.074: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.88 80\nConnection to 10.152.183.88 80 port [tcp/http] succeeded!\n"
  Nov 11 13:08:21.074: INFO: stdout: "externalname-service-5kt4d"
  Nov 11 13:08:21.074: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-3301 exec execpodzkdc7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.254 31870'
  Nov 11 13:08:21.202: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.79.254 31870\nConnection to 172.31.79.254 31870 port [tcp/*] succeeded!\n"
  Nov 11 13:08:21.202: INFO: stdout: "externalname-service-qvtks"
  Nov 11 13:08:21.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-3301 exec execpodzkdc7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.26.213 31870'
  Nov 11 13:08:21.327: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.26.213 31870\nConnection to 172.31.26.213 31870 port [tcp/*] succeeded!\n"
  Nov 11 13:08:21.327: INFO: stdout: "externalname-service-qvtks"
  Nov 11 13:08:21.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 11 13:08:21.331: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-3301" for this suite. @ 11/11/23 13:08:21.353
• [6.668 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 11/11/23 13:08:21.362
  Nov 11 13:08:21.362: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pods @ 11/11/23 13:08:21.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:08:21.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:08:21.378
  STEP: creating pod @ 11/11/23 13:08:21.381
  E1111 13:08:21.420801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:22.421166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:08:23.400: INFO: Pod pod-hostip-ea653561-53c8-4cff-a0d4-7d62a6f739c3 has hostIP: 172.31.79.254
  Nov 11 13:08:23.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8059" for this suite. @ 11/11/23 13:08:23.404
• [2.049 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 11/11/23 13:08:23.411
  Nov 11 13:08:23.411: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 13:08:23.411
  E1111 13:08:23.421650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:08:23.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:08:23.426
  STEP: Creating a pod to test emptydir volume type on node default medium @ 11/11/23 13:08:23.429
  E1111 13:08:24.422268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:25.422704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:26.422984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:27.423071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:08:27.447
  Nov 11 13:08:27.449: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-a0696be8-e66e-4953-91c6-62f87906374d container test-container: <nil>
  STEP: delete the pod @ 11/11/23 13:08:27.464
  Nov 11 13:08:27.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2068" for this suite. @ 11/11/23 13:08:27.481
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 11/11/23 13:08:27.488
  Nov 11 13:08:27.488: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename discovery @ 11/11/23 13:08:27.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:08:27.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:08:27.505
  STEP: Setting up server cert @ 11/11/23 13:08:27.508
  STEP: Requesting APIResourceList from "/api/v1" @ 11/11/23 13:08:28.055
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 11/11/23 13:08:28.057
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 11/11/23 13:08:28.058
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 11/11/23 13:08:28.059
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 11/11/23 13:08:28.06
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 11/11/23 13:08:28.061
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 11/11/23 13:08:28.062
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 11/11/23 13:08:28.063
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 11/11/23 13:08:28.064
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 11/11/23 13:08:28.065
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 11/11/23 13:08:28.066
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 11/11/23 13:08:28.067
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 11/11/23 13:08:28.068
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 11/11/23 13:08:28.069
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 11/11/23 13:08:28.07
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 11/11/23 13:08:28.071
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 11/11/23 13:08:28.072
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 11/11/23 13:08:28.073
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 11/11/23 13:08:28.074
  Nov 11 13:08:28.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5535" for this suite. @ 11/11/23 13:08:28.078
• [0.597 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 11/11/23 13:08:28.087
  Nov 11 13:08:28.087: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 13:08:28.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:08:28.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:08:28.103
  STEP: fetching services @ 11/11/23 13:08:28.106
  Nov 11 13:08:28.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4809" for this suite. @ 11/11/23 13:08:28.113
• [0.031 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 11/11/23 13:08:28.118
  Nov 11 13:08:28.118: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubelet-test @ 11/11/23 13:08:28.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:08:28.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:08:28.134
  STEP: Waiting for pod completion @ 11/11/23 13:08:28.147
  E1111 13:08:28.423528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:29.423717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:30.424750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:31.425219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:08:32.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2644" for this suite. @ 11/11/23 13:08:32.168
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 11/11/23 13:08:32.174
  Nov 11 13:08:32.174: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 13:08:32.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:08:32.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:08:32.195
  STEP: Creating a pod to test downward api env vars @ 11/11/23 13:08:32.197
  E1111 13:08:32.426094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:33.426272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:34.426330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:35.426482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:08:36.224
  Nov 11 13:08:36.228: INFO: Trying to get logs from node ip-172-31-79-254 pod downward-api-804b3f36-2e89-4794-b287-00b87839819b container dapi-container: <nil>
  STEP: delete the pod @ 11/11/23 13:08:36.234
  Nov 11 13:08:36.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9505" for this suite. @ 11/11/23 13:08:36.249
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 11/11/23 13:08:36.255
  Nov 11 13:08:36.255: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:08:36.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:08:36.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:08:36.273
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 13:08:36.275
  E1111 13:08:36.426943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:37.427248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:38.427967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:39.428069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:08:40.295
  Nov 11 13:08:40.299: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-1d02e19e-1f49-42c0-9956-0b9f45863184 container client-container: <nil>
  STEP: delete the pod @ 11/11/23 13:08:40.305
  Nov 11 13:08:40.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8423" for this suite. @ 11/11/23 13:08:40.323
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 11/11/23 13:08:40.329
  Nov 11 13:08:40.329: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 13:08:40.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:08:40.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:08:40.346
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/11/23 13:08:40.348
  E1111 13:08:40.428764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:41.428977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:42.429908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:43.430791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:08:44.369
  Nov 11 13:08:44.371: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-a3d29645-2466-458f-8d0e-306333a648e9 container test-container: <nil>
  STEP: delete the pod @ 11/11/23 13:08:44.377
  Nov 11 13:08:44.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1011" for this suite. @ 11/11/23 13:08:44.395
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 11/11/23 13:08:44.401
  Nov 11 13:08:44.401: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename subpath @ 11/11/23 13:08:44.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:08:44.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:08:44.416
  STEP: Setting up data @ 11/11/23 13:08:44.419
  STEP: Creating pod pod-subpath-test-projected-jrkb @ 11/11/23 13:08:44.428
  STEP: Creating a pod to test atomic-volume-subpath @ 11/11/23 13:08:44.428
  E1111 13:08:44.430780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:45.430930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:46.431022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:47.432040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:48.432221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:49.433113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:50.433343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:51.433448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:52.433933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:53.434047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:54.434206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:55.434694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:56.435743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:57.436156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:58.437180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:08:59.437503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:00.437606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:01.438029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:02.438442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:03.438708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:04.439760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:05.440426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:06.440587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:07.441407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:08.441741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:09:08.49
  Nov 11 13:09:08.494: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-subpath-test-projected-jrkb container test-container-subpath-projected-jrkb: <nil>
  STEP: delete the pod @ 11/11/23 13:09:08.5
  STEP: Deleting pod pod-subpath-test-projected-jrkb @ 11/11/23 13:09:08.512
  Nov 11 13:09:08.512: INFO: Deleting pod "pod-subpath-test-projected-jrkb" in namespace "subpath-212"
  Nov 11 13:09:08.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-212" for this suite. @ 11/11/23 13:09:08.518
• [24.122 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 11/11/23 13:09:08.524
  Nov 11 13:09:08.524: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename crd-webhook @ 11/11/23 13:09:08.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:09:08.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:09:08.537
  STEP: Setting up server cert @ 11/11/23 13:09:08.539
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/11/23 13:09:08.961
  STEP: Deploying the custom resource conversion webhook pod @ 11/11/23 13:09:08.968
  STEP: Wait for the deployment to be ready @ 11/11/23 13:09:08.982
  Nov 11 13:09:08.992: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1111 13:09:09.442096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:10.442277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 13:09:11.002
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 13:09:11.009
  E1111 13:09:11.442612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:09:12.010: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Nov 11 13:09:12.016: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  E1111 13:09:12.443104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:13.443770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:14.443914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 11/11/23 13:09:14.566
  STEP: v2 custom resource should be converted @ 11/11/23 13:09:14.571
  Nov 11 13:09:14.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3218" for this suite. @ 11/11/23 13:09:15.12
• [6.604 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 11/11/23 13:09:15.129
  Nov 11 13:09:15.129: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 13:09:15.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:09:15.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:09:15.146
  Nov 11 13:09:15.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6747" for this suite. @ 11/11/23 13:09:15.189
• [0.064 seconds]
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 11/11/23 13:09:15.194
  Nov 11 13:09:15.194: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename cronjob @ 11/11/23 13:09:15.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:09:15.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:09:15.208
  STEP: Creating a cronjob @ 11/11/23 13:09:15.21
  STEP: creating @ 11/11/23 13:09:15.211
  STEP: getting @ 11/11/23 13:09:15.216
  STEP: listing @ 11/11/23 13:09:15.218
  STEP: watching @ 11/11/23 13:09:15.221
  Nov 11 13:09:15.221: INFO: starting watch
  STEP: cluster-wide listing @ 11/11/23 13:09:15.222
  STEP: cluster-wide watching @ 11/11/23 13:09:15.225
  Nov 11 13:09:15.225: INFO: starting watch
  STEP: patching @ 11/11/23 13:09:15.226
  STEP: updating @ 11/11/23 13:09:15.23
  Nov 11 13:09:15.239: INFO: waiting for watch events with expected annotations
  Nov 11 13:09:15.239: INFO: saw patched and updated annotations
  STEP: patching /status @ 11/11/23 13:09:15.239
  STEP: updating /status @ 11/11/23 13:09:15.244
  STEP: get /status @ 11/11/23 13:09:15.25
  STEP: deleting @ 11/11/23 13:09:15.253
  STEP: deleting a collection @ 11/11/23 13:09:15.266
  Nov 11 13:09:15.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9904" for this suite. @ 11/11/23 13:09:15.279
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 11/11/23 13:09:15.285
  Nov 11 13:09:15.285: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename disruption @ 11/11/23 13:09:15.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:09:15.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:09:15.303
  STEP: creating the pdb @ 11/11/23 13:09:15.306
  STEP: Waiting for the pdb to be processed @ 11/11/23 13:09:15.31
  E1111 13:09:15.444072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:16.444315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 11/11/23 13:09:17.317
  STEP: Waiting for the pdb to be processed @ 11/11/23 13:09:17.326
  STEP: patching the pdb @ 11/11/23 13:09:17.328
  STEP: Waiting for the pdb to be processed @ 11/11/23 13:09:17.337
  STEP: Waiting for the pdb to be deleted @ 11/11/23 13:09:17.346
  Nov 11 13:09:17.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4389" for this suite. @ 11/11/23 13:09:17.352
• [2.072 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 11/11/23 13:09:17.357
  Nov 11 13:09:17.357: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:09:17.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:09:17.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:09:17.373
  STEP: Creating projection with secret that has name projected-secret-test-c4344964-fb52-46f9-9ba4-61fa6ebbd9a8 @ 11/11/23 13:09:17.376
  STEP: Creating a pod to test consume secrets @ 11/11/23 13:09:17.381
  E1111 13:09:17.444752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:18.444914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:19.445271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:20.445434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:09:21.403
  Nov 11 13:09:21.406: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-projected-secrets-3f5f6a3a-703e-4515-8397-cd2ac0cc04e8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 13:09:21.411
  Nov 11 13:09:21.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-215" for this suite. @ 11/11/23 13:09:21.43
• [4.080 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 11/11/23 13:09:21.437
  Nov 11 13:09:21.437: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename deployment @ 11/11/23 13:09:21.438
  E1111 13:09:21.446099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:09:21.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:09:21.45
  Nov 11 13:09:21.453: INFO: Creating deployment "webserver-deployment"
  Nov 11 13:09:21.457: INFO: Waiting for observed generation 1
  E1111 13:09:22.447139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:23.447761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:09:23.463: INFO: Waiting for all required pods to come up
  Nov 11 13:09:23.468: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 11/11/23 13:09:23.468
  Nov 11 13:09:23.468: INFO: Waiting for deployment "webserver-deployment" to complete
  Nov 11 13:09:23.475: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Nov 11 13:09:23.485: INFO: Updating deployment webserver-deployment
  Nov 11 13:09:23.485: INFO: Waiting for observed generation 2
  E1111 13:09:24.448709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:25.448798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:09:25.492: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Nov 11 13:09:25.494: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Nov 11 13:09:25.498: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Nov 11 13:09:25.506: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Nov 11 13:09:25.506: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Nov 11 13:09:25.509: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Nov 11 13:09:25.514: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Nov 11 13:09:25.514: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Nov 11 13:09:25.521: INFO: Updating deployment webserver-deployment
  Nov 11 13:09:25.521: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Nov 11 13:09:25.528: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Nov 11 13:09:25.534: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Nov 11 13:09:25.547: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b931f1a-fa2f-4539-bc18-0b2c2926184f",
      ResourceVersion: (string) (len=5) "32832",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 11 13:09:25.557: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4165698-5be9-46db-ab45-fb0882b88edb",
      ResourceVersion: (string) (len=5) "32836",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "3b931f1a-fa2f-4539-bc18-0b2c2926184f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 62 39 33 31 66  31 61 2d 66 61 32 66 2d  |\"3b931f1a-fa2f-|
              00000120  34 35 33 39 2d 62 63 31  38 2d 30 62 32 63 32 39  |4539-bc18-0b2c29|
              00000130  32 36 31 38 34 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |26184f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 11 13:09:25.558: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Nov 11 13:09:25.558: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
      ResourceVersion: (string) (len=5) "32833",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "3b931f1a-fa2f-4539-bc18-0b2c2926184f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 62 39 33 31 66  31 61 2d 66 61 32 66 2d  |\"3b931f1a-fa2f-|
              00000120  34 35 33 39 2d 62 63 31  38 2d 30 62 32 63 32 39  |4539-bc18-0b2c29|
              00000130  32 36 31 38 34 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |26184f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 11 13:09:25.572: INFO: Pod "webserver-deployment-557759b7c7-2dmx9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2dmx9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01c868e7-1b67-4540-be3e-54fa1e18453e",
      ResourceVersion: (string) (len=5) "32703",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 35 30 2e 31 30 32 5c  |192.168.250.102\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vfd89",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vfd89",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-26-213",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.213",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.250.102",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.250.102"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835304962,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d26e880bc0be77a4b61f4d178e4d53fe3ef0c395d44dc671fb380467ca351f05",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.575: INFO: Pod "webserver-deployment-557759b7c7-46mpx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-46mpx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4282c849-1ce3-4304-887e-e408e8d2ae17",
      ResourceVersion: (string) (len=5) "32700",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 35 30 2e 39 34 5c 22  |192.168.250.94\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jkk7q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jkk7q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-26-213",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.213",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.250.94",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.250.94"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835304962,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://17b819e9677082c89e214821d07ca034ef675c72bf485d799ff6aff7224e13cc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.577: INFO: Pod "webserver-deployment-557759b7c7-569j8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-569j8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc2e48af-a7a1-421c-bf67-ad9ea9b8c63c",
      ResourceVersion: (string) (len=5) "32853",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nntz5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nntz5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.578: INFO: Pod "webserver-deployment-557759b7c7-66dfh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-66dfh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "586a89e4-b153-4eec-80cd-09341b3add0b",
      ResourceVersion: (string) (len=5) "32851",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jscvg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jscvg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.579: INFO: Pod "webserver-deployment-557759b7c7-742gt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-742gt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "816fcbda-af3f-4292-a7de-169d76d40d1d",
      ResourceVersion: (string) (len=5) "32860",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f2znk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f2znk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.581: INFO: Pod "webserver-deployment-557759b7c7-864rl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-864rl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1cf53614-bc73-481b-a06e-50084c27ae46",
      ResourceVersion: (string) (len=5) "32711",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 34 34 2e 32 34 36 5c  |192.168.144.246\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d5kwt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d5kwt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.144.246",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.144.246"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835304962,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dcaeff3cb794d724ab8ef08460b52d8558c66ac4f050d96de92e78216442de6d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.583: INFO: Pod "webserver-deployment-557759b7c7-9vgx9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9vgx9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6677eefb-428e-4fc8-b2c3-18d012feef40",
      ResourceVersion: (string) (len=5) "32847",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cj9np",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cj9np",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.584: INFO: Pod "webserver-deployment-557759b7c7-btk65" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-btk65",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6d49b25-20b6-48f3-b565-34699069b304",
      ResourceVersion: (string) (len=5) "32690",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 31 36 2e 32 33 35 5c  |192.168.216.235\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xmzlx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xmzlx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.254",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.216.235",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.216.235"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835304962,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fb6da324aef2c94443861852c73029c1f9b3e55a7150a959b486bc678278499c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.586: INFO: Pod "webserver-deployment-557759b7c7-flvr2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-flvr2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30e9a29a-bfdd-4749-8768-e45ad1afc592",
      ResourceVersion: (string) (len=5) "32849",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5db4m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5db4m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.588: INFO: Pod "webserver-deployment-557759b7c7-nblcz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nblcz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba2196a8-de0b-4a60-94bc-8fd3831daf09",
      ResourceVersion: (string) (len=5) "32854",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mdlvb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mdlvb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.589: INFO: Pod "webserver-deployment-557759b7c7-p7bmj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-p7bmj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d6dcc51-c089-4f0e-9280-56f7783db274",
      ResourceVersion: (string) (len=5) "32714",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 34 34 2e 32 34 30 5c  |192.168.144.240\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cr5ms",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cr5ms",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.144.240",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.144.240"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835304962,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d2cfe9e73b3112d5abf619b6244246d3c53987599bf0f3cbefe116f5c9eb47cc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.591: INFO: Pod "webserver-deployment-557759b7c7-pd4r4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pd4r4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67e4bf25-9278-45e6-9d1e-c99d2ab684fc",
      ResourceVersion: (string) (len=5) "32728",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 35 30 2e 39 35 5c 22  |192.168.250.95\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jrgk4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jrgk4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-26-213",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.213",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.250.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.250.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835304962,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c253f085cb79674fd41457c9474b99e46ef24231d90450c36951556ba3f22ae1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.593: INFO: Pod "webserver-deployment-557759b7c7-qtjqs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qtjqs",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "390f23d9-3179-4102-a767-36e8edd46457",
      ResourceVersion: (string) (len=5) "32841",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bvdvz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bvdvz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.595: INFO: Pod "webserver-deployment-557759b7c7-qzf8h" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qzf8h",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b84f18e2-e553-46a8-9a7f-5d811023e9b1",
      ResourceVersion: (string) (len=5) "32692",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 31 36 2e 32 31 39 5c  |192.168.216.219\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p5v6p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p5v6p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.254",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.216.219",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.216.219"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835304962,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://adda34a5223e14bf9d79b2f0d46c56c03733cbf228df1f117b84d355bc22c89c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.597: INFO: Pod "webserver-deployment-557759b7c7-wmft9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wmft9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2d8b1a5-5115-4d34-af3f-f26fc48c1583",
      ResourceVersion: (string) (len=5) "32717",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8f373f8d-9baa-437d-aee2-f5442f3f5fa6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  33 37 33 66 38 64 2d 39  |d\":\"8f373f8d-9|
              00000090  62 61 61 2d 34 33 37 64  2d 61 65 65 32 2d 66 35  |baa-437d-aee2-f5|
              000000a0  34 34 32 66 33 66 35 66  61 36 5c 22 7d 22 3a 7b  |442f3f5fa6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 34 34 2e 32 32 38 5c  |192.168.144.228\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-29dtv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-29dtv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.144.228",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.144.228"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835304962,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://453afc157026ad107a61d8c97c26027c0abe412caca58eb3937a2cf6bf22a9c2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.599: INFO: Pod "webserver-deployment-9b4f5bf69-5k9hm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5k9hm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ccb65fa-e387-4efe-b562-1c171334e9dd",
      ResourceVersion: (string) (len=5) "32816",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d4165698-5be9-46db-ab45-fb0882b88edb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  31 36 35 36 39 38 2d 35  |d\":\"d4165698-5|
              00000090  62 65 39 2d 34 36 64 62  2d 61 62 34 35 2d 66 62  |be9-46db-ab45-fb|
              000000a0  30 38 38 32 62 38 38 65  64 62 5c 22 7d 22 3a 7b  |0882b88edb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 32 35 30  2e 31 30 38 5c 22 7d 22  |.168.250.108\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dzv8j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dzv8j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-26-213",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.213",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.250.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.250.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.601: INFO: Pod "webserver-deployment-9b4f5bf69-7rcqf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7rcqf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f9a6a5e-6070-4317-be4d-263abff42d3f",
      ResourceVersion: (string) (len=5) "32857",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d4165698-5be9-46db-ab45-fb0882b88edb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  31 36 35 36 39 38 2d 35  |d\":\"d4165698-5|
              00000090  62 65 39 2d 34 36 64 62  2d 61 62 34 35 2d 66 62  |be9-46db-ab45-fb|
              000000a0  30 38 38 32 62 38 38 65  64 62 5c 22 7d 22 3a 7b  |0882b88edb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jdnfg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jdnfg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.602: INFO: Pod "webserver-deployment-9b4f5bf69-9ktcr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9ktcr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b2ace53-efe8-4dc3-8b7d-a3971210af5a",
      ResourceVersion: (string) (len=5) "32861",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d4165698-5be9-46db-ab45-fb0882b88edb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  31 36 35 36 39 38 2d 35  |d\":\"d4165698-5|
              00000090  62 65 39 2d 34 36 64 62  2d 61 62 34 35 2d 66 62  |be9-46db-ab45-fb|
              000000a0  30 38 38 32 62 38 38 65  64 62 5c 22 7d 22 3a 7b  |0882b88edb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zn7gk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zn7gk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.603: INFO: Pod "webserver-deployment-9b4f5bf69-bkq9d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bkq9d",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0af0127b-a488-4c39-9906-f0285e21728b",
      ResourceVersion: (string) (len=5) "32813",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d4165698-5be9-46db-ab45-fb0882b88edb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  31 36 35 36 39 38 2d 35  |d\":\"d4165698-5|
              00000090  62 65 39 2d 34 36 64 62  2d 61 62 34 35 2d 66 62  |be9-46db-ab45-fb|
              000000a0  30 38 38 32 62 38 38 65  64 62 5c 22 7d 22 3a 7b  |0882b88edb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 32 31 36  2e 32 31 35 5c 22 7d 22  |.168.216.215\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5dbzv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5dbzv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.254",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.216.215",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.216.215"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.605: INFO: Pod "webserver-deployment-9b4f5bf69-dbp6t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-dbp6t",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8fcbe45-cfd2-445e-af63-d2340bdc569e",
      ResourceVersion: (string) (len=5) "32821",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d4165698-5be9-46db-ab45-fb0882b88edb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  31 36 35 36 39 38 2d 35  |d\":\"d4165698-5|
              00000090  62 65 39 2d 34 36 64 62  2d 61 62 34 35 2d 66 62  |be9-46db-ab45-fb|
              000000a0  30 38 38 32 62 38 38 65  64 62 5c 22 7d 22 3a 7b  |0882b88edb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 34 34  2e 32 34 32 5c 22 7d 22  |.168.144.242\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j9bdg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j9bdg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.144.242",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.144.242"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.608: INFO: Pod "webserver-deployment-9b4f5bf69-hw2vd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hw2vd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c455b2de-b548-445b-b27a-833f95c88cdc",
      ResourceVersion: (string) (len=5) "32810",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d4165698-5be9-46db-ab45-fb0882b88edb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  31 36 35 36 39 38 2d 35  |d\":\"d4165698-5|
              00000090  62 65 39 2d 34 36 64 62  2d 61 62 34 35 2d 66 62  |be9-46db-ab45-fb|
              000000a0  30 38 38 32 62 38 38 65  64 62 5c 22 7d 22 3a 7b  |0882b88edb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 32 31 36  2e 32 33 36 5c 22 7d 22  |.168.216.236\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jf8zx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jf8zx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.254",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.216.236",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.216.236"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.610: INFO: Pod "webserver-deployment-9b4f5bf69-k7q95" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-k7q95",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3dc1063f-1931-4a51-9d27-c9f3b019b26e",
      ResourceVersion: (string) (len=5) "32858",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d4165698-5be9-46db-ab45-fb0882b88edb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  31 36 35 36 39 38 2d 35  |d\":\"d4165698-5|
              00000090  62 65 39 2d 34 36 64 62  2d 61 62 34 35 2d 66 62  |be9-46db-ab45-fb|
              000000a0  30 38 38 32 62 38 38 65  64 62 5c 22 7d 22 3a 7b  |0882b88edb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dxp9s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dxp9s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.611: INFO: Pod "webserver-deployment-9b4f5bf69-lw4gb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lw4gb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da81d934-ab03-4179-8fb1-e3a601f2ac98",
      ResourceVersion: (string) (len=5) "32824",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d4165698-5be9-46db-ab45-fb0882b88edb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  31 36 35 36 39 38 2d 35  |d\":\"d4165698-5|
              00000090  62 65 39 2d 34 36 64 62  2d 61 62 34 35 2d 66 62  |be9-46db-ab45-fb|
              000000a0  30 38 38 32 62 38 38 65  64 62 5c 22 7d 22 3a 7b  |0882b88edb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 34 34  2e 32 31 39 5c 22 7d 22  |.168.144.219\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-prfbr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-prfbr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.144.219",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.144.219"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.613: INFO: Pod "webserver-deployment-9b4f5bf69-mmc4f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-mmc4f",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e8c9147-50c7-47f0-bd97-43df0bbfe7b9",
      ResourceVersion: (string) (len=5) "32856",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d4165698-5be9-46db-ab45-fb0882b88edb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  31 36 35 36 39 38 2d 35  |d\":\"d4165698-5|
              00000090  62 65 39 2d 34 36 64 62  2d 61 62 34 35 2d 66 62  |be9-46db-ab45-fb|
              000000a0  30 38 38 32 62 38 38 65  64 62 5c 22 7d 22 3a 7b  |0882b88edb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zqlpj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zqlpj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.615: INFO: Pod "webserver-deployment-9b4f5bf69-twr9h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-twr9h",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f9fd83d-fb42-4438-99f2-65efa9ccdb33",
      ResourceVersion: (string) (len=5) "32859",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d4165698-5be9-46db-ab45-fb0882b88edb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  31 36 35 36 39 38 2d 35  |d\":\"d4165698-5|
              00000090  62 65 39 2d 34 36 64 62  2d 61 62 34 35 2d 66 62  |be9-46db-ab45-fb|
              000000a0  30 38 38 32 62 38 38 65  64 62 5c 22 7d 22 3a 7b  |0882b88edb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t4pvf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t4pvf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.616: INFO: Pod "webserver-deployment-9b4f5bf69-vhscf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vhscf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e063fac-9648-47d0-9169-d6374dbe87ee",
      ResourceVersion: (string) (len=5) "32844",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d4165698-5be9-46db-ab45-fb0882b88edb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  31 36 35 36 39 38 2d 35  |d\":\"d4165698-5|
              00000090  62 65 39 2d 34 36 64 62  2d 61 62 34 35 2d 66 62  |be9-46db-ab45-fb|
              000000a0  30 38 38 32 62 38 38 65  64 62 5c 22 7d 22 3a 7b  |0882b88edb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qm8gc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qm8gc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-26-213",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.618: INFO: Pod "webserver-deployment-9b4f5bf69-wwt8k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wwt8k",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-7284",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc901b54-3539-4ef4-b4cb-a0c9c6d70d1c",
      ResourceVersion: (string) (len=5) "32855",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835304965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d4165698-5be9-46db-ab45-fb0882b88edb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  31 36 35 36 39 38 2d 35  |d\":\"d4165698-5|
              00000090  62 65 39 2d 34 36 64 62  2d 61 62 34 35 2d 66 62  |be9-46db-ab45-fb|
              000000a0  30 38 38 32 62 38 38 65  64 62 5c 22 7d 22 3a 7b  |0882b88edb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2cg74",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2cg74",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835304965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:09:25.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7284" for this suite. @ 11/11/23 13:09:25.63
• [4.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 11/11/23 13:09:25.643
  Nov 11 13:09:25.643: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:09:25.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:09:25.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:09:25.675
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 13:09:25.677
  E1111 13:09:26.448864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:27.449149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:28.449354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:29.449443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:09:29.699
  Nov 11 13:09:29.702: INFO: Trying to get logs from node ip-172-31-8-111 pod downwardapi-volume-332f6319-66a2-4f63-970f-c17f58d566bd container client-container: <nil>
  STEP: delete the pod @ 11/11/23 13:09:29.718
  Nov 11 13:09:29.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2395" for this suite. @ 11/11/23 13:09:29.734
• [4.096 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 11/11/23 13:09:29.74
  Nov 11 13:09:29.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 13:09:29.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:09:29.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:09:29.759
  STEP: Setting up server cert @ 11/11/23 13:09:29.78
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 13:09:30.383
  STEP: Deploying the webhook pod @ 11/11/23 13:09:30.387
  STEP: Wait for the deployment to be ready @ 11/11/23 13:09:30.398
  Nov 11 13:09:30.407: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1111 13:09:30.449696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:31.449827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:09:32.416: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 11, 13, 9, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 13, 9, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 13, 9, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 13, 9, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1111 13:09:32.450835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:33.451776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 13:09:34.419
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 13:09:34.429
  E1111 13:09:34.452733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:09:35.429: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 11/11/23 13:09:35.435
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/11/23 13:09:35.435
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 11/11/23 13:09:35.449
  E1111 13:09:35.453657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:36.454106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 11/11/23 13:09:36.457
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/11/23 13:09:36.457
  E1111 13:09:37.455125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 11/11/23 13:09:37.482
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/11/23 13:09:37.482
  E1111 13:09:38.455738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:39.455803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:40.455917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:41.456115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:42.456498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 11/11/23 13:09:42.512
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/11/23 13:09:42.513
  E1111 13:09:43.456714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:44.456878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:45.457047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:46.457623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:47.457913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:09:47.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2236" for this suite. @ 11/11/23 13:09:47.59
  STEP: Destroying namespace "webhook-markers-291" for this suite. @ 11/11/23 13:09:47.605
• [17.874 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 11/11/23 13:09:47.614
  Nov 11 13:09:47.614: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 13:09:47.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:09:47.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:09:47.633
  STEP: Creating configMap with name configmap-test-volume-47cf3928-3623-46c0-8c4e-6bed77f0da86 @ 11/11/23 13:09:47.636
  STEP: Creating a pod to test consume configMaps @ 11/11/23 13:09:47.64
  E1111 13:09:48.458246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:49.458485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:09:49.655
  Nov 11 13:09:49.658: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-configmaps-8284b52e-d516-483b-a791-431441e66f70 container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 13:09:49.664
  Nov 11 13:09:49.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8967" for this suite. @ 11/11/23 13:09:49.681
• [2.072 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 11/11/23 13:09:49.687
  Nov 11 13:09:49.687: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename containers @ 11/11/23 13:09:49.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:09:49.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:09:49.701
  STEP: Creating a pod to test override arguments @ 11/11/23 13:09:49.703
  E1111 13:09:50.458689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:51.459760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:52.460679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:53.460785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:09:53.722
  Nov 11 13:09:53.724: INFO: Trying to get logs from node ip-172-31-79-254 pod client-containers-6a95f2e3-83c4-4ce3-9deb-5c77f770ee1f container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 13:09:53.73
  Nov 11 13:09:53.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4700" for this suite. @ 11/11/23 13:09:53.748
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 11/11/23 13:09:53.755
  Nov 11 13:09:53.755: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename watch @ 11/11/23 13:09:53.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:09:53.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:09:53.768
  STEP: getting a starting resourceVersion @ 11/11/23 13:09:53.77
  STEP: starting a background goroutine to produce watch events @ 11/11/23 13:09:53.773
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 11/11/23 13:09:53.773
  E1111 13:09:54.460822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:55.461101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:56.461105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:09:56.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9368" for this suite. @ 11/11/23 13:09:56.559
• [2.857 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 11/11/23 13:09:56.612
  Nov 11 13:09:56.612: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename resourcequota @ 11/11/23 13:09:56.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:09:56.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:09:56.628
  STEP: Creating resourceQuota "e2e-rq-status-pkrq5" @ 11/11/23 13:09:56.633
  Nov 11 13:09:56.639: INFO: Resource quota "e2e-rq-status-pkrq5" reports spec: hard cpu limit of 500m
  Nov 11 13:09:56.639: INFO: Resource quota "e2e-rq-status-pkrq5" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-pkrq5" /status @ 11/11/23 13:09:56.639
  STEP: Confirm /status for "e2e-rq-status-pkrq5" resourceQuota via watch @ 11/11/23 13:09:56.647
  Nov 11 13:09:56.648: INFO: observed resourceQuota "e2e-rq-status-pkrq5" in namespace "resourcequota-3510" with hard status: v1.ResourceList(nil)
  Nov 11 13:09:56.648: INFO: Found resourceQuota "e2e-rq-status-pkrq5" in namespace "resourcequota-3510" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Nov 11 13:09:56.648: INFO: ResourceQuota "e2e-rq-status-pkrq5" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 11/11/23 13:09:56.651
  Nov 11 13:09:56.656: INFO: Resource quota "e2e-rq-status-pkrq5" reports spec: hard cpu limit of 1
  Nov 11 13:09:56.656: INFO: Resource quota "e2e-rq-status-pkrq5" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-pkrq5" /status @ 11/11/23 13:09:56.656
  STEP: Confirm /status for "e2e-rq-status-pkrq5" resourceQuota via watch @ 11/11/23 13:09:56.661
  Nov 11 13:09:56.663: INFO: observed resourceQuota "e2e-rq-status-pkrq5" in namespace "resourcequota-3510" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Nov 11 13:09:56.663: INFO: Found resourceQuota "e2e-rq-status-pkrq5" in namespace "resourcequota-3510" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Nov 11 13:09:56.663: INFO: ResourceQuota "e2e-rq-status-pkrq5" /status was patched
  STEP: Get "e2e-rq-status-pkrq5" /status @ 11/11/23 13:09:56.663
  Nov 11 13:09:56.665: INFO: Resourcequota "e2e-rq-status-pkrq5" reports status: hard cpu of 1
  Nov 11 13:09:56.665: INFO: Resourcequota "e2e-rq-status-pkrq5" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-pkrq5" /status before checking Spec is unchanged @ 11/11/23 13:09:56.668
  Nov 11 13:09:56.673: INFO: Resourcequota "e2e-rq-status-pkrq5" reports status: hard cpu of 2
  Nov 11 13:09:56.673: INFO: Resourcequota "e2e-rq-status-pkrq5" reports status: hard memory of 2Gi
  Nov 11 13:09:56.675: INFO: Found resourceQuota "e2e-rq-status-pkrq5" in namespace "resourcequota-3510" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E1111 13:09:57.462022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:58.462923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:09:59.463752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:00.463907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:01.464000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:02.464473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:03.464986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:04.465565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:05.466445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:06.467197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:07.468111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:08.468257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:09.468396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:10.468495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:11.469398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:12.470068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:13.470212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:14.470312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:15.470669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:16.471193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:17.472082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:18.472228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:19.472369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:20.473092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:21.473233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:22.474029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:23.474177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:24.474318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:25.475347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:26.475745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:27.476219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:28.476364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:29.476517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:30.476656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:31.476798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:32.477784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:33.478058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:34.478202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:35.478356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:36.478503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:37.478910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:38.479052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:39.479748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:40.479842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:41.479987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:42.480449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:43.480540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:44.480705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:45.481747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:46.481835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:47.482017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:48.482163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:49.482300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:50.482441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:51.482543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:52.482716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:53.483756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:54.483908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:55.484049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:56.484192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:57.484853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:58.484988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:10:59.485095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:00.485241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:01.485384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:02.485475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:03.485626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:04.485717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:05.485871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:06.486023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:07.486693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:08.486800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:09.486831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:10.486862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:11.487865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:12.488001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:13.488097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:14.488814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:15.489612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:16.489804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:17.490305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:18.490405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:19.490544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:20.490683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:21.490709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:22.491698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:23.491786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:24.491926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:25.492294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:26.492885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:27.492932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:28.493143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:29.493211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:30.493350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:31.493491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:32.493941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:33.494057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:34.494222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:35.494360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:36.494392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:37.495335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:38.495755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:39.495852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:40.496161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:41.496263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:42.496383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:43.496554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:44.496761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:45.497194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:46.497338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:47.497592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:48.497732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:49.498652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:50.498687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:51.499753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:52.500720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:53.500847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:54.500998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:55.501333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:56.501584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:57.502266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:58.502413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:11:59.502767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:00.503751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:01.503904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:02.504174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:03.504556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:04.504712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:05.504862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:06.505010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:07.505028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:08.505175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:09.505443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:10.505592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:11.505735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:12.505839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:13.505985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:14.506081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:15.506223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:16.506364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:17.506687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:18.507748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:19.507896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:20.508036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:21.508292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:22.509233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:23.509383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:24.509553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:25.509697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:26.509838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:27.509911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:28.510066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:29.510162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:30.510357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:31.510510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:32.510697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:33.510791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:34.511546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:35.512528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:36.512678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:37.513540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:38.513684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:39.513843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:40.513989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:41.514133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:42.515057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:43.516145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:44.516286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:45.516426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:46.516562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:47.516903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:48.517044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:49.517182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:50.518121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:51.518265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:52.518360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:53.518502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:54.518839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:55.519742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:56.519892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:57.519915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:58.520059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:12:59.520200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:00.520294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:01.521042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:02.521213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:03.521295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:04.521446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:05.521547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:06.521911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:07.522912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:08.523004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:09.523745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:10.523885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:11.524020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:12.524942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:13.525033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:14.525169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:15.525315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:16.525415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:17.525586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:18.525671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:19.525768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:20.525913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:21.526993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:22.527832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:23.528696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:24.528792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:25.528939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:26.529095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:27.529256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:28.529392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:29.529497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:30.529593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:31.529736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:32.530036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:33.530179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:34.530327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:35.530470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:36.530662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:37.531646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:38.531797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:39.531954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:40.532132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:41.532281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:42.532992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:43.533089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:44.533316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:45.533404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:46.533543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:47.534383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:48.534477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:49.534637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:50.534694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:51.535749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:52.535981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:53.536076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:54.536224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:55.536598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:56.536638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:57.536588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:58.536737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:13:59.536823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:00.536984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:01.537141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:02.537219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:03.537306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:04.537445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:05.537611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:06.537774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:07.538595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:08.538732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:09.538829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:10.538971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:11.539750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:11.681: INFO: ResourceQuota "e2e-rq-status-pkrq5" Spec was unchanged and /status reset
  Nov 11 13:14:11.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3510" for this suite. @ 11/11/23 13:14:11.685
• [255.080 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 11/11/23 13:14:11.692
  Nov 11 13:14:11.692: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-probe @ 11/11/23 13:14:11.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:14:11.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:14:11.709
  STEP: Creating pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208 @ 11/11/23 13:14:11.712
  E1111 13:14:12.539974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:13.540055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/11/23 13:14:13.725
  Nov 11 13:14:13.728: INFO: Initial restart count of pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 is 0
  Nov 11 13:14:13.731: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:14.540886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:15.541039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:15.735: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:16.542075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:17.542498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:17.738: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:18.543536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:19.543773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:19.742: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:20.544475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:21.544576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:21.746: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:22.545548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:23.545696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:23.750: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:24.545892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:25.545994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:25.753: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:26.546423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:27.546695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:27.757: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:28.547752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:29.547868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:29.761: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:30.547968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:31.548115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:31.765: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:32.548769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:33.548953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:33.768: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:34.549456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:35.549546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:35.771: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:36.549632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:37.549910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:37.775: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:38.550978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:39.551771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:39.779: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:40.552365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:41.552883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:41.783: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:42.553518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:43.553665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:43.787: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:44.553752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:45.553863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:45.791: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:46.554437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:47.554685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:47.795: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:48.555790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:49.555950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:49.799: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:50.556917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:51.557011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:51.803: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:52.557278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:53.557400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:53.807: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:54.558048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:55.558283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:55.811: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:56.558717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:57.559791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:57.815: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:14:58.559865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:14:59.560028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:14:59.820: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:15:00.560955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:01.561027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:15:01.824: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  E1111 13:15:02.561449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:03.561635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:15:03.828: INFO: Get pod busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 in namespace container-probe-208
  Nov 11 13:15:03.828: INFO: Restart count of pod container-probe-208/busybox-1d6c07ab-59c9-4a26-b018-549fe940d2c5 is now 1 (50.099579272s elapsed)
  Nov 11 13:15:03.828: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/11/23 13:15:03.831
  STEP: Destroying namespace "container-probe-208" for this suite. @ 11/11/23 13:15:03.844
• [52.157 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 11/11/23 13:15:03.85
  Nov 11 13:15:03.850: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename daemonsets @ 11/11/23 13:15:03.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:15:03.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:15:03.868
  STEP: Creating a simple DaemonSet "daemon-set" @ 11/11/23 13:15:03.886
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/11/23 13:15:03.891
  Nov 11 13:15:03.895: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:15:03.895: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:15:03.897: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 13:15:03.897: INFO: Node ip-172-31-26-213 is running 0 daemon pod, expected 1
  E1111 13:15:04.562410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:15:04.902: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:15:04.902: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:15:04.904: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 13:15:04.904: INFO: Node ip-172-31-26-213 is running 0 daemon pod, expected 1
  E1111 13:15:05.562511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:15:05.902: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:15:05.902: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:15:05.905: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 11 13:15:05.905: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 11/11/23 13:15:05.908
  Nov 11 13:15:05.921: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:15:05.921: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:15:05.926: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 11 13:15:05.926: INFO: Node ip-172-31-8-111 is running 0 daemon pod, expected 1
  E1111 13:15:06.563302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:15:06.930: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:15:06.930: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:15:06.934: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 11 13:15:06.934: INFO: Node ip-172-31-8-111 is running 0 daemon pod, expected 1
  E1111 13:15:07.563374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:15:07.931: INFO: DaemonSet pods can't tolerate node ip-172-31-73-168 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:15:07.931: INFO: DaemonSet pods can't tolerate node ip-172-31-91-108 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 11 13:15:07.934: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 11 13:15:07.934: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 11/11/23 13:15:07.934
  STEP: Deleting DaemonSet "daemon-set" @ 11/11/23 13:15:07.94
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7051, will wait for the garbage collector to delete the pods @ 11/11/23 13:15:07.94
  Nov 11 13:15:07.999: INFO: Deleting DaemonSet.extensions daemon-set took: 5.826497ms
  Nov 11 13:15:08.100: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.322664ms
  E1111 13:15:08.563990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:09.564839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:10.565395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:15:10.702: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 11 13:15:10.702: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 11 13:15:10.705: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34343"},"items":null}

  Nov 11 13:15:10.708: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34343"},"items":null}

  Nov 11 13:15:10.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7051" for this suite. @ 11/11/23 13:15:10.723
• [6.879 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 11/11/23 13:15:10.729
  Nov 11 13:15:10.729: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename hostport @ 11/11/23 13:15:10.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:15:10.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:15:10.743
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 11/11/23 13:15:10.749
  E1111 13:15:11.566427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:12.566702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.79.254 on the node which pod1 resides and expect scheduled @ 11/11/23 13:15:12.762
  E1111 13:15:13.567775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:14.568141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:15.569181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:16.569880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:17.569964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:18.570131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:19.570210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:20.570390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:21.571380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:22.571708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:23.572326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:24.573362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.79.254 but use UDP protocol on the node which pod2 resides @ 11/11/23 13:15:24.795
  E1111 13:15:25.573464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:26.573622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:27.573650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:28.573743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 11/11/23 13:15:28.823
  Nov 11 13:15:28.823: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.79.254 http://127.0.0.1:54323/hostname] Namespace:hostport-5077 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:15:28.823: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:15:28.823: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:15:28.823: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-5077/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.79.254+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.79.254, port: 54323 @ 11/11/23 13:15:28.927
  Nov 11 13:15:28.927: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.79.254:54323/hostname] Namespace:hostport-5077 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:15:28.927: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:15:28.927: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:15:28.927: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-5077/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.79.254%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.79.254, port: 54323 UDP @ 11/11/23 13:15:29.002
  Nov 11 13:15:29.002: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.79.254 54323] Namespace:hostport-5077 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:15:29.002: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:15:29.003: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:15:29.003: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-5077/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.79.254+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1111 13:15:29.574796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:30.575754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:31.575912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:32.576310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:33.576483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:15:34.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-5077" for this suite. @ 11/11/23 13:15:34.105
• [23.382 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 11/11/23 13:15:34.112
  Nov 11 13:15:34.112: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pods @ 11/11/23 13:15:34.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:15:34.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:15:34.128
  Nov 11 13:15:34.132: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: creating the pod @ 11/11/23 13:15:34.133
  STEP: submitting the pod to kubernetes @ 11/11/23 13:15:34.133
  E1111 13:15:34.577249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:35.577396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:15:36.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-846" for this suite. @ 11/11/23 13:15:36.17
• [2.066 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 11/11/23 13:15:36.178
  Nov 11 13:15:36.178: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename resourcequota @ 11/11/23 13:15:36.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:15:36.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:15:36.193
  STEP: Creating a ResourceQuota with terminating scope @ 11/11/23 13:15:36.196
  STEP: Ensuring ResourceQuota status is calculated @ 11/11/23 13:15:36.2
  E1111 13:15:36.577573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:37.578241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 11/11/23 13:15:38.204
  STEP: Ensuring ResourceQuota status is calculated @ 11/11/23 13:15:38.21
  E1111 13:15:38.578859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:39.579027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 11/11/23 13:15:40.214
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 11/11/23 13:15:40.225
  E1111 13:15:40.579760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:41.580633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 11/11/23 13:15:42.23
  E1111 13:15:42.581645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:43.581745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/11/23 13:15:44.234
  STEP: Ensuring resource quota status released the pod usage @ 11/11/23 13:15:44.244
  E1111 13:15:44.582188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:45.582271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 11/11/23 13:15:46.247
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 11/11/23 13:15:46.257
  E1111 13:15:46.582923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:47.583061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 11/11/23 13:15:48.261
  E1111 13:15:48.583605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:49.583744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/11/23 13:15:50.265
  STEP: Ensuring resource quota status released the pod usage @ 11/11/23 13:15:50.278
  E1111 13:15:50.584436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:51.584594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:15:52.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3652" for this suite. @ 11/11/23 13:15:52.286
• [16.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 11/11/23 13:15:52.293
  Nov 11 13:15:52.293: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:15:52.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:15:52.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:15:52.309
  STEP: Creating secret with name projected-secret-test-000927c1-347c-41f6-be32-3ab83b027f9e @ 11/11/23 13:15:52.312
  STEP: Creating a pod to test consume secrets @ 11/11/23 13:15:52.316
  E1111 13:15:52.584651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:53.585027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:54.585507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:55.586026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:15:56.333
  Nov 11 13:15:56.337: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-projected-secrets-f296af61-f6a1-4b25-8d78-2c1c5c64f0b3 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 13:15:56.353
  Nov 11 13:15:56.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2917" for this suite. @ 11/11/23 13:15:56.37
• [4.084 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 11/11/23 13:15:56.377
  Nov 11 13:15:56.377: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename svcaccounts @ 11/11/23 13:15:56.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:15:56.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:15:56.395
  STEP: Creating ServiceAccount "e2e-sa-4gs7m"  @ 11/11/23 13:15:56.398
  Nov 11 13:15:56.403: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-4gs7m"  @ 11/11/23 13:15:56.403
  Nov 11 13:15:56.409: INFO: AutomountServiceAccountToken: true
  Nov 11 13:15:56.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-149" for this suite. @ 11/11/23 13:15:56.413
• [0.041 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 11/11/23 13:15:56.419
  Nov 11 13:15:56.419: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 13:15:56.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:15:56.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:15:56.434
  STEP: Setting up server cert @ 11/11/23 13:15:56.454
  E1111 13:15:56.586329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 13:15:57.06
  STEP: Deploying the webhook pod @ 11/11/23 13:15:57.066
  STEP: Wait for the deployment to be ready @ 11/11/23 13:15:57.077
  Nov 11 13:15:57.085: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1111 13:15:57.586809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:15:58.587056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 13:15:59.094
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 13:15:59.105
  E1111 13:15:59.587168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:16:00.105: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 11 13:16:00.112: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  E1111 13:16:00.587764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7066-crds.webhook.example.com via the AdmissionRegistration API @ 11/11/23 13:16:00.62
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/11/23 13:16:00.636
  E1111 13:16:01.587876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:02.588300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:16:02.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-784" for this suite. @ 11/11/23 13:16:03.226
  STEP: Destroying namespace "webhook-markers-5490" for this suite. @ 11/11/23 13:16:03.232
• [6.823 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 11/11/23 13:16:03.242
  Nov 11 13:16:03.242: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-probe @ 11/11/23 13:16:03.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:16:03.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:16:03.261
  E1111 13:16:03.588996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:04.589211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:05.590187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:06.590347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:07.590596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:08.590755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:09.591675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:10.591818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:11.592824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:12.593339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:13.593630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:14.593804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:15.594693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:16.595765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:17.596721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:18.596886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:19.597141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:20.597296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:21.598290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:22.598707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:23.599672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:24.599826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:16:25.325: INFO: Container started at 2023-11-11 13:16:03 +0000 UTC, pod became ready at 2023-11-11 13:16:23 +0000 UTC
  Nov 11 13:16:25.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3713" for this suite. @ 11/11/23 13:16:25.328
• [22.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 11/11/23 13:16:25.335
  Nov 11 13:16:25.335: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename var-expansion @ 11/11/23 13:16:25.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:16:25.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:16:25.366
  STEP: creating the pod with failed condition @ 11/11/23 13:16:25.369
  E1111 13:16:25.600454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:26.600645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:27.600871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:28.600957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:29.601548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:30.601707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:31.602675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:32.603112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:33.603293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:34.603943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:35.604826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:36.604977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:37.605423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:38.605521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:39.606060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:40.606197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:41.607169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:42.607611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:43.608595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:44.608742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:45.609688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:46.610193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:47.610310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:48.610467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:49.611123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:50.611211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:51.612145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:52.612611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:53.613143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:54.613277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:55.613477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:56.613568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:57.613731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:58.613818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:16:59.614524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:00.614716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:01.615751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:02.616103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:03.616175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:04.616514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:05.616831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:06.616930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:07.617298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:08.618015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:09.618898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:10.619083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:11.619244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:12.619538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:13.619650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:14.619802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:15.620232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:16.621142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:17.621468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:18.621614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:19.622602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:20.622708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:21.623056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:22.623766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:23.624074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:24.624223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:25.625122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:26.625268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:27.625584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:28.625739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:29.626551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:30.626725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:31.626825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:32.627770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:33.627890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:34.628035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:35.628170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:36.628566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:37.629262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:38.629358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:39.629588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:40.629881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:41.630046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:42.630152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:43.630185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:44.630340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:45.630687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:46.630982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:47.631709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:48.631866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:49.632463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:50.632757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:51.633664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:52.633816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:53.634310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:54.634408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:55.634738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:56.635609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:57.636502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:58.636594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:17:59.637528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:00.637687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:01.637914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:02.638014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:03.638293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:04.638435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:05.638672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:06.638975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:07.639785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:08.640270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:09.641098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:10.641238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:11.642203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:12.642422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:13.642732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:14.643749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:15.644639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:16.644906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:17.645827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:18.645928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:19.646553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:20.646693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:21.647138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:22.647752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:23.648644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:24.648786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 11/11/23 13:18:25.378
  E1111 13:18:25.649526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:18:25.889: INFO: Successfully updated pod "var-expansion-79632d85-a353-4b54-ba73-11828283d80a"
  STEP: waiting for pod running @ 11/11/23 13:18:25.889
  E1111 13:18:26.649574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:27.650634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 11/11/23 13:18:27.896
  Nov 11 13:18:27.896: INFO: Deleting pod "var-expansion-79632d85-a353-4b54-ba73-11828283d80a" in namespace "var-expansion-2240"
  Nov 11 13:18:27.903: INFO: Wait up to 5m0s for pod "var-expansion-79632d85-a353-4b54-ba73-11828283d80a" to be fully deleted
  E1111 13:18:28.650714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:29.650794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:30.651777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:31.652175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:32.653240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:33.653408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:34.653707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:35.653785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:36.654077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:37.654184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:38.654202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:39.654343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:40.654706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:41.655087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:42.655675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:43.655833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:44.656849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:45.657001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:46.657370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:47.657544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:48.658205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:49.658495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:50.658691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:51.658953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:52.659881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:53.660032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:54.660896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:55.660992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:56.661642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:57.661740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:58.662702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:18:59.662794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:18:59.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2240" for this suite. @ 11/11/23 13:18:59.973
• [154.645 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 11/11/23 13:18:59.98
  Nov 11 13:18:59.980: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename subpath @ 11/11/23 13:18:59.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:18:59.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:19:00.001
  STEP: Setting up data @ 11/11/23 13:19:00.016
  STEP: Creating pod pod-subpath-test-secret-fk5x @ 11/11/23 13:19:00.025
  STEP: Creating a pod to test atomic-volume-subpath @ 11/11/23 13:19:00.025
  E1111 13:19:00.663754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:01.663966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:02.664514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:03.664649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:04.665630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:05.665789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:06.665811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:07.665986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:08.666344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:09.666527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:10.666692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:11.667056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:12.667771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:13.667808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:14.668509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:15.668659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:16.669445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:17.669607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:18.669932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:19.670087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:20.670473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:21.671046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:22.671758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:23.671902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:19:24.089
  Nov 11 13:19:24.092: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-subpath-test-secret-fk5x container test-container-subpath-secret-fk5x: <nil>
  STEP: delete the pod @ 11/11/23 13:19:24.104
  STEP: Deleting pod pod-subpath-test-secret-fk5x @ 11/11/23 13:19:24.119
  Nov 11 13:19:24.119: INFO: Deleting pod "pod-subpath-test-secret-fk5x" in namespace "subpath-4316"
  Nov 11 13:19:24.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4316" for this suite. @ 11/11/23 13:19:24.126
• [24.152 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 11/11/23 13:19:24.132
  Nov 11 13:19:24.132: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/11/23 13:19:24.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:19:24.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:19:24.146
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 11/11/23 13:19:24.149
  Nov 11 13:19:24.149: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  E1111 13:19:24.672217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:19:25.410: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  E1111 13:19:25.672777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:26.673153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:27.673400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:28.674417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:29.675247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:19:30.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3747" for this suite. @ 11/11/23 13:19:30.543
• [6.418 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 11/11/23 13:19:30.552
  Nov 11 13:19:30.552: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-runtime @ 11/11/23 13:19:30.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:19:30.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:19:30.567
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 11/11/23 13:19:30.575
  E1111 13:19:30.675977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:31.676259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:32.676583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:33.677425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:34.677982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:35.678877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:36.679244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:37.679726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:38.680267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:39.680325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:40.680405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:41.681139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:42.681179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:43.681340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:44.682027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:45.682332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 11/11/23 13:19:46.639
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 11/11/23 13:19:46.642
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 11/11/23 13:19:46.647
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 11/11/23 13:19:46.647
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 11/11/23 13:19:46.665
  E1111 13:19:46.683315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:47.683902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 11/11/23 13:19:48.675
  E1111 13:19:48.684170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 11/11/23 13:19:49.681
  E1111 13:19:49.684496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 11/11/23 13:19:49.687
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 11/11/23 13:19:49.687
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 11/11/23 13:19:49.704
  E1111 13:19:50.685044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 11/11/23 13:19:50.71
  E1111 13:19:51.685513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:52.685666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 11/11/23 13:19:52.72
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 11/11/23 13:19:52.725
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 11/11/23 13:19:52.725
  Nov 11 13:19:52.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2473" for this suite. @ 11/11/23 13:19:52.751
• [22.205 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 11/11/23 13:19:52.757
  Nov 11 13:19:52.757: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:19:52.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:19:52.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:19:52.774
  STEP: Creating configMap with name projected-configmap-test-volume-map-5641ff86-d9e6-45c3-b5ca-d3199a4319da @ 11/11/23 13:19:52.776
  STEP: Creating a pod to test consume configMaps @ 11/11/23 13:19:52.781
  E1111 13:19:53.686539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:54.686706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:55.686908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:56.687195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:19:56.8
  Nov 11 13:19:56.803: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-projected-configmaps-5c3dee06-3bb8-4941-8864-98d4179f7179 container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 13:19:56.814
  Nov 11 13:19:56.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8024" for this suite. @ 11/11/23 13:19:56.83
• [4.078 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 11/11/23 13:19:56.836
  Nov 11 13:19:56.836: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename statefulset @ 11/11/23 13:19:56.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:19:56.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:19:56.854
  STEP: Creating service test in namespace statefulset-2923 @ 11/11/23 13:19:56.856
  Nov 11 13:19:56.870: INFO: Found 0 stateful pods, waiting for 1
  E1111 13:19:57.687612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:58.687922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:19:59.688066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:00.689123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:01.689909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:02.690061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:03.690215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:04.690393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:05.690890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:06.691145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:20:06.875: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 11/11/23 13:20:06.88
  W1111 13:20:06.890869      22 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Nov 11 13:20:06.897: INFO: Found 1 stateful pods, waiting for 2
  E1111 13:20:07.691376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:08.691470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:09.691698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:10.691806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:11.692274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:12.692410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:13.692653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:14.692737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:15.692871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:16.693595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:20:16.903: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 11 13:20:16.903: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 11/11/23 13:20:16.908
  STEP: Delete all of the StatefulSets @ 11/11/23 13:20:16.911
  STEP: Verify that StatefulSets have been deleted @ 11/11/23 13:20:16.917
  Nov 11 13:20:16.920: INFO: Deleting all statefulset in ns statefulset-2923
  Nov 11 13:20:16.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2923" for this suite. @ 11/11/23 13:20:16.939
• [20.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 11/11/23 13:20:16.948
  Nov 11 13:20:16.948: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename pods @ 11/11/23 13:20:16.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:20:16.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:20:16.965
  STEP: Create a pod @ 11/11/23 13:20:16.967
  E1111 13:20:17.694460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:18.694700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 11/11/23 13:20:18.984
  Nov 11 13:20:18.992: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Nov 11 13:20:18.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4420" for this suite. @ 11/11/23 13:20:18.995
• [2.053 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 11/11/23 13:20:19.001
  Nov 11 13:20:19.001: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename runtimeclass @ 11/11/23 13:20:19.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:20:19.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:20:19.021
  E1111 13:20:19.694854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:20.695755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:20:21.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9370" for this suite. @ 11/11/23 13:20:21.049
• [2.053 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 11/11/23 13:20:21.054
  Nov 11 13:20:21.054: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 13:20:21.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:20:21.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:20:21.073
  STEP: Setting up server cert @ 11/11/23 13:20:21.095
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 13:20:21.45
  STEP: Deploying the webhook pod @ 11/11/23 13:20:21.458
  STEP: Wait for the deployment to be ready @ 11/11/23 13:20:21.47
  Nov 11 13:20:21.478: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1111 13:20:21.695849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:22.696046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 13:20:23.488
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 13:20:23.497
  E1111 13:20:23.696430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:20:24.498: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/11/23 13:20:24.503
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/11/23 13:20:24.522
  STEP: Creating a dummy validating-webhook-configuration object @ 11/11/23 13:20:24.534
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 11/11/23 13:20:24.543
  STEP: Creating a dummy mutating-webhook-configuration object @ 11/11/23 13:20:24.549
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 11/11/23 13:20:24.556
  Nov 11 13:20:24.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8966" for this suite. @ 11/11/23 13:20:24.61
  STEP: Destroying namespace "webhook-markers-2763" for this suite. @ 11/11/23 13:20:24.62
• [3.572 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 11/11/23 13:20:24.626
  Nov 11 13:20:24.626: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 13:20:24.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:20:24.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:20:24.64
  STEP: Creating a pod to test downward api env vars @ 11/11/23 13:20:24.642
  E1111 13:20:24.697439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:25.697777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:26.698143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:27.698394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:20:28.665
  Nov 11 13:20:28.668: INFO: Trying to get logs from node ip-172-31-79-254 pod downward-api-b479f18b-09c1-4970-a80a-70758931fb40 container dapi-container: <nil>
  STEP: delete the pod @ 11/11/23 13:20:28.679
  Nov 11 13:20:28.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2680" for this suite. @ 11/11/23 13:20:28.695
  E1111 13:20:28.699405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 11/11/23 13:20:28.702
  Nov 11 13:20:28.702: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename endpointslice @ 11/11/23 13:20:28.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:20:28.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:20:28.72
  E1111 13:20:29.699528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:30.699586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:20:30.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7206" for this suite. @ 11/11/23 13:20:30.765
• [2.070 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 11/11/23 13:20:30.772
  Nov 11 13:20:30.772: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 13:20:30.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:20:30.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:20:30.791
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/11/23 13:20:30.793
  E1111 13:20:31.700036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:32.700127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:33.700933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:34.701060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:20:34.81
  Nov 11 13:20:34.813: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-804d3efe-4451-4216-9a8b-da47190adaff container test-container: <nil>
  STEP: delete the pod @ 11/11/23 13:20:34.819
  Nov 11 13:20:34.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3299" for this suite. @ 11/11/23 13:20:34.838
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 11/11/23 13:20:34.843
  Nov 11 13:20:34.843: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename crd-watch @ 11/11/23 13:20:34.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:20:34.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:20:34.859
  Nov 11 13:20:34.862: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  E1111 13:20:35.702002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:36.702309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 11/11/23 13:20:37.398
  Nov 11 13:20:37.405: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-11T13:20:37Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-11T13:20:37Z]] name:name1 resourceVersion:35974 uid:6f09834e-fbe9-48e1-af98-6aa78a0c1c02] num:map[num1:9223372036854775807 num2:1000000]]}
  E1111 13:20:37.702639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:38.702706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:39.703754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:40.703914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:41.704965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:42.705145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:43.705224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:44.705375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:45.705517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:46.706118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 11/11/23 13:20:47.405
  Nov 11 13:20:47.411: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-11T13:20:47Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-11T13:20:47Z]] name:name2 resourceVersion:36004 uid:7c4f0a9e-317d-48a4-a25f-e03763017507] num:map[num1:9223372036854775807 num2:1000000]]}
  E1111 13:20:47.706999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:48.707092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:49.707236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:50.707345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:51.707750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:52.707769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:53.708636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:54.708783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:55.708926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:56.709633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 11/11/23 13:20:57.412
  Nov 11 13:20:57.418: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-11T13:20:37Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-11T13:20:57Z]] name:name1 resourceVersion:36024 uid:6f09834e-fbe9-48e1-af98-6aa78a0c1c02] num:map[num1:9223372036854775807 num2:1000000]]}
  E1111 13:20:57.709737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:58.709891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:20:59.710036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:00.710149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:01.710555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:02.710717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:03.711749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:04.712045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:05.712201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:06.712443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 11/11/23 13:21:07.418
  Nov 11 13:21:07.426: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-11T13:20:47Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-11T13:21:07Z]] name:name2 resourceVersion:36044 uid:7c4f0a9e-317d-48a4-a25f-e03763017507] num:map[num1:9223372036854775807 num2:1000000]]}
  E1111 13:21:07.713396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:08.713577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:09.713774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:10.713873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:11.713927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:12.714765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:13.714903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:14.715762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:15.715823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:16.716075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 11/11/23 13:21:17.426
  Nov 11 13:21:17.433: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-11T13:20:37Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-11T13:20:57Z]] name:name1 resourceVersion:36064 uid:6f09834e-fbe9-48e1-af98-6aa78a0c1c02] num:map[num1:9223372036854775807 num2:1000000]]}
  E1111 13:21:17.716487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:18.716634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:19.716774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:20.716934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:21.717986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:22.718134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:23.718210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:24.718282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:25.718424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:26.718659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 11/11/23 13:21:27.434
  Nov 11 13:21:27.441: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-11T13:20:47Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-11T13:21:07Z]] name:name2 resourceVersion:36084 uid:7c4f0a9e-317d-48a4-a25f-e03763017507] num:map[num1:9223372036854775807 num2:1000000]]}
  E1111 13:21:27.719634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:28.719684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:29.720015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:30.719931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:31.720082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:32.720241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:33.720406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:34.720553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:35.720669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:36.720920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:37.721031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:21:37.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-981" for this suite. @ 11/11/23 13:21:37.956
• [63.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 11/11/23 13:21:37.964
  Nov 11 13:21:37.964: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 13:21:37.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:21:37.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:21:37.981
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/11/23 13:21:37.983
  Nov 11 13:21:37.983: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-3120 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Nov 11 13:21:38.041: INFO: stderr: ""
  Nov 11 13:21:38.041: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 11/11/23 13:21:38.041
  E1111 13:21:38.722036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:39.722815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:40.723756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:41.724114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:42.724257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/11/23 13:21:43.093
  Nov 11 13:21:43.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-3120 get pod e2e-test-httpd-pod -o json'
  Nov 11 13:21:43.141: INFO: stderr: ""
  Nov 11 13:21:43.141: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-11-11T13:21:38Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-3120\",\n        \"resourceVersion\": \"36128\",\n        \"uid\": \"f96a7615-aab3-46d2-b8d4-ee122b0a662c\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-hdpd5\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-79-254\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-hdpd5\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-11T13:21:38Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-11T13:21:39Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-11T13:21:39Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-11T13:21:38Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://76cac12a08ef0fba72384e9aaebe04fc4e8cf1736db3583afd337b9d5ec74527\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-11-11T13:21:38Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.79.254\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.216.224\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.216.224\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-11-11T13:21:38Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 11/11/23 13:21:43.141
  Nov 11 13:21:43.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-3120 replace -f -'
  Nov 11 13:21:43.291: INFO: stderr: ""
  Nov 11 13:21:43.291: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 11/11/23 13:21:43.291
  Nov 11 13:21:43.294: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-3120 delete pods e2e-test-httpd-pod'
  E1111 13:21:43.724821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:21:44.670: INFO: stderr: ""
  Nov 11 13:21:44.670: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Nov 11 13:21:44.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3120" for this suite. @ 11/11/23 13:21:44.674
• [6.715 seconds]
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 11/11/23 13:21:44.679
  Nov 11 13:21:44.679: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename endpointslice @ 11/11/23 13:21:44.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:21:44.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:21:44.699
  Nov 11 13:21:44.708: INFO: Endpoints addresses: [172.31.73.168 172.31.91.108] , ports: [6443]
  Nov 11 13:21:44.708: INFO: EndpointSlices addresses: [172.31.73.168 172.31.91.108] , ports: [6443]
  Nov 11 13:21:44.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3134" for this suite. @ 11/11/23 13:21:44.71
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 11/11/23 13:21:44.717
  Nov 11 13:21:44.717: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename events @ 11/11/23 13:21:44.718
  E1111 13:21:44.725340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:21:44.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:21:44.732
  STEP: Create set of events @ 11/11/23 13:21:44.734
  STEP: get a list of Events with a label in the current namespace @ 11/11/23 13:21:44.747
  STEP: delete a list of events @ 11/11/23 13:21:44.75
  Nov 11 13:21:44.750: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/11/23 13:21:44.77
  Nov 11 13:21:44.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5383" for this suite. @ 11/11/23 13:21:44.775
• [0.064 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 11/11/23 13:21:44.782
  Nov 11 13:21:44.782: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 13:21:44.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:21:44.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:21:44.799
  STEP: creating Agnhost RC @ 11/11/23 13:21:44.801
  Nov 11 13:21:44.801: INFO: namespace kubectl-6049
  Nov 11 13:21:44.801: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6049 create -f -'
  Nov 11 13:21:44.955: INFO: stderr: ""
  Nov 11 13:21:44.955: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/11/23 13:21:44.955
  E1111 13:21:45.726422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:21:45.959: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 11 13:21:45.959: INFO: Found 0 / 1
  E1111 13:21:46.726513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:21:46.958: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 11 13:21:46.958: INFO: Found 1 / 1
  Nov 11 13:21:46.958: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Nov 11 13:21:46.961: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 11 13:21:46.961: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov 11 13:21:46.961: INFO: wait on agnhost-primary startup in kubectl-6049 
  Nov 11 13:21:46.961: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6049 logs agnhost-primary-zl96b agnhost-primary'
  Nov 11 13:21:47.018: INFO: stderr: ""
  Nov 11 13:21:47.018: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 11/11/23 13:21:47.018
  Nov 11 13:21:47.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6049 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Nov 11 13:21:47.076: INFO: stderr: ""
  Nov 11 13:21:47.076: INFO: stdout: "service/rm2 exposed\n"
  Nov 11 13:21:47.079: INFO: Service rm2 in namespace kubectl-6049 found.
  E1111 13:21:47.726708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:48.727945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 11/11/23 13:21:49.085
  Nov 11 13:21:49.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6049 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Nov 11 13:21:49.145: INFO: stderr: ""
  Nov 11 13:21:49.145: INFO: stdout: "service/rm3 exposed\n"
  Nov 11 13:21:49.149: INFO: Service rm3 in namespace kubectl-6049 found.
  E1111 13:21:49.728616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:50.728767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:21:51.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6049" for this suite. @ 11/11/23 13:21:51.159
• [6.383 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 11/11/23 13:21:51.166
  Nov 11 13:21:51.166: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:21:51.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:21:51.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:21:51.184
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 13:21:51.186
  E1111 13:21:51.728808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:52.728890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:53.729314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:54.729405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:21:55.204
  Nov 11 13:21:55.206: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-bfb1cc08-8569-45f3-b91d-fa5b6546dff6 container client-container: <nil>
  STEP: delete the pod @ 11/11/23 13:21:55.212
  Nov 11 13:21:55.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6684" for this suite. @ 11/11/23 13:21:55.23
• [4.071 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 11/11/23 13:21:55.237
  Nov 11 13:21:55.237: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename secrets @ 11/11/23 13:21:55.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:21:55.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:21:55.253
  STEP: Creating secret with name secret-test-map-d0bbef45-d817-4b10-b975-a71a9279e1bc @ 11/11/23 13:21:55.255
  STEP: Creating a pod to test consume secrets @ 11/11/23 13:21:55.263
  E1111 13:21:55.730253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:56.730539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:57.731277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:21:58.731373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:21:59.281
  Nov 11 13:21:59.284: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-secrets-c4032c9d-d580-405a-8804-36aec9b205fa container secret-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 13:21:59.289
  Nov 11 13:21:59.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1396" for this suite. @ 11/11/23 13:21:59.305
• [4.074 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 11/11/23 13:21:59.311
  Nov 11 13:21:59.311: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 13:21:59.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:21:59.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:21:59.329
  STEP: starting the proxy server @ 11/11/23 13:21:59.331
  Nov 11 13:21:59.331: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-1892 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 11/11/23 13:21:59.368
  Nov 11 13:21:59.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1892" for this suite. @ 11/11/23 13:21:59.377
• [0.071 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 11/11/23 13:21:59.382
  Nov 11 13:21:59.382: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename tables @ 11/11/23 13:21:59.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:21:59.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:21:59.399
  Nov 11 13:21:59.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-5566" for this suite. @ 11/11/23 13:21:59.406
• [0.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 11/11/23 13:21:59.412
  Nov 11 13:21:59.412: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename init-container @ 11/11/23 13:21:59.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:21:59.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:21:59.427
  STEP: creating the pod @ 11/11/23 13:21:59.429
  Nov 11 13:21:59.429: INFO: PodSpec: initContainers in spec.initContainers
  E1111 13:21:59.732302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:00.732901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:01.733304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:22:02.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2244" for this suite. @ 11/11/23 13:22:02.705
• [3.299 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 11/11/23 13:22:02.711
  Nov 11 13:22:02.711: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 13:22:02.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:22:02.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:22:02.731
  E1111 13:22:02.733581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 13:22:02.733
  E1111 13:22:03.733908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:04.734066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:05.734698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:06.735648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:22:06.753
  Nov 11 13:22:06.756: INFO: Trying to get logs from node ip-172-31-8-111 pod downwardapi-volume-2be20f31-5ff3-4062-8fa4-80ce12e02c6e container client-container: <nil>
  STEP: delete the pod @ 11/11/23 13:22:06.771
  Nov 11 13:22:06.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7381" for this suite. @ 11/11/23 13:22:06.787
• [4.083 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 11/11/23 13:22:06.794
  Nov 11 13:22:06.794: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 13:22:06.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:22:06.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:22:06.811
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/11/23 13:22:06.813
  Nov 11 13:22:06.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6373 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Nov 11 13:22:06.874: INFO: stderr: ""
  Nov 11 13:22:06.874: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 11/11/23 13:22:06.874
  Nov 11 13:22:06.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6373 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Nov 11 13:22:06.932: INFO: stderr: ""
  Nov 11 13:22:06.932: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/11/23 13:22:06.932
  Nov 11 13:22:06.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6373 delete pods e2e-test-httpd-pod'
  E1111 13:22:07.735879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:22:08.274: INFO: stderr: ""
  Nov 11 13:22:08.274: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Nov 11 13:22:08.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6373" for this suite. @ 11/11/23 13:22:08.278
• [1.490 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 11/11/23 13:22:08.285
  Nov 11 13:22:08.285: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename svcaccounts @ 11/11/23 13:22:08.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:22:08.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:22:08.3
  Nov 11 13:22:08.316: INFO: created pod
  E1111 13:22:08.736780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:09.736874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:10.737017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:11.737460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:22:12.327
  E1111 13:22:12.738314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:13.738485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:14.738605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:15.738755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:16.739652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:17.739778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:18.740656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:19.740820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:20.740957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:21.742002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:22.742138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:23.742279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:24.742462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:25.742632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:26.742879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:27.743753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:28.744088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:29.744181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:30.744332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:31.744779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:32.744910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:33.744982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:34.745123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:35.745273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:36.745645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:37.745884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:38.746024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:39.746170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:40.747063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:41.747506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:22:42.328: INFO: polling logs
  Nov 11 13:22:42.334: INFO: Pod logs: 
  I1111 13:22:09.040337       1 log.go:194] OK: Got token
  I1111 13:22:09.040379       1 log.go:194] validating with in-cluster discovery
  I1111 13:22:09.040608       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I1111 13:22:09.040633       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9293:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000437130), NotBefore:(*jwt.NumericDate)(0xc000437218), IssuedAt:(*jwt.NumericDate)(0xc000437140), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9293", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"4df52581-e126-48aa-a8f9-f44ed8d54f22"}}}
  I1111 13:22:09.048823       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1111 13:22:09.053749       1 log.go:194] OK: Validated signature on JWT
  I1111 13:22:09.053816       1 log.go:194] OK: Got valid claims from token!
  I1111 13:22:09.053848       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9293:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001f8f58), NotBefore:(*jwt.NumericDate)(0xc0001f8fc0), IssuedAt:(*jwt.NumericDate)(0xc0001f8f60), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9293", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"4df52581-e126-48aa-a8f9-f44ed8d54f22"}}}

  Nov 11 13:22:42.334: INFO: completed pod
  Nov 11 13:22:42.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9293" for this suite. @ 11/11/23 13:22:42.343
• [34.064 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 11/11/23 13:22:42.349
  Nov 11 13:22:42.349: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/11/23 13:22:42.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:22:42.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:22:42.367
  STEP: set up a multi version CRD @ 11/11/23 13:22:42.369
  Nov 11 13:22:42.369: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  E1111 13:22:42.747880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:43.747947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:44.748968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 11/11/23 13:22:45.512
  STEP: check the new version name is served @ 11/11/23 13:22:45.524
  E1111 13:22:45.749965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 11/11/23 13:22:46.304
  E1111 13:22:46.750561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 11/11/23 13:22:46.924
  E1111 13:22:47.751226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:48.751781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:22:49.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4011" for this suite. @ 11/11/23 13:22:49.454
• [7.111 seconds]
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 11/11/23 13:22:49.46
  Nov 11 13:22:49.460: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename security-context-test @ 11/11/23 13:22:49.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:22:49.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:22:49.478
  E1111 13:22:49.752472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:50.752632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:51.753565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:52.753706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:22:53.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7930" for this suite. @ 11/11/23 13:22:53.509
• [4.054 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 11/11/23 13:22:53.515
  Nov 11 13:22:53.515: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename sched-pred @ 11/11/23 13:22:53.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:22:53.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:22:53.534
  Nov 11 13:22:53.536: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov 11 13:22:53.542: INFO: Waiting for terminating namespaces to be deleted...
  Nov 11 13:22:53.545: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-26-213 before test
  Nov 11 13:22:53.550: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-kbzzn from ingress-nginx-kubernetes-worker started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 13:22:53.550: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov 11 13:22:53.550: INFO: nginx-ingress-controller-kubernetes-worker-mhlhs from ingress-nginx-kubernetes-worker started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 13:22:53.550: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 11 13:22:53.550: INFO: calico-node-4wwdr from kube-system started at 2023-11-11 11:56:55 +0000 UTC (1 container statuses recorded)
  Nov 11 13:22:53.550: INFO: 	Container calico-node ready: true, restart count 0
  Nov 11 13:22:53.550: INFO: coredns-59cfb5bf46-r5pf5 from kube-system started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 13:22:53.550: INFO: 	Container coredns ready: true, restart count 0
  Nov 11 13:22:53.550: INFO: kube-state-metrics-78c475f58b-zzxqs from kube-system started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 13:22:53.550: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov 11 13:22:53.550: INFO: metrics-server-v0.6.3-69d7fbfdf8-rptqk from kube-system started at 2023-11-11 11:57:09 +0000 UTC (2 container statuses recorded)
  Nov 11 13:22:53.550: INFO: 	Container metrics-server ready: true, restart count 0
  Nov 11 13:22:53.550: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov 11 13:22:53.550: INFO: dashboard-metrics-scraper-5dd7cb5fc-5tw2q from kubernetes-dashboard started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 13:22:53.550: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov 11 13:22:53.550: INFO: kubernetes-dashboard-7b899cb9d9-jpjst from kubernetes-dashboard started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 13:22:53.550: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov 11 13:22:53.550: INFO: sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-sqgqx from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 13:22:53.550: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 13:22:53.550: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 11 13:22:53.550: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-79-254 before test
  Nov 11 13:22:53.555: INFO: nginx-ingress-controller-kubernetes-worker-zczgn from ingress-nginx-kubernetes-worker started at 2023-11-11 12:35:05 +0000 UTC (1 container statuses recorded)
  Nov 11 13:22:53.555: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 11 13:22:53.555: INFO: calico-node-pm2sm from kube-system started at 2023-11-11 12:02:39 +0000 UTC (1 container statuses recorded)
  Nov 11 13:22:53.555: INFO: 	Container calico-node ready: true, restart count 0
  Nov 11 13:22:53.555: INFO: alpine-nnp-false-3d609ffe-94ad-4eaa-b3b2-32ea5dd6ad6b from security-context-test-7930 started at 2023-11-11 13:22:49 +0000 UTC (1 container statuses recorded)
  Nov 11 13:22:53.555: INFO: 	Container alpine-nnp-false-3d609ffe-94ad-4eaa-b3b2-32ea5dd6ad6b ready: false, restart count 0
  Nov 11 13:22:53.555: INFO: sonobuoy from sonobuoy started at 2023-11-11 12:08:18 +0000 UTC (1 container statuses recorded)
  Nov 11 13:22:53.555: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov 11 13:22:53.555: INFO: sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-868rn from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 13:22:53.555: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 13:22:53.555: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 11 13:22:53.555: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-8-111 before test
  Nov 11 13:22:53.559: INFO: nginx-ingress-controller-kubernetes-worker-bmzsg from ingress-nginx-kubernetes-worker started at 2023-11-11 12:00:58 +0000 UTC (1 container statuses recorded)
  Nov 11 13:22:53.559: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 11 13:22:53.559: INFO: calico-node-pvf6s from kube-system started at 2023-11-11 12:00:29 +0000 UTC (1 container statuses recorded)
  Nov 11 13:22:53.559: INFO: 	Container calico-node ready: true, restart count 0
  Nov 11 13:22:53.559: INFO: sonobuoy-e2e-job-88b8298f84e34478 from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 13:22:53.559: INFO: 	Container e2e ready: true, restart count 0
  Nov 11 13:22:53.559: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 13:22:53.559: INFO: sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-cst9b from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 13:22:53.560: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 13:22:53.560: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/11/23 13:22:53.56
  E1111 13:22:53.754631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:54.754705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/11/23 13:22:55.575
  STEP: Trying to apply a random label on the found node. @ 11/11/23 13:22:55.604
  STEP: verifying the node has the label kubernetes.io/e2e-32ab5713-569f-4b20-a178-cc56e7bc07c0 95 @ 11/11/23 13:22:55.611
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 11/11/23 13:22:55.614
  E1111 13:22:55.755372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:56.755673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.79.254 on the node which pod4 resides and expect not scheduled @ 11/11/23 13:22:57.627
  E1111 13:22:57.756082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:58.756205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:22:59.756852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:00.757038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:01.757101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:02.757263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:03.757996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:04.758150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:05.758794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:06.759048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:07.759914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:08.760071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:09.760126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:10.760226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:11.760721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:12.760851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:13.761643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:14.761829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:15.762795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:16.763043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:17.763395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:18.764135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:19.764817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:20.765175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:21.765951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:22.766101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:23.766847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:24.767779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:25.768549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:26.768813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:27.769068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:28.769404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:29.769688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:30.769844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:31.770389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:32.770562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:33.771386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:34.771779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:35.772194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:36.772462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:37.773126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:38.773316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:39.773965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:40.774136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:41.774933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:42.775043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:43.775633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:44.775782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:45.775950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:46.776336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:47.776898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:48.777044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:49.777297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:50.778267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:51.779253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:52.779771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:53.779823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:54.779911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:55.780936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:56.781296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:57.781520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:58.782008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:23:59.782228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:00.782409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:01.783458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:02.783576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:03.784328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:04.784485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:05.785353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:06.785659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:07.785790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:08.785934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:09.786155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:10.786311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:11.787047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:12.787749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:13.787867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:14.788025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:15.788258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:16.788848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:17.789018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:18.789819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:19.789969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:20.790190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:21.790600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:22.790727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:23.790811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:24.791764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:25.792043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:26.792193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:27.792359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:28.793120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:29.793284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:30.794138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:31.794504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:32.794708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:33.795779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:34.796057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:35.796203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:36.797101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:37.797245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:38.798111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:39.798281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:40.798295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:41.798699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:42.798704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:43.799760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:44.800203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:45.800377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:46.801055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:47.801540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:48.801776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:49.802490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:50.803418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:51.804203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:52.804953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:53.805044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:54.805111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:55.805423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:56.806240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:57.806381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:58.807143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:24:59.807326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:00.807392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:01.807753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:02.807894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:03.808036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:04.808804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:05.808946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:06.809797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:07.809906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:08.810484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:09.810594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:10.810686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:11.811060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:12.811649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:13.811751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:14.811845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:15.812417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:16.813335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:17.813572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:18.814455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:19.814624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:20.814976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:21.815342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:22.815439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:23.815594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:24.815940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:25.816036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:26.816587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:27.817549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:28.817644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:29.817795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:30.818593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:31.819019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:32.819114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:33.819209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:34.819364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:35.819763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:36.820752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:37.820833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:38.821506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:39.821646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:40.822560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:41.822987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:42.823748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:43.823891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:44.824236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:45.824334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:46.825295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:47.825436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:48.825550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:49.825708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:50.826624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:51.827629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:52.828078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:53.828228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:54.828860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:55.829008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:56.829723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:57.829822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:58.830333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:25:59.830824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:00.830990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:01.831299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:02.832129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:03.832278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:04.832360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:05.832499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:06.832667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:07.832816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:08.832937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:09.833109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:10.833300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:11.834074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:12.834685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:13.835746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:14.836404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:15.836556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:16.837408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:17.837548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:18.837738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:19.838713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:20.838779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:21.839172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:22.839953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:23.840109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:24.840198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:25.840426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:26.840822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:27.841822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:28.842546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:29.842700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:30.843750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:31.844125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:32.844546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:33.844661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:34.845397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:35.845535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:36.846338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:37.846496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:38.846686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:39.846827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:40.847215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:41.847592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:42.847734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:43.847852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:44.848054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:45.848196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:46.849082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:47.849235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:48.849467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:49.849591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:50.849806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:51.850244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:52.850685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:53.851764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:54.852283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:55.852364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:56.853048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:57.853138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:58.853310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:26:59.853441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:00.853844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:01.854030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:02.854428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:03.854563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:04.854688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:05.854825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:06.855696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:07.855833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:08.856013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:09.856157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:10.856251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:11.856931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:12.857276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:13.858187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:14.859059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:15.859221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:16.859542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:17.859682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:18.859749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:19.859893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:20.860687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:21.861083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:22.861805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:23.861971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:24.862927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:25.863748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:26.864366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:27.864502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:28.865355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:29.865491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:30.865580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:31.866038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:32.866665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:33.866696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:34.867072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:35.867763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:36.868642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:37.868748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:38.869727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:39.869894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:40.870895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:41.871286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:42.871757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:43.871905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:44.872002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:45.872078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:46.872164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:47.872330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:48.872610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:49.872638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:50.873520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:51.873983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:52.874932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:53.875757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:54.876149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:55.876325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:56.877303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-32ab5713-569f-4b20-a178-cc56e7bc07c0 off the node ip-172-31-79-254 @ 11/11/23 13:27:57.634
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-32ab5713-569f-4b20-a178-cc56e7bc07c0 @ 11/11/23 13:27:57.645
  Nov 11 13:27:57.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3317" for this suite. @ 11/11/23 13:27:57.655
• [304.146 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 11/11/23 13:27:57.661
  Nov 11 13:27:57.661: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubelet-test @ 11/11/23 13:27:57.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:27:57.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:27:57.677
  E1111 13:27:57.878115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:27:58.878370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:27:59.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3407" for this suite. @ 11/11/23 13:27:59.714
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 11/11/23 13:27:59.72
  Nov 11 13:27:59.720: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename subpath @ 11/11/23 13:27:59.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:27:59.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:27:59.737
  STEP: Setting up data @ 11/11/23 13:27:59.739
  STEP: Creating pod pod-subpath-test-downwardapi-knnl @ 11/11/23 13:27:59.746
  STEP: Creating a pod to test atomic-volume-subpath @ 11/11/23 13:27:59.746
  E1111 13:27:59.879336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:00.880039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:01.880377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:02.880869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:03.881631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:04.882098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:05.882368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:06.882686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:07.883759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:08.883899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:09.884327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:10.884423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:11.884816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:12.884914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:13.885582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:14.886406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:15.887016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:16.887240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:17.887721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:18.887813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:19.887926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:20.888083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:21.888431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:22.889245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:28:23.803
  Nov 11 13:28:23.806: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-subpath-test-downwardapi-knnl container test-container-subpath-downwardapi-knnl: <nil>
  STEP: delete the pod @ 11/11/23 13:28:23.82
  STEP: Deleting pod pod-subpath-test-downwardapi-knnl @ 11/11/23 13:28:23.834
  Nov 11 13:28:23.834: INFO: Deleting pod "pod-subpath-test-downwardapi-knnl" in namespace "subpath-6543"
  Nov 11 13:28:23.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6543" for this suite. @ 11/11/23 13:28:23.84
• [24.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 11/11/23 13:28:23.847
  Nov 11 13:28:23.847: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename limitrange @ 11/11/23 13:28:23.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:28:23.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:28:23.864
  STEP: Creating LimitRange "e2e-limitrange-cpkkc" in namespace "limitrange-9214" @ 11/11/23 13:28:23.866
  STEP: Creating another limitRange in another namespace @ 11/11/23 13:28:23.87
  Nov 11 13:28:23.884: INFO: Namespace "e2e-limitrange-cpkkc-218" created
  Nov 11 13:28:23.884: INFO: Creating LimitRange "e2e-limitrange-cpkkc" in namespace "e2e-limitrange-cpkkc-218"
  E1111 13:28:23.889735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-cpkkc" @ 11/11/23 13:28:23.89
  Nov 11 13:28:23.893: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-cpkkc" in "limitrange-9214" namespace @ 11/11/23 13:28:23.893
  Nov 11 13:28:23.898: INFO: LimitRange "e2e-limitrange-cpkkc" has been patched
  STEP: Delete LimitRange "e2e-limitrange-cpkkc" by Collection with labelSelector: "e2e-limitrange-cpkkc=patched" @ 11/11/23 13:28:23.898
  STEP: Confirm that the limitRange "e2e-limitrange-cpkkc" has been deleted @ 11/11/23 13:28:23.906
  Nov 11 13:28:23.906: INFO: Requesting list of LimitRange to confirm quantity
  Nov 11 13:28:23.909: INFO: Found 0 LimitRange with label "e2e-limitrange-cpkkc=patched"
  Nov 11 13:28:23.909: INFO: LimitRange "e2e-limitrange-cpkkc" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-cpkkc" @ 11/11/23 13:28:23.909
  Nov 11 13:28:23.911: INFO: Found 1 limitRange
  Nov 11 13:28:23.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9214" for this suite. @ 11/11/23 13:28:23.915
  STEP: Destroying namespace "e2e-limitrange-cpkkc-218" for this suite. @ 11/11/23 13:28:23.92
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 11/11/23 13:28:23.926
  Nov 11 13:28:23.926: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 13:28:23.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:28:23.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:28:23.944
  Nov 11 13:28:23.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9381" for this suite. @ 11/11/23 13:28:23.952
• [0.033 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 11/11/23 13:28:23.96
  Nov 11 13:28:23.960: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename dns @ 11/11/23 13:28:23.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:28:23.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:28:23.976
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-17.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-17.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 11/11/23 13:28:23.978
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-17.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-17.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 11/11/23 13:28:23.978
  STEP: creating a pod to probe /etc/hosts @ 11/11/23 13:28:23.978
  STEP: submitting the pod to kubernetes @ 11/11/23 13:28:23.978
  E1111 13:28:24.889959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:25.890259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/11/23 13:28:25.994
  STEP: looking for the results for each expected name from probers @ 11/11/23 13:28:25.997
  Nov 11 13:28:26.010: INFO: DNS probes using dns-17/dns-test-94900fe0-84d1-4660-8d6a-abe13510b93b succeeded

  Nov 11 13:28:26.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/11/23 13:28:26.013
  STEP: Destroying namespace "dns-17" for this suite. @ 11/11/23 13:28:26.023
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 11/11/23 13:28:26.029
  Nov 11 13:28:26.029: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename replicaset @ 11/11/23 13:28:26.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:28:26.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:28:26.043
  Nov 11 13:28:26.045: INFO: Creating ReplicaSet my-hostname-basic-8ce060fa-0b55-410c-91c5-ccc78d3b5eab
  Nov 11 13:28:26.053: INFO: Pod name my-hostname-basic-8ce060fa-0b55-410c-91c5-ccc78d3b5eab: Found 0 pods out of 1
  E1111 13:28:26.890750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:27.891768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:28.891951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:29.892089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:30.892242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:28:31.057: INFO: Pod name my-hostname-basic-8ce060fa-0b55-410c-91c5-ccc78d3b5eab: Found 1 pods out of 1
  Nov 11 13:28:31.057: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-8ce060fa-0b55-410c-91c5-ccc78d3b5eab" is running
  Nov 11 13:28:31.060: INFO: Pod "my-hostname-basic-8ce060fa-0b55-410c-91c5-ccc78d3b5eab-ttqxq" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-11 13:28:26 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-11 13:28:27 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-11 13:28:27 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-11 13:28:26 +0000 UTC Reason: Message:}])
  Nov 11 13:28:31.060: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/11/23 13:28:31.06
  Nov 11 13:28:31.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7301" for this suite. @ 11/11/23 13:28:31.072
• [5.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 11/11/23 13:28:31.078
  Nov 11 13:28:31.078: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename events @ 11/11/23 13:28:31.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:28:31.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:28:31.099
  STEP: creating a test event @ 11/11/23 13:28:31.101
  STEP: listing all events in all namespaces @ 11/11/23 13:28:31.105
  STEP: patching the test event @ 11/11/23 13:28:31.109
  STEP: fetching the test event @ 11/11/23 13:28:31.115
  STEP: updating the test event @ 11/11/23 13:28:31.121
  STEP: getting the test event @ 11/11/23 13:28:31.13
  STEP: deleting the test event @ 11/11/23 13:28:31.133
  STEP: listing all events in all namespaces @ 11/11/23 13:28:31.142
  Nov 11 13:28:31.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1323" for this suite. @ 11/11/23 13:28:31.148
• [0.075 seconds]
------------------------------
SSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 11/11/23 13:28:31.153
  Nov 11 13:28:31.153: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename sysctl @ 11/11/23 13:28:31.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:28:31.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:28:31.176
  STEP: Creating a pod with one valid and two invalid sysctls @ 11/11/23 13:28:31.178
  Nov 11 13:28:31.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-870" for this suite. @ 11/11/23 13:28:31.185
• [0.039 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 11/11/23 13:28:31.192
  Nov 11 13:28:31.192: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename replication-controller @ 11/11/23 13:28:31.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:28:31.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:28:31.21
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 11/11/23 13:28:31.212
  E1111 13:28:31.892770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:32.892945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 11/11/23 13:28:33.228
  STEP: Then the orphan pod is adopted @ 11/11/23 13:28:33.232
  E1111 13:28:33.893712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:28:34.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8071" for this suite. @ 11/11/23 13:28:34.242
• [3.055 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 11/11/23 13:28:34.247
  Nov 11 13:28:34.247: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:28:34.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:28:34.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:28:34.266
  STEP: Creating configMap with name projected-configmap-test-volume-map-96d87c0f-60b6-49e6-ad2b-a1cd7a7b6081 @ 11/11/23 13:28:34.268
  STEP: Creating a pod to test consume configMaps @ 11/11/23 13:28:34.273
  E1111 13:28:34.894198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:35.894402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:36.895006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:37.895781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:28:38.29
  Nov 11 13:28:38.293: INFO: Trying to get logs from node ip-172-31-8-111 pod pod-projected-configmaps-dba33f0e-fcba-45bd-a9d5-427d02a9f232 container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 13:28:38.298
  Nov 11 13:28:38.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4390" for this suite. @ 11/11/23 13:28:38.318
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 11/11/23 13:28:38.332
  Nov 11 13:28:38.332: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename job @ 11/11/23 13:28:38.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:28:38.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:28:38.351
  STEP: Creating a job @ 11/11/23 13:28:38.353
  STEP: Ensuring job reaches completions @ 11/11/23 13:28:38.358
  E1111 13:28:38.895821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:39.895968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:40.895979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:41.896416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:42.896682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:43.896841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:44.897497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:45.897778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:46.898648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:47.898709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:28:48.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2113" for this suite. @ 11/11/23 13:28:48.365
• [10.039 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 11/11/23 13:28:48.371
  Nov 11 13:28:48.371: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename taint-multiple-pods @ 11/11/23 13:28:48.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:28:48.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:28:48.387
  Nov 11 13:28:48.392: INFO: Waiting up to 1m0s for all nodes to be ready
  E1111 13:28:48.899074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:49.899006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:50.899487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:51.900033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:52.900847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:53.901140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:54.901251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:55.901346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:56.901616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:57.901774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:58.902440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:28:59.902524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:00.903112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:01.903509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:02.904335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:03.904471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:04.904953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:05.905104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:06.906088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:07.906173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:08.906938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:09.907039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:10.907740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:11.908139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:12.908970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:13.909064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:14.909134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:15.909278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:16.909366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:17.909502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:18.910352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:19.910447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:20.911314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:21.912201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:22.912885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:23.912972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:24.913594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:25.913737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:26.913778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:27.913954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:28.914683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:29.915747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:30.916615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:31.917059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:32.917612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:33.917697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:34.918675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:35.918816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:36.919640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:37.919772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:38.920570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:39.920676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:40.921388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:41.922285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:42.923308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:43.923751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:44.924644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:45.924746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:46.925542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:47.925632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:29:48.413: INFO: Waiting for terminating namespaces to be deleted...
  Nov 11 13:29:48.416: INFO: Starting informer...
  STEP: Starting pods... @ 11/11/23 13:29:48.416
  Nov 11 13:29:48.630: INFO: Pod1 is running on ip-172-31-79-254. Tainting Node
  E1111 13:29:48.925695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:49.926290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:29:50.848: INFO: Pod2 is running on ip-172-31-79-254. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/11/23 13:29:50.848
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/11/23 13:29:50.858
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 11/11/23 13:29:50.861
  E1111 13:29:50.926478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:51.926546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:52.926699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:53.926781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:54.927775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:55.928682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:29:56.506: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E1111 13:29:56.929559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:57.929712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:58.929833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:29:59.929906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:00.930067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:01.930501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:02.930635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:03.930685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:04.930785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:05.930882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:06.930910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:07.931747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:08.931906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:09.932874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:10.933020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:11.933430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:12.933569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:13.933716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:14.934634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:15.935333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:16.536: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Nov 11 13:30:16.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/11/23 13:30:16.549
  STEP: Destroying namespace "taint-multiple-pods-2390" for this suite. @ 11/11/23 13:30:16.552
• [88.191 seconds]
------------------------------
SS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 11/11/23 13:30:16.562
  Nov 11 13:30:16.562: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename subjectreview @ 11/11/23 13:30:16.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:30:16.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:30:16.589
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-5422" @ 11/11/23 13:30:16.591
  Nov 11 13:30:16.597: INFO: saUsername: "system:serviceaccount:subjectreview-5422:e2e"
  Nov 11 13:30:16.597: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-5422"}
  Nov 11 13:30:16.597: INFO: saUID: "9ead4b9c-4847-4894-96ba-8d6414fe9dea"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-5422:e2e" @ 11/11/23 13:30:16.597
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-5422:e2e" @ 11/11/23 13:30:16.598
  Nov 11 13:30:16.599: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-5422:e2e" api 'list' configmaps in "subjectreview-5422" namespace @ 11/11/23 13:30:16.599
  Nov 11 13:30:16.600: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-5422:e2e" @ 11/11/23 13:30:16.6
  Nov 11 13:30:16.601: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Nov 11 13:30:16.601: INFO: LocalSubjectAccessReview has been verified
  Nov 11 13:30:16.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-5422" for this suite. @ 11/11/23 13:30:16.605
• [0.047 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 11/11/23 13:30:16.61
  Nov 11 13:30:16.610: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename dns @ 11/11/23 13:30:16.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:30:16.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:30:16.625
  STEP: Creating a test headless service @ 11/11/23 13:30:16.627
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6116.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-6116.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 11/11/23 13:30:16.63
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6116.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6116.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 11/11/23 13:30:16.63
  STEP: creating a pod to probe DNS @ 11/11/23 13:30:16.63
  STEP: submitting the pod to kubernetes @ 11/11/23 13:30:16.63
  E1111 13:30:16.935406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:17.935767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/11/23 13:30:18.65
  STEP: looking for the results for each expected name from probers @ 11/11/23 13:30:18.653
  Nov 11 13:30:18.666: INFO: DNS probes using dns-6116/dns-test-204d70be-9d41-440b-96fe-7438648f37f2 succeeded

  Nov 11 13:30:18.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/11/23 13:30:18.669
  STEP: deleting the test headless service @ 11/11/23 13:30:18.679
  STEP: Destroying namespace "dns-6116" for this suite. @ 11/11/23 13:30:18.692
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 11/11/23 13:30:18.7
  Nov 11 13:30:18.700: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename proxy @ 11/11/23 13:30:18.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:30:18.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:30:18.718
  STEP: starting an echo server on multiple ports @ 11/11/23 13:30:18.729
  STEP: creating replication controller proxy-service-7lpcl in namespace proxy-6116 @ 11/11/23 13:30:18.729
  I1111 13:30:18.737897      22 runners.go:197] Created replication controller with name: proxy-service-7lpcl, namespace: proxy-6116, replica count: 1
  E1111 13:30:18.936722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:30:19.789658      22 runners.go:197] proxy-service-7lpcl Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1111 13:30:19.936961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:30:20.789902      22 runners.go:197] proxy-service-7lpcl Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1111 13:30:20.937189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:30:21.790996      22 runners.go:197] proxy-service-7lpcl Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1111 13:30:21.937246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:30:22.792063      22 runners.go:197] proxy-service-7lpcl Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1111 13:30:22.937298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:30:23.792244      22 runners.go:197] proxy-service-7lpcl Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1111 13:30:23.937539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:30:24.792472      22 runners.go:197] proxy-service-7lpcl Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1111 13:30:24.937631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:30:25.792591      22 runners.go:197] proxy-service-7lpcl Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1111 13:30:25.937877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:30:26.792923      22 runners.go:197] proxy-service-7lpcl Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1111 13:30:26.938215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:30:27.793160      22 runners.go:197] proxy-service-7lpcl Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1111 13:30:27.938454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:30:28.794156      22 runners.go:197] proxy-service-7lpcl Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1111 13:30:28.939457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:30:29.794635      22 runners.go:197] proxy-service-7lpcl Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 11 13:30:29.798: INFO: setup took 11.077049544s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 11/11/23 13:30:29.798
  Nov 11 13:30:29.802: INFO: (0) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.054837ms)
  Nov 11 13:30:29.802: INFO: (0) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 4.428424ms)
  Nov 11 13:30:29.803: INFO: (0) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 4.793398ms)
  Nov 11 13:30:29.803: INFO: (0) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.867475ms)
  Nov 11 13:30:29.803: INFO: (0) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 4.960851ms)
  Nov 11 13:30:29.803: INFO: (0) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 5.364442ms)
  Nov 11 13:30:29.803: INFO: (0) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 5.551472ms)
  Nov 11 13:30:29.803: INFO: (0) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 5.643609ms)
  Nov 11 13:30:29.804: INFO: (0) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 5.646842ms)
  Nov 11 13:30:29.804: INFO: (0) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 5.730574ms)
  Nov 11 13:30:29.804: INFO: (0) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 5.924299ms)
  Nov 11 13:30:29.806: INFO: (0) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 8.708486ms)
  Nov 11 13:30:29.807: INFO: (0) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 8.682876ms)
  Nov 11 13:30:29.807: INFO: (0) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 8.915425ms)
  Nov 11 13:30:29.807: INFO: (0) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 8.989937ms)
  Nov 11 13:30:29.807: INFO: (0) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 9.224262ms)
  Nov 11 13:30:29.810: INFO: (1) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 3.021545ms)
  Nov 11 13:30:29.810: INFO: (1) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 3.377602ms)
  Nov 11 13:30:29.810: INFO: (1) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 3.494713ms)
  Nov 11 13:30:29.811: INFO: (1) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 3.895872ms)
  Nov 11 13:30:29.811: INFO: (1) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 4.217922ms)
  Nov 11 13:30:29.812: INFO: (1) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 4.620484ms)
  Nov 11 13:30:29.812: INFO: (1) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 4.685206ms)
  Nov 11 13:30:29.812: INFO: (1) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 4.773743ms)
  Nov 11 13:30:29.812: INFO: (1) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.854702ms)
  Nov 11 13:30:29.812: INFO: (1) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 5.127633ms)
  Nov 11 13:30:29.812: INFO: (1) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 5.269247ms)
  Nov 11 13:30:29.812: INFO: (1) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 5.240087ms)
  Nov 11 13:30:29.813: INFO: (1) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 5.522718ms)
  Nov 11 13:30:29.813: INFO: (1) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 5.658384ms)
  Nov 11 13:30:29.813: INFO: (1) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 5.704279ms)
  Nov 11 13:30:29.813: INFO: (1) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 5.728894ms)
  Nov 11 13:30:29.816: INFO: (2) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 2.990064ms)
  Nov 11 13:30:29.816: INFO: (2) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 3.1992ms)
  Nov 11 13:30:29.818: INFO: (2) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 4.676108ms)
  Nov 11 13:30:29.818: INFO: (2) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 4.68214ms)
  Nov 11 13:30:29.818: INFO: (2) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.870187ms)
  Nov 11 13:30:29.818: INFO: (2) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 4.811428ms)
  Nov 11 13:30:29.818: INFO: (2) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 4.826029ms)
  Nov 11 13:30:29.818: INFO: (2) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.746215ms)
  Nov 11 13:30:29.818: INFO: (2) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.815663ms)
  Nov 11 13:30:29.818: INFO: (2) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.839922ms)
  Nov 11 13:30:29.818: INFO: (2) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 4.756081ms)
  Nov 11 13:30:29.818: INFO: (2) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 5.029934ms)
  Nov 11 13:30:29.818: INFO: (2) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 5.152112ms)
  Nov 11 13:30:29.818: INFO: (2) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.508171ms)
  Nov 11 13:30:29.819: INFO: (2) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 5.6905ms)
  Nov 11 13:30:29.819: INFO: (2) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 6.394212ms)
  Nov 11 13:30:29.824: INFO: (3) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 4.590066ms)
  Nov 11 13:30:29.824: INFO: (3) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 4.614617ms)
  Nov 11 13:30:29.824: INFO: (3) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 4.700131ms)
  Nov 11 13:30:29.824: INFO: (3) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.611513ms)
  Nov 11 13:30:29.824: INFO: (3) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.776224ms)
  Nov 11 13:30:29.824: INFO: (3) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.76779ms)
  Nov 11 13:30:29.824: INFO: (3) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.748077ms)
  Nov 11 13:30:29.824: INFO: (3) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 4.894677ms)
  Nov 11 13:30:29.824: INFO: (3) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 4.85328ms)
  Nov 11 13:30:29.824: INFO: (3) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 4.905151ms)
  Nov 11 13:30:29.825: INFO: (3) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 5.063497ms)
  Nov 11 13:30:29.825: INFO: (3) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 5.134452ms)
  Nov 11 13:30:29.825: INFO: (3) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 5.575928ms)
  Nov 11 13:30:29.825: INFO: (3) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.588632ms)
  Nov 11 13:30:29.826: INFO: (3) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 6.248995ms)
  Nov 11 13:30:29.826: INFO: (3) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 6.655428ms)
  Nov 11 13:30:29.829: INFO: (4) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 2.476481ms)
  Nov 11 13:30:29.829: INFO: (4) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 3.020988ms)
  Nov 11 13:30:29.829: INFO: (4) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 3.253212ms)
  Nov 11 13:30:29.830: INFO: (4) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 3.503907ms)
  Nov 11 13:30:29.830: INFO: (4) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 3.772055ms)
  Nov 11 13:30:29.830: INFO: (4) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 4.253639ms)
  Nov 11 13:30:29.831: INFO: (4) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 4.327357ms)
  Nov 11 13:30:29.831: INFO: (4) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.64793ms)
  Nov 11 13:30:29.831: INFO: (4) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.562811ms)
  Nov 11 13:30:29.831: INFO: (4) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 4.690723ms)
  Nov 11 13:30:29.831: INFO: (4) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 4.931963ms)
  Nov 11 13:30:29.831: INFO: (4) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 5.126575ms)
  Nov 11 13:30:29.831: INFO: (4) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 5.105594ms)
  Nov 11 13:30:29.832: INFO: (4) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.692517ms)
  Nov 11 13:30:29.832: INFO: (4) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 5.693926ms)
  Nov 11 13:30:29.832: INFO: (4) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 5.929987ms)
  Nov 11 13:30:29.835: INFO: (5) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 2.575804ms)
  Nov 11 13:30:29.835: INFO: (5) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 2.943204ms)
  Nov 11 13:30:29.835: INFO: (5) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 2.917328ms)
  Nov 11 13:30:29.836: INFO: (5) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 3.180145ms)
  Nov 11 13:30:29.836: INFO: (5) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 3.754747ms)
  Nov 11 13:30:29.836: INFO: (5) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 3.961717ms)
  Nov 11 13:30:29.836: INFO: (5) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 3.961342ms)
  Nov 11 13:30:29.837: INFO: (5) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 4.120091ms)
  Nov 11 13:30:29.837: INFO: (5) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 4.381469ms)
  Nov 11 13:30:29.837: INFO: (5) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.661722ms)
  Nov 11 13:30:29.837: INFO: (5) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 4.653169ms)
  Nov 11 13:30:29.838: INFO: (5) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 5.680544ms)
  Nov 11 13:30:29.838: INFO: (5) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 5.74601ms)
  Nov 11 13:30:29.838: INFO: (5) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 5.933756ms)
  Nov 11 13:30:29.839: INFO: (5) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 6.50723ms)
  Nov 11 13:30:29.839: INFO: (5) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 6.673798ms)
  Nov 11 13:30:29.842: INFO: (6) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 2.493675ms)
  Nov 11 13:30:29.842: INFO: (6) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 2.83243ms)
  Nov 11 13:30:29.842: INFO: (6) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 3.116138ms)
  Nov 11 13:30:29.842: INFO: (6) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 3.27758ms)
  Nov 11 13:30:29.843: INFO: (6) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 3.425759ms)
  Nov 11 13:30:29.843: INFO: (6) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 4.177186ms)
  Nov 11 13:30:29.843: INFO: (6) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.188671ms)
  Nov 11 13:30:29.843: INFO: (6) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.335523ms)
  Nov 11 13:30:29.843: INFO: (6) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 4.371381ms)
  Nov 11 13:30:29.844: INFO: (6) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 4.987169ms)
  Nov 11 13:30:29.845: INFO: (6) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.368816ms)
  Nov 11 13:30:29.845: INFO: (6) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 5.716317ms)
  Nov 11 13:30:29.845: INFO: (6) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 5.889448ms)
  Nov 11 13:30:29.845: INFO: (6) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 6.315554ms)
  Nov 11 13:30:29.846: INFO: (6) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 6.813472ms)
  Nov 11 13:30:29.847: INFO: (6) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 7.961663ms)
  Nov 11 13:30:29.850: INFO: (7) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 2.517754ms)
  Nov 11 13:30:29.850: INFO: (7) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 2.978495ms)
  Nov 11 13:30:29.851: INFO: (7) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 4.091011ms)
  Nov 11 13:30:29.851: INFO: (7) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.076239ms)
  Nov 11 13:30:29.852: INFO: (7) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 4.267583ms)
  Nov 11 13:30:29.852: INFO: (7) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.54615ms)
  Nov 11 13:30:29.852: INFO: (7) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 4.565012ms)
  Nov 11 13:30:29.852: INFO: (7) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 4.542829ms)
  Nov 11 13:30:29.852: INFO: (7) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.857472ms)
  Nov 11 13:30:29.852: INFO: (7) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.852141ms)
  Nov 11 13:30:29.852: INFO: (7) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 4.976685ms)
  Nov 11 13:30:29.853: INFO: (7) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 5.43359ms)
  Nov 11 13:30:29.853: INFO: (7) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.642478ms)
  Nov 11 13:30:29.853: INFO: (7) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 5.797315ms)
  Nov 11 13:30:29.853: INFO: (7) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 6.032998ms)
  Nov 11 13:30:29.854: INFO: (7) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 6.169836ms)
  Nov 11 13:30:29.857: INFO: (8) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 3.141596ms)
  Nov 11 13:30:29.857: INFO: (8) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 3.665112ms)
  Nov 11 13:30:29.858: INFO: (8) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 3.890865ms)
  Nov 11 13:30:29.858: INFO: (8) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.281756ms)
  Nov 11 13:30:29.858: INFO: (8) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 4.355018ms)
  Nov 11 13:30:29.858: INFO: (8) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 4.460349ms)
  Nov 11 13:30:29.858: INFO: (8) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 4.498212ms)
  Nov 11 13:30:29.858: INFO: (8) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 4.659218ms)
  Nov 11 13:30:29.859: INFO: (8) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 4.8554ms)
  Nov 11 13:30:29.859: INFO: (8) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.970846ms)
  Nov 11 13:30:29.859: INFO: (8) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 5.327905ms)
  Nov 11 13:30:29.859: INFO: (8) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 5.356567ms)
  Nov 11 13:30:29.859: INFO: (8) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 5.487758ms)
  Nov 11 13:30:29.859: INFO: (8) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.553393ms)
  Nov 11 13:30:29.859: INFO: (8) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 5.702421ms)
  Nov 11 13:30:29.860: INFO: (8) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 6.660473ms)
  Nov 11 13:30:29.863: INFO: (9) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 2.410763ms)
  Nov 11 13:30:29.863: INFO: (9) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 3.081637ms)
  Nov 11 13:30:29.863: INFO: (9) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 2.961398ms)
  Nov 11 13:30:29.864: INFO: (9) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 3.236863ms)
  Nov 11 13:30:29.865: INFO: (9) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.023425ms)
  Nov 11 13:30:29.865: INFO: (9) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.218864ms)
  Nov 11 13:30:29.865: INFO: (9) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 4.43947ms)
  Nov 11 13:30:29.865: INFO: (9) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 4.44848ms)
  Nov 11 13:30:29.865: INFO: (9) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.558141ms)
  Nov 11 13:30:29.865: INFO: (9) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 4.859879ms)
  Nov 11 13:30:29.866: INFO: (9) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 5.154988ms)
  Nov 11 13:30:29.866: INFO: (9) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 5.167789ms)
  Nov 11 13:30:29.866: INFO: (9) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 5.790404ms)
  Nov 11 13:30:29.866: INFO: (9) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.880165ms)
  Nov 11 13:30:29.867: INFO: (9) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 5.890534ms)
  Nov 11 13:30:29.867: INFO: (9) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 5.979859ms)
  Nov 11 13:30:29.869: INFO: (10) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 2.655677ms)
  Nov 11 13:30:29.870: INFO: (10) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 2.939689ms)
  Nov 11 13:30:29.870: INFO: (10) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 2.941773ms)
  Nov 11 13:30:29.870: INFO: (10) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 3.652168ms)
  Nov 11 13:30:29.871: INFO: (10) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 3.849565ms)
  Nov 11 13:30:29.871: INFO: (10) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 3.933293ms)
  Nov 11 13:30:29.871: INFO: (10) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 3.856536ms)
  Nov 11 13:30:29.871: INFO: (10) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.061509ms)
  Nov 11 13:30:29.871: INFO: (10) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 4.551282ms)
  Nov 11 13:30:29.871: INFO: (10) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 4.667392ms)
  Nov 11 13:30:29.872: INFO: (10) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 5.063913ms)
  Nov 11 13:30:29.872: INFO: (10) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 5.035389ms)
  Nov 11 13:30:29.872: INFO: (10) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.900056ms)
  Nov 11 13:30:29.872: INFO: (10) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 5.381416ms)
  Nov 11 13:30:29.872: INFO: (10) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 5.425511ms)
  Nov 11 13:30:29.872: INFO: (10) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 5.708472ms)
  Nov 11 13:30:29.875: INFO: (11) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 2.776993ms)
  Nov 11 13:30:29.875: INFO: (11) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 2.957871ms)
  Nov 11 13:30:29.876: INFO: (11) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 3.344053ms)
  Nov 11 13:30:29.876: INFO: (11) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 3.861874ms)
  Nov 11 13:30:29.877: INFO: (11) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.066294ms)
  Nov 11 13:30:29.877: INFO: (11) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 4.013946ms)
  Nov 11 13:30:29.877: INFO: (11) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 4.138067ms)
  Nov 11 13:30:29.877: INFO: (11) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 4.569525ms)
  Nov 11 13:30:29.877: INFO: (11) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.535469ms)
  Nov 11 13:30:29.877: INFO: (11) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 4.726433ms)
  Nov 11 13:30:29.878: INFO: (11) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 5.12269ms)
  Nov 11 13:30:29.878: INFO: (11) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 5.075248ms)
  Nov 11 13:30:29.878: INFO: (11) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.331594ms)
  Nov 11 13:30:29.878: INFO: (11) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 5.601529ms)
  Nov 11 13:30:29.878: INFO: (11) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 5.741082ms)
  Nov 11 13:30:29.879: INFO: (11) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 6.450139ms)
  Nov 11 13:30:29.882: INFO: (12) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 2.469267ms)
  Nov 11 13:30:29.882: INFO: (12) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 2.961532ms)
  Nov 11 13:30:29.882: INFO: (12) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 3.348483ms)
  Nov 11 13:30:29.883: INFO: (12) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 3.776883ms)
  Nov 11 13:30:29.883: INFO: (12) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 3.793296ms)
  Nov 11 13:30:29.883: INFO: (12) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.170206ms)
  Nov 11 13:30:29.883: INFO: (12) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 4.213869ms)
  Nov 11 13:30:29.883: INFO: (12) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 4.373468ms)
  Nov 11 13:30:29.884: INFO: (12) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.336459ms)
  Nov 11 13:30:29.884: INFO: (12) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 4.487577ms)
  Nov 11 13:30:29.884: INFO: (12) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.965147ms)
  Nov 11 13:30:29.884: INFO: (12) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.16094ms)
  Nov 11 13:30:29.884: INFO: (12) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 5.334142ms)
  Nov 11 13:30:29.885: INFO: (12) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 5.430027ms)
  Nov 11 13:30:29.885: INFO: (12) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 6.023968ms)
  Nov 11 13:30:29.886: INFO: (12) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 6.289491ms)
  Nov 11 13:30:29.888: INFO: (13) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 2.538672ms)
  Nov 11 13:30:29.889: INFO: (13) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 3.519683ms)
  Nov 11 13:30:29.889: INFO: (13) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 3.410638ms)
  Nov 11 13:30:29.890: INFO: (13) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 3.886382ms)
  Nov 11 13:30:29.890: INFO: (13) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.417263ms)
  Nov 11 13:30:29.890: INFO: (13) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 4.640012ms)
  Nov 11 13:30:29.891: INFO: (13) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 5.133813ms)
  Nov 11 13:30:29.891: INFO: (13) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 5.207798ms)
  Nov 11 13:30:29.891: INFO: (13) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 5.483124ms)
  Nov 11 13:30:29.891: INFO: (13) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 5.528ms)
  Nov 11 13:30:29.891: INFO: (13) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 5.743317ms)
  Nov 11 13:30:29.891: INFO: (13) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 5.685591ms)
  Nov 11 13:30:29.892: INFO: (13) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 5.764127ms)
  Nov 11 13:30:29.892: INFO: (13) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 5.849675ms)
  Nov 11 13:30:29.892: INFO: (13) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 5.854021ms)
  Nov 11 13:30:29.892: INFO: (13) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.91302ms)
  Nov 11 13:30:29.894: INFO: (14) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 2.472058ms)
  Nov 11 13:30:29.895: INFO: (14) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 2.93127ms)
  Nov 11 13:30:29.895: INFO: (14) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 3.114347ms)
  Nov 11 13:30:29.895: INFO: (14) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 3.824017ms)
  Nov 11 13:30:29.895: INFO: (14) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 3.786753ms)
  Nov 11 13:30:29.896: INFO: (14) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 4.028914ms)
  Nov 11 13:30:29.896: INFO: (14) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 3.994849ms)
  Nov 11 13:30:29.896: INFO: (14) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 4.158949ms)
  Nov 11 13:30:29.896: INFO: (14) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.557758ms)
  Nov 11 13:30:29.896: INFO: (14) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 4.709704ms)
  Nov 11 13:30:29.897: INFO: (14) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 4.94869ms)
  Nov 11 13:30:29.897: INFO: (14) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 4.983755ms)
  Nov 11 13:30:29.897: INFO: (14) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 5.426928ms)
  Nov 11 13:30:29.897: INFO: (14) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 5.744311ms)
  Nov 11 13:30:29.897: INFO: (14) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 5.628336ms)
  Nov 11 13:30:29.898: INFO: (14) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 6.267013ms)
  Nov 11 13:30:29.901: INFO: (15) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 2.517142ms)
  Nov 11 13:30:29.901: INFO: (15) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 2.894557ms)
  Nov 11 13:30:29.901: INFO: (15) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 3.107273ms)
  Nov 11 13:30:29.901: INFO: (15) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 3.202328ms)
  Nov 11 13:30:29.902: INFO: (15) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 3.747883ms)
  Nov 11 13:30:29.902: INFO: (15) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 3.951759ms)
  Nov 11 13:30:29.902: INFO: (15) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.09423ms)
  Nov 11 13:30:29.902: INFO: (15) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 4.12744ms)
  Nov 11 13:30:29.902: INFO: (15) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 4.202666ms)
  Nov 11 13:30:29.903: INFO: (15) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 4.62782ms)
  Nov 11 13:30:29.903: INFO: (15) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 4.758417ms)
  Nov 11 13:30:29.903: INFO: (15) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 5.131251ms)
  Nov 11 13:30:29.904: INFO: (15) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 5.74586ms)
  Nov 11 13:30:29.904: INFO: (15) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.735384ms)
  Nov 11 13:30:29.905: INFO: (15) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 6.545466ms)
  Nov 11 13:30:29.905: INFO: (15) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 6.731112ms)
  Nov 11 13:30:29.907: INFO: (16) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 2.459412ms)
  Nov 11 13:30:29.908: INFO: (16) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 2.97802ms)
  Nov 11 13:30:29.909: INFO: (16) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 3.715323ms)
  Nov 11 13:30:29.909: INFO: (16) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 4.309081ms)
  Nov 11 13:30:29.909: INFO: (16) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 4.427591ms)
  Nov 11 13:30:29.910: INFO: (16) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.463323ms)
  Nov 11 13:30:29.910: INFO: (16) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 5.010532ms)
  Nov 11 13:30:29.910: INFO: (16) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 5.215114ms)
  Nov 11 13:30:29.911: INFO: (16) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 5.531728ms)
  Nov 11 13:30:29.911: INFO: (16) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 5.785335ms)
  Nov 11 13:30:29.911: INFO: (16) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 5.616782ms)
  Nov 11 13:30:29.911: INFO: (16) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 5.834699ms)
  Nov 11 13:30:29.911: INFO: (16) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.814892ms)
  Nov 11 13:30:29.911: INFO: (16) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 5.727143ms)
  Nov 11 13:30:29.911: INFO: (16) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 5.858628ms)
  Nov 11 13:30:29.911: INFO: (16) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 6.001324ms)
  Nov 11 13:30:29.914: INFO: (17) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 2.48547ms)
  Nov 11 13:30:29.914: INFO: (17) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 2.781379ms)
  Nov 11 13:30:29.914: INFO: (17) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 3.008293ms)
  Nov 11 13:30:29.915: INFO: (17) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 3.631541ms)
  Nov 11 13:30:29.915: INFO: (17) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 3.717601ms)
  Nov 11 13:30:29.915: INFO: (17) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 3.926893ms)
  Nov 11 13:30:29.915: INFO: (17) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 4.159953ms)
  Nov 11 13:30:29.916: INFO: (17) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.393384ms)
  Nov 11 13:30:29.916: INFO: (17) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 4.476541ms)
  Nov 11 13:30:29.916: INFO: (17) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 4.758292ms)
  Nov 11 13:30:29.917: INFO: (17) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 5.122818ms)
  Nov 11 13:30:29.917: INFO: (17) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 5.08959ms)
  Nov 11 13:30:29.917: INFO: (17) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 5.169643ms)
  Nov 11 13:30:29.917: INFO: (17) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.654139ms)
  Nov 11 13:30:29.917: INFO: (17) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 5.822792ms)
  Nov 11 13:30:29.918: INFO: (17) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 6.284404ms)
  Nov 11 13:30:29.920: INFO: (18) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 2.534973ms)
  Nov 11 13:30:29.921: INFO: (18) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 2.949251ms)
  Nov 11 13:30:29.921: INFO: (18) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 3.296209ms)
  Nov 11 13:30:29.921: INFO: (18) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 3.29972ms)
  Nov 11 13:30:29.922: INFO: (18) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 4.250147ms)
  Nov 11 13:30:29.922: INFO: (18) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.124754ms)
  Nov 11 13:30:29.922: INFO: (18) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 4.371353ms)
  Nov 11 13:30:29.922: INFO: (18) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 4.36773ms)
  Nov 11 13:30:29.922: INFO: (18) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 4.530277ms)
  Nov 11 13:30:29.923: INFO: (18) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 4.698359ms)
  Nov 11 13:30:29.923: INFO: (18) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 4.820849ms)
  Nov 11 13:30:29.923: INFO: (18) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.000779ms)
  Nov 11 13:30:29.923: INFO: (18) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 5.197241ms)
  Nov 11 13:30:29.923: INFO: (18) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 5.397724ms)
  Nov 11 13:30:29.924: INFO: (18) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 6.024896ms)
  Nov 11 13:30:29.924: INFO: (18) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 6.359291ms)
  Nov 11 13:30:29.927: INFO: (19) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:443/proxy/tlsrewritem... (200; 3.055911ms)
  Nov 11 13:30:29.928: INFO: (19) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 3.599334ms)
  Nov 11 13:30:29.928: INFO: (19) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:462/proxy/: tls qux (200; 3.826461ms)
  Nov 11 13:30:29.929: INFO: (19) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">test<... (200; 4.019493ms)
  Nov 11 13:30:29.929: INFO: (19) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 4.518173ms)
  Nov 11 13:30:29.929: INFO: (19) /api/v1/namespaces/proxy-6116/pods/https:proxy-service-7lpcl-wj4xw:460/proxy/: tls baz (200; 4.519817ms)
  Nov 11 13:30:29.929: INFO: (19) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname2/proxy/: bar (200; 4.63844ms)
  Nov 11 13:30:29.929: INFO: (19) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw/proxy/rewriteme">test</a> (200; 4.667901ms)
  Nov 11 13:30:29.929: INFO: (19) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname2/proxy/: bar (200; 5.030888ms)
  Nov 11 13:30:29.929: INFO: (19) /api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/: <a href="/api/v1/namespaces/proxy-6116/pods/http:proxy-service-7lpcl-wj4xw:1080/proxy/rewriteme">... (200; 4.889694ms)
  Nov 11 13:30:29.930: INFO: (19) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:162/proxy/: bar (200; 5.199603ms)
  Nov 11 13:30:29.930: INFO: (19) /api/v1/namespaces/proxy-6116/pods/proxy-service-7lpcl-wj4xw:160/proxy/: foo (200; 5.543754ms)
  Nov 11 13:30:29.930: INFO: (19) /api/v1/namespaces/proxy-6116/services/proxy-service-7lpcl:portname1/proxy/: foo (200; 5.711627ms)
  Nov 11 13:30:29.930: INFO: (19) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname1/proxy/: tls baz (200; 5.870722ms)
  Nov 11 13:30:29.930: INFO: (19) /api/v1/namespaces/proxy-6116/services/https:proxy-service-7lpcl:tlsportname2/proxy/: tls qux (200; 5.777851ms)
  Nov 11 13:30:29.930: INFO: (19) /api/v1/namespaces/proxy-6116/services/http:proxy-service-7lpcl:portname1/proxy/: foo (200; 6.044506ms)
  Nov 11 13:30:29.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-7lpcl in namespace proxy-6116, will wait for the garbage collector to delete the pods @ 11/11/23 13:30:29.934
  E1111 13:30:29.940126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:29.992: INFO: Deleting ReplicationController proxy-service-7lpcl took: 5.074608ms
  Nov 11 13:30:30.092: INFO: Terminating ReplicationController proxy-service-7lpcl pods took: 100.064112ms
  E1111 13:30:30.940333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-6116" for this suite. @ 11/11/23 13:30:31.593
• [12.899 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 11/11/23 13:30:31.6
  Nov 11 13:30:31.600: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-probe @ 11/11/23 13:30:31.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:30:31.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:30:31.618
  STEP: Creating pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103 @ 11/11/23 13:30:31.62
  E1111 13:30:31.940613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:32.940667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/11/23 13:30:33.633
  Nov 11 13:30:33.636: INFO: Initial restart count of pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 is 0
  Nov 11 13:30:33.639: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:30:33.941127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:34.941219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:35.642: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:30:35.941265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:36.941717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:37.646: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:30:37.941828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:38.941986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:39.650: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:30:39.942664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:40.942690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:41.656: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:30:41.943448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:42.943777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:43.659: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:30:43.944013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:44.944227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:45.663: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:30:45.945079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:46.945270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:47.667: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:30:47.945339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:48.945486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:49.671: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:30:49.945532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:50.945699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:51.674: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:30:51.946112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:52.946218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:53.679: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:30:53.946496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:54.946664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:55.682: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:30:55.946903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:56.947149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:57.687: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:30:57.947628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:30:58.947710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:30:59.691: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:30:59.947968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:00.948146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:01.695: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:01.949171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:02.949277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:03.699: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:03.950097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:04.950241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:05.704: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:05.950509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:06.950708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:07.707: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:07.950947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:08.951038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:09.711: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:09.951237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:10.951293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:11.715: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:11.951618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:12.951746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:13.718: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:13.952220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:14.952393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:15.722: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:15.952804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:16.952991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:17.726: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:17.953713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:18.953873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:19.730: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:19.953932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:20.954073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:21.734: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:21.955001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:22.955787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:23.739: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:23.956689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:24.956835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:25.743: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:25.957844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:26.958049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:27.746: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:27.958921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:28.959009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:29.750: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:29.960076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:30.960233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:31.754: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:31.960691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:32.961460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:33.759: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:33.962350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:34.962611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:35.762: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:35.963205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:36.963369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:37.766: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:37.964064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:38.964318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:39.771: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:39.964752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:40.964840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:41.774: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:41.965184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:42.965327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:43.779: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:43.965447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:44.965524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:45.782: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:45.965861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:46.966645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:47.787: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:47.967290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:48.967628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:49.790: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:49.968450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:50.968519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:51.794: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:51.968834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:52.968969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:53.797: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:53.970016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:54.970156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:55.801: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:55.970842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:56.971829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:57.805: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:57.972549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:31:58.973612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:31:59.809: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:31:59.973766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:00.973928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:01.813: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:01.974461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:02.974627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:03.816: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:03.975139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:04.975747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:05.820: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:05.976420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:06.976706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:07.824: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:07.977436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:08.977541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:09.827: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:09.978074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:10.978208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:11.831: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:11.979243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:12.979748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:13.834: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:13.980113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:14.980969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:15.839: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:15.981484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:16.981575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:17.843: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:17.982416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:18.982563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:19.847: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:19.982805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:20.983753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:21.851: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:21.984409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:22.984510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:23.854: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:23.985199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:24.985363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:25.858: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:25.986003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:26.986200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:27.862: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:27.986773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:28.987750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:29.866: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:29.988361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:30.988456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:31.870: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:31.988957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:32.989062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:33.873: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:33.990054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:34.990196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:35.877: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:35.990819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:36.991756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:37.881: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:37.991803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:38.991956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:39.885: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:39.991974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:40.992114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:41.889: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:41.992660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:42.993380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:43.893: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:43.993438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:44.993581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:45.897: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:45.994101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:46.994122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:47.901: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:47.994415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:48.994554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:49.906: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:49.995304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:50.995895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:51.910: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:51.995977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:52.996114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:53.915: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:53.996843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:54.996998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:55.919: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:55.997237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:56.997512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:57.923: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:57.997741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:32:58.997880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:32:59.928: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:32:59.998159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:00.998294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:01.932: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:01.999309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:02.999750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:03.935: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:04.000037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:05.000837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:05.939: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:06.001251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:07.002035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:07.943: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:08.002772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:09.003755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:09.947: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:10.004805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:11.004951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:11.951: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:12.005898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:13.006046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:13.954: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:14.007019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:15.007145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:15.958: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:16.007741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:17.008005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:17.962: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:18.008950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:19.009088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:19.967: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:20.009727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:21.009878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:21.971: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:22.010471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:23.010732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:23.975: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:24.011107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:25.011257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:25.978: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:26.011845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:27.012032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:27.982: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:28.012692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:29.012832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:29.987: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:30.013153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:31.013287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:31.991: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:32.014306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:33.014436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:33.994: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:34.014675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:35.014704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:35.999: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:36.015447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:37.015551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:38.002: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:38.015937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:39.016075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:40.006: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:40.016664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:41.016809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:42.010: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:42.017809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:43.017946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:44.013: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:44.017977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:45.018111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:46.017: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:46.019010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:47.019211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:48.019421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:48.021: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:49.019822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:50.019838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:50.026: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:51.019853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:52.020208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:52.030: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:53.020302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:54.020443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:54.034: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:55.021006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:56.021145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:56.038: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:57.021989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:33:58.022102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:33:58.042: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:33:59.022397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:00.022530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:00.046: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:01.023243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:02.023336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:02.050: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:03.024175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:04.024322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:04.053: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:05.024407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:06.024501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:06.057: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:07.025026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:08.026011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:08.061: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:09.026321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:10.026463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:10.065: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:11.026637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:12.026686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:12.069: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:13.027753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:14.027898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:14.074: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:15.028273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:16.028419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:16.077: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:17.028580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:18.029065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:18.081: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:19.029709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:20.029868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:20.085: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:21.030787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:22.031748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:22.088: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:23.031793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:24.031932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:24.092: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:25.032020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:26.032162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:26.095: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:27.032947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:28.033398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:28.100: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:29.034049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:30.034188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:30.104: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:31.034219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:32.034361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:32.108: INFO: Get pod liveness-1f045b90-3ae2-4352-8dc5-17a4ee80edf1 in namespace container-probe-103
  E1111 13:34:33.034591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:34.034693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:34.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/11/23 13:34:34.112
  STEP: Destroying namespace "container-probe-103" for this suite. @ 11/11/23 13:34:34.122
• [242.528 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 11/11/23 13:34:34.129
  Nov 11 13:34:34.129: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename dns @ 11/11/23 13:34:34.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:34:34.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:34:34.153
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 11/11/23 13:34:34.155
  Nov 11 13:34:34.163: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2242  3fd036b1-0712-4c68-95b5-96a45ebcf40d 38799 0 2023-11-11 13:34:34 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-11-11 13:34:34 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-l964r,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-l964r,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E1111 13:34:35.035761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:36.036010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 11/11/23 13:34:36.169
  Nov 11 13:34:36.169: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2242 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:34:36.169: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:34:36.169: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:34:36.170: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2242/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 11/11/23 13:34:36.264
  Nov 11 13:34:36.264: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2242 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:34:36.264: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:34:36.264: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:34:36.264: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2242/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 11 13:34:36.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 11 13:34:36.349: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-2242" for this suite. @ 11/11/23 13:34:36.359
• [2.235 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 11/11/23 13:34:36.365
  Nov 11 13:34:36.365: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/11/23 13:34:36.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:34:36.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:34:36.382
  STEP: Creating 50 configmaps @ 11/11/23 13:34:36.385
  STEP: Creating RC which spawns configmap-volume pods @ 11/11/23 13:34:36.619
  Nov 11 13:34:36.727: INFO: Pod name wrapped-volume-race-f5d6a155-d73d-4db6-b889-2c7dd0b5539e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/11/23 13:34:36.727
  E1111 13:34:37.036467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:38.036578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 11/11/23 13:34:38.79
  Nov 11 13:34:38.801: INFO: Pod name wrapped-volume-race-6480a281-df5e-42ff-82df-0cf5dac55283: Found 0 pods out of 5
  E1111 13:34:39.036959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:40.037099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:41.037262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:42.037621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:43.037786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:43.807: INFO: Pod name wrapped-volume-race-6480a281-df5e-42ff-82df-0cf5dac55283: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/11/23 13:34:43.807
  STEP: Creating RC which spawns configmap-volume pods @ 11/11/23 13:34:43.826
  Nov 11 13:34:43.838: INFO: Pod name wrapped-volume-race-043ae90a-34ae-4eba-ba3a-0a03d54551f7: Found 0 pods out of 5
  E1111 13:34:44.038754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:45.038875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:46.039766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:47.040783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:48.040851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:48.846: INFO: Pod name wrapped-volume-race-043ae90a-34ae-4eba-ba3a-0a03d54551f7: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/11/23 13:34:48.846
  Nov 11 13:34:48.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-043ae90a-34ae-4eba-ba3a-0a03d54551f7 in namespace emptydir-wrapper-9731, will wait for the garbage collector to delete the pods @ 11/11/23 13:34:48.864
  Nov 11 13:34:48.923: INFO: Deleting ReplicationController wrapped-volume-race-043ae90a-34ae-4eba-ba3a-0a03d54551f7 took: 5.785173ms
  Nov 11 13:34:49.024: INFO: Terminating ReplicationController wrapped-volume-race-043ae90a-34ae-4eba-ba3a-0a03d54551f7 pods took: 101.026142ms
  E1111 13:34:49.041902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:50.042825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-6480a281-df5e-42ff-82df-0cf5dac55283 in namespace emptydir-wrapper-9731, will wait for the garbage collector to delete the pods @ 11/11/23 13:34:50.225
  Nov 11 13:34:50.285: INFO: Deleting ReplicationController wrapped-volume-race-6480a281-df5e-42ff-82df-0cf5dac55283 took: 5.903321ms
  Nov 11 13:34:50.385: INFO: Terminating ReplicationController wrapped-volume-race-6480a281-df5e-42ff-82df-0cf5dac55283 pods took: 100.526156ms
  E1111 13:34:51.043840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-f5d6a155-d73d-4db6-b889-2c7dd0b5539e in namespace emptydir-wrapper-9731, will wait for the garbage collector to delete the pods @ 11/11/23 13:34:51.386
  Nov 11 13:34:51.446: INFO: Deleting ReplicationController wrapped-volume-race-f5d6a155-d73d-4db6-b889-2c7dd0b5539e took: 5.887173ms
  Nov 11 13:34:51.546: INFO: Terminating ReplicationController wrapped-volume-race-f5d6a155-d73d-4db6-b889-2c7dd0b5539e pods took: 100.428537ms
  E1111 13:34:52.044827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:53.044913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 11/11/23 13:34:53.147
  STEP: Destroying namespace "emptydir-wrapper-9731" for this suite. @ 11/11/23 13:34:53.403
• [17.044 seconds]
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 11/11/23 13:34:53.409
  Nov 11 13:34:53.409: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename replication-controller @ 11/11/23 13:34:53.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:34:53.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:34:53.428
  STEP: Given a ReplicationController is created @ 11/11/23 13:34:53.43
  STEP: When the matched label of one of its pods change @ 11/11/23 13:34:53.434
  Nov 11 13:34:53.437: INFO: Pod name pod-release: Found 0 pods out of 1
  E1111 13:34:54.045928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:55.046677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:56.046825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:57.047760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:34:58.047895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:58.440: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/11/23 13:34:58.448
  E1111 13:34:59.048419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:34:59.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5681" for this suite. @ 11/11/23 13:34:59.457
• [6.055 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 11/11/23 13:34:59.464
  Nov 11 13:34:59.464: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename field-validation @ 11/11/23 13:34:59.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:34:59.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:34:59.481
  Nov 11 13:34:59.483: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  W1111 13:34:59.484156      22 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000fe6ea0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1111 13:35:00.048689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:01.048911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1111 13:35:02.018179      22 warnings.go:70] unknown field "alpha"
  W1111 13:35:02.018194      22 warnings.go:70] unknown field "beta"
  W1111 13:35:02.018198      22 warnings.go:70] unknown field "delta"
  W1111 13:35:02.018202      22 warnings.go:70] unknown field "epsilon"
  W1111 13:35:02.018206      22 warnings.go:70] unknown field "gamma"
  E1111 13:35:02.049561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:02.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7533" for this suite. @ 11/11/23 13:35:02.555
• [3.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 11/11/23 13:35:02.563
  Nov 11 13:35:02.563: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename events @ 11/11/23 13:35:02.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:35:02.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:35:02.577
  STEP: Create set of events @ 11/11/23 13:35:02.579
  Nov 11 13:35:02.583: INFO: created test-event-1
  Nov 11 13:35:02.588: INFO: created test-event-2
  Nov 11 13:35:02.592: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 11/11/23 13:35:02.592
  STEP: delete collection of events @ 11/11/23 13:35:02.594
  Nov 11 13:35:02.595: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/11/23 13:35:02.613
  Nov 11 13:35:02.613: INFO: requesting list of events to confirm quantity
  Nov 11 13:35:02.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5068" for this suite. @ 11/11/23 13:35:02.619
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 11/11/23 13:35:02.626
  Nov 11 13:35:02.626: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/11/23 13:35:02.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:35:02.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:35:02.643
  Nov 11 13:35:02.645: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  E1111 13:35:03.050433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/11/23 13:35:03.974
  Nov 11 13:35:03.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-9431 --namespace=crd-publish-openapi-9431 create -f -'
  E1111 13:35:04.051465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:04.290: INFO: stderr: ""
  Nov 11 13:35:04.290: INFO: stdout: "e2e-test-crd-publish-openapi-9496-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Nov 11 13:35:04.290: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-9431 --namespace=crd-publish-openapi-9431 delete e2e-test-crd-publish-openapi-9496-crds test-cr'
  Nov 11 13:35:04.355: INFO: stderr: ""
  Nov 11 13:35:04.355: INFO: stdout: "e2e-test-crd-publish-openapi-9496-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Nov 11 13:35:04.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-9431 --namespace=crd-publish-openapi-9431 apply -f -'
  Nov 11 13:35:04.468: INFO: stderr: ""
  Nov 11 13:35:04.468: INFO: stdout: "e2e-test-crd-publish-openapi-9496-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Nov 11 13:35:04.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-9431 --namespace=crd-publish-openapi-9431 delete e2e-test-crd-publish-openapi-9496-crds test-cr'
  Nov 11 13:35:04.523: INFO: stderr: ""
  Nov 11 13:35:04.523: INFO: stdout: "e2e-test-crd-publish-openapi-9496-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/11/23 13:35:04.523
  Nov 11 13:35:04.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=crd-publish-openapi-9431 explain e2e-test-crd-publish-openapi-9496-crds'
  Nov 11 13:35:04.818: INFO: stderr: ""
  Nov 11 13:35:04.818: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-9496-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1111 13:35:05.052197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:06.052523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:06.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9431" for this suite. @ 11/11/23 13:35:06.071
• [3.452 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 11/11/23 13:35:06.078
  Nov 11 13:35:06.078: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename deployment @ 11/11/23 13:35:06.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:35:06.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:35:06.093
  STEP: creating a Deployment @ 11/11/23 13:35:06.099
  Nov 11 13:35:06.099: INFO: Creating simple deployment test-deployment-2xb48
  Nov 11 13:35:06.110: INFO: new replicaset for deployment "test-deployment-2xb48" is yet to be created
  E1111 13:35:07.053450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:08.053592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 11/11/23 13:35:08.123
  Nov 11 13:35:08.126: INFO: Deployment test-deployment-2xb48 has Conditions: [{Available True 2023-11-11 13:35:07 +0000 UTC 2023-11-11 13:35:07 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-11-11 13:35:07 +0000 UTC 2023-11-11 13:35:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2xb48-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 11/11/23 13:35:08.126
  Nov 11 13:35:08.135: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 13, 35, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 13, 35, 7, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 11, 13, 35, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 11, 13, 35, 6, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-2xb48-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 11/11/23 13:35:08.135
  Nov 11 13:35:08.137: INFO: Observed &Deployment event: ADDED
  Nov 11 13:35:08.137: INFO: Observed Deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-11 13:35:06 +0000 UTC 2023-11-11 13:35:06 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-2xb48-5d576bd769"}
  Nov 11 13:35:08.137: INFO: Observed &Deployment event: MODIFIED
  Nov 11 13:35:08.137: INFO: Observed Deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-11 13:35:06 +0000 UTC 2023-11-11 13:35:06 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-2xb48-5d576bd769"}
  Nov 11 13:35:08.137: INFO: Observed Deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-11 13:35:06 +0000 UTC 2023-11-11 13:35:06 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov 11 13:35:08.137: INFO: Observed &Deployment event: MODIFIED
  Nov 11 13:35:08.137: INFO: Observed Deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-11 13:35:06 +0000 UTC 2023-11-11 13:35:06 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov 11 13:35:08.137: INFO: Observed Deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-11 13:35:06 +0000 UTC 2023-11-11 13:35:06 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-2xb48-5d576bd769" is progressing.}
  Nov 11 13:35:08.137: INFO: Observed &Deployment event: MODIFIED
  Nov 11 13:35:08.137: INFO: Observed Deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-11 13:35:07 +0000 UTC 2023-11-11 13:35:07 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov 11 13:35:08.137: INFO: Observed Deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-11 13:35:07 +0000 UTC 2023-11-11 13:35:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2xb48-5d576bd769" has successfully progressed.}
  Nov 11 13:35:08.137: INFO: Observed &Deployment event: MODIFIED
  Nov 11 13:35:08.137: INFO: Observed Deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-11 13:35:07 +0000 UTC 2023-11-11 13:35:07 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov 11 13:35:08.137: INFO: Observed Deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-11 13:35:07 +0000 UTC 2023-11-11 13:35:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2xb48-5d576bd769" has successfully progressed.}
  Nov 11 13:35:08.137: INFO: Found Deployment test-deployment-2xb48 in namespace deployment-6736 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 11 13:35:08.137: INFO: Deployment test-deployment-2xb48 has an updated status
  STEP: patching the Statefulset Status @ 11/11/23 13:35:08.137
  Nov 11 13:35:08.137: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Nov 11 13:35:08.145: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 11/11/23 13:35:08.145
  Nov 11 13:35:08.147: INFO: Observed &Deployment event: ADDED
  Nov 11 13:35:08.147: INFO: Observed deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-11 13:35:06 +0000 UTC 2023-11-11 13:35:06 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-2xb48-5d576bd769"}
  Nov 11 13:35:08.147: INFO: Observed &Deployment event: MODIFIED
  Nov 11 13:35:08.147: INFO: Observed deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-11 13:35:06 +0000 UTC 2023-11-11 13:35:06 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-2xb48-5d576bd769"}
  Nov 11 13:35:08.147: INFO: Observed deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-11 13:35:06 +0000 UTC 2023-11-11 13:35:06 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov 11 13:35:08.147: INFO: Observed &Deployment event: MODIFIED
  Nov 11 13:35:08.147: INFO: Observed deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-11 13:35:06 +0000 UTC 2023-11-11 13:35:06 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov 11 13:35:08.147: INFO: Observed deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-11 13:35:06 +0000 UTC 2023-11-11 13:35:06 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-2xb48-5d576bd769" is progressing.}
  Nov 11 13:35:08.147: INFO: Observed &Deployment event: MODIFIED
  Nov 11 13:35:08.147: INFO: Observed deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-11 13:35:07 +0000 UTC 2023-11-11 13:35:07 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov 11 13:35:08.147: INFO: Observed deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-11 13:35:07 +0000 UTC 2023-11-11 13:35:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2xb48-5d576bd769" has successfully progressed.}
  Nov 11 13:35:08.147: INFO: Observed &Deployment event: MODIFIED
  Nov 11 13:35:08.147: INFO: Observed deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-11 13:35:07 +0000 UTC 2023-11-11 13:35:07 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov 11 13:35:08.147: INFO: Observed deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-11 13:35:07 +0000 UTC 2023-11-11 13:35:06 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2xb48-5d576bd769" has successfully progressed.}
  Nov 11 13:35:08.147: INFO: Observed deployment test-deployment-2xb48 in namespace deployment-6736 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 11 13:35:08.147: INFO: Observed &Deployment event: MODIFIED
  Nov 11 13:35:08.148: INFO: Found deployment test-deployment-2xb48 in namespace deployment-6736 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Nov 11 13:35:08.148: INFO: Deployment test-deployment-2xb48 has a patched status
  Nov 11 13:35:08.150: INFO: Deployment "test-deployment-2xb48":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-2xb48",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6736",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d1d96b3-9a0f-4447-a738-46e1afeada35",
      ResourceVersion: (string) (len=5) "39609",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835306506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306508,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306508,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306508,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306508,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-2xb48-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 11 13:35:08.154: INFO: New ReplicaSet "test-deployment-2xb48-5d576bd769" of Deployment "test-deployment-2xb48":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-2xb48-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6736",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f34e210a-5c7f-480c-b6d8-fa9809fb1f82",
      ResourceVersion: (string) (len=5) "39590",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835306506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-2xb48",
          UID: (types.UID) (len=36) "6d1d96b3-9a0f-4447-a738-46e1afeada35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 36 64 31  |k:{\"uid\":\"6d1|
              00000120  64 39 36 62 33 2d 39 61  30 66 2d 34 34 34 37 2d  |d96b3-9a0f-4447-|
              00000130  61 37 33 38 2d 34 36 65  31 61 66 65 61 64 61 33  |a738-46e1afeada3|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 11 13:35:08.158: INFO: Pod "test-deployment-2xb48-5d576bd769-9b8bf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-2xb48-5d576bd769-9b8bf",
      GenerateName: (string) (len=33) "test-deployment-2xb48-5d576bd769-",
      Namespace: (string) (len=15) "deployment-6736",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f701f70-b34f-4682-baa8-05b892e5d4d2",
      ResourceVersion: (string) (len=5) "39589",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835306506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-2xb48-5d576bd769",
          UID: (types.UID) (len=36) "f34e210a-5c7f-480c-b6d8-fa9809fb1f82",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 66 33 34 65 32 31 30  61 2d 35 63 37 66 2d 34  |"f34e210a-5c7f-4|
              000000a0  38 30 63 2d 62 36 64 38  2d 66 61 39 38 30 39 66  |80c-b6d8-fa9809f|
              000000b0  62 31 66 38 32 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |b1f82\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 31 36 2e 32 33 38 5c  |192.168.216.238\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fbrlr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fbrlr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.254",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.216.238",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.216.238"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835306506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835306506,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://64eced4720de68c9f2f343fd838f939bd0d55a9dac3eb64e1d444c7db5b4d0a8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:35:08.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6736" for this suite. @ 11/11/23 13:35:08.163
• [2.091 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 11/11/23 13:35:08.169
  Nov 11 13:35:08.169: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename resourcequota @ 11/11/23 13:35:08.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:35:08.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:35:08.184
  STEP: Counting existing ResourceQuota @ 11/11/23 13:35:08.188
  E1111 13:35:09.053648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:10.053686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:11.054530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:12.055132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:13.055748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/11/23 13:35:13.191
  STEP: Ensuring resource quota status is calculated @ 11/11/23 13:35:13.196
  E1111 13:35:14.056619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:15.057325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 11/11/23 13:35:15.2
  STEP: Creating a NodePort Service @ 11/11/23 13:35:15.218
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 11/11/23 13:35:15.238
  STEP: Ensuring resource quota status captures service creation @ 11/11/23 13:35:15.255
  E1111 13:35:16.057435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:17.058397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 11/11/23 13:35:17.258
  STEP: Ensuring resource quota status released usage @ 11/11/23 13:35:17.289
  E1111 13:35:18.058479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:19.058641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:19.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6851" for this suite. @ 11/11/23 13:35:19.296
• [11.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 11/11/23 13:35:19.304
  Nov 11 13:35:19.304: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 13:35:19.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:35:19.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:35:19.32
  STEP: Creating configMap with name configmap-test-upd-0f698ba2-3fc3-4d5e-8b40-b5be23bc10ba @ 11/11/23 13:35:19.325
  STEP: Creating the pod @ 11/11/23 13:35:19.331
  E1111 13:35:20.058726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:21.059759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 11/11/23 13:35:21.343
  STEP: Waiting for pod with binary data @ 11/11/23 13:35:21.358
  Nov 11 13:35:21.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-139" for this suite. @ 11/11/23 13:35:21.368
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 11/11/23 13:35:21.375
  Nov 11 13:35:21.375: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 13:35:21.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:35:21.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:35:21.39
  STEP: creating a replication controller @ 11/11/23 13:35:21.392
  Nov 11 13:35:21.392: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-7907 create -f -'
  Nov 11 13:35:21.751: INFO: stderr: ""
  Nov 11 13:35:21.751: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/11/23 13:35:21.751
  Nov 11 13:35:21.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-7907 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 11 13:35:21.801: INFO: stderr: ""
  Nov 11 13:35:21.801: INFO: stdout: "update-demo-nautilus-7rvgz update-demo-nautilus-hx5ks "
  Nov 11 13:35:21.801: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-7907 get pods update-demo-nautilus-7rvgz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 11 13:35:21.849: INFO: stderr: ""
  Nov 11 13:35:21.849: INFO: stdout: ""
  Nov 11 13:35:21.849: INFO: update-demo-nautilus-7rvgz is created but not running
  E1111 13:35:22.059968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:23.060109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:24.060285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:25.061249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:26.061367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:26.850: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-7907 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 11 13:35:26.902: INFO: stderr: ""
  Nov 11 13:35:26.902: INFO: stdout: "update-demo-nautilus-7rvgz update-demo-nautilus-hx5ks "
  Nov 11 13:35:26.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-7907 get pods update-demo-nautilus-7rvgz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 11 13:35:26.952: INFO: stderr: ""
  Nov 11 13:35:26.952: INFO: stdout: "true"
  Nov 11 13:35:26.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-7907 get pods update-demo-nautilus-7rvgz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 11 13:35:27.001: INFO: stderr: ""
  Nov 11 13:35:27.001: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 11 13:35:27.001: INFO: validating pod update-demo-nautilus-7rvgz
  Nov 11 13:35:27.005: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 11 13:35:27.005: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 11 13:35:27.005: INFO: update-demo-nautilus-7rvgz is verified up and running
  Nov 11 13:35:27.005: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-7907 get pods update-demo-nautilus-hx5ks -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 11 13:35:27.056: INFO: stderr: ""
  Nov 11 13:35:27.056: INFO: stdout: "true"
  Nov 11 13:35:27.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-7907 get pods update-demo-nautilus-hx5ks -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E1111 13:35:27.062112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:27.109: INFO: stderr: ""
  Nov 11 13:35:27.109: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 11 13:35:27.109: INFO: validating pod update-demo-nautilus-hx5ks
  Nov 11 13:35:27.113: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 11 13:35:27.113: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 11 13:35:27.113: INFO: update-demo-nautilus-hx5ks is verified up and running
  STEP: using delete to clean up resources @ 11/11/23 13:35:27.113
  Nov 11 13:35:27.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-7907 delete --grace-period=0 --force -f -'
  Nov 11 13:35:27.170: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 11 13:35:27.170: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Nov 11 13:35:27.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-7907 get rc,svc -l name=update-demo --no-headers'
  Nov 11 13:35:27.230: INFO: stderr: "No resources found in kubectl-7907 namespace.\n"
  Nov 11 13:35:27.230: INFO: stdout: ""
  Nov 11 13:35:27.230: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-7907 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Nov 11 13:35:27.299: INFO: stderr: ""
  Nov 11 13:35:27.299: INFO: stdout: ""
  Nov 11 13:35:27.299: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7907" for this suite. @ 11/11/23 13:35:27.303
• [5.934 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 11/11/23 13:35:27.309
  Nov 11 13:35:27.309: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 13:35:27.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:35:27.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:35:27.328
  STEP: creating the pod @ 11/11/23 13:35:27.331
  Nov 11 13:35:27.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6788 create -f -'
  Nov 11 13:35:27.667: INFO: stderr: ""
  Nov 11 13:35:27.667: INFO: stdout: "pod/pause created\n"
  E1111 13:35:28.063206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:29.063753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 11/11/23 13:35:29.678
  Nov 11 13:35:29.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6788 label pods pause testing-label=testing-label-value'
  Nov 11 13:35:29.736: INFO: stderr: ""
  Nov 11 13:35:29.736: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 11/11/23 13:35:29.736
  Nov 11 13:35:29.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6788 get pod pause -L testing-label'
  Nov 11 13:35:29.786: INFO: stderr: ""
  Nov 11 13:35:29.786: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 11/11/23 13:35:29.786
  Nov 11 13:35:29.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6788 label pods pause testing-label-'
  Nov 11 13:35:29.844: INFO: stderr: ""
  Nov 11 13:35:29.844: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 11/11/23 13:35:29.844
  Nov 11 13:35:29.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6788 get pod pause -L testing-label'
  Nov 11 13:35:29.895: INFO: stderr: ""
  Nov 11 13:35:29.895: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 11/11/23 13:35:29.895
  Nov 11 13:35:29.895: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6788 delete --grace-period=0 --force -f -'
  Nov 11 13:35:29.957: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 11 13:35:29.957: INFO: stdout: "pod \"pause\" force deleted\n"
  Nov 11 13:35:29.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6788 get rc,svc -l name=pause --no-headers'
  Nov 11 13:35:30.012: INFO: stderr: "No resources found in kubectl-6788 namespace.\n"
  Nov 11 13:35:30.012: INFO: stdout: ""
  Nov 11 13:35:30.012: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-6788 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Nov 11 13:35:30.063: INFO: stderr: ""
  Nov 11 13:35:30.063: INFO: stdout: ""
  Nov 11 13:35:30.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1111 13:35:30.063896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubectl-6788" for this suite. @ 11/11/23 13:35:30.067
• [2.763 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 11/11/23 13:35:30.073
  Nov 11 13:35:30.073: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 13:35:30.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:35:30.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:35:30.089
  Nov 11 13:35:30.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-2283 create -f -'
  Nov 11 13:35:30.242: INFO: stderr: ""
  Nov 11 13:35:30.242: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Nov 11 13:35:30.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-2283 create -f -'
  Nov 11 13:35:30.397: INFO: stderr: ""
  Nov 11 13:35:30.397: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/11/23 13:35:30.397
  E1111 13:35:31.064798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:31.400: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 11 13:35:31.400: INFO: Found 1 / 1
  Nov 11 13:35:31.400: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Nov 11 13:35:31.404: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 11 13:35:31.404: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov 11 13:35:31.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-2283 describe pod agnhost-primary-sfqtj'
  Nov 11 13:35:31.461: INFO: stderr: ""
  Nov 11 13:35:31.461: INFO: stdout: "Name:             agnhost-primary-sfqtj\nNamespace:        kubectl-2283\nPriority:         0\nService Account:  default\nNode:             ip-172-31-79-254/172.31.79.254\nStart Time:       Sat, 11 Nov 2023 13:35:30 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.216.235\nIPs:\n  IP:           192.168.216.235\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://de10dfae196905d4e740ff3146ae14622ad2e7c92d18d3eabcf3f30c892b4dc3\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 11 Nov 2023 13:35:30 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-ffn9x (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-ffn9x:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-2283/agnhost-primary-sfqtj to ip-172-31-79-254\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Nov 11 13:35:31.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-2283 describe rc agnhost-primary'
  Nov 11 13:35:31.521: INFO: stderr: ""
  Nov 11 13:35:31.521: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2283\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-sfqtj\n"
  Nov 11 13:35:31.521: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-2283 describe service agnhost-primary'
  Nov 11 13:35:31.582: INFO: stderr: ""
  Nov 11 13:35:31.582: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-2283\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.62\nIPs:               10.152.183.62\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.216.235:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Nov 11 13:35:31.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-2283 describe node ip-172-31-26-213'
  Nov 11 13:35:31.658: INFO: stderr: ""
  Nov 11 13:35:31.658: INFO: stdout: "Name:               ip-172-31-26-213\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-26-213\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 11 Nov 2023 11:56:54 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-26-213\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 11 Nov 2023 13:35:26 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 11 Nov 2023 11:57:31 +0000   Sat, 11 Nov 2023 11:57:31 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 11 Nov 2023 13:32:29 +0000   Sat, 11 Nov 2023 11:56:54 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 11 Nov 2023 13:32:29 +0000   Sat, 11 Nov 2023 11:56:54 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 11 Nov 2023 13:32:29 +0000   Sat, 11 Nov 2023 11:56:54 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 11 Nov 2023 13:32:29 +0000   Sat, 11 Nov 2023 11:57:40 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.26.213\n  Hostname:    ip-172-31-26-213\nCapacity:\n  cpu:                4\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7763100Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7660700Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec2d4e64b2e947e1e9479983ca51400d\n  System UUID:                     ec2d4e64-b2e9-47e1-e947-9983ca51400d\n  Boot ID:                         0f0ece65-0d52-46f5-8575-14aff059a9de\n  Kernel Version:                  6.2.0-1015-aws\n  OS Image:                        Ubuntu 22.04.3 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.28.3\n  Kube-Proxy Version:              v1.28.3\nNon-terminated Pods:               (9 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  default-http-backend-kubernetes-worker-5c79cc75ff-kbzzn    10m (0%)      10m (0%)    20Mi (0%)        20Mi (0%)      98m\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-mhlhs           0 (0%)        0 (0%)      0 (0%)           0 (0%)         98m\n  kube-system                      calico-node-4wwdr                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         98m\n  kube-system                      coredns-59cfb5bf46-r5pf5                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (2%)     101m\n  kube-system                      kube-state-metrics-78c475f58b-zzxqs                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         101m\n  kube-system                      metrics-server-v0.6.3-69d7fbfdf8-rptqk                     5m (0%)       100m (2%)   50Mi (0%)        300Mi (4%)     101m\n  kubernetes-dashboard             dashboard-metrics-scraper-5dd7cb5fc-5tw2q                  0 (0%)        0 (0%)      0 (0%)           0 (0%)         101m\n  kubernetes-dashboard             kubernetes-dashboard-7b899cb9d9-jpjst                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         101m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-sqgqx    0 (0%)        0 (0%)      0 (0%)           0 (0%)         87m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                365m (9%)   110m (2%)\n  memory             140Mi (1%)  490Mi (6%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  Nov 11 13:35:31.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-2283 describe namespace kubectl-2283'
  Nov 11 13:35:31.719: INFO: stderr: ""
  Nov 11 13:35:31.719: INFO: stdout: "Name:         kubectl-2283\nLabels:       e2e-framework=kubectl\n              e2e-run=11cd3da2-3978-4262-9e38-e7fccdd67f41\n              kubernetes.io/metadata.name=kubectl-2283\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Nov 11 13:35:31.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2283" for this suite. @ 11/11/23 13:35:31.722
• [1.655 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 11/11/23 13:35:31.729
  Nov 11 13:35:31.729: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename secrets @ 11/11/23 13:35:31.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:35:31.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:35:31.749
  STEP: creating secret secrets-5121/secret-test-9bf6e8b7-e27a-400b-a54a-7765b3b774a7 @ 11/11/23 13:35:31.751
  STEP: Creating a pod to test consume secrets @ 11/11/23 13:35:31.754
  E1111 13:35:32.065753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:33.065963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:34.066075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:35.066251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:35:35.77
  Nov 11 13:35:35.773: INFO: Trying to get logs from node ip-172-31-8-111 pod pod-configmaps-aa82d960-daf2-4ca0-ac32-21dbae7f53e2 container env-test: <nil>
  STEP: delete the pod @ 11/11/23 13:35:35.789
  Nov 11 13:35:35.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5121" for this suite. @ 11/11/23 13:35:35.804
• [4.082 seconds]
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 11/11/23 13:35:35.811
  Nov 11 13:35:35.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl-logs @ 11/11/23 13:35:35.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:35:35.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:35:35.828
  STEP: creating an pod @ 11/11/23 13:35:35.83
  Nov 11 13:35:35.830: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-logs-7403 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Nov 11 13:35:35.889: INFO: stderr: ""
  Nov 11 13:35:35.889: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 11/11/23 13:35:35.889
  Nov 11 13:35:35.889: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E1111 13:35:36.067269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:37.067340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:37.899: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 11/11/23 13:35:37.899
  Nov 11 13:35:37.899: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-logs-7403 logs logs-generator logs-generator'
  Nov 11 13:35:37.956: INFO: stderr: ""
  Nov 11 13:35:37.956: INFO: stdout: "I1111 13:35:36.611398       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/sr6 319\nI1111 13:35:36.811760       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/4r6s 414\nI1111 13:35:37.012025       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/l5g 209\nI1111 13:35:37.212323       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/xg7 561\nI1111 13:35:37.411486       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/wzsn 420\nI1111 13:35:37.611782       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/bn5g 249\nI1111 13:35:37.812006       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/lc4 261\n"
  STEP: limiting log lines @ 11/11/23 13:35:37.956
  Nov 11 13:35:37.956: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-logs-7403 logs logs-generator logs-generator --tail=1'
  Nov 11 13:35:38.011: INFO: stderr: ""
  Nov 11 13:35:38.011: INFO: stdout: "I1111 13:35:37.812006       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/lc4 261\n"
  Nov 11 13:35:38.011: INFO: got output "I1111 13:35:37.812006       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/lc4 261\n"
  STEP: limiting log bytes @ 11/11/23 13:35:38.011
  Nov 11 13:35:38.011: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-logs-7403 logs logs-generator logs-generator --limit-bytes=1'
  E1111 13:35:38.067566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:38.068: INFO: stderr: ""
  Nov 11 13:35:38.068: INFO: stdout: "I"
  Nov 11 13:35:38.068: INFO: got output "I"
  STEP: exposing timestamps @ 11/11/23 13:35:38.068
  Nov 11 13:35:38.069: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-logs-7403 logs logs-generator logs-generator --tail=1 --timestamps'
  Nov 11 13:35:38.126: INFO: stderr: ""
  Nov 11 13:35:38.126: INFO: stdout: "2023-11-11T13:35:38.012298540Z I1111 13:35:38.012234       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/8gh 357\n"
  Nov 11 13:35:38.126: INFO: got output "2023-11-11T13:35:38.012298540Z I1111 13:35:38.012234       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/8gh 357\n"
  STEP: restricting to a time range @ 11/11/23 13:35:38.126
  E1111 13:35:39.068355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:40.068531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:40.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-logs-7403 logs logs-generator logs-generator --since=1s'
  Nov 11 13:35:40.684: INFO: stderr: ""
  Nov 11 13:35:40.684: INFO: stdout: "I1111 13:35:39.811775       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/kvzk 577\nI1111 13:35:40.012018       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/h5nt 348\nI1111 13:35:40.212350       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/wkl 399\nI1111 13:35:40.411510       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/zmt 229\nI1111 13:35:40.611838       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/p76 399\n"
  Nov 11 13:35:40.684: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-logs-7403 logs logs-generator logs-generator --since=24h'
  Nov 11 13:35:40.745: INFO: stderr: ""
  Nov 11 13:35:40.745: INFO: stdout: "I1111 13:35:36.611398       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/sr6 319\nI1111 13:35:36.811760       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/4r6s 414\nI1111 13:35:37.012025       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/l5g 209\nI1111 13:35:37.212323       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/xg7 561\nI1111 13:35:37.411486       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/wzsn 420\nI1111 13:35:37.611782       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/bn5g 249\nI1111 13:35:37.812006       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/lc4 261\nI1111 13:35:38.012234       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/8gh 357\nI1111 13:35:38.211464       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/zx7 302\nI1111 13:35:38.411763       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/kcw 449\nI1111 13:35:38.612057       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/pxtm 447\nI1111 13:35:38.812374       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/vnl 216\nI1111 13:35:39.011611       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/cds6 465\nI1111 13:35:39.211906       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/sdwz 301\nI1111 13:35:39.412207       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/prcz 209\nI1111 13:35:39.611461       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/xxwh 417\nI1111 13:35:39.811775       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/kvzk 577\nI1111 13:35:40.012018       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/h5nt 348\nI1111 13:35:40.212350       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/wkl 399\nI1111 13:35:40.411510       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/zmt 229\nI1111 13:35:40.611838       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/p76 399\n"
  Nov 11 13:35:40.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-logs-7403 delete pod logs-generator'
  E1111 13:35:41.069013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:41.418: INFO: stderr: ""
  Nov 11 13:35:41.418: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Nov 11 13:35:41.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-7403" for this suite. @ 11/11/23 13:35:41.421
• [5.618 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 11/11/23 13:35:41.429
  Nov 11 13:35:41.429: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 13:35:41.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:35:41.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:35:41.448
  STEP: creating service multi-endpoint-test in namespace services-6791 @ 11/11/23 13:35:41.451
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6791 to expose endpoints map[] @ 11/11/23 13:35:41.46
  Nov 11 13:35:41.463: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E1111 13:35:42.069325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:42.471: INFO: successfully validated that service multi-endpoint-test in namespace services-6791 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-6791 @ 11/11/23 13:35:42.471
  E1111 13:35:43.070275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:44.070475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6791 to expose endpoints map[pod1:[100]] @ 11/11/23 13:35:44.486
  Nov 11 13:35:44.496: INFO: successfully validated that service multi-endpoint-test in namespace services-6791 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-6791 @ 11/11/23 13:35:44.497
  E1111 13:35:45.070565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:46.070735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6791 to expose endpoints map[pod1:[100] pod2:[101]] @ 11/11/23 13:35:46.51
  Nov 11 13:35:46.520: INFO: successfully validated that service multi-endpoint-test in namespace services-6791 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 11/11/23 13:35:46.52
  Nov 11 13:35:46.520: INFO: Creating new exec pod
  E1111 13:35:47.071340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:48.071421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:49.071468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:49.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-6791 exec execpodsxbxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Nov 11 13:35:49.662: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Nov 11 13:35:49.662: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 13:35:49.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-6791 exec execpodsxbxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.86 80'
  Nov 11 13:35:49.805: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.86 80\nConnection to 10.152.183.86 80 port [tcp/http] succeeded!\n"
  Nov 11 13:35:49.805: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 13:35:49.805: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-6791 exec execpodsxbxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Nov 11 13:35:49.935: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Nov 11 13:35:49.935: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 13:35:49.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-6791 exec execpodsxbxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.86 81'
  E1111 13:35:50.071793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:50.078: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.86 81\nConnection to 10.152.183.86 81 port [tcp/*] succeeded!\n"
  Nov 11 13:35:50.078: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-6791 @ 11/11/23 13:35:50.078
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6791 to expose endpoints map[pod2:[101]] @ 11/11/23 13:35:50.089
  Nov 11 13:35:50.109: INFO: successfully validated that service multi-endpoint-test in namespace services-6791 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-6791 @ 11/11/23 13:35:50.11
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6791 to expose endpoints map[] @ 11/11/23 13:35:50.122
  Nov 11 13:35:50.130: INFO: successfully validated that service multi-endpoint-test in namespace services-6791 exposes endpoints map[]
  Nov 11 13:35:50.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6791" for this suite. @ 11/11/23 13:35:50.15
• [8.727 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 11/11/23 13:35:50.158
  Nov 11 13:35:50.158: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename deployment @ 11/11/23 13:35:50.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:35:50.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:35:50.173
  Nov 11 13:35:50.176: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Nov 11 13:35:50.184: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1111 13:35:51.072331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:52.072379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:53.072521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:54.072708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:55.072882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:55.188: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/11/23 13:35:55.188
  Nov 11 13:35:55.188: INFO: Creating deployment "test-rolling-update-deployment"
  Nov 11 13:35:55.192: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Nov 11 13:35:55.198: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E1111 13:35:56.073366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:57.074351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:35:57.206: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Nov 11 13:35:57.208: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Nov 11 13:35:57.217: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "29bee6ae-3ede-4843-8bd7-966266323acb",
      ResourceVersion: (string) (len=5) "40183",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835306555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 11 13:35:57.221: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b08f1b1-17ea-40bb-ba4d-bc1f71c6043b",
      ResourceVersion: (string) (len=5) "40173",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835306555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "29bee6ae-3ede-4843-8bd7-966266323acb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 39 62 65 65 36  61 65 2d 33 65 64 65 2d  |\"29bee6ae-3ede-|
              00000120  34 38 34 33 2d 38 62 64  37 2d 39 36 36 32 36 36  |4843-8bd7-966266|
              00000130  33 32 33 61 63 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |323acb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 11 13:35:57.223: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Nov 11 13:35:57.223: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b49b5ea7-52b5-4fb4-9f97-97b860c88667",
      ResourceVersion: (string) (len=5) "40182",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835306550,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "29bee6ae-3ede-4843-8bd7-966266323acb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 32 39 62 65 65 36 61  |"uid\":\"29bee6a|
              000000b0  65 2d 33 65 64 65 2d 34  38 34 33 2d 38 62 64 37  |e-3ede-4843-8bd7|
              000000c0  2d 39 36 36 32 36 36 33  32 33 61 63 62 5c 22 7d  |-966266323acb\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 11 13:35:57.227: INFO: Pod "test-rolling-update-deployment-7f5c55c64-5m7rd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-5m7rd",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-7781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "449932a1-6aa9-4505-a72d-964cd905ad1f",
      ResourceVersion: (string) (len=5) "40172",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835306555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "7b08f1b1-17ea-40bb-ba4d-bc1f71c6043b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 62  30 38 66 31 62 31 2d 31  |d\":\"7b08f1b1-1|
              00000090  37 65 61 2d 34 30 62 62  2d 62 61 34 64 2d 62 63  |7ea-40bb-ba4d-bc|
              000000a0  31 66 37 31 63 36 30 34  33 62 5c 22 7d 22 3a 7b  |1f71c6043b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 31 36 2e 32 31 30 5c  |192.168.216.210\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z995r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z995r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-79-254",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.79.254",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.216.210",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.216.210"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835306555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835306555,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://aebfcd3f8bbaba7f0f2610401d3c0dddbc633cbc41a2072156504edbc5675493",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:35:57.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7781" for this suite. @ 11/11/23 13:35:57.232
• [7.081 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 11/11/23 13:35:57.239
  Nov 11 13:35:57.239: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 13:35:57.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:35:57.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:35:57.255
  STEP: Setting up server cert @ 11/11/23 13:35:57.276
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 13:35:57.891
  STEP: Deploying the webhook pod @ 11/11/23 13:35:57.899
  STEP: Wait for the deployment to be ready @ 11/11/23 13:35:57.911
  Nov 11 13:35:57.918: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1111 13:35:58.075366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:35:59.075769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 13:35:59.928
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 13:35:59.937
  E1111 13:36:00.076515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:36:00.937: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 11/11/23 13:36:00.943
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/11/23 13:36:00.961
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 11/11/23 13:36:00.969
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/11/23 13:36:00.98
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 11/11/23 13:36:00.993
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/11/23 13:36:00.999
  Nov 11 13:36:01.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3759" for this suite. @ 11/11/23 13:36:01.045
  STEP: Destroying namespace "webhook-markers-9764" for this suite. @ 11/11/23 13:36:01.053
• [3.821 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 11/11/23 13:36:01.06
  Nov 11 13:36:01.060: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename deployment @ 11/11/23 13:36:01.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:36:01.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:36:01.076
  E1111 13:36:01.076475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:36:01.085: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E1111 13:36:02.077366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:03.077533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:04.077695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:05.077864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:06.078072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:36:06.089: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/11/23 13:36:06.089
  Nov 11 13:36:06.089: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 11/11/23 13:36:06.098
  Nov 11 13:36:06.109: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8217",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "012ae1b5-9ba2-4748-b315-5b6d93c3a736",
      ResourceVersion: (string) (len=5) "40320",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835306566,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 11 13:36:06.115: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Nov 11 13:36:06.115: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Nov 11 13:36:06.115: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8217",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78e03340-54d9-4689-8d69-cfa2280ad124",
      ResourceVersion: (string) (len=5) "40322",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835306561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "012ae1b5-9ba2-4748-b315-5b6d93c3a736",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306566,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 30 31 32 61 65 31 62  |"uid\":\"012ae1b|
              00000040  35 2d 39 62 61 32 2d 34  37 34 38 2d 62 33 31 35  |5-9ba2-4748-b315|
              00000050  2d 35 62 36 64 39 33 63  33 61 37 33 36 5c 22 7d  |-5b6d93c3a736\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 11 13:36:06.132: INFO: Pod "test-cleanup-controller-s8jht" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-s8jht",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-8217",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5bd99ebc-ddf1-4361-b30c-06fbe55f607f",
      ResourceVersion: (string) (len=5) "40304",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835306561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "78e03340-54d9-4689-8d69-cfa2280ad124",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  37 38 65 30 33 33 34 30  |uid\":\"78e03340|
              00000080  2d 35 34 64 39 2d 34 36  38 39 2d 38 64 36 39 2d  |-54d9-4689-8d69-|
              00000090  63 66 61 32 32 38 30 61  64 31 32 34 5c 22 7d 22  |cfa2280ad124\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 34 34 2e 32 35 30 5c  |192.168.144.250\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w27nr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w27nr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-8-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835306561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.8.111",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.144.250",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.144.250"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835306561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835306561,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7d041b760da623da6e38154fecf3e26ec2f6695ae5109ed32cf7af5444c41a3b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 11 13:36:06.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8217" for this suite. @ 11/11/23 13:36:06.139
• [5.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 11/11/23 13:36:06.147
  Nov 11 13:36:06.147: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 11/11/23 13:36:06.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:36:06.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:36:06.163
  STEP: Setting up the test @ 11/11/23 13:36:06.165
  STEP: Creating hostNetwork=false pod @ 11/11/23 13:36:06.165
  E1111 13:36:07.078848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:08.079003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 11/11/23 13:36:08.188
  E1111 13:36:09.079877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:10.080023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 11/11/23 13:36:10.203
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 11/11/23 13:36:10.203
  Nov 11 13:36:10.203: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6056 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:36:10.203: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:36:10.204: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:36:10.204: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6056/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov 11 13:36:10.284: INFO: Exec stderr: ""
  Nov 11 13:36:10.284: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6056 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:36:10.284: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:36:10.284: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:36:10.285: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6056/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov 11 13:36:10.368: INFO: Exec stderr: ""
  Nov 11 13:36:10.368: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6056 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:36:10.368: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:36:10.369: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:36:10.369: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6056/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Nov 11 13:36:10.488: INFO: Exec stderr: ""
  Nov 11 13:36:10.488: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6056 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:36:10.488: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:36:10.489: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:36:10.489: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6056/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Nov 11 13:36:10.523: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 11/11/23 13:36:10.523
  Nov 11 13:36:10.523: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6056 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:36:10.523: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:36:10.524: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:36:10.524: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6056/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Nov 11 13:36:10.605: INFO: Exec stderr: ""
  Nov 11 13:36:10.605: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6056 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:36:10.605: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:36:10.605: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:36:10.606: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6056/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Nov 11 13:36:10.692: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 11/11/23 13:36:10.692
  Nov 11 13:36:10.693: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6056 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:36:10.693: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:36:10.693: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:36:10.693: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6056/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov 11 13:36:10.776: INFO: Exec stderr: ""
  Nov 11 13:36:10.776: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6056 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:36:10.776: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:36:10.777: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:36:10.777: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6056/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov 11 13:36:10.855: INFO: Exec stderr: ""
  Nov 11 13:36:10.855: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6056 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:36:10.855: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:36:10.855: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:36:10.855: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6056/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Nov 11 13:36:10.955: INFO: Exec stderr: ""
  Nov 11 13:36:10.955: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6056 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:36:10.955: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:36:10.955: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:36:10.955: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6056/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Nov 11 13:36:11.031: INFO: Exec stderr: ""
  Nov 11 13:36:11.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6056" for this suite. @ 11/11/23 13:36:11.035
• [4.894 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 11/11/23 13:36:11.042
  Nov 11 13:36:11.042: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:36:11.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:36:11.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:36:11.059
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 13:36:11.061
  E1111 13:36:11.080225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:12.080707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:13.081076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:14.081348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:36:15.078
  Nov 11 13:36:15.081: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-65ad5d60-ea9a-4b2c-a8b1-79d958f3dd68 container client-container: <nil>
  E1111 13:36:15.082109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 11/11/23 13:36:15.087
  Nov 11 13:36:15.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4233" for this suite. @ 11/11/23 13:36:15.104
• [4.067 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 11/11/23 13:36:15.109
  Nov 11 13:36:15.109: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename field-validation @ 11/11/23 13:36:15.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:36:15.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:36:15.125
  Nov 11 13:36:15.128: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  E1111 13:36:16.082252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:17.082626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:18.083316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:36:18.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7925" for this suite. @ 11/11/23 13:36:18.205
• [3.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 11/11/23 13:36:18.212
  Nov 11 13:36:18.212: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename field-validation @ 11/11/23 13:36:18.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:36:18.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:36:18.227
  Nov 11 13:36:18.230: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  E1111 13:36:19.083753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:20.083929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1111 13:36:20.767019      22 warnings.go:70] unknown field "alpha"
  W1111 13:36:20.767038      22 warnings.go:70] unknown field "beta"
  W1111 13:36:20.767044      22 warnings.go:70] unknown field "delta"
  W1111 13:36:20.767049      22 warnings.go:70] unknown field "epsilon"
  W1111 13:36:20.767054      22 warnings.go:70] unknown field "gamma"
  E1111 13:36:21.084708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:36:21.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1640" for this suite. @ 11/11/23 13:36:21.31
• [3.105 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 11/11/23 13:36:21.316
  Nov 11 13:36:21.316: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 13:36:21.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:36:21.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:36:21.336
  STEP: Creating configMap configmap-6399/configmap-test-7c1ad1af-0f6f-4293-a886-eac5738ed57e @ 11/11/23 13:36:21.338
  STEP: Creating a pod to test consume configMaps @ 11/11/23 13:36:21.343
  E1111 13:36:22.084819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:23.084934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:36:23.358
  Nov 11 13:36:23.361: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-configmaps-0cb82223-a885-4c41-9705-a6e22160cde3 container env-test: <nil>
  STEP: delete the pod @ 11/11/23 13:36:23.367
  Nov 11 13:36:23.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6399" for this suite. @ 11/11/23 13:36:23.39
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 11/11/23 13:36:23.396
  Nov 11 13:36:23.396: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename resourcequota @ 11/11/23 13:36:23.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:36:23.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:36:23.414
  STEP: Counting existing ResourceQuota @ 11/11/23 13:36:23.416
  E1111 13:36:24.085426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:25.085546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:26.086217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:27.086927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:28.087758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/11/23 13:36:28.419
  STEP: Ensuring resource quota status is calculated @ 11/11/23 13:36:28.425
  E1111 13:36:29.088617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:30.088786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 11/11/23 13:36:30.429
  STEP: Ensuring resource quota status captures replicaset creation @ 11/11/23 13:36:30.44
  E1111 13:36:31.089316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:32.090377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 11/11/23 13:36:32.444
  STEP: Ensuring resource quota status released usage @ 11/11/23 13:36:32.451
  E1111 13:36:33.091120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:34.091224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:36:34.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7831" for this suite. @ 11/11/23 13:36:34.458
• [11.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 11/11/23 13:36:34.464
  Nov 11 13:36:34.464: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename cronjob @ 11/11/23 13:36:34.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:36:34.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:36:34.48
  STEP: Creating a suspended cronjob @ 11/11/23 13:36:34.483
  STEP: Ensuring no jobs are scheduled @ 11/11/23 13:36:34.488
  E1111 13:36:35.091852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:36.092082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:37.092895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:38.093035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:39.093961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:40.094124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:41.094247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:42.094681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:43.094698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:44.095770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:45.096687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:46.096830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:47.097786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:48.097963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:49.098049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:50.098145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:51.099017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:52.099375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:53.099811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:54.100848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:55.101826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:56.102436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:57.102465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:58.102556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:36:59.103316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:00.103746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:01.104665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:02.105082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:03.105813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:04.105949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:05.106480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:06.106642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:07.106803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:08.107723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:09.108492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:10.108637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:11.109239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:12.109564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:13.110373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:14.110813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:15.111646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:16.111741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:17.112681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:18.112794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:19.113271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:20.113704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:21.114515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:22.115504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:23.116497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:24.116593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:25.116813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:26.116968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:27.117472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:28.117575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:29.118423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:30.118564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:31.118907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:32.119204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:33.119705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:34.119846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:35.120578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:36.120721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:37.120860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:38.121930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:39.122627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:40.122708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:41.123621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:42.123718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:43.123991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:44.124131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:45.124486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:46.124627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:47.125296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:48.125448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:49.126088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:50.126178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:51.126271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:52.126654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:53.127608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:54.127755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:55.127899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:56.128195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:57.128283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:58.128565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:37:59.128567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:00.128711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:01.129752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:02.129852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:03.130310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:04.130485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:05.130557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:06.130628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:07.130773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:08.130914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:09.131750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:10.131894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:11.132938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:12.133383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:13.133579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:14.133726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:15.134447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:16.134541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:17.135520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:18.135621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:19.135723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:20.135873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:21.136714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:22.137337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:23.137663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:24.137808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:25.137945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:26.138091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:27.139067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:28.139215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:29.139784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:30.140163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:31.140253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:32.140566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:33.141546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:34.141695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:35.142677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:36.143759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:37.144719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:38.144859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:39.145674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:40.145831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:41.145919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:42.146297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:43.146426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:44.146594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:45.147428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:46.147520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:47.147958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:48.148099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:49.148702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:50.148850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:51.149653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:52.150074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:53.151058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:54.151755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:55.151867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:56.152417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:57.152430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:58.152577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:38:59.152714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:00.152762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:01.153593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:02.154069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:03.155062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:04.155755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:05.155783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:06.155869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:07.156232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:08.157030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:09.157968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:10.158074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:11.158242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:12.158541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:13.159496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:14.159767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:15.160297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:16.161205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:17.162005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:18.162106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:19.162184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:20.162285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:21.162658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:22.163315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:23.163379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:24.163575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:25.164487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:26.164639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:27.165418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:28.165550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:29.166060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:30.166210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:31.166664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:32.166702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:33.167422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:34.167701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:35.167834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:36.167927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:37.168583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:38.168734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:39.168952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:40.169100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:41.169395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:42.169685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:43.170398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:44.170676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:45.171308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:46.171756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:47.172721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:48.172884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:49.173091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:50.173255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:51.174173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:52.174531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:53.174692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:54.175771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:55.176211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:56.176363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:57.177124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:58.177479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:39:59.177364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:00.177516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:01.178397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:02.178704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:03.179553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:04.179680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:05.180714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:06.180755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:07.181255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:08.181391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:09.181496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:10.181583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:11.182519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:12.183552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:13.183813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:14.183952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:15.184954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:16.185094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:17.186072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:18.186350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:19.187138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:20.187358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:21.188182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:22.188248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:23.188902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:24.189042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:25.189839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:26.189986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:27.191044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:28.191833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:29.191921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:30.192068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:31.192571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:32.193024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:33.193105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:34.193247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:35.194086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:36.194319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:37.194925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:38.195754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:39.195818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:40.195956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:41.196037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:42.196374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:43.197362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:44.197508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:45.197589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:46.197685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:47.198676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:48.198770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:49.199675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:50.199758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:51.199831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:52.200185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:53.200482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:54.200631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:55.201655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:56.201795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:57.202002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:58.202088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:40:59.202926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:00.203009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:01.203743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:02.204187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:03.204403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:04.204489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:05.204666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:06.204927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:07.205585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:08.205647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:09.205930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:10.206076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:11.206858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:12.206934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:13.207746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:14.208130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:15.208173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:16.208310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:17.208416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:18.209280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:19.209359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:20.209493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:21.209698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:22.210139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:23.210811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:24.211750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:25.212356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:26.212533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:27.212650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:28.212790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:29.213762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:30.213880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:31.214895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:32.215279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:33.215456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:34.215756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 11/11/23 13:41:34.495
  STEP: Removing cronjob @ 11/11/23 13:41:34.498
  Nov 11 13:41:34.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5861" for this suite. @ 11/11/23 13:41:34.506
• [300.049 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 11/11/23 13:41:34.514
  Nov 11 13:41:34.514: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename resourcequota @ 11/11/23 13:41:34.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:41:34.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:41:34.53
  E1111 13:41:35.216020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:36.217029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:37.217076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:38.217091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:39.217122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:40.217186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:41.217882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:42.218173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:43.219075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:44.219668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:45.219724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:46.220396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:47.221151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:48.221753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:49.222077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:50.222690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:51.223659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 11/11/23 13:41:51.538
  E1111 13:41:52.223754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:53.224405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:54.225250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:55.225970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:56.226553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/11/23 13:41:56.541
  STEP: Ensuring resource quota status is calculated @ 11/11/23 13:41:56.546
  E1111 13:41:57.227421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:41:58.227761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 11/11/23 13:41:58.55
  STEP: Ensuring resource quota status captures configMap creation @ 11/11/23 13:41:58.562
  E1111 13:41:59.228322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:00.228482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 11/11/23 13:42:00.566
  STEP: Ensuring resource quota status released usage @ 11/11/23 13:42:00.572
  E1111 13:42:01.228781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:02.229158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:42:02.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7055" for this suite. @ 11/11/23 13:42:02.58
• [28.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 11/11/23 13:42:02.59
  Nov 11 13:42:02.590: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename secrets @ 11/11/23 13:42:02.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:42:02.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:42:02.607
  STEP: Creating secret with name secret-test-map-af166c9b-5364-4c7d-b040-008c8f1ac07a @ 11/11/23 13:42:02.609
  STEP: Creating a pod to test consume secrets @ 11/11/23 13:42:02.613
  E1111 13:42:03.229294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:04.229389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:05.229637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:06.229807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:42:06.631
  Nov 11 13:42:06.634: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-secrets-66bf1b53-76ec-4890-8d1a-d4ddd1156ffa container secret-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 13:42:06.649
  Nov 11 13:42:06.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4764" for this suite. @ 11/11/23 13:42:06.667
• [4.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 11/11/23 13:42:06.675
  Nov 11 13:42:06.675: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/11/23 13:42:06.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:42:06.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:42:06.688
  Nov 11 13:42:06.691: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:42:07.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1111 13:42:07.230193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "custom-resource-definition-4813" for this suite. @ 11/11/23 13:42:07.23
• [0.562 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 11/11/23 13:42:07.238
  Nov 11 13:42:07.238: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 13:42:07.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:42:07.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:42:07.258
  STEP: Creating a pod to test downward api env vars @ 11/11/23 13:42:07.261
  E1111 13:42:08.230535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:09.230698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:10.231741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:11.231904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:42:11.278
  Nov 11 13:42:11.282: INFO: Trying to get logs from node ip-172-31-79-254 pod downward-api-9b8b2b22-c9e9-478a-9b2e-66c1dc159e2d container dapi-container: <nil>
  STEP: delete the pod @ 11/11/23 13:42:11.288
  Nov 11 13:42:11.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7958" for this suite. @ 11/11/23 13:42:11.306
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 11/11/23 13:42:11.313
  Nov 11 13:42:11.313: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 13:42:11.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:42:11.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:42:11.328
  STEP: Setting up server cert @ 11/11/23 13:42:11.35
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 13:42:11.585
  STEP: Deploying the webhook pod @ 11/11/23 13:42:11.593
  STEP: Wait for the deployment to be ready @ 11/11/23 13:42:11.604
  Nov 11 13:42:11.613: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1111 13:42:12.232134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:13.232734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 13:42:13.622
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 13:42:13.63
  E1111 13:42:14.232989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:42:14.630: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 11/11/23 13:42:14.637
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 11/11/23 13:42:14.654
  STEP: Creating a configMap that should not be mutated @ 11/11/23 13:42:14.661
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 11/11/23 13:42:14.671
  STEP: Creating a configMap that should be mutated @ 11/11/23 13:42:14.679
  Nov 11 13:42:14.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5854" for this suite. @ 11/11/23 13:42:14.735
  STEP: Destroying namespace "webhook-markers-6207" for this suite. @ 11/11/23 13:42:14.744
• [3.438 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 11/11/23 13:42:14.752
  Nov 11 13:42:14.752: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename endpointslice @ 11/11/23 13:42:14.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:42:14.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:42:14.768
  E1111 13:42:15.234068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:16.234232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:17.234482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:18.234669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:19.234716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 11/11/23 13:42:19.83
  E1111 13:42:20.234803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:21.234878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:22.235367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:23.235770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:24.235886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 11/11/23 13:42:24.838
  E1111 13:42:25.236681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:26.236766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:27.237067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:28.237880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:29.237986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 11/11/23 13:42:29.846
  E1111 13:42:30.239000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:31.239760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:32.240209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:33.240285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:34.240854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 11/11/23 13:42:34.852
  Nov 11 13:42:34.871: INFO: EndpointSlice for Service endpointslice-6354/example-named-port not found
  E1111 13:42:35.241505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:36.241920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:37.242111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:38.242302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:39.242358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:40.242851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:41.242948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:42.243015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:43.243768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:44.244535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:42:44.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6354" for this suite. @ 11/11/23 13:42:44.884
• [30.144 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 11/11/23 13:42:44.896
  Nov 11 13:42:44.896: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/11/23 13:42:44.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:42:44.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:42:44.916
  STEP: Creating two CSIDrivers @ 11/11/23 13:42:44.919
  STEP: Getting "inline-driver-dc9febad-ce91-4542-8373-74024cae4bfd" & "inline-driver-01fd5d01-fa59-447a-913e-348e7205668b" @ 11/11/23 13:42:44.937
  STEP: Patching the CSIDriver "inline-driver-01fd5d01-fa59-447a-913e-348e7205668b" @ 11/11/23 13:42:44.942
  STEP: Updating the CSIDriver "inline-driver-01fd5d01-fa59-447a-913e-348e7205668b" @ 11/11/23 13:42:44.95
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-2369" @ 11/11/23 13:42:44.96
  STEP: Deleting CSIDriver "inline-driver-dc9febad-ce91-4542-8373-74024cae4bfd" @ 11/11/23 13:42:44.963
  STEP: Confirm deletion of CSIDriver "inline-driver-dc9febad-ce91-4542-8373-74024cae4bfd" @ 11/11/23 13:42:44.968
  STEP: Deleting CSIDriver "inline-driver-01fd5d01-fa59-447a-913e-348e7205668b" via DeleteCollection @ 11/11/23 13:42:44.971
  STEP: Confirm deletion of CSIDriver "inline-driver-01fd5d01-fa59-447a-913e-348e7205668b" @ 11/11/23 13:42:44.979
  Nov 11 13:42:44.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2369" for this suite. @ 11/11/23 13:42:44.986
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 11/11/23 13:42:44.993
  Nov 11 13:42:44.993: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename job @ 11/11/23 13:42:44.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:42:45.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:42:45.01
  STEP: Creating a suspended job @ 11/11/23 13:42:45.015
  STEP: Patching the Job @ 11/11/23 13:42:45.023
  STEP: Watching for Job to be patched @ 11/11/23 13:42:45.039
  Nov 11 13:42:45.040: INFO: Event ADDED observed for Job e2e-nbqpd in namespace job-3095 with labels: map[e2e-job-label:e2e-nbqpd] and annotations: map[]
  Nov 11 13:42:45.040: INFO: Event MODIFIED observed for Job e2e-nbqpd in namespace job-3095 with labels: map[e2e-job-label:e2e-nbqpd] and annotations: map[]
  Nov 11 13:42:45.040: INFO: Event MODIFIED found for Job e2e-nbqpd in namespace job-3095 with labels: map[e2e-job-label:e2e-nbqpd e2e-nbqpd:patched] and annotations: map[]
  STEP: Updating the job @ 11/11/23 13:42:45.04
  STEP: Watching for Job to be updated @ 11/11/23 13:42:45.049
  Nov 11 13:42:45.051: INFO: Event MODIFIED found for Job e2e-nbqpd in namespace job-3095 with labels: map[e2e-job-label:e2e-nbqpd e2e-nbqpd:patched] and annotations: map[updated:true]
  Nov 11 13:42:45.051: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 11/11/23 13:42:45.051
  Nov 11 13:42:45.054: INFO: Job: e2e-nbqpd as labels: map[e2e-job-label:e2e-nbqpd e2e-nbqpd:patched]
  STEP: Waiting for job to complete @ 11/11/23 13:42:45.054
  E1111 13:42:45.245464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:46.245802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:47.246274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:48.246434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:49.246625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:50.246699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:51.247487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:52.247570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 11/11/23 13:42:53.058
  STEP: Watching for Job to be deleted @ 11/11/23 13:42:53.066
  Nov 11 13:42:53.068: INFO: Event MODIFIED observed for Job e2e-nbqpd in namespace job-3095 with labels: map[e2e-job-label:e2e-nbqpd e2e-nbqpd:patched] and annotations: map[updated:true]
  Nov 11 13:42:53.068: INFO: Event MODIFIED observed for Job e2e-nbqpd in namespace job-3095 with labels: map[e2e-job-label:e2e-nbqpd e2e-nbqpd:patched] and annotations: map[updated:true]
  Nov 11 13:42:53.068: INFO: Event MODIFIED observed for Job e2e-nbqpd in namespace job-3095 with labels: map[e2e-job-label:e2e-nbqpd e2e-nbqpd:patched] and annotations: map[updated:true]
  Nov 11 13:42:53.068: INFO: Event MODIFIED observed for Job e2e-nbqpd in namespace job-3095 with labels: map[e2e-job-label:e2e-nbqpd e2e-nbqpd:patched] and annotations: map[updated:true]
  Nov 11 13:42:53.068: INFO: Event MODIFIED observed for Job e2e-nbqpd in namespace job-3095 with labels: map[e2e-job-label:e2e-nbqpd e2e-nbqpd:patched] and annotations: map[updated:true]
  Nov 11 13:42:53.068: INFO: Event MODIFIED observed for Job e2e-nbqpd in namespace job-3095 with labels: map[e2e-job-label:e2e-nbqpd e2e-nbqpd:patched] and annotations: map[updated:true]
  Nov 11 13:42:53.068: INFO: Event MODIFIED observed for Job e2e-nbqpd in namespace job-3095 with labels: map[e2e-job-label:e2e-nbqpd e2e-nbqpd:patched] and annotations: map[updated:true]
  Nov 11 13:42:53.068: INFO: Event DELETED found for Job e2e-nbqpd in namespace job-3095 with labels: map[e2e-job-label:e2e-nbqpd e2e-nbqpd:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 11/11/23 13:42:53.068
  Nov 11 13:42:53.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3095" for this suite. @ 11/11/23 13:42:53.075
• [8.097 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 11/11/23 13:42:53.09
  Nov 11 13:42:53.090: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-probe @ 11/11/23 13:42:53.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:42:53.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:42:53.116
  STEP: Creating pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768 @ 11/11/23 13:42:53.119
  E1111 13:42:53.247984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:54.248917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/11/23 13:42:55.135
  Nov 11 13:42:55.138: INFO: Initial restart count of pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 is 0
  Nov 11 13:42:55.141: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:42:55.249501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:56.249617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:42:57.145: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:42:57.250505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:42:58.250748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:42:59.149: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:42:59.251063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:00.251172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:01.153: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:01.251891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:02.252214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:03.156: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:03.253070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:04.253158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:05.160: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:05.254076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:06.254166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:07.164: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:07.254275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:08.254367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:09.174: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:09.255428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:10.255753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:11.178: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:11.256736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:12.257077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:13.183: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:13.257575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:14.257759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:15.187: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:15.258489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:16.258596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:17.191: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:17.259299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:18.259381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:19.194: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:19.260378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:20.260480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:21.198: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:21.260832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:22.261189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:23.202: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:23.261543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:24.261752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:25.206: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:25.262145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:26.262301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:27.210: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:27.263231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:28.263761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:29.213: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:29.264767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:30.264857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:31.218: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:31.265077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:32.265930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:33.222: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:33.266749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:34.266909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:35.226: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:35.267797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:36.267979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:37.231: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:37.268398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:38.268554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:39.235: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:39.269360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:40.269514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:41.239: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:41.269753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:42.270090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:43.243: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:43.270631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:44.271550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:45.247: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:45.271805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:46.272536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:47.251: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:47.272769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:48.272883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:49.255: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:49.273661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:50.273811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:51.259: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:51.274498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:52.274705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:53.263: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:53.275660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:54.275843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:55.266: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:55.276783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:56.276938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:57.271: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  E1111 13:43:57.277428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:43:58.277575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:43:59.275: INFO: Get pod test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 in namespace container-probe-2768
  Nov 11 13:43:59.275: INFO: Restart count of pod container-probe-2768/test-grpc-396f4832-a63a-4c2a-8cab-b1e2d8185264 is now 1 (1m4.136170264s elapsed)
  Nov 11 13:43:59.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1111 13:43:59.277748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 11/11/23 13:43:59.278
  STEP: Destroying namespace "container-probe-2768" for this suite. @ 11/11/23 13:43:59.29
• [66.209 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 11/11/23 13:43:59.3
  Nov 11 13:43:59.300: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename server-version @ 11/11/23 13:43:59.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:43:59.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:43:59.317
  STEP: Request ServerVersion @ 11/11/23 13:43:59.319
  STEP: Confirm major version @ 11/11/23 13:43:59.32
  Nov 11 13:43:59.320: INFO: Major version: 1
  STEP: Confirm minor version @ 11/11/23 13:43:59.32
  Nov 11 13:43:59.320: INFO: cleanMinorVersion: 28
  Nov 11 13:43:59.320: INFO: Minor version: 28
  Nov 11 13:43:59.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-833" for this suite. @ 11/11/23 13:43:59.324
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 11/11/23 13:43:59.332
  Nov 11 13:43:59.332: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 13:43:59.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:43:59.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:43:59.357
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/11/23 13:43:59.36
  E1111 13:44:00.277821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:01.277907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:02.278461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:03.278643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:44:03.378
  Nov 11 13:44:03.380: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-f1934c4d-a4a0-4aed-b218-fe53cd69bc1a container test-container: <nil>
  STEP: delete the pod @ 11/11/23 13:44:03.392
  Nov 11 13:44:03.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9125" for this suite. @ 11/11/23 13:44:03.409
• [4.084 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 11/11/23 13:44:03.416
  Nov 11 13:44:03.416: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:44:03.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:44:03.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:44:03.432
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-d045fc24-1aee-49f3-9e94-908d5ee3ae16 @ 11/11/23 13:44:03.438
  STEP: Creating the pod @ 11/11/23 13:44:03.442
  E1111 13:44:04.278712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:05.279738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-d045fc24-1aee-49f3-9e94-908d5ee3ae16 @ 11/11/23 13:44:05.466
  STEP: waiting to observe update in volume @ 11/11/23 13:44:05.472
  E1111 13:44:06.280192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:07.280392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:08.281404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:09.281552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:10.281978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:11.282126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:12.282768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:13.283755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:14.284658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:15.284748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:16.284951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:17.285073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:18.285182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:19.285564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:20.285941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:21.286033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:22.286209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:23.286293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:24.286695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:25.287743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:26.288415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:27.288681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:28.289113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:29.289262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:30.289474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:31.289577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:32.289672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:33.289818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:34.289921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:35.290026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:36.290234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:37.290526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:38.291446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:39.291757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:40.292792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:41.293742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:42.294071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:43.294223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:44.294516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:45.294707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:46.295399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:47.295672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:48.296614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:49.297237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:50.297750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:51.297904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:52.297939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:53.298027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:54.299050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:55.299762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:56.300607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:57.300821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:58.301083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:44:59.301167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:00.302162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:01.302250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:02.302694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:03.302715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:04.303755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:05.303870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:06.304721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:07.305153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:08.305717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:09.305877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:10.306682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:11.306944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:12.307344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:13.307515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:14.307800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:15.307952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:16.308359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:17.308684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:18.309583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:19.309742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:20.310481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:21.311531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:22.311840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:23.311985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:24.312784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:25.312960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:26.313429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:27.314205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:28.314439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:29.314605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:45:29.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2854" for this suite. @ 11/11/23 13:45:29.8
• [86.390 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 11/11/23 13:45:29.806
  Nov 11 13:45:29.806: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 13:45:29.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:45:29.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:45:29.822
  STEP: Setting up server cert @ 11/11/23 13:45:29.844
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 13:45:30.071
  STEP: Deploying the webhook pod @ 11/11/23 13:45:30.078
  STEP: Wait for the deployment to be ready @ 11/11/23 13:45:30.089
  Nov 11 13:45:30.094: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1111 13:45:30.315021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:31.315763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 13:45:32.106
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 13:45:32.115
  E1111 13:45:32.316407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:45:33.115: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 11/11/23 13:45:33.121
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 11/11/23 13:45:33.122
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 11/11/23 13:45:33.123
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 11/11/23 13:45:33.123
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 11/11/23 13:45:33.124
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/11/23 13:45:33.124
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/11/23 13:45:33.125
  Nov 11 13:45:33.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8529" for this suite. @ 11/11/23 13:45:33.161
  STEP: Destroying namespace "webhook-markers-9957" for this suite. @ 11/11/23 13:45:33.168
• [3.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 11/11/23 13:45:33.178
  Nov 11 13:45:33.178: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 13:45:33.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:45:33.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:45:33.193
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/11/23 13:45:33.196
  E1111 13:45:33.316678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:34.316784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:35.317719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:36.317894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:45:37.213
  Nov 11 13:45:37.217: INFO: Trying to get logs from node ip-172-31-79-254 pod pod-70e7b2e5-c039-41c3-99c5-b567d87ba57a container test-container: <nil>
  STEP: delete the pod @ 11/11/23 13:45:37.223
  Nov 11 13:45:37.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7674" for this suite. @ 11/11/23 13:45:37.241
• [4.070 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 11/11/23 13:45:37.248
  Nov 11 13:45:37.248: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename resourcequota @ 11/11/23 13:45:37.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:45:37.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:45:37.268
  STEP: Counting existing ResourceQuota @ 11/11/23 13:45:37.272
  E1111 13:45:37.318401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:38.319157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:39.319811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:40.320157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:41.320176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/11/23 13:45:42.275
  STEP: Ensuring resource quota status is calculated @ 11/11/23 13:45:42.286
  E1111 13:45:42.320658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:43.320883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:45:44.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3980" for this suite. @ 11/11/23 13:45:44.292
• [7.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 11/11/23 13:45:44.301
  Nov 11 13:45:44.301: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename var-expansion @ 11/11/23 13:45:44.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:45:44.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:45:44.316
  STEP: Creating a pod to test substitution in volume subpath @ 11/11/23 13:45:44.319
  E1111 13:45:44.321069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:45.321469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:46.321507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:47.322173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:48.322263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:45:48.335
  Nov 11 13:45:48.338: INFO: Trying to get logs from node ip-172-31-79-254 pod var-expansion-809bbfed-de3d-4218-a794-1ae999f8277b container dapi-container: <nil>
  STEP: delete the pod @ 11/11/23 13:45:48.344
  Nov 11 13:45:48.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5802" for this suite. @ 11/11/23 13:45:48.362
• [4.067 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 11/11/23 13:45:48.368
  Nov 11 13:45:48.368: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename var-expansion @ 11/11/23 13:45:48.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:45:48.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:45:48.384
  STEP: Creating a pod to test substitution in container's args @ 11/11/23 13:45:48.387
  E1111 13:45:49.322720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:50.323755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:51.324162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:52.324565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:45:52.405
  Nov 11 13:45:52.408: INFO: Trying to get logs from node ip-172-31-79-254 pod var-expansion-70394685-9961-48d7-b899-5cb33da40711 container dapi-container: <nil>
  STEP: delete the pod @ 11/11/23 13:45:52.414
  Nov 11 13:45:52.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3054" for this suite. @ 11/11/23 13:45:52.431
• [4.070 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 11/11/23 13:45:52.438
  Nov 11 13:45:52.438: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename statefulset @ 11/11/23 13:45:52.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:45:52.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:45:52.465
  STEP: Creating service test in namespace statefulset-4227 @ 11/11/23 13:45:52.467
  STEP: Looking for a node to schedule stateful set and pod @ 11/11/23 13:45:52.472
  STEP: Creating pod with conflicting port in namespace statefulset-4227 @ 11/11/23 13:45:52.479
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4227 @ 11/11/23 13:45:52.485
  E1111 13:45:53.325008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:54.325245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-4227 @ 11/11/23 13:45:54.497
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4227 @ 11/11/23 13:45:54.502
  Nov 11 13:45:54.510: INFO: Observed stateful pod in namespace: statefulset-4227, name: ss-0, uid: 81167f3e-c428-41e5-b724-c990d7f55fa8, status phase: Pending. Waiting for statefulset controller to delete.
  Nov 11 13:45:54.530: INFO: Observed stateful pod in namespace: statefulset-4227, name: ss-0, uid: 81167f3e-c428-41e5-b724-c990d7f55fa8, status phase: Failed. Waiting for statefulset controller to delete.
  Nov 11 13:45:54.538: INFO: Observed stateful pod in namespace: statefulset-4227, name: ss-0, uid: 81167f3e-c428-41e5-b724-c990d7f55fa8, status phase: Failed. Waiting for statefulset controller to delete.
  Nov 11 13:45:54.542: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-4227
  STEP: Removing pod with conflicting port in namespace statefulset-4227 @ 11/11/23 13:45:54.542
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4227 and will be in running state @ 11/11/23 13:45:54.557
  E1111 13:45:55.325343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:56.325640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:45:56.564: INFO: Deleting all statefulset in ns statefulset-4227
  Nov 11 13:45:56.567: INFO: Scaling statefulset ss to 0
  E1111 13:45:57.326008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:58.326282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:45:59.326329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:00.327380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:01.327746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:02.328112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:03.328255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:04.328344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:05.328497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:06.328640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:46:06.581: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 11 13:46:06.584: INFO: Deleting statefulset ss
  Nov 11 13:46:06.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4227" for this suite. @ 11/11/23 13:46:06.597
• [14.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 11/11/23 13:46:06.604
  Nov 11 13:46:06.604: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename init-container @ 11/11/23 13:46:06.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:06.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:06.62
  STEP: creating the pod @ 11/11/23 13:46:06.623
  Nov 11 13:46:06.623: INFO: PodSpec: initContainers in spec.initContainers
  E1111 13:46:07.329200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:08.329963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:09.330052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:10.330103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:46:11.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3100" for this suite. @ 11/11/23 13:46:11.318
• [4.718 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 11/11/23 13:46:11.324
  Nov 11 13:46:11.324: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 13:46:11.324
  E1111 13:46:11.330215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:11.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:11.341
  STEP: creating a Service @ 11/11/23 13:46:11.346
  STEP: watching for the Service to be added @ 11/11/23 13:46:11.355
  Nov 11 13:46:11.356: INFO: Found Service test-service-zqvxh in namespace services-8052 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Nov 11 13:46:11.356: INFO: Service test-service-zqvxh created
  STEP: Getting /status @ 11/11/23 13:46:11.356
  Nov 11 13:46:11.359: INFO: Service test-service-zqvxh has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 11/11/23 13:46:11.359
  STEP: watching for the Service to be patched @ 11/11/23 13:46:11.365
  Nov 11 13:46:11.367: INFO: observed Service test-service-zqvxh in namespace services-8052 with annotations: map[] & LoadBalancer: {[]}
  Nov 11 13:46:11.367: INFO: Found Service test-service-zqvxh in namespace services-8052 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Nov 11 13:46:11.367: INFO: Service test-service-zqvxh has service status patched
  STEP: updating the ServiceStatus @ 11/11/23 13:46:11.367
  Nov 11 13:46:11.373: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 11/11/23 13:46:11.373
  Nov 11 13:46:11.375: INFO: Observed Service test-service-zqvxh in namespace services-8052 with annotations: map[] & Conditions: {[]}
  Nov 11 13:46:11.375: INFO: Observed event: &Service{ObjectMeta:{test-service-zqvxh  services-8052  55fd14e1-fc02-4a54-bba3-e77c864c49e6 42622 0 2023-11-11 13:46:11 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-11-11 13:46:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-11-11 13:46:11 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.87,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.87],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Nov 11 13:46:11.375: INFO: Found Service test-service-zqvxh in namespace services-8052 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov 11 13:46:11.375: INFO: Service test-service-zqvxh has service status updated
  STEP: patching the service @ 11/11/23 13:46:11.375
  STEP: watching for the Service to be patched @ 11/11/23 13:46:11.386
  Nov 11 13:46:11.387: INFO: observed Service test-service-zqvxh in namespace services-8052 with labels: map[test-service-static:true]
  Nov 11 13:46:11.387: INFO: observed Service test-service-zqvxh in namespace services-8052 with labels: map[test-service-static:true]
  Nov 11 13:46:11.388: INFO: observed Service test-service-zqvxh in namespace services-8052 with labels: map[test-service-static:true]
  Nov 11 13:46:11.388: INFO: Found Service test-service-zqvxh in namespace services-8052 with labels: map[test-service:patched test-service-static:true]
  Nov 11 13:46:11.388: INFO: Service test-service-zqvxh patched
  STEP: deleting the service @ 11/11/23 13:46:11.388
  STEP: watching for the Service to be deleted @ 11/11/23 13:46:11.401
  Nov 11 13:46:11.402: INFO: Observed event: ADDED
  Nov 11 13:46:11.402: INFO: Observed event: MODIFIED
  Nov 11 13:46:11.402: INFO: Observed event: MODIFIED
  Nov 11 13:46:11.402: INFO: Observed event: MODIFIED
  Nov 11 13:46:11.402: INFO: Found Service test-service-zqvxh in namespace services-8052 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Nov 11 13:46:11.402: INFO: Service test-service-zqvxh deleted
  Nov 11 13:46:11.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8052" for this suite. @ 11/11/23 13:46:11.405
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 11/11/23 13:46:11.411
  Nov 11 13:46:11.411: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename conformance-tests @ 11/11/23 13:46:11.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:11.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:11.427
  STEP: Getting node addresses @ 11/11/23 13:46:11.43
  Nov 11 13:46:11.430: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Nov 11 13:46:11.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-9775" for this suite. @ 11/11/23 13:46:11.439
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 11/11/23 13:46:11.448
  Nov 11 13:46:11.448: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename proxy @ 11/11/23 13:46:11.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:11.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:11.463
  Nov 11 13:46:11.466: INFO: Creating pod...
  E1111 13:46:12.331150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:13.331252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:46:13.480: INFO: Creating service...
  Nov 11 13:46:13.490: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4013/pods/agnhost/proxy?method=DELETE
  Nov 11 13:46:13.495: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov 11 13:46:13.495: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4013/pods/agnhost/proxy?method=OPTIONS
  Nov 11 13:46:13.499: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov 11 13:46:13.499: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4013/pods/agnhost/proxy?method=PATCH
  Nov 11 13:46:13.502: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov 11 13:46:13.502: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4013/pods/agnhost/proxy?method=POST
  Nov 11 13:46:13.505: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov 11 13:46:13.505: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4013/pods/agnhost/proxy?method=PUT
  Nov 11 13:46:13.508: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov 11 13:46:13.508: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4013/services/e2e-proxy-test-service/proxy?method=DELETE
  Nov 11 13:46:13.513: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov 11 13:46:13.513: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4013/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Nov 11 13:46:13.517: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov 11 13:46:13.517: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4013/services/e2e-proxy-test-service/proxy?method=PATCH
  Nov 11 13:46:13.522: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov 11 13:46:13.522: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4013/services/e2e-proxy-test-service/proxy?method=POST
  Nov 11 13:46:13.526: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov 11 13:46:13.526: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4013/services/e2e-proxy-test-service/proxy?method=PUT
  Nov 11 13:46:13.530: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov 11 13:46:13.530: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4013/pods/agnhost/proxy?method=GET
  Nov 11 13:46:13.533: INFO: http.Client request:GET StatusCode:301
  Nov 11 13:46:13.533: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4013/services/e2e-proxy-test-service/proxy?method=GET
  Nov 11 13:46:13.537: INFO: http.Client request:GET StatusCode:301
  Nov 11 13:46:13.537: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4013/pods/agnhost/proxy?method=HEAD
  Nov 11 13:46:13.539: INFO: http.Client request:HEAD StatusCode:301
  Nov 11 13:46:13.539: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4013/services/e2e-proxy-test-service/proxy?method=HEAD
  Nov 11 13:46:13.543: INFO: http.Client request:HEAD StatusCode:301
  Nov 11 13:46:13.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4013" for this suite. @ 11/11/23 13:46:13.547
• [2.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 11/11/23 13:46:13.557
  Nov 11 13:46:13.557: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename proxy @ 11/11/23 13:46:13.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:13.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:13.571
  Nov 11 13:46:13.574: INFO: Creating pod...
  E1111 13:46:14.332067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:15.332288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:46:15.588: INFO: Creating service...
  Nov 11 13:46:15.597: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3962/pods/agnhost/proxy/some/path/with/DELETE
  Nov 11 13:46:15.602: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov 11 13:46:15.602: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3962/pods/agnhost/proxy/some/path/with/GET
  Nov 11 13:46:15.605: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Nov 11 13:46:15.605: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3962/pods/agnhost/proxy/some/path/with/HEAD
  Nov 11 13:46:15.608: INFO: http.Client request:HEAD | StatusCode:200
  Nov 11 13:46:15.608: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3962/pods/agnhost/proxy/some/path/with/OPTIONS
  Nov 11 13:46:15.611: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov 11 13:46:15.611: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3962/pods/agnhost/proxy/some/path/with/PATCH
  Nov 11 13:46:15.614: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov 11 13:46:15.614: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3962/pods/agnhost/proxy/some/path/with/POST
  Nov 11 13:46:15.617: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov 11 13:46:15.617: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3962/pods/agnhost/proxy/some/path/with/PUT
  Nov 11 13:46:15.620: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov 11 13:46:15.620: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3962/services/test-service/proxy/some/path/with/DELETE
  Nov 11 13:46:15.625: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov 11 13:46:15.625: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3962/services/test-service/proxy/some/path/with/GET
  Nov 11 13:46:15.628: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Nov 11 13:46:15.628: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3962/services/test-service/proxy/some/path/with/HEAD
  Nov 11 13:46:15.633: INFO: http.Client request:HEAD | StatusCode:200
  Nov 11 13:46:15.633: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3962/services/test-service/proxy/some/path/with/OPTIONS
  Nov 11 13:46:15.638: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov 11 13:46:15.638: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3962/services/test-service/proxy/some/path/with/PATCH
  Nov 11 13:46:15.642: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov 11 13:46:15.642: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3962/services/test-service/proxy/some/path/with/POST
  Nov 11 13:46:15.647: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov 11 13:46:15.647: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3962/services/test-service/proxy/some/path/with/PUT
  Nov 11 13:46:15.651: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov 11 13:46:15.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3962" for this suite. @ 11/11/23 13:46:15.655
• [2.104 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 11/11/23 13:46:15.66
  Nov 11 13:46:15.660: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename gc @ 11/11/23 13:46:15.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:15.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:15.675
  STEP: create the deployment @ 11/11/23 13:46:15.678
  W1111 13:46:15.684198      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/11/23 13:46:15.684
  STEP: delete the deployment @ 11/11/23 13:46:16.192
  STEP: wait for all rs to be garbage collected @ 11/11/23 13:46:16.199
  STEP: expected 0 rs, got 1 rs @ 11/11/23 13:46:16.207
  STEP: expected 0 pods, got 2 pods @ 11/11/23 13:46:16.21
  E1111 13:46:16.332683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/11/23 13:46:16.721
  W1111 13:46:16.728236      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 11 13:46:16.728: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 11 13:46:16.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4096" for this suite. @ 11/11/23 13:46:16.731
• [1.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 11/11/23 13:46:16.737
  Nov 11 13:46:16.737: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename replication-controller @ 11/11/23 13:46:16.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:16.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:16.752
  Nov 11 13:46:16.755: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 11/11/23 13:46:16.762
  STEP: Checking rc "condition-test" has the desired failure condition set @ 11/11/23 13:46:16.768
  E1111 13:46:17.333584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 11/11/23 13:46:17.774
  Nov 11 13:46:17.784: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 11/11/23 13:46:17.784
  E1111 13:46:18.334363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:46:18.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6943" for this suite. @ 11/11/23 13:46:18.794
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 11/11/23 13:46:18.803
  Nov 11 13:46:18.803: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename gc @ 11/11/23 13:46:18.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:18.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:18.815
  STEP: create the rc @ 11/11/23 13:46:18.818
  W1111 13:46:18.821598      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1111 13:46:19.334923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:20.335760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:21.335901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:22.336275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:23.337204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 11/11/23 13:46:23.825
  STEP: wait for all pods to be garbage collected @ 11/11/23 13:46:23.833
  E1111 13:46:24.337834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:25.337932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:26.338125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:27.338468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:28.338642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/11/23 13:46:28.84
  W1111 13:46:28.844989      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 11 13:46:28.845: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 11 13:46:28.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6623" for this suite. @ 11/11/23 13:46:28.847
• [10.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 11/11/23 13:46:28.856
  Nov 11 13:46:28.856: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename resourcequota @ 11/11/23 13:46:28.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:28.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:28.872
  STEP: Creating a ResourceQuota @ 11/11/23 13:46:28.875
  STEP: Getting a ResourceQuota @ 11/11/23 13:46:28.879
  STEP: Listing all ResourceQuotas with LabelSelector @ 11/11/23 13:46:28.884
  STEP: Patching the ResourceQuota @ 11/11/23 13:46:28.887
  STEP: Deleting a Collection of ResourceQuotas @ 11/11/23 13:46:28.891
  STEP: Verifying the deleted ResourceQuota @ 11/11/23 13:46:28.9
  Nov 11 13:46:28.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3159" for this suite. @ 11/11/23 13:46:28.906
• [0.057 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 11/11/23 13:46:28.913
  Nov 11 13:46:28.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 13:46:28.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:28.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:28.927
  STEP: creating service in namespace services-6298 @ 11/11/23 13:46:28.93
  STEP: creating service affinity-clusterip-transition in namespace services-6298 @ 11/11/23 13:46:28.93
  STEP: creating replication controller affinity-clusterip-transition in namespace services-6298 @ 11/11/23 13:46:28.939
  I1111 13:46:28.950008      22 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-6298, replica count: 3
  E1111 13:46:29.339529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:30.340464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:31.341405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:46:32.000139      22 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 11 13:46:32.006: INFO: Creating new exec pod
  E1111 13:46:32.341586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:33.341730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:34.342401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:46:35.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-6298 exec execpod-affinitypnt7h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Nov 11 13:46:35.155: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Nov 11 13:46:35.155: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 13:46:35.155: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-6298 exec execpod-affinitypnt7h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.121 80'
  Nov 11 13:46:35.274: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.121 80\nConnection to 10.152.183.121 80 port [tcp/http] succeeded!\n"
  Nov 11 13:46:35.274: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 13:46:35.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-6298 exec execpod-affinitypnt7h -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.121:80/ ; done'
  E1111 13:46:35.343075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:46:35.483: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n"
  Nov 11 13:46:35.483: INFO: stdout: "\naffinity-clusterip-transition-c57xn\naffinity-clusterip-transition-c57xn\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-c57xn\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-c57xn\naffinity-clusterip-transition-xm6t5\naffinity-clusterip-transition-xm6t5\naffinity-clusterip-transition-c57xn\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-xm6t5\naffinity-clusterip-transition-c57xn\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-c57xn"
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-c57xn
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-c57xn
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-c57xn
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-c57xn
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-xm6t5
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-xm6t5
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-c57xn
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-xm6t5
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-c57xn
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.483: INFO: Received response from host: affinity-clusterip-transition-c57xn
  Nov 11 13:46:35.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-6298 exec execpod-affinitypnt7h -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.121:80/ ; done'
  Nov 11 13:46:35.686: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.121:80/\n"
  Nov 11 13:46:35.686: INFO: stdout: "\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv\naffinity-clusterip-transition-msbrv"
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.686: INFO: Received response from host: affinity-clusterip-transition-msbrv
  Nov 11 13:46:35.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 11 13:46:35.691: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-6298, will wait for the garbage collector to delete the pods @ 11/11/23 13:46:35.705
  Nov 11 13:46:35.765: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.867642ms
  Nov 11 13:46:35.865: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.536605ms
  E1111 13:46:36.344018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:37.344092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:38.345142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-6298" for this suite. @ 11/11/23 13:46:38.583
• [9.678 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 11/11/23 13:46:38.592
  Nov 11 13:46:38.592: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename disruption @ 11/11/23 13:46:38.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:38.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:38.607
  STEP: Creating a kubernetes client @ 11/11/23 13:46:38.61
  Nov 11 13:46:38.610: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename disruption-2 @ 11/11/23 13:46:38.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:38.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:38.625
  STEP: Waiting for the pdb to be processed @ 11/11/23 13:46:38.632
  E1111 13:46:39.346076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:40.346371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 11/11/23 13:46:40.643
  E1111 13:46:41.347278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:42.347585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 11/11/23 13:46:42.658
  STEP: listing a collection of PDBs across all namespaces @ 11/11/23 13:46:42.662
  STEP: listing a collection of PDBs in namespace disruption-5457 @ 11/11/23 13:46:42.665
  STEP: deleting a collection of PDBs @ 11/11/23 13:46:42.669
  STEP: Waiting for the PDB collection to be deleted @ 11/11/23 13:46:42.682
  Nov 11 13:46:42.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 11 13:46:42.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6582" for this suite. @ 11/11/23 13:46:42.691
  STEP: Destroying namespace "disruption-5457" for this suite. @ 11/11/23 13:46:42.696
• [4.110 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 11/11/23 13:46:42.702
  Nov 11 13:46:42.702: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename namespaces @ 11/11/23 13:46:42.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:42.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:42.716
  STEP: creating a Namespace @ 11/11/23 13:46:42.719
  STEP: patching the Namespace @ 11/11/23 13:46:42.731
  STEP: get the Namespace and ensuring it has the label @ 11/11/23 13:46:42.743
  Nov 11 13:46:42.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6495" for this suite. @ 11/11/23 13:46:42.75
  STEP: Destroying namespace "nspatchtest-cdd82a39-f4e0-45d4-b6ff-33993007d139-3282" for this suite. @ 11/11/23 13:46:42.756
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 11/11/23 13:46:42.763
  Nov 11 13:46:42.763: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/11/23 13:46:42.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:42.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:42.779
  STEP: creating a target pod @ 11/11/23 13:46:42.781
  E1111 13:46:43.348027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:44.348175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 11/11/23 13:46:44.798
  E1111 13:46:45.348479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:46.348634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 11/11/23 13:46:46.811
  Nov 11 13:46:46.811: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-169 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 11 13:46:46.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  Nov 11 13:46:46.811: INFO: ExecWithOptions: Clientset creation
  Nov 11 13:46:46.811: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-169/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Nov 11 13:46:46.900: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 11/11/23 13:46:46.907
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 11/11/23 13:46:46.91
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 11/11/23 13:46:46.92
  Nov 11 13:46:46.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-169" for this suite. @ 11/11/23 13:46:46.926
• [4.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 11/11/23 13:46:46.932
  Nov 11 13:46:46.932: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:46:46.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:46:46.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:46:46.947
  STEP: Creating secret with name s-test-opt-del-81c54a33-4a32-48bc-bcb5-c31b026390b6 @ 11/11/23 13:46:46.953
  STEP: Creating secret with name s-test-opt-upd-d8ef6dce-02d8-4ccd-90d2-d08cfe0cae4f @ 11/11/23 13:46:46.957
  STEP: Creating the pod @ 11/11/23 13:46:46.961
  E1111 13:46:47.348947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:48.349104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-81c54a33-4a32-48bc-bcb5-c31b026390b6 @ 11/11/23 13:46:49.01
  STEP: Updating secret s-test-opt-upd-d8ef6dce-02d8-4ccd-90d2-d08cfe0cae4f @ 11/11/23 13:46:49.015
  STEP: Creating secret with name s-test-opt-create-fefb487b-f84f-469f-adca-0124c5c614b0 @ 11/11/23 13:46:49.021
  STEP: waiting to observe update in volume @ 11/11/23 13:46:49.024
  E1111 13:46:49.349364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:50.349518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:51.350031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:52.350062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:53.350798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:54.351795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:55.352443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:56.352559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:57.353184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:58.353298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:46:59.354068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:00.354151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:01.354544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:02.354713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:03.355666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:04.355907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:05.356942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:06.357112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:07.357463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:08.357636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:09.357853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:10.357997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:11.358534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:12.358745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:13.359373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:14.360011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:15.360979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:16.361437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:17.362146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:18.362302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:19.362557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:20.362688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:21.363655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:22.364037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:23.364088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:24.364203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:25.364727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:26.364894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:27.365918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:28.366086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:29.366199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:30.366348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:31.367321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:32.367593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:33.368652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:34.368797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:35.369797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:36.370183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:37.370652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:38.370695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:39.371391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:40.371496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:41.371565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:42.371979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:43.372446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:44.372616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:45.373281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:46.373428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:47.373696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:48.373869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:49.374602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:50.374713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:51.374966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:52.375760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:53.376437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:54.377391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:47:55.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5875" for this suite. @ 11/11/23 13:47:55.287
• [68.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 11/11/23 13:47:55.294
  Nov 11 13:47:55.294: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename kubectl @ 11/11/23 13:47:55.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:47:55.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:47:55.308
  STEP: create deployment with httpd image @ 11/11/23 13:47:55.31
  Nov 11 13:47:55.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-5658 create -f -'
  E1111 13:47:55.378288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:47:55.435: INFO: stderr: ""
  Nov 11 13:47:55.435: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 11/11/23 13:47:55.435
  Nov 11 13:47:55.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-5658 diff -f -'
  Nov 11 13:47:55.544: INFO: rc: 1
  Nov 11 13:47:55.544: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=kubectl-5658 delete -f -'
  Nov 11 13:47:55.595: INFO: stderr: ""
  Nov 11 13:47:55.595: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Nov 11 13:47:55.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5658" for this suite. @ 11/11/23 13:47:55.599
• [0.312 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 11/11/23 13:47:55.606
  Nov 11 13:47:55.606: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename replicaset @ 11/11/23 13:47:55.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:47:55.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:47:55.621
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 11/11/23 13:47:55.624
  E1111 13:47:56.378410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:47:57.378739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 11/11/23 13:47:57.64
  STEP: Then the orphan pod is adopted @ 11/11/23 13:47:57.644
  E1111 13:47:58.379077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 11/11/23 13:47:58.652
  Nov 11 13:47:58.656: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/11/23 13:47:58.665
  E1111 13:47:59.379507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:47:59.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2518" for this suite. @ 11/11/23 13:47:59.676
• [4.075 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 11/11/23 13:47:59.682
  Nov 11 13:47:59.682: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:47:59.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:47:59.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:47:59.698
  STEP: Creating configMap with name configmap-projected-all-test-volume-7effca25-2bd4-4b0e-89e5-934222aa7829 @ 11/11/23 13:47:59.701
  STEP: Creating secret with name secret-projected-all-test-volume-3c28acd5-3d2a-4abc-b622-6bfd3efe583f @ 11/11/23 13:47:59.705
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 11/11/23 13:47:59.71
  E1111 13:48:00.380471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:01.381073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:02.381367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:03.382071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:48:03.728
  Nov 11 13:48:03.731: INFO: Trying to get logs from node ip-172-31-79-254 pod projected-volume-e54ed363-679b-4d03-a078-e9a6b95623c5 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 11/11/23 13:48:03.741
  Nov 11 13:48:03.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2864" for this suite. @ 11/11/23 13:48:03.76
• [4.083 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 11/11/23 13:48:03.766
  Nov 11 13:48:03.766: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename svcaccounts @ 11/11/23 13:48:03.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:48:03.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:48:03.783
  STEP: Creating a pod to test service account token:  @ 11/11/23 13:48:03.786
  E1111 13:48:04.382616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:05.382692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:06.383743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:07.384006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:48:07.806
  Nov 11 13:48:07.810: INFO: Trying to get logs from node ip-172-31-8-111 pod test-pod-6bfbfedb-2a80-4142-b683-49e981e911ee container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 13:48:07.816
  Nov 11 13:48:07.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3803" for this suite. @ 11/11/23 13:48:07.841
• [4.081 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 11/11/23 13:48:07.847
  Nov 11 13:48:07.847: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 13:48:07.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:48:07.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:48:07.868
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-693 @ 11/11/23 13:48:07.87
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/11/23 13:48:07.88
  STEP: creating service externalsvc in namespace services-693 @ 11/11/23 13:48:07.88
  STEP: creating replication controller externalsvc in namespace services-693 @ 11/11/23 13:48:07.894
  I1111 13:48:07.900490      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-693, replica count: 2
  E1111 13:48:08.384839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:09.384845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:10.384967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:48:10.951155      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 11/11/23 13:48:10.953
  Nov 11 13:48:10.967: INFO: Creating new exec pod
  E1111 13:48:11.385019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:12.385404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:48:12.980: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-693 exec execpodt76gd -- /bin/sh -x -c nslookup clusterip-service.services-693.svc.cluster.local'
  Nov 11 13:48:13.130: INFO: stderr: "+ nslookup clusterip-service.services-693.svc.cluster.local\n"
  Nov 11 13:48:13.130: INFO: stdout: "Server:\t\t10.152.183.243\nAddress:\t10.152.183.243#53\n\nclusterip-service.services-693.svc.cluster.local\tcanonical name = externalsvc.services-693.svc.cluster.local.\nName:\texternalsvc.services-693.svc.cluster.local\nAddress: 10.152.183.61\n\n"
  Nov 11 13:48:13.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-693, will wait for the garbage collector to delete the pods @ 11/11/23 13:48:13.135
  Nov 11 13:48:13.195: INFO: Deleting ReplicationController externalsvc took: 7.425909ms
  Nov 11 13:48:13.296: INFO: Terminating ReplicationController externalsvc pods took: 100.994223ms
  E1111 13:48:13.386227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:14.386306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:15.387095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:16.387785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:48:16.511: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-693" for this suite. @ 11/11/23 13:48:16.525
• [8.686 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 11/11/23 13:48:16.533
  Nov 11 13:48:16.533: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename emptydir @ 11/11/23 13:48:16.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:48:16.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:48:16.548
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/11/23 13:48:16.551
  E1111 13:48:17.388182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:18.388420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:19.388469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:20.388639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:48:20.568
  Nov 11 13:48:20.571: INFO: Trying to get logs from node ip-172-31-8-111 pod pod-a2aeb505-d693-4074-861d-5d15b5fe77ae container test-container: <nil>
  STEP: delete the pod @ 11/11/23 13:48:20.577
  Nov 11 13:48:20.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2832" for this suite. @ 11/11/23 13:48:20.595
• [4.069 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 11/11/23 13:48:20.602
  Nov 11 13:48:20.602: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:48:20.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:48:20.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:48:20.615
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 13:48:20.618
  E1111 13:48:21.388723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:22.389073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:48:22.632
  Nov 11 13:48:22.635: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-ca127b61-eba4-46ed-a591-47014773b70f container client-container: <nil>
  STEP: delete the pod @ 11/11/23 13:48:22.64
  Nov 11 13:48:22.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2205" for this suite. @ 11/11/23 13:48:22.662
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 11/11/23 13:48:22.67
  Nov 11 13:48:22.670: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename containers @ 11/11/23 13:48:22.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:48:22.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:48:22.683
  STEP: Creating a pod to test override all @ 11/11/23 13:48:22.686
  E1111 13:48:23.390104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:24.390971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:25.391731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:26.391896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:48:26.708
  Nov 11 13:48:26.711: INFO: Trying to get logs from node ip-172-31-79-254 pod client-containers-99ff043a-8917-4b8e-a998-0a42703bf669 container agnhost-container: <nil>
  STEP: delete the pod @ 11/11/23 13:48:26.716
  Nov 11 13:48:26.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6667" for this suite. @ 11/11/23 13:48:26.735
• [4.070 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 11/11/23 13:48:26.74
  Nov 11 13:48:26.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename svcaccounts @ 11/11/23 13:48:26.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:48:26.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:48:26.754
  Nov 11 13:48:26.760: INFO: Got root ca configmap in namespace "svcaccounts-5011"
  Nov 11 13:48:26.764: INFO: Deleted root ca configmap in namespace "svcaccounts-5011"
  STEP: waiting for a new root ca configmap created @ 11/11/23 13:48:27.265
  Nov 11 13:48:27.269: INFO: Recreated root ca configmap in namespace "svcaccounts-5011"
  Nov 11 13:48:27.273: INFO: Updated root ca configmap in namespace "svcaccounts-5011"
  E1111 13:48:27.392942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 11/11/23 13:48:27.774
  Nov 11 13:48:27.776: INFO: Reconciled root ca configmap in namespace "svcaccounts-5011"
  Nov 11 13:48:27.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5011" for this suite. @ 11/11/23 13:48:27.78
• [1.046 seconds]
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 11/11/23 13:48:27.787
  Nov 11 13:48:27.787: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename lease-test @ 11/11/23 13:48:27.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:48:27.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:48:27.803
  Nov 11 13:48:27.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1364" for this suite. @ 11/11/23 13:48:27.861
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 11/11/23 13:48:27.868
  Nov 11 13:48:27.868: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename webhook @ 11/11/23 13:48:27.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:48:27.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:48:27.883
  STEP: Setting up server cert @ 11/11/23 13:48:27.908
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/11/23 13:48:28.388
  E1111 13:48:28.393743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook pod @ 11/11/23 13:48:28.396
  STEP: Wait for the deployment to be ready @ 11/11/23 13:48:28.408
  Nov 11 13:48:28.416: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1111 13:48:29.394267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:30.394360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/11/23 13:48:30.426
  STEP: Verifying the service has paired with the endpoint @ 11/11/23 13:48:30.433
  E1111 13:48:31.394687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:48:31.433: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/11/23 13:48:31.503
  STEP: Creating a configMap that should be mutated @ 11/11/23 13:48:31.514
  STEP: Deleting the collection of validation webhooks @ 11/11/23 13:48:31.542
  STEP: Creating a configMap that should not be mutated @ 11/11/23 13:48:31.586
  Nov 11 13:48:31.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5267" for this suite. @ 11/11/23 13:48:31.633
  STEP: Destroying namespace "webhook-markers-6923" for this suite. @ 11/11/23 13:48:31.64
• [3.781 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 11/11/23 13:48:31.649
  Nov 11 13:48:31.649: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 13:48:31.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:48:31.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:48:31.667
  STEP: creating service in namespace services-1420 @ 11/11/23 13:48:31.67
  STEP: creating service affinity-clusterip in namespace services-1420 @ 11/11/23 13:48:31.67
  STEP: creating replication controller affinity-clusterip in namespace services-1420 @ 11/11/23 13:48:31.678
  I1111 13:48:31.684889      22 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-1420, replica count: 3
  E1111 13:48:32.395471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:33.396466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:34.396634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:48:34.736104      22 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 11 13:48:34.743: INFO: Creating new exec pod
  E1111 13:48:35.397061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:36.397121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:37.397918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:48:37.757: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-1420 exec execpod-affinity2gczc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Nov 11 13:48:37.883: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Nov 11 13:48:37.883: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 13:48:37.883: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-1420 exec execpod-affinity2gczc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.173 80'
  Nov 11 13:48:38.014: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.173 80\nConnection to 10.152.183.173 80 port [tcp/http] succeeded!\n"
  Nov 11 13:48:38.014: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 11 13:48:38.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-1420 exec execpod-affinity2gczc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.173:80/ ; done'
  Nov 11 13:48:38.223: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.173:80/\n"
  Nov 11 13:48:38.223: INFO: stdout: "\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4\naffinity-clusterip-7rrm4"
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Received response from host: affinity-clusterip-7rrm4
  Nov 11 13:48:38.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 11 13:48:38.227: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-1420, will wait for the garbage collector to delete the pods @ 11/11/23 13:48:38.243
  Nov 11 13:48:38.304: INFO: Deleting ReplicationController affinity-clusterip took: 6.444291ms
  E1111 13:48:38.398457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:48:38.404: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.075375ms
  E1111 13:48:39.398772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:40.398905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:41.399891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-1420" for this suite. @ 11/11/23 13:48:41.521
• [9.879 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 11/11/23 13:48:41.528
  Nov 11 13:48:41.528: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename namespaces @ 11/11/23 13:48:41.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:48:41.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:48:41.545
  STEP: Creating namespace "e2e-ns-dxdkl" @ 11/11/23 13:48:41.548
  Nov 11 13:48:41.561: INFO: Namespace "e2e-ns-dxdkl-1261" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-dxdkl-1261" @ 11/11/23 13:48:41.561
  Nov 11 13:48:41.569: INFO: Namespace "e2e-ns-dxdkl-1261" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-dxdkl-1261" @ 11/11/23 13:48:41.569
  Nov 11 13:48:41.576: INFO: Namespace "e2e-ns-dxdkl-1261" has []v1.FinalizerName{"kubernetes"}
  Nov 11 13:48:41.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6554" for this suite. @ 11/11/23 13:48:41.58
  STEP: Destroying namespace "e2e-ns-dxdkl-1261" for this suite. @ 11/11/23 13:48:41.586
• [0.064 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 11/11/23 13:48:41.592
  Nov 11 13:48:41.592: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename container-probe @ 11/11/23 13:48:41.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:48:41.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:48:41.608
  STEP: Creating pod liveness-9a3f9f43-7713-47d8-9a2b-dd02bd78c283 in namespace container-probe-9912 @ 11/11/23 13:48:41.611
  E1111 13:48:42.400609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:43.401137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/11/23 13:48:43.627
  Nov 11 13:48:43.630: INFO: Initial restart count of pod liveness-9a3f9f43-7713-47d8-9a2b-dd02bd78c283 is 0
  Nov 11 13:48:43.633: INFO: Get pod liveness-9a3f9f43-7713-47d8-9a2b-dd02bd78c283 in namespace container-probe-9912
  E1111 13:48:44.401838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:45.401912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:48:45.637: INFO: Get pod liveness-9a3f9f43-7713-47d8-9a2b-dd02bd78c283 in namespace container-probe-9912
  E1111 13:48:46.402541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:47.402697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:48:47.641: INFO: Get pod liveness-9a3f9f43-7713-47d8-9a2b-dd02bd78c283 in namespace container-probe-9912
  E1111 13:48:48.403309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:49.403397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:48:49.644: INFO: Get pod liveness-9a3f9f43-7713-47d8-9a2b-dd02bd78c283 in namespace container-probe-9912
  E1111 13:48:50.403496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:51.403753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:48:51.649: INFO: Get pod liveness-9a3f9f43-7713-47d8-9a2b-dd02bd78c283 in namespace container-probe-9912
  E1111 13:48:52.403848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:53.404119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:48:53.654: INFO: Get pod liveness-9a3f9f43-7713-47d8-9a2b-dd02bd78c283 in namespace container-probe-9912
  E1111 13:48:54.404136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:55.404304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:48:55.658: INFO: Get pod liveness-9a3f9f43-7713-47d8-9a2b-dd02bd78c283 in namespace container-probe-9912
  E1111 13:48:56.405176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:57.405376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:48:57.662: INFO: Get pod liveness-9a3f9f43-7713-47d8-9a2b-dd02bd78c283 in namespace container-probe-9912
  E1111 13:48:58.405407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:48:59.406380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:48:59.666: INFO: Get pod liveness-9a3f9f43-7713-47d8-9a2b-dd02bd78c283 in namespace container-probe-9912
  E1111 13:49:00.407276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:01.407370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:49:01.670: INFO: Get pod liveness-9a3f9f43-7713-47d8-9a2b-dd02bd78c283 in namespace container-probe-9912
  E1111 13:49:02.407467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:03.407553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:49:03.674: INFO: Get pod liveness-9a3f9f43-7713-47d8-9a2b-dd02bd78c283 in namespace container-probe-9912
  Nov 11 13:49:03.674: INFO: Restart count of pod container-probe-9912/liveness-9a3f9f43-7713-47d8-9a2b-dd02bd78c283 is now 1 (20.044125337s elapsed)
  Nov 11 13:49:03.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/11/23 13:49:03.678
  STEP: Destroying namespace "container-probe-9912" for this suite. @ 11/11/23 13:49:03.69
• [22.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 11/11/23 13:49:03.697
  Nov 11 13:49:03.697: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename job @ 11/11/23 13:49:03.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:49:03.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:49:03.712
  STEP: Creating Indexed job @ 11/11/23 13:49:03.715
  STEP: Ensuring job reaches completions @ 11/11/23 13:49:03.72
  E1111 13:49:04.407964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:05.408054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:06.408880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:07.409133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:08.409619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:09.409752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:10.410217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:11.410371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 11/11/23 13:49:11.724
  Nov 11 13:49:11.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7010" for this suite. @ 11/11/23 13:49:11.731
• [8.041 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 11/11/23 13:49:11.738
  Nov 11 13:49:11.738: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename services @ 11/11/23 13:49:11.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:49:11.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:49:11.752
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6746 @ 11/11/23 13:49:11.755
  STEP: changing the ExternalName service to type=ClusterIP @ 11/11/23 13:49:11.759
  STEP: creating replication controller externalname-service in namespace services-6746 @ 11/11/23 13:49:11.77
  I1111 13:49:11.777529      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6746, replica count: 2
  E1111 13:49:12.411064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:13.411111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:14.411229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1111 13:49:14.828797      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 11 13:49:14.828: INFO: Creating new exec pod
  E1111 13:49:15.411761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:16.412822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:17.412918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:49:17.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-6746 exec execpodnzflw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov 11 13:49:17.975: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov 11 13:49:17.975: INFO: stdout: "externalname-service-2vqx8"
  Nov 11 13:49:17.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1181091961 --namespace=services-6746 exec execpodnzflw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.194 80'
  Nov 11 13:49:18.094: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.194 80\nConnection to 10.152.183.194 80 port [tcp/http] succeeded!\n"
  Nov 11 13:49:18.094: INFO: stdout: "externalname-service-7gx6p"
  Nov 11 13:49:18.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 11 13:49:18.098: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-6746" for this suite. @ 11/11/23 13:49:18.115
• [6.383 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 11/11/23 13:49:18.121
  Nov 11 13:49:18.121: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename namespaces @ 11/11/23 13:49:18.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:49:18.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:49:18.137
  STEP: Read namespace status @ 11/11/23 13:49:18.139
  Nov 11 13:49:18.142: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 11/11/23 13:49:18.142
  Nov 11 13:49:18.149: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 11/11/23 13:49:18.15
  Nov 11 13:49:18.157: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Nov 11 13:49:18.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2076" for this suite. @ 11/11/23 13:49:18.16
• [0.046 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 11/11/23 13:49:18.167
  Nov 11 13:49:18.167: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename configmap @ 11/11/23 13:49:18.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:49:18.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:49:18.19
  STEP: Creating configMap that has name configmap-test-emptyKey-5a1ddedb-7416-4522-9003-e9c61d790df6 @ 11/11/23 13:49:18.192
  Nov 11 13:49:18.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3989" for this suite. @ 11/11/23 13:49:18.198
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 11/11/23 13:49:18.206
  Nov 11 13:49:18.206: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:49:18.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:49:18.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:49:18.224
  STEP: Creating the pod @ 11/11/23 13:49:18.227
  E1111 13:49:18.413008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:19.413362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:20.413775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:49:20.762: INFO: Successfully updated pod "annotationupdate4a26e042-9c95-4c44-ab5d-5a67638c0ff9"
  E1111 13:49:21.414687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:22.414717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:49:22.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9621" for this suite. @ 11/11/23 13:49:22.778
• [4.578 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 11/11/23 13:49:22.792
  Nov 11 13:49:22.792: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename sched-pred @ 11/11/23 13:49:22.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:49:22.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:49:22.807
  Nov 11 13:49:22.810: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov 11 13:49:22.816: INFO: Waiting for terminating namespaces to be deleted...
  Nov 11 13:49:22.819: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-26-213 before test
  Nov 11 13:49:22.824: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-kbzzn from ingress-nginx-kubernetes-worker started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.824: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov 11 13:49:22.824: INFO: nginx-ingress-controller-kubernetes-worker-mhlhs from ingress-nginx-kubernetes-worker started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.824: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 11 13:49:22.824: INFO: calico-node-4wwdr from kube-system started at 2023-11-11 11:56:55 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.824: INFO: 	Container calico-node ready: true, restart count 0
  Nov 11 13:49:22.824: INFO: coredns-59cfb5bf46-r5pf5 from kube-system started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.824: INFO: 	Container coredns ready: true, restart count 0
  Nov 11 13:49:22.824: INFO: kube-state-metrics-78c475f58b-zzxqs from kube-system started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.824: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov 11 13:49:22.824: INFO: metrics-server-v0.6.3-69d7fbfdf8-rptqk from kube-system started at 2023-11-11 11:57:09 +0000 UTC (2 container statuses recorded)
  Nov 11 13:49:22.824: INFO: 	Container metrics-server ready: true, restart count 0
  Nov 11 13:49:22.824: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov 11 13:49:22.824: INFO: dashboard-metrics-scraper-5dd7cb5fc-5tw2q from kubernetes-dashboard started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.824: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov 11 13:49:22.824: INFO: kubernetes-dashboard-7b899cb9d9-jpjst from kubernetes-dashboard started at 2023-11-11 11:57:09 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.824: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov 11 13:49:22.824: INFO: sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-sqgqx from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 13:49:22.824: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 13:49:22.824: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 11 13:49:22.824: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-79-254 before test
  Nov 11 13:49:22.829: INFO: nginx-ingress-controller-kubernetes-worker-846rm from ingress-nginx-kubernetes-worker started at 2023-11-11 13:30:16 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.829: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 11 13:49:22.829: INFO: calico-node-pm2sm from kube-system started at 2023-11-11 12:02:39 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.829: INFO: 	Container calico-node ready: true, restart count 0
  Nov 11 13:49:22.829: INFO: execpodnzflw from services-6746 started at 2023-11-11 13:49:14 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.829: INFO: 	Container agnhost-container ready: true, restart count 0
  Nov 11 13:49:22.829: INFO: externalname-service-2vqx8 from services-6746 started at 2023-11-11 13:49:11 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.829: INFO: 	Container externalname-service ready: true, restart count 0
  Nov 11 13:49:22.829: INFO: sonobuoy from sonobuoy started at 2023-11-11 12:08:18 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.829: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov 11 13:49:22.829: INFO: sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-868rn from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 13:49:22.829: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 13:49:22.829: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 11 13:49:22.829: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-8-111 before test
  Nov 11 13:49:22.834: INFO: nginx-ingress-controller-kubernetes-worker-bmzsg from ingress-nginx-kubernetes-worker started at 2023-11-11 12:00:58 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.834: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 11 13:49:22.834: INFO: calico-node-pvf6s from kube-system started at 2023-11-11 12:00:29 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.834: INFO: 	Container calico-node ready: true, restart count 0
  Nov 11 13:49:22.834: INFO: annotationupdate4a26e042-9c95-4c44-ab5d-5a67638c0ff9 from projected-9621 started at 2023-11-11 13:49:18 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.834: INFO: 	Container client-container ready: true, restart count 0
  Nov 11 13:49:22.834: INFO: externalname-service-7gx6p from services-6746 started at 2023-11-11 13:49:11 +0000 UTC (1 container statuses recorded)
  Nov 11 13:49:22.834: INFO: 	Container externalname-service ready: true, restart count 0
  Nov 11 13:49:22.834: INFO: sonobuoy-e2e-job-88b8298f84e34478 from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 13:49:22.834: INFO: 	Container e2e ready: true, restart count 0
  Nov 11 13:49:22.834: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 13:49:22.834: INFO: sonobuoy-systemd-logs-daemon-set-c94ee153cca24f80-cst9b from sonobuoy started at 2023-11-11 12:08:20 +0000 UTC (2 container statuses recorded)
  Nov 11 13:49:22.834: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 11 13:49:22.834: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 11/11/23 13:49:22.834
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.179695c05ffa9380], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling..] @ 11/11/23 13:49:22.861
  E1111 13:49:23.415020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 11 13:49:23.858: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1792" for this suite. @ 11/11/23 13:49:23.861
• [1.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 11/11/23 13:49:23.87
  Nov 11 13:49:23.870: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename downward-api @ 11/11/23 13:49:23.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:49:23.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:49:23.886
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 13:49:23.889
  E1111 13:49:24.415463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:25.415968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:26.416157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:27.416269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:49:27.908
  Nov 11 13:49:27.912: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-4bf48863-e073-4307-940f-e8b78b25ef1f container client-container: <nil>
  STEP: delete the pod @ 11/11/23 13:49:27.918
  Nov 11 13:49:27.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5174" for this suite. @ 11/11/23 13:49:27.938
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 11/11/23 13:49:27.946
  Nov 11 13:49:27.946: INFO: >>> kubeConfig: /tmp/kubeconfig-1181091961
  STEP: Building a namespace api object, basename projected @ 11/11/23 13:49:27.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/11/23 13:49:27.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/11/23 13:49:27.959
  STEP: Creating a pod to test downward API volume plugin @ 11/11/23 13:49:27.962
  E1111 13:49:28.416654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:29.417725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:30.418406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1111 13:49:31.418497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/11/23 13:49:31.978
  Nov 11 13:49:31.981: INFO: Trying to get logs from node ip-172-31-79-254 pod downwardapi-volume-9dc42bc6-de2a-42b0-9668-56453ea46f04 container client-container: <nil>
  STEP: delete the pod @ 11/11/23 13:49:31.988
  Nov 11 13:49:32.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3736" for this suite. @ 11/11/23 13:49:32.002
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Nov 11 13:49:32.009: INFO: Running AfterSuite actions on node 1
  Nov 11 13:49:32.009: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.052 seconds]
------------------------------

Ran 380 of 7387 Specs in 6060.226 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h41m0.501079335s
Test Suite Passed
