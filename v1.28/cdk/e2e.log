  I1028 12:22:44.089522      19 e2e.go:117] Starting e2e run "7d0acfae-10c9-4207-85d3-236dc25a3ca1" on Ginkgo node 1
  Oct 28 12:22:44.115: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1698495764 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Oct 28 12:22:44.532: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:22:44.534: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Oct 28 12:22:44.583: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Oct 28 12:22:44.589: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Oct 28 12:22:44.589: INFO: e2e test version: v1.28.3
  Oct 28 12:22:44.590: INFO: kube-apiserver version: v1.28.3
  Oct 28 12:22:44.590: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:22:44.596: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.064 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 10/28/23 12:22:45.163
  Oct 28 12:22:45.163: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 12:22:45.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:22:45.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:22:45.197
  STEP: Creating configMap with name configmap-test-volume-055a48fc-1671-4e8b-87c2-7f41c1273729 @ 10/28/23 12:22:45.202
  STEP: Creating a pod to test consume configMaps @ 10/28/23 12:22:45.208
  STEP: Saw pod success @ 10/28/23 12:22:55.253
  Oct 28 12:22:55.256: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-configmaps-09360592-5aba-43aa-af5d-8f3adbfc50b6 container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 12:22:55.275
  Oct 28 12:22:55.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4319" for this suite. @ 10/28/23 12:22:55.293
• [10.143 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 10/28/23 12:22:55.302
  Oct 28 12:22:55.302: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/28/23 12:22:55.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:22:55.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:22:55.324
  STEP: creating a target pod @ 10/28/23 12:22:55.327
  STEP: adding an ephemeral container @ 10/28/23 12:22:57.345
  STEP: checking pod container endpoints @ 10/28/23 12:23:01.369
  Oct 28 12:23:01.369: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2139 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:23:01.369: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:23:01.370: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:23:01.370: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-2139/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Oct 28 12:23:01.449: INFO: Exec stderr: ""
  Oct 28 12:23:01.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2139" for this suite. @ 10/28/23 12:23:01.46
• [6.167 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 10/28/23 12:23:01.469
  Oct 28 12:23:01.469: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 12:23:01.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:23:01.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:23:01.492
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 12:23:01.495
  STEP: Saw pod success @ 10/28/23 12:23:05.518
  Oct 28 12:23:05.521: INFO: Trying to get logs from node ip-172-31-37-29 pod downwardapi-volume-c790511d-15f5-447f-82ec-57b3414eaece container client-container: <nil>
  STEP: delete the pod @ 10/28/23 12:23:05.528
  Oct 28 12:23:05.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8862" for this suite. @ 10/28/23 12:23:05.548
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 10/28/23 12:23:05.556
  Oct 28 12:23:05.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 12:23:05.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:23:05.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:23:05.579
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/28/23 12:23:05.582
  STEP: Saw pod success @ 10/28/23 12:23:09.602
  Oct 28 12:23:09.606: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-d7ef92fd-270d-45ca-8437-2541d28526c5 container test-container: <nil>
  STEP: delete the pod @ 10/28/23 12:23:09.613
  Oct 28 12:23:09.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9474" for this suite. @ 10/28/23 12:23:09.632
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 10/28/23 12:23:09.64
  Oct 28 12:23:09.640: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename subpath @ 10/28/23 12:23:09.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:23:09.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:23:09.663
  STEP: Setting up data @ 10/28/23 12:23:09.665
  STEP: Creating pod pod-subpath-test-configmap-682v @ 10/28/23 12:23:09.678
  STEP: Creating a pod to test atomic-volume-subpath @ 10/28/23 12:23:09.678
  STEP: Saw pod success @ 10/28/23 12:23:35.751
  Oct 28 12:23:35.754: INFO: Trying to get logs from node ip-172-31-20-72 pod pod-subpath-test-configmap-682v container test-container-subpath-configmap-682v: <nil>
  STEP: delete the pod @ 10/28/23 12:23:35.775
  STEP: Deleting pod pod-subpath-test-configmap-682v @ 10/28/23 12:23:35.792
  Oct 28 12:23:35.792: INFO: Deleting pod "pod-subpath-test-configmap-682v" in namespace "subpath-6342"
  Oct 28 12:23:35.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6342" for this suite. @ 10/28/23 12:23:35.8
• [26.167 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 10/28/23 12:23:35.808
  Oct 28 12:23:35.808: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename secrets @ 10/28/23 12:23:35.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:23:35.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:23:35.83
  STEP: Creating secret with name secret-test-10eafd50-0592-48bf-b40a-780c8dea7ce1 @ 10/28/23 12:23:35.861
  STEP: Creating a pod to test consume secrets @ 10/28/23 12:23:35.865
  STEP: Saw pod success @ 10/28/23 12:23:39.889
  Oct 28 12:23:39.893: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-secrets-bb62ffd5-963f-4f4c-87b9-7d44411f00fb container secret-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 12:23:39.9
  Oct 28 12:23:39.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2067" for this suite. @ 10/28/23 12:23:39.919
  STEP: Destroying namespace "secret-namespace-8202" for this suite. @ 10/28/23 12:23:39.927
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 10/28/23 12:23:39.937
  Oct 28 12:23:39.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-runtime @ 10/28/23 12:23:39.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:23:39.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:23:39.958
  STEP: create the container @ 10/28/23 12:23:39.961
  W1028 12:23:39.969673      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/28/23 12:23:39.969
  STEP: get the container status @ 10/28/23 12:23:42.988
  STEP: the container should be terminated @ 10/28/23 12:23:42.991
  STEP: the termination message should be set @ 10/28/23 12:23:42.991
  Oct 28 12:23:42.991: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/28/23 12:23:42.991
  Oct 28 12:23:43.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1243" for this suite. @ 10/28/23 12:23:43.013
• [3.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 10/28/23 12:23:43.023
  Oct 28 12:23:43.023: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename endpointslice @ 10/28/23 12:23:43.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:23:43.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:23:43.043
  Oct 28 12:23:43.055: INFO: Endpoints addresses: [172.31.15.112 172.31.77.5] , ports: [6443]
  Oct 28 12:23:43.055: INFO: EndpointSlices addresses: [172.31.15.112 172.31.77.5] , ports: [6443]
  Oct 28 12:23:43.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4129" for this suite. @ 10/28/23 12:23:43.059
• [0.043 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 10/28/23 12:23:43.067
  Oct 28 12:23:43.067: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/28/23 12:23:43.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:23:43.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:23:43.09
  Oct 28 12:23:43.094: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 10/28/23 12:23:44.492
  Oct 28 12:23:44.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-2211 --namespace=crd-publish-openapi-2211 create -f -'
  Oct 28 12:23:46.855: INFO: stderr: ""
  Oct 28 12:23:46.855: INFO: stdout: "e2e-test-crd-publish-openapi-2472-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Oct 28 12:23:46.855: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-2211 --namespace=crd-publish-openapi-2211 delete e2e-test-crd-publish-openapi-2472-crds test-foo'
  Oct 28 12:23:46.975: INFO: stderr: ""
  Oct 28 12:23:46.975: INFO: stdout: "e2e-test-crd-publish-openapi-2472-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Oct 28 12:23:46.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-2211 --namespace=crd-publish-openapi-2211 apply -f -'
  Oct 28 12:23:47.164: INFO: stderr: ""
  Oct 28 12:23:47.164: INFO: stdout: "e2e-test-crd-publish-openapi-2472-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Oct 28 12:23:47.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-2211 --namespace=crd-publish-openapi-2211 delete e2e-test-crd-publish-openapi-2472-crds test-foo'
  Oct 28 12:23:47.231: INFO: stderr: ""
  Oct 28 12:23:47.232: INFO: stdout: "e2e-test-crd-publish-openapi-2472-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 10/28/23 12:23:47.232
  Oct 28 12:23:47.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-2211 --namespace=crd-publish-openapi-2211 create -f -'
  Oct 28 12:23:47.654: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 10/28/23 12:23:47.654
  Oct 28 12:23:47.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-2211 --namespace=crd-publish-openapi-2211 create -f -'
  Oct 28 12:23:47.789: INFO: rc: 1
  Oct 28 12:23:47.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-2211 --namespace=crd-publish-openapi-2211 apply -f -'
  Oct 28 12:23:47.936: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 10/28/23 12:23:47.936
  Oct 28 12:23:47.936: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-2211 --namespace=crd-publish-openapi-2211 create -f -'
  Oct 28 12:23:48.076: INFO: rc: 1
  Oct 28 12:23:48.076: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-2211 --namespace=crd-publish-openapi-2211 apply -f -'
  Oct 28 12:23:48.219: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 10/28/23 12:23:48.219
  Oct 28 12:23:48.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-2211 explain e2e-test-crd-publish-openapi-2472-crds'
  Oct 28 12:23:48.355: INFO: stderr: ""
  Oct 28 12:23:48.355: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2472-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 10/28/23 12:23:48.355
  Oct 28 12:23:48.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-2211 explain e2e-test-crd-publish-openapi-2472-crds.metadata'
  Oct 28 12:23:48.495: INFO: stderr: ""
  Oct 28 12:23:48.495: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2472-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Oct 28 12:23:48.496: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-2211 explain e2e-test-crd-publish-openapi-2472-crds.spec'
  Oct 28 12:23:48.624: INFO: stderr: ""
  Oct 28 12:23:48.624: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2472-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Oct 28 12:23:48.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-2211 explain e2e-test-crd-publish-openapi-2472-crds.spec.bars'
  Oct 28 12:23:48.783: INFO: stderr: ""
  Oct 28 12:23:48.783: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2472-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 10/28/23 12:23:48.783
  Oct 28 12:23:48.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-2211 explain e2e-test-crd-publish-openapi-2472-crds.spec.bars2'
  Oct 28 12:23:48.916: INFO: rc: 1
  Oct 28 12:23:50.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2211" for this suite. @ 10/28/23 12:23:50.324
• [7.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 10/28/23 12:23:50.333
  Oct 28 12:23:50.333: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename statefulset @ 10/28/23 12:23:50.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:23:50.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:23:50.354
  STEP: Creating service test in namespace statefulset-1005 @ 10/28/23 12:23:50.357
  STEP: Creating statefulset ss in namespace statefulset-1005 @ 10/28/23 12:23:50.363
  Oct 28 12:23:50.373: INFO: Found 0 stateful pods, waiting for 1
  Oct 28 12:24:00.379: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 10/28/23 12:24:00.387
  STEP: updating a scale subresource @ 10/28/23 12:24:00.39
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/28/23 12:24:00.397
  STEP: Patch a scale subresource @ 10/28/23 12:24:00.401
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/28/23 12:24:00.408
  Oct 28 12:24:00.414: INFO: Deleting all statefulset in ns statefulset-1005
  Oct 28 12:24:00.418: INFO: Scaling statefulset ss to 0
  Oct 28 12:24:10.441: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 28 12:24:10.445: INFO: Deleting statefulset ss
  Oct 28 12:24:10.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1005" for this suite. @ 10/28/23 12:24:10.461
• [20.134 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 10/28/23 12:24:10.468
  Oct 28 12:24:10.468: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename secrets @ 10/28/23 12:24:10.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:24:10.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:24:10.49
  STEP: Creating secret with name s-test-opt-del-4686e8d2-7cd2-428c-848b-69f89f086818 @ 10/28/23 12:24:10.496
  STEP: Creating secret with name s-test-opt-upd-88e4d655-f1d0-4170-81ad-5533fa2c0f19 @ 10/28/23 12:24:10.5
  STEP: Creating the pod @ 10/28/23 12:24:10.506
  STEP: Deleting secret s-test-opt-del-4686e8d2-7cd2-428c-848b-69f89f086818 @ 10/28/23 12:24:12.554
  STEP: Updating secret s-test-opt-upd-88e4d655-f1d0-4170-81ad-5533fa2c0f19 @ 10/28/23 12:24:12.56
  STEP: Creating secret with name s-test-opt-create-8fd24b9a-91b9-4ab7-b0d1-b21778a85edd @ 10/28/23 12:24:12.565
  STEP: waiting to observe update in volume @ 10/28/23 12:24:12.571
  Oct 28 12:25:16.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6077" for this suite. @ 10/28/23 12:25:16.89
• [66.429 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 10/28/23 12:25:16.898
  Oct 28 12:25:16.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 12:25:16.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:25:16.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:25:16.919
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 12:25:16.922
  STEP: Saw pod success @ 10/28/23 12:25:20.951
  Oct 28 12:25:20.954: INFO: Trying to get logs from node ip-172-31-20-72 pod downwardapi-volume-1205085f-7212-486a-b248-5dc5cd3afc08 container client-container: <nil>
  STEP: delete the pod @ 10/28/23 12:25:20.968
  Oct 28 12:25:20.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9138" for this suite. @ 10/28/23 12:25:20.989
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 10/28/23 12:25:20.997
  Oct 28 12:25:20.997: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 12:25:20.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:25:21.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:25:21.02
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 12:25:21.023
  STEP: Saw pod success @ 10/28/23 12:25:25.046
  Oct 28 12:25:25.049: INFO: Trying to get logs from node ip-172-31-20-72 pod downwardapi-volume-dd808b90-66e0-4c1f-8fe9-eed2503a88bf container client-container: <nil>
  STEP: delete the pod @ 10/28/23 12:25:25.057
  Oct 28 12:25:25.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-387" for this suite. @ 10/28/23 12:25:25.079
• [4.090 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 10/28/23 12:25:25.089
  Oct 28 12:25:25.089: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 12:25:25.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:25:25.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:25:25.112
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/28/23 12:25:25.116
  STEP: Saw pod success @ 10/28/23 12:25:29.139
  Oct 28 12:25:29.142: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-81b50f6d-138f-47a2-b67f-a182ba0b557b container test-container: <nil>
  STEP: delete the pod @ 10/28/23 12:25:29.149
  Oct 28 12:25:29.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1978" for this suite. @ 10/28/23 12:25:29.173
• [4.091 seconds]
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 10/28/23 12:25:29.18
  Oct 28 12:25:29.180: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename discovery @ 10/28/23 12:25:29.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:25:29.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:25:29.203
  STEP: Setting up server cert @ 10/28/23 12:25:29.207
  Oct 28 12:25:29.394: INFO: Checking APIGroup: apiregistration.k8s.io
  Oct 28 12:25:29.395: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Oct 28 12:25:29.395: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Oct 28 12:25:29.395: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Oct 28 12:25:29.395: INFO: Checking APIGroup: apps
  Oct 28 12:25:29.397: INFO: PreferredVersion.GroupVersion: apps/v1
  Oct 28 12:25:29.397: INFO: Versions found [{apps/v1 v1}]
  Oct 28 12:25:29.397: INFO: apps/v1 matches apps/v1
  Oct 28 12:25:29.397: INFO: Checking APIGroup: events.k8s.io
  Oct 28 12:25:29.398: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Oct 28 12:25:29.398: INFO: Versions found [{events.k8s.io/v1 v1}]
  Oct 28 12:25:29.398: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Oct 28 12:25:29.398: INFO: Checking APIGroup: authentication.k8s.io
  Oct 28 12:25:29.399: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Oct 28 12:25:29.399: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Oct 28 12:25:29.399: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Oct 28 12:25:29.399: INFO: Checking APIGroup: authorization.k8s.io
  Oct 28 12:25:29.400: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Oct 28 12:25:29.400: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Oct 28 12:25:29.400: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Oct 28 12:25:29.400: INFO: Checking APIGroup: autoscaling
  Oct 28 12:25:29.401: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Oct 28 12:25:29.401: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Oct 28 12:25:29.401: INFO: autoscaling/v2 matches autoscaling/v2
  Oct 28 12:25:29.401: INFO: Checking APIGroup: batch
  Oct 28 12:25:29.402: INFO: PreferredVersion.GroupVersion: batch/v1
  Oct 28 12:25:29.402: INFO: Versions found [{batch/v1 v1}]
  Oct 28 12:25:29.402: INFO: batch/v1 matches batch/v1
  Oct 28 12:25:29.402: INFO: Checking APIGroup: certificates.k8s.io
  Oct 28 12:25:29.403: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Oct 28 12:25:29.403: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Oct 28 12:25:29.403: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Oct 28 12:25:29.403: INFO: Checking APIGroup: networking.k8s.io
  Oct 28 12:25:29.405: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Oct 28 12:25:29.405: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Oct 28 12:25:29.405: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Oct 28 12:25:29.405: INFO: Checking APIGroup: policy
  Oct 28 12:25:29.406: INFO: PreferredVersion.GroupVersion: policy/v1
  Oct 28 12:25:29.406: INFO: Versions found [{policy/v1 v1}]
  Oct 28 12:25:29.406: INFO: policy/v1 matches policy/v1
  Oct 28 12:25:29.406: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Oct 28 12:25:29.407: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Oct 28 12:25:29.407: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Oct 28 12:25:29.407: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Oct 28 12:25:29.407: INFO: Checking APIGroup: storage.k8s.io
  Oct 28 12:25:29.408: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Oct 28 12:25:29.408: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Oct 28 12:25:29.408: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Oct 28 12:25:29.408: INFO: Checking APIGroup: admissionregistration.k8s.io
  Oct 28 12:25:29.410: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Oct 28 12:25:29.410: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Oct 28 12:25:29.410: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Oct 28 12:25:29.410: INFO: Checking APIGroup: apiextensions.k8s.io
  Oct 28 12:25:29.411: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Oct 28 12:25:29.411: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Oct 28 12:25:29.411: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Oct 28 12:25:29.411: INFO: Checking APIGroup: scheduling.k8s.io
  Oct 28 12:25:29.412: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Oct 28 12:25:29.412: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Oct 28 12:25:29.412: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Oct 28 12:25:29.412: INFO: Checking APIGroup: coordination.k8s.io
  Oct 28 12:25:29.413: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Oct 28 12:25:29.413: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Oct 28 12:25:29.413: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Oct 28 12:25:29.413: INFO: Checking APIGroup: node.k8s.io
  Oct 28 12:25:29.414: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Oct 28 12:25:29.414: INFO: Versions found [{node.k8s.io/v1 v1}]
  Oct 28 12:25:29.414: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Oct 28 12:25:29.414: INFO: Checking APIGroup: discovery.k8s.io
  Oct 28 12:25:29.415: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Oct 28 12:25:29.415: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Oct 28 12:25:29.415: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Oct 28 12:25:29.415: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Oct 28 12:25:29.416: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Oct 28 12:25:29.416: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Oct 28 12:25:29.416: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Oct 28 12:25:29.416: INFO: Checking APIGroup: metrics.k8s.io
  Oct 28 12:25:29.417: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Oct 28 12:25:29.417: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Oct 28 12:25:29.417: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Oct 28 12:25:29.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-148" for this suite. @ 10/28/23 12:25:29.421
• [0.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 10/28/23 12:25:29.43
  Oct 28 12:25:29.430: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename dns @ 10/28/23 12:25:29.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:25:29.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:25:29.452
  STEP: Creating a test externalName service @ 10/28/23 12:25:29.454
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8271.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8271.svc.cluster.local; sleep 1; done
   @ 10/28/23 12:25:29.459
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8271.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8271.svc.cluster.local; sleep 1; done
   @ 10/28/23 12:25:29.459
  STEP: creating a pod to probe DNS @ 10/28/23 12:25:29.459
  STEP: submitting the pod to kubernetes @ 10/28/23 12:25:29.459
  STEP: retrieving the pod @ 10/28/23 12:25:37.491
  STEP: looking for the results for each expected name from probers @ 10/28/23 12:25:37.495
  Oct 28 12:25:37.504: INFO: DNS probes using dns-test-779a0154-2abf-40c2-988e-6251f43dd720 succeeded

  STEP: changing the externalName to bar.example.com @ 10/28/23 12:25:37.505
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8271.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8271.svc.cluster.local; sleep 1; done
   @ 10/28/23 12:25:37.513
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8271.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8271.svc.cluster.local; sleep 1; done
   @ 10/28/23 12:25:37.513
  STEP: creating a second pod to probe DNS @ 10/28/23 12:25:37.513
  STEP: submitting the pod to kubernetes @ 10/28/23 12:25:37.513
  STEP: retrieving the pod @ 10/28/23 12:25:45.546
  STEP: looking for the results for each expected name from probers @ 10/28/23 12:25:45.549
  Oct 28 12:25:45.559: INFO: DNS probes using dns-test-07986912-2dfd-49f2-b8ca-394bc22a6cd6 succeeded

  STEP: changing the service to type=ClusterIP @ 10/28/23 12:25:45.559
  W1028 12:25:45.582511      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8271.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8271.svc.cluster.local; sleep 1; done
   @ 10/28/23 12:25:45.582
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8271.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8271.svc.cluster.local; sleep 1; done
   @ 10/28/23 12:25:45.582
  STEP: creating a third pod to probe DNS @ 10/28/23 12:25:45.582
  STEP: submitting the pod to kubernetes @ 10/28/23 12:25:45.586
  STEP: retrieving the pod @ 10/28/23 12:25:47.602
  STEP: looking for the results for each expected name from probers @ 10/28/23 12:25:47.607
  Oct 28 12:25:47.617: INFO: DNS probes using dns-test-d42cf024-06bd-434c-aea0-0da518ba989a succeeded

  Oct 28 12:25:47.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 12:25:47.621
  STEP: deleting the pod @ 10/28/23 12:25:47.637
  STEP: deleting the pod @ 10/28/23 12:25:47.652
  STEP: deleting the test externalName service @ 10/28/23 12:25:47.67
  STEP: Destroying namespace "dns-8271" for this suite. @ 10/28/23 12:25:47.696
• [18.273 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 10/28/23 12:25:47.704
  Oct 28 12:25:47.704: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename var-expansion @ 10/28/23 12:25:47.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:25:47.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:25:47.728
  STEP: Creating a pod to test env composition @ 10/28/23 12:25:47.732
  STEP: Saw pod success @ 10/28/23 12:25:51.763
  Oct 28 12:25:51.774: INFO: Trying to get logs from node ip-172-31-37-29 pod var-expansion-4b9d832e-2b2f-4749-8151-fa3bbee9aff5 container dapi-container: <nil>
  STEP: delete the pod @ 10/28/23 12:25:51.781
  Oct 28 12:25:51.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1129" for this suite. @ 10/28/23 12:25:51.806
• [4.109 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 10/28/23 12:25:51.814
  Oct 28 12:25:51.814: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename init-container @ 10/28/23 12:25:51.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:25:51.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:25:51.832
  STEP: creating the pod @ 10/28/23 12:25:51.835
  Oct 28 12:25:51.835: INFO: PodSpec: initContainers in spec.initContainers
  Oct 28 12:25:54.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2681" for this suite. @ 10/28/23 12:25:54.746
• [2.940 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 10/28/23 12:25:54.755
  Oct 28 12:25:54.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename podtemplate @ 10/28/23 12:25:54.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:25:54.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:25:54.779
  STEP: Create set of pod templates @ 10/28/23 12:25:54.782
  Oct 28 12:25:54.790: INFO: created test-podtemplate-1
  Oct 28 12:25:54.795: INFO: created test-podtemplate-2
  Oct 28 12:25:54.800: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 10/28/23 12:25:54.8
  STEP: delete collection of pod templates @ 10/28/23 12:25:54.805
  Oct 28 12:25:54.805: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 10/28/23 12:25:54.823
  Oct 28 12:25:54.823: INFO: requesting list of pod templates to confirm quantity
  Oct 28 12:25:54.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3868" for this suite. @ 10/28/23 12:25:54.83
• [0.083 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 10/28/23 12:25:54.839
  Oct 28 12:25:54.839: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 12:25:54.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:25:54.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:25:54.861
  STEP: Setting up server cert @ 10/28/23 12:25:54.894
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 12:25:55.288
  STEP: Deploying the webhook pod @ 10/28/23 12:25:55.297
  STEP: Wait for the deployment to be ready @ 10/28/23 12:25:55.315
  Oct 28 12:25:55.325: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 12:25:57.338
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 12:25:57.358
  Oct 28 12:25:58.359: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 10/28/23 12:25:58.368
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/28/23 12:25:58.387
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 10/28/23 12:25:58.397
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/28/23 12:25:58.41
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 10/28/23 12:25:58.421
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/28/23 12:25:58.43
  Oct 28 12:25:58.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6335" for this suite. @ 10/28/23 12:25:58.487
  STEP: Destroying namespace "webhook-markers-2356" for this suite. @ 10/28/23 12:25:58.497
• [3.666 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 10/28/23 12:25:58.507
  Oct 28 12:25:58.507: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename daemonsets @ 10/28/23 12:25:58.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:25:58.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:25:58.53
  STEP: Creating a simple DaemonSet "daemon-set" @ 10/28/23 12:25:58.557
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/28/23 12:25:58.564
  Oct 28 12:25:58.569: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:25:58.570: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:25:58.573: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:25:58.573: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 12:25:59.578: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:25:59.578: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:25:59.582: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:25:59.582: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 12:26:00.578: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:26:00.578: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:26:00.582: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 28 12:26:00.582: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 12:26:01.579: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:26:01.579: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:26:01.584: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 28 12:26:01.584: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 12:26:02.579: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:26:02.579: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:26:02.582: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 28 12:26:02.582: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 12:26:03.577: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:26:03.577: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:26:03.581: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 28 12:26:03.581: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 10/28/23 12:26:03.584
  Oct 28 12:26:03.601: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:26:03.601: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:26:03.608: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 28 12:26:03.608: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 12:26:04.613: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:26:04.614: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:26:04.617: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 28 12:26:04.617: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 12:26:05.614: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:26:05.614: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:26:05.617: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 28 12:26:05.617: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 10/28/23 12:26:05.617
  STEP: Deleting DaemonSet "daemon-set" @ 10/28/23 12:26:05.624
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4662, will wait for the garbage collector to delete the pods @ 10/28/23 12:26:05.625
  Oct 28 12:26:05.687: INFO: Deleting DaemonSet.extensions daemon-set took: 7.198302ms
  Oct 28 12:26:05.787: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.769678ms
  Oct 28 12:26:07.092: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:26:07.092: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 28 12:26:07.097: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"3914"},"items":null}

  Oct 28 12:26:07.101: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"3914"},"items":null}

  Oct 28 12:26:07.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4662" for this suite. @ 10/28/23 12:26:07.117
• [8.617 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 10/28/23 12:26:07.124
  Oct 28 12:26:07.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename secrets @ 10/28/23 12:26:07.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:26:07.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:26:07.142
  Oct 28 12:26:07.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-832" for this suite. @ 10/28/23 12:26:07.187
• [0.072 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 10/28/23 12:26:07.197
  Oct 28 12:26:07.197: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename statefulset @ 10/28/23 12:26:07.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:26:07.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:26:07.217
  STEP: Creating service test in namespace statefulset-5996 @ 10/28/23 12:26:07.22
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 10/28/23 12:26:07.226
  STEP: Creating stateful set ss in namespace statefulset-5996 @ 10/28/23 12:26:07.229
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5996 @ 10/28/23 12:26:07.235
  Oct 28 12:26:07.238: INFO: Found 0 stateful pods, waiting for 1
  Oct 28 12:26:17.245: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 10/28/23 12:26:17.245
  Oct 28 12:26:17.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-5996 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 28 12:26:17.394: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 28 12:26:17.394: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 28 12:26:17.394: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 28 12:26:17.398: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Oct 28 12:26:27.405: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct 28 12:26:27.405: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct 28 12:26:27.421: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999814s
  Oct 28 12:26:28.424: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.99684908s
  Oct 28 12:26:29.429: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.992183067s
  Oct 28 12:26:30.434: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.987521524s
  Oct 28 12:26:31.438: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.983326888s
  Oct 28 12:26:32.443: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.978663265s
  Oct 28 12:26:33.448: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.974670728s
  Oct 28 12:26:34.452: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.969312481s
  Oct 28 12:26:35.457: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.965250554s
  Oct 28 12:26:36.463: INFO: Verifying statefulset ss doesn't scale past 1 for another 959.540097ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5996 @ 10/28/23 12:26:37.463
  Oct 28 12:26:37.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-5996 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 28 12:26:37.606: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 28 12:26:37.606: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 28 12:26:37.606: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 28 12:26:37.611: INFO: Found 1 stateful pods, waiting for 3
  Oct 28 12:26:47.618: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 28 12:26:47.618: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 28 12:26:47.618: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 10/28/23 12:26:47.618
  STEP: Scale down will halt with unhealthy stateful pod @ 10/28/23 12:26:47.618
  Oct 28 12:26:47.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-5996 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 28 12:26:47.763: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 28 12:26:47.763: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 28 12:26:47.763: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 28 12:26:47.763: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-5996 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 28 12:26:47.903: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 28 12:26:47.903: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 28 12:26:47.903: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 28 12:26:47.903: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-5996 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 28 12:26:48.054: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 28 12:26:48.054: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 28 12:26:48.054: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 28 12:26:48.054: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct 28 12:26:48.060: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Oct 28 12:26:58.071: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct 28 12:26:58.072: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Oct 28 12:26:58.072: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Oct 28 12:26:58.084: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999831s
  Oct 28 12:26:59.088: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.99679651s
  Oct 28 12:27:00.093: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991837978s
  Oct 28 12:27:01.098: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.986787585s
  Oct 28 12:27:02.102: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.982519224s
  Oct 28 12:27:03.107: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.978434182s
  Oct 28 12:27:04.111: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.973280973s
  Oct 28 12:27:05.116: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.968317931s
  Oct 28 12:27:06.121: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.964200151s
  Oct 28 12:27:07.126: INFO: Verifying statefulset ss doesn't scale past 3 for another 958.820529ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5996 @ 10/28/23 12:27:08.127
  Oct 28 12:27:08.132: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-5996 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 28 12:27:08.278: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 28 12:27:08.278: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 28 12:27:08.278: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 28 12:27:08.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-5996 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 28 12:27:08.410: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 28 12:27:08.410: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 28 12:27:08.410: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 28 12:27:08.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-5996 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 28 12:27:08.543: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 28 12:27:08.543: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 28 12:27:08.543: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 28 12:27:08.543: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 10/28/23 12:27:18.562
  Oct 28 12:27:18.562: INFO: Deleting all statefulset in ns statefulset-5996
  Oct 28 12:27:18.565: INFO: Scaling statefulset ss to 0
  Oct 28 12:27:18.577: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 28 12:27:18.580: INFO: Deleting statefulset ss
  Oct 28 12:27:18.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5996" for this suite. @ 10/28/23 12:27:18.605
• [71.415 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 10/28/23 12:27:18.613
  Oct 28 12:27:18.613: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 12:27:18.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:27:18.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:27:18.647
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/28/23 12:27:18.651
  STEP: Saw pod success @ 10/28/23 12:27:22.681
  Oct 28 12:27:22.684: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-5d472193-2f79-47ae-9863-14c2d1f5973d container test-container: <nil>
  STEP: delete the pod @ 10/28/23 12:27:22.699
  Oct 28 12:27:22.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-17" for this suite. @ 10/28/23 12:27:22.716
• [4.110 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 10/28/23 12:27:22.723
  Oct 28 12:27:22.723: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/28/23 12:27:22.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:27:22.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:27:22.745
  STEP: Creating 50 configmaps @ 10/28/23 12:27:22.747
  STEP: Creating RC which spawns configmap-volume pods @ 10/28/23 12:27:22.98
  Oct 28 12:27:23.084: INFO: Pod name wrapped-volume-race-89c39d35-dc38-4248-9b0f-62d3856619c2: Found 3 pods out of 5
  Oct 28 12:27:28.093: INFO: Pod name wrapped-volume-race-89c39d35-dc38-4248-9b0f-62d3856619c2: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/28/23 12:27:28.093
  STEP: Creating RC which spawns configmap-volume pods @ 10/28/23 12:27:28.114
  Oct 28 12:27:28.128: INFO: Pod name wrapped-volume-race-cf07d267-7489-4ee2-bbd1-443063601a1c: Found 0 pods out of 5
  Oct 28 12:27:33.137: INFO: Pod name wrapped-volume-race-cf07d267-7489-4ee2-bbd1-443063601a1c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/28/23 12:27:33.137
  STEP: Creating RC which spawns configmap-volume pods @ 10/28/23 12:27:33.159
  Oct 28 12:27:33.174: INFO: Pod name wrapped-volume-race-9b04f3a6-0d0a-461f-851f-aaca0acb8179: Found 0 pods out of 5
  Oct 28 12:27:38.185: INFO: Pod name wrapped-volume-race-9b04f3a6-0d0a-461f-851f-aaca0acb8179: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/28/23 12:27:38.185
  Oct 28 12:27:38.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-9b04f3a6-0d0a-461f-851f-aaca0acb8179 in namespace emptydir-wrapper-4921, will wait for the garbage collector to delete the pods @ 10/28/23 12:27:38.208
  Oct 28 12:27:38.270: INFO: Deleting ReplicationController wrapped-volume-race-9b04f3a6-0d0a-461f-851f-aaca0acb8179 took: 8.785162ms
  Oct 28 12:27:38.371: INFO: Terminating ReplicationController wrapped-volume-race-9b04f3a6-0d0a-461f-851f-aaca0acb8179 pods took: 100.101325ms
  STEP: deleting ReplicationController wrapped-volume-race-cf07d267-7489-4ee2-bbd1-443063601a1c in namespace emptydir-wrapper-4921, will wait for the garbage collector to delete the pods @ 10/28/23 12:27:40.271
  Oct 28 12:27:40.333: INFO: Deleting ReplicationController wrapped-volume-race-cf07d267-7489-4ee2-bbd1-443063601a1c took: 7.743874ms
  Oct 28 12:27:40.433: INFO: Terminating ReplicationController wrapped-volume-race-cf07d267-7489-4ee2-bbd1-443063601a1c pods took: 100.352441ms
  STEP: deleting ReplicationController wrapped-volume-race-89c39d35-dc38-4248-9b0f-62d3856619c2 in namespace emptydir-wrapper-4921, will wait for the garbage collector to delete the pods @ 10/28/23 12:27:42.434
  Oct 28 12:27:42.496: INFO: Deleting ReplicationController wrapped-volume-race-89c39d35-dc38-4248-9b0f-62d3856619c2 took: 8.066753ms
  Oct 28 12:27:42.596: INFO: Terminating ReplicationController wrapped-volume-race-89c39d35-dc38-4248-9b0f-62d3856619c2 pods took: 100.333353ms
  STEP: Cleaning up the configMaps @ 10/28/23 12:27:44.297
  STEP: Destroying namespace "emptydir-wrapper-4921" for this suite. @ 10/28/23 12:27:44.682
• [21.968 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 10/28/23 12:27:44.693
  Oct 28 12:27:44.693: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename daemonsets @ 10/28/23 12:27:44.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:27:44.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:27:44.715
  Oct 28 12:27:44.749: INFO: Create a RollingUpdate DaemonSet
  Oct 28 12:27:44.758: INFO: Check that daemon pods launch on every node of the cluster
  Oct 28 12:27:44.764: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:27:44.764: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:27:44.776: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:27:44.776: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 12:27:45.780: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:27:45.780: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:27:45.785: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:27:45.785: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 12:27:46.781: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:27:46.781: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:27:46.784: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 28 12:27:46.784: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Oct 28 12:27:46.785: INFO: Update the DaemonSet to trigger a rollout
  Oct 28 12:27:46.795: INFO: Updating DaemonSet daemon-set
  Oct 28 12:27:47.812: INFO: Roll back the DaemonSet before rollout is complete
  Oct 28 12:27:47.822: INFO: Updating DaemonSet daemon-set
  Oct 28 12:27:47.823: INFO: Make sure DaemonSet rollback is complete
  Oct 28 12:27:47.826: INFO: Wrong image for pod: daemon-set-5flw8. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Oct 28 12:27:47.826: INFO: Pod daemon-set-5flw8 is not available
  Oct 28 12:27:47.829: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:27:47.829: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:27:48.837: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:27:48.838: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:27:49.839: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:27:49.839: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:27:50.834: INFO: Pod daemon-set-kq2nd is not available
  Oct 28 12:27:50.842: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:27:50.842: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 10/28/23 12:27:50.854
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9438, will wait for the garbage collector to delete the pods @ 10/28/23 12:27:50.854
  Oct 28 12:27:50.918: INFO: Deleting DaemonSet.extensions daemon-set took: 7.832519ms
  Oct 28 12:27:51.018: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.467571ms
  Oct 28 12:27:52.322: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:27:52.322: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 28 12:27:52.325: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5136"},"items":null}

  Oct 28 12:27:52.328: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5136"},"items":null}

  Oct 28 12:27:52.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9438" for this suite. @ 10/28/23 12:27:52.366
• [7.682 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 10/28/23 12:27:52.376
  Oct 28 12:27:52.376: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename svcaccounts @ 10/28/23 12:27:52.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:27:52.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:27:52.405
  STEP: reading a file in the container @ 10/28/23 12:27:54.432
  Oct 28 12:27:54.432: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1210 pod-service-account-65920cc3-c78e-40e7-b5b7-72c8b93f73bb -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 10/28/23 12:27:54.571
  Oct 28 12:27:54.571: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1210 pod-service-account-65920cc3-c78e-40e7-b5b7-72c8b93f73bb -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 10/28/23 12:27:54.718
  Oct 28 12:27:54.718: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1210 pod-service-account-65920cc3-c78e-40e7-b5b7-72c8b93f73bb -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Oct 28 12:27:54.851: INFO: Got root ca configmap in namespace "svcaccounts-1210"
  Oct 28 12:27:54.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1210" for this suite. @ 10/28/23 12:27:54.858
• [2.488 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 10/28/23 12:27:54.864
  Oct 28 12:27:54.864: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-probe @ 10/28/23 12:27:54.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:27:54.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:27:54.885
  STEP: Creating pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158 @ 10/28/23 12:27:54.888
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/28/23 12:27:56.908
  Oct 28 12:27:56.912: INFO: Initial restart count of pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 is 0
  Oct 28 12:27:56.915: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:27:58.920: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:00.924: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:02.929: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:04.934: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:06.939: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:08.944: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:10.948: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:12.953: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:14.957: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:16.961: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:16.961: INFO: Restart count of pod container-probe-9158/liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 is now 1 (20.049068735s elapsed)
  Oct 28 12:28:18.965: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:20.968: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:22.972: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:24.977: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:26.981: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:28.985: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:30.990: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:32.994: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:34.998: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:37.003: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:37.003: INFO: Restart count of pod container-probe-9158/liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 is now 2 (40.09159049s elapsed)
  Oct 28 12:28:39.007: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:41.011: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:43.015: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:45.020: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:47.024: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:49.029: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:51.034: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:53.039: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:55.044: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:57.048: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:28:57.048: INFO: Restart count of pod container-probe-9158/liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 is now 3 (1m0.136388235s elapsed)
  Oct 28 12:28:59.052: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:01.057: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:03.062: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:05.067: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:07.072: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:09.076: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:11.081: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:13.085: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:15.090: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:17.095: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:17.095: INFO: Restart count of pod container-probe-9158/liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 is now 4 (1m20.183130659s elapsed)
  Oct 28 12:29:19.099: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:21.104: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:23.108: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:25.113: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:27.116: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:29.121: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:31.125: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:33.130: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:35.135: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:37.141: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:39.145: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:41.151: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:43.157: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:45.162: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:47.166: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:49.171: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:51.175: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:53.180: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:55.185: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:57.189: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:29:59.193: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:30:01.197: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:30:03.205: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:30:05.210: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:30:07.215: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:30:09.219: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:30:11.225: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:30:13.230: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:30:15.236: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:30:17.240: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:30:19.246: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:30:21.249: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:30:23.253: INFO: Get pod liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 in namespace container-probe-9158
  Oct 28 12:30:23.253: INFO: Restart count of pod container-probe-9158/liveness-74dd0b08-3adf-4a6e-9f63-1a3059b6e998 is now 5 (2m26.341675867s elapsed)
  Oct 28 12:30:23.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 12:30:23.257
  STEP: Destroying namespace "container-probe-9158" for this suite. @ 10/28/23 12:30:23.268
• [148.410 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 10/28/23 12:30:23.279
  Oct 28 12:30:23.279: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename field-validation @ 10/28/23 12:30:23.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:30:23.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:30:23.303
  STEP: apply creating a deployment @ 10/28/23 12:30:23.306
  Oct 28 12:30:23.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1161" for this suite. @ 10/28/23 12:30:23.326
• [0.053 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 10/28/23 12:30:23.333
  Oct 28 12:30:23.333: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename endpointslice @ 10/28/23 12:30:23.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:30:23.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:30:23.354
  STEP: getting /apis @ 10/28/23 12:30:23.357
  STEP: getting /apis/discovery.k8s.io @ 10/28/23 12:30:23.361
  STEP: getting /apis/discovery.k8s.iov1 @ 10/28/23 12:30:23.362
  STEP: creating @ 10/28/23 12:30:23.364
  STEP: getting @ 10/28/23 12:30:23.377
  STEP: listing @ 10/28/23 12:30:23.38
  STEP: watching @ 10/28/23 12:30:23.384
  Oct 28 12:30:23.384: INFO: starting watch
  STEP: cluster-wide listing @ 10/28/23 12:30:23.385
  STEP: cluster-wide watching @ 10/28/23 12:30:23.388
  Oct 28 12:30:23.388: INFO: starting watch
  STEP: patching @ 10/28/23 12:30:23.389
  STEP: updating @ 10/28/23 12:30:23.395
  Oct 28 12:30:23.404: INFO: waiting for watch events with expected annotations
  Oct 28 12:30:23.405: INFO: saw patched and updated annotations
  STEP: deleting @ 10/28/23 12:30:23.405
  STEP: deleting a collection @ 10/28/23 12:30:23.418
  Oct 28 12:30:23.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9404" for this suite. @ 10/28/23 12:30:23.437
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 10/28/23 12:30:23.444
  Oct 28 12:30:23.444: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename deployment @ 10/28/23 12:30:23.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:30:23.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:30:23.465
  STEP: creating a Deployment @ 10/28/23 12:30:23.471
  Oct 28 12:30:23.471: INFO: Creating simple deployment test-deployment-6hbw2
  Oct 28 12:30:23.484: INFO: deployment "test-deployment-6hbw2" doesn't have the required revision set
  STEP: Getting /status @ 10/28/23 12:30:25.499
  Oct 28 12:30:25.503: INFO: Deployment test-deployment-6hbw2 has Conditions: [{Available True 2023-10-28 12:30:24 +0000 UTC 2023-10-28 12:30:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-10-28 12:30:24 +0000 UTC 2023-10-28 12:30:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6hbw2-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 10/28/23 12:30:25.503
  Oct 28 12:30:25.514: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 12, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 12, 30, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 12, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 12, 30, 23, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-6hbw2-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 10/28/23 12:30:25.514
  Oct 28 12:30:25.516: INFO: Observed &Deployment event: ADDED
  Oct 28 12:30:25.516: INFO: Observed Deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-28 12:30:23 +0000 UTC 2023-10-28 12:30:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6hbw2-5d576bd769"}
  Oct 28 12:30:25.516: INFO: Observed &Deployment event: MODIFIED
  Oct 28 12:30:25.516: INFO: Observed Deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-28 12:30:23 +0000 UTC 2023-10-28 12:30:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6hbw2-5d576bd769"}
  Oct 28 12:30:25.516: INFO: Observed Deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-28 12:30:23 +0000 UTC 2023-10-28 12:30:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct 28 12:30:25.516: INFO: Observed &Deployment event: MODIFIED
  Oct 28 12:30:25.516: INFO: Observed Deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-28 12:30:23 +0000 UTC 2023-10-28 12:30:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct 28 12:30:25.516: INFO: Observed Deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-28 12:30:23 +0000 UTC 2023-10-28 12:30:23 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-6hbw2-5d576bd769" is progressing.}
  Oct 28 12:30:25.517: INFO: Observed &Deployment event: MODIFIED
  Oct 28 12:30:25.517: INFO: Observed Deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-28 12:30:24 +0000 UTC 2023-10-28 12:30:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct 28 12:30:25.517: INFO: Observed Deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-28 12:30:24 +0000 UTC 2023-10-28 12:30:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6hbw2-5d576bd769" has successfully progressed.}
  Oct 28 12:30:25.517: INFO: Observed &Deployment event: MODIFIED
  Oct 28 12:30:25.517: INFO: Observed Deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-28 12:30:24 +0000 UTC 2023-10-28 12:30:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct 28 12:30:25.517: INFO: Observed Deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-28 12:30:24 +0000 UTC 2023-10-28 12:30:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6hbw2-5d576bd769" has successfully progressed.}
  Oct 28 12:30:25.517: INFO: Found Deployment test-deployment-6hbw2 in namespace deployment-3053 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 28 12:30:25.517: INFO: Deployment test-deployment-6hbw2 has an updated status
  STEP: patching the Statefulset Status @ 10/28/23 12:30:25.517
  Oct 28 12:30:25.517: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Oct 28 12:30:25.522: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 10/28/23 12:30:25.523
  Oct 28 12:30:25.525: INFO: Observed &Deployment event: ADDED
  Oct 28 12:30:25.525: INFO: Observed deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-28 12:30:23 +0000 UTC 2023-10-28 12:30:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6hbw2-5d576bd769"}
  Oct 28 12:30:25.525: INFO: Observed &Deployment event: MODIFIED
  Oct 28 12:30:25.525: INFO: Observed deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-28 12:30:23 +0000 UTC 2023-10-28 12:30:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6hbw2-5d576bd769"}
  Oct 28 12:30:25.525: INFO: Observed deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-28 12:30:23 +0000 UTC 2023-10-28 12:30:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct 28 12:30:25.525: INFO: Observed &Deployment event: MODIFIED
  Oct 28 12:30:25.525: INFO: Observed deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-28 12:30:23 +0000 UTC 2023-10-28 12:30:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Oct 28 12:30:25.525: INFO: Observed deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-28 12:30:23 +0000 UTC 2023-10-28 12:30:23 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-6hbw2-5d576bd769" is progressing.}
  Oct 28 12:30:25.526: INFO: Observed &Deployment event: MODIFIED
  Oct 28 12:30:25.526: INFO: Observed deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-28 12:30:24 +0000 UTC 2023-10-28 12:30:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct 28 12:30:25.526: INFO: Observed deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-28 12:30:24 +0000 UTC 2023-10-28 12:30:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6hbw2-5d576bd769" has successfully progressed.}
  Oct 28 12:30:25.526: INFO: Observed &Deployment event: MODIFIED
  Oct 28 12:30:25.526: INFO: Observed deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-28 12:30:24 +0000 UTC 2023-10-28 12:30:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Oct 28 12:30:25.526: INFO: Observed deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-28 12:30:24 +0000 UTC 2023-10-28 12:30:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6hbw2-5d576bd769" has successfully progressed.}
  Oct 28 12:30:25.526: INFO: Observed deployment test-deployment-6hbw2 in namespace deployment-3053 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 28 12:30:25.526: INFO: Observed &Deployment event: MODIFIED
  Oct 28 12:30:25.526: INFO: Found deployment test-deployment-6hbw2 in namespace deployment-3053 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Oct 28 12:30:25.526: INFO: Deployment test-deployment-6hbw2 has a patched status
  Oct 28 12:30:25.531: INFO: Deployment "test-deployment-6hbw2":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-6hbw2",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3053",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e8f6fb0-0c3c-498c-b543-c66c290e6e50",
      ResourceVersion: (string) (len=4) "5599",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834093023,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834093023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834093025,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834093025,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834093025,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834093025,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-6hbw2-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 28 12:30:25.536: INFO: New ReplicaSet "test-deployment-6hbw2-5d576bd769" of Deployment "test-deployment-6hbw2":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6hbw2-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3053",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba86c327-cd78-4605-b66e-d10c10d270e8",
      ResourceVersion: (string) (len=4) "5592",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834093023,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-6hbw2",
          UID: (types.UID) (len=36) "6e8f6fb0-0c3c-498c-b543-c66c290e6e50",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834093023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 36 65 38  |k:{\"uid\":\"6e8|
              00000120  66 36 66 62 30 2d 30 63  33 63 2d 34 39 38 63 2d  |f6fb0-0c3c-498c-|
              00000130  62 35 34 33 2d 63 36 36  63 32 39 30 65 36 65 35  |b543-c66c290e6e5|
              00000140  30 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |0\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834093024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 28 12:30:25.543: INFO: Pod "test-deployment-6hbw2-5d576bd769-4rd8d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-6hbw2-5d576bd769-4rd8d",
      GenerateName: (string) (len=33) "test-deployment-6hbw2-5d576bd769-",
      Namespace: (string) (len=15) "deployment-3053",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e705c367-efa2-4e59-b613-9f4ba95a2843",
      ResourceVersion: (string) (len=4) "5591",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834093023,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-6hbw2-5d576bd769",
          UID: (types.UID) (len=36) "ba86c327-cd78-4605-b66e-d10c10d270e8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834093023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 62 61 38 36 63 33 32  37 2d 63 64 37 38 2d 34  |"ba86c327-cd78-4|
              000000a0  36 30 35 2d 62 36 36 65  2d 64 31 30 63 31 30 64  |605-b66e-d10c10d|
              000000b0  32 37 30 65 38 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |270e8\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834093024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 33 36 2e 32 32 33 5c  |192.168.136.223\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kx6q5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kx6q5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-37-29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834093023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834093024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834093024,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834093023,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.37.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.136.223",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.136.223"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834093023,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834093024,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://418f6a5817fa8cbe3ec09df17bd85ff17637fe9930f7f75e16ed5ae08e51029d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 12:30:25.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3053" for this suite. @ 10/28/23 12:30:25.55
• [2.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 10/28/23 12:30:25.56
  Oct 28 12:30:25.560: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 12:30:25.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:30:25.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:30:25.579
  STEP: Creating a pod to test downward api env vars @ 10/28/23 12:30:25.582
  STEP: Saw pod success @ 10/28/23 12:30:29.606
  Oct 28 12:30:29.609: INFO: Trying to get logs from node ip-172-31-20-72 pod downward-api-71c3bca3-8270-4aa6-b481-74514dd74db4 container dapi-container: <nil>
  STEP: delete the pod @ 10/28/23 12:30:29.628
  Oct 28 12:30:29.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8622" for this suite. @ 10/28/23 12:30:29.645
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 10/28/23 12:30:29.655
  Oct 28 12:30:29.655: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/28/23 12:30:29.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:30:29.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:30:29.681
  STEP: fetching the /apis discovery document @ 10/28/23 12:30:29.684
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 10/28/23 12:30:29.686
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 10/28/23 12:30:29.686
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 10/28/23 12:30:29.686
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 10/28/23 12:30:29.687
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 10/28/23 12:30:29.687
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 10/28/23 12:30:29.688
  Oct 28 12:30:29.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2802" for this suite. @ 10/28/23 12:30:29.692
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 10/28/23 12:30:29.699
  Oct 28 12:30:29.699: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename containers @ 10/28/23 12:30:29.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:30:29.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:30:29.765
  Oct 28 12:30:31.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5020" for this suite. @ 10/28/23 12:30:31.81
• [2.117 seconds]
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 10/28/23 12:30:31.817
  Oct 28 12:30:31.817: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubelet-test @ 10/28/23 12:30:31.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:30:31.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:30:31.838
  Oct 28 12:30:33.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1544" for this suite. @ 10/28/23 12:30:33.876
• [2.067 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 10/28/23 12:30:33.885
  Oct 28 12:30:33.886: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename subpath @ 10/28/23 12:30:33.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:30:33.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:30:33.908
  STEP: Setting up data @ 10/28/23 12:30:33.91
  STEP: Creating pod pod-subpath-test-configmap-pqhh @ 10/28/23 12:30:33.919
  STEP: Creating a pod to test atomic-volume-subpath @ 10/28/23 12:30:33.92
  STEP: Saw pod success @ 10/28/23 12:30:57.984
  Oct 28 12:30:57.987: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-subpath-test-configmap-pqhh container test-container-subpath-configmap-pqhh: <nil>
  STEP: delete the pod @ 10/28/23 12:30:57.995
  STEP: Deleting pod pod-subpath-test-configmap-pqhh @ 10/28/23 12:30:58.009
  Oct 28 12:30:58.009: INFO: Deleting pod "pod-subpath-test-configmap-pqhh" in namespace "subpath-4269"
  Oct 28 12:30:58.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4269" for this suite. @ 10/28/23 12:30:58.017
• [24.138 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 10/28/23 12:30:58.024
  Oct 28 12:30:58.024: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename subpath @ 10/28/23 12:30:58.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:30:58.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:30:58.046
  STEP: Setting up data @ 10/28/23 12:30:58.048
  STEP: Creating pod pod-subpath-test-secret-lwb9 @ 10/28/23 12:30:58.057
  STEP: Creating a pod to test atomic-volume-subpath @ 10/28/23 12:30:58.057
  STEP: Saw pod success @ 10/28/23 12:31:22.125
  Oct 28 12:31:22.129: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-subpath-test-secret-lwb9 container test-container-subpath-secret-lwb9: <nil>
  STEP: delete the pod @ 10/28/23 12:31:22.136
  STEP: Deleting pod pod-subpath-test-secret-lwb9 @ 10/28/23 12:31:22.158
  Oct 28 12:31:22.158: INFO: Deleting pod "pod-subpath-test-secret-lwb9" in namespace "subpath-6205"
  Oct 28 12:31:22.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6205" for this suite. @ 10/28/23 12:31:22.165
• [24.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 10/28/23 12:31:22.173
  Oct 28 12:31:22.173: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename sysctl @ 10/28/23 12:31:22.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:31:22.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:31:22.195
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 10/28/23 12:31:22.198
  STEP: Watching for error events or started pod @ 10/28/23 12:31:22.207
  STEP: Waiting for pod completion @ 10/28/23 12:31:24.213
  STEP: Checking that the pod succeeded @ 10/28/23 12:31:26.225
  STEP: Getting logs from the pod @ 10/28/23 12:31:26.225
  STEP: Checking that the sysctl is actually updated @ 10/28/23 12:31:26.232
  Oct 28 12:31:26.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5085" for this suite. @ 10/28/23 12:31:26.235
• [4.070 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 10/28/23 12:31:26.244
  Oct 28 12:31:26.244: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 12:31:26.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:31:26.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:31:26.266
  STEP: creating service in namespace services-1054 @ 10/28/23 12:31:26.269
  STEP: creating service affinity-clusterip in namespace services-1054 @ 10/28/23 12:31:26.269
  STEP: creating replication controller affinity-clusterip in namespace services-1054 @ 10/28/23 12:31:26.28
  I1028 12:31:26.287648      19 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-1054, replica count: 3
  I1028 12:31:29.338682      19 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1028 12:31:32.338829      19 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 28 12:31:32.346: INFO: Creating new exec pod
  Oct 28 12:31:35.372: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-1054 exec execpod-affinity6pc6s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Oct 28 12:31:35.524: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Oct 28 12:31:35.524: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 12:31:35.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-1054 exec execpod-affinity6pc6s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.103 80'
  Oct 28 12:31:35.671: INFO: stderr: "+ nc -v -t -w 2 10.152.183.103 80\nConnection to 10.152.183.103 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Oct 28 12:31:35.671: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 12:31:35.671: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-1054 exec execpod-affinity6pc6s -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.103:80/ ; done'
  Oct 28 12:31:35.866: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.103:80/\n"
  Oct 28 12:31:35.866: INFO: stdout: "\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82\naffinity-clusterip-jgb82"
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Received response from host: affinity-clusterip-jgb82
  Oct 28 12:31:35.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 28 12:31:35.870: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-1054, will wait for the garbage collector to delete the pods @ 10/28/23 12:31:35.884
  Oct 28 12:31:35.946: INFO: Deleting ReplicationController affinity-clusterip took: 7.716885ms
  Oct 28 12:31:36.046: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.515551ms
  STEP: Destroying namespace "services-1054" for this suite. @ 10/28/23 12:31:39.766
• [13.531 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 10/28/23 12:31:39.776
  Oct 28 12:31:39.776: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-runtime @ 10/28/23 12:31:39.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:31:39.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:31:39.798
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 10/28/23 12:31:39.808
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 10/28/23 12:31:57.894
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 10/28/23 12:31:57.898
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 10/28/23 12:31:57.903
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 10/28/23 12:31:57.903
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 10/28/23 12:31:57.922
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 10/28/23 12:32:00.942
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 10/28/23 12:32:01.952
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 10/28/23 12:32:01.958
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 10/28/23 12:32:01.958
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 10/28/23 12:32:01.987
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 10/28/23 12:32:02.999
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 10/28/23 12:32:05.011
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 10/28/23 12:32:05.018
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 10/28/23 12:32:05.018
  Oct 28 12:32:05.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6709" for this suite. @ 10/28/23 12:32:05.045
• [25.275 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 10/28/23 12:32:05.052
  Oct 28 12:32:05.052: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubelet-test @ 10/28/23 12:32:05.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:32:05.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:32:05.074
  Oct 28 12:32:05.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-284" for this suite. @ 10/28/23 12:32:05.102
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 10/28/23 12:32:05.112
  Oct 28 12:32:05.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 12:32:05.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:32:05.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:32:05.131
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 12:32:05.134
  STEP: Saw pod success @ 10/28/23 12:32:09.157
  Oct 28 12:32:09.161: INFO: Trying to get logs from node ip-172-31-37-29 pod downwardapi-volume-ba62f8a0-9e95-4e13-a56c-1ba933484ad2 container client-container: <nil>
  STEP: delete the pod @ 10/28/23 12:32:09.168
  Oct 28 12:32:09.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3212" for this suite. @ 10/28/23 12:32:09.188
• [4.081 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 10/28/23 12:32:09.194
  Oct 28 12:32:09.194: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename crd-webhook @ 10/28/23 12:32:09.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:32:09.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:32:09.213
  STEP: Setting up server cert @ 10/28/23 12:32:09.216
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/28/23 12:32:09.62
  STEP: Deploying the custom resource conversion webhook pod @ 10/28/23 12:32:09.628
  STEP: Wait for the deployment to be ready @ 10/28/23 12:32:09.64
  Oct 28 12:32:09.647: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 12:32:11.659
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 12:32:11.669
  Oct 28 12:32:12.670: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Oct 28 12:32:12.678: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Creating a v1 custom resource @ 10/28/23 12:32:15.255
  STEP: v2 custom resource should be converted @ 10/28/23 12:32:15.261
  Oct 28 12:32:15.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1541" for this suite. @ 10/28/23 12:32:15.818
• [6.632 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 10/28/23 12:32:15.827
  Oct 28 12:32:15.827: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename sched-pred @ 10/28/23 12:32:15.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:32:15.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:32:15.852
  Oct 28 12:32:15.855: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct 28 12:32:15.863: INFO: Waiting for terminating namespaces to be deleted...
  Oct 28 12:32:15.866: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-20-72 before test
  Oct 28 12:32:15.872: INFO: nginx-ingress-controller-kubernetes-worker-8swbr from ingress-nginx-kubernetes-worker started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:32:15.872: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 28 12:32:15.872: INFO: calico-node-cpcds from kube-system started at 2023-10-28 12:12:02 +0000 UTC (1 container statuses recorded)
  Oct 28 12:32:15.872: INFO: 	Container calico-node ready: true, restart count 0
  Oct 28 12:32:15.872: INFO: sonobuoy-e2e-job-5367ddbce4cd4be7 from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 12:32:15.872: INFO: 	Container e2e ready: true, restart count 0
  Oct 28 12:32:15.872: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 12:32:15.872: INFO: sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-ndkvj from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 12:32:15.872: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 12:32:15.872: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 28 12:32:15.872: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-37-29 before test
  Oct 28 12:32:15.877: INFO: nginx-ingress-controller-kubernetes-worker-xk2c7 from ingress-nginx-kubernetes-worker started at 2023-10-28 12:16:53 +0000 UTC (1 container statuses recorded)
  Oct 28 12:32:15.877: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 28 12:32:15.877: INFO: calico-node-l75l8 from kube-system started at 2023-10-28 12:16:40 +0000 UTC (1 container statuses recorded)
  Oct 28 12:32:15.877: INFO: 	Container calico-node ready: true, restart count 0
  Oct 28 12:32:15.877: INFO: sonobuoy from sonobuoy started at 2023-10-28 12:22:27 +0000 UTC (1 container statuses recorded)
  Oct 28 12:32:15.877: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct 28 12:32:15.877: INFO: sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-tb6hv from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 12:32:15.877: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 12:32:15.877: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 28 12:32:15.877: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-5-226 before test
  Oct 28 12:32:15.883: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-5jq2w from ingress-nginx-kubernetes-worker started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:32:15.883: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct 28 12:32:15.883: INFO: nginx-ingress-controller-kubernetes-worker-9fc74 from ingress-nginx-kubernetes-worker started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:32:15.883: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 28 12:32:15.883: INFO: calico-kube-controllers-59c77d8d6f-hvzwx from kube-system started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:32:15.883: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Oct 28 12:32:15.883: INFO: calico-node-j2png from kube-system started at 2023-10-28 12:12:02 +0000 UTC (1 container statuses recorded)
  Oct 28 12:32:15.883: INFO: 	Container calico-node ready: true, restart count 0
  Oct 28 12:32:15.883: INFO: coredns-59cfb5bf46-vr6sn from kube-system started at 2023-10-28 12:12:17 +0000 UTC (1 container statuses recorded)
  Oct 28 12:32:15.883: INFO: 	Container coredns ready: true, restart count 0
  Oct 28 12:32:15.883: INFO: kube-state-metrics-775d9f4f79-htlwx from kube-system started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:32:15.883: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct 28 12:32:15.883: INFO: metrics-server-v0.6.3-69d7fbfdf8-ws5cj from kube-system started at 2023-10-28 12:12:17 +0000 UTC (2 container statuses recorded)
  Oct 28 12:32:15.883: INFO: 	Container metrics-server ready: true, restart count 0
  Oct 28 12:32:15.883: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct 28 12:32:15.883: INFO: dashboard-metrics-scraper-5dd7cb5fc-97qlp from kubernetes-dashboard started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:32:15.883: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct 28 12:32:15.883: INFO: kubernetes-dashboard-7b899cb9d9-zdnvw from kubernetes-dashboard started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:32:15.883: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct 28 12:32:15.883: INFO: sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-vbz6k from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 12:32:15.883: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 12:32:15.883: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-20-72 @ 10/28/23 12:32:15.899
  STEP: verifying the node has the label node ip-172-31-37-29 @ 10/28/23 12:32:15.911
  STEP: verifying the node has the label node ip-172-31-5-226 @ 10/28/23 12:32:15.922
  Oct 28 12:32:15.935: INFO: Pod default-http-backend-kubernetes-worker-5c79cc75ff-5jq2w requesting resource cpu=10m on Node ip-172-31-5-226
  Oct 28 12:32:15.936: INFO: Pod nginx-ingress-controller-kubernetes-worker-8swbr requesting resource cpu=0m on Node ip-172-31-20-72
  Oct 28 12:32:15.936: INFO: Pod nginx-ingress-controller-kubernetes-worker-9fc74 requesting resource cpu=0m on Node ip-172-31-5-226
  Oct 28 12:32:15.936: INFO: Pod nginx-ingress-controller-kubernetes-worker-xk2c7 requesting resource cpu=0m on Node ip-172-31-37-29
  Oct 28 12:32:15.936: INFO: Pod calico-kube-controllers-59c77d8d6f-hvzwx requesting resource cpu=0m on Node ip-172-31-5-226
  Oct 28 12:32:15.936: INFO: Pod calico-node-cpcds requesting resource cpu=250m on Node ip-172-31-20-72
  Oct 28 12:32:15.936: INFO: Pod calico-node-j2png requesting resource cpu=250m on Node ip-172-31-5-226
  Oct 28 12:32:15.936: INFO: Pod calico-node-l75l8 requesting resource cpu=250m on Node ip-172-31-37-29
  Oct 28 12:32:15.936: INFO: Pod coredns-59cfb5bf46-vr6sn requesting resource cpu=100m on Node ip-172-31-5-226
  Oct 28 12:32:15.936: INFO: Pod kube-state-metrics-775d9f4f79-htlwx requesting resource cpu=0m on Node ip-172-31-5-226
  Oct 28 12:32:15.936: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-ws5cj requesting resource cpu=5m on Node ip-172-31-5-226
  Oct 28 12:32:15.936: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-97qlp requesting resource cpu=0m on Node ip-172-31-5-226
  Oct 28 12:32:15.936: INFO: Pod kubernetes-dashboard-7b899cb9d9-zdnvw requesting resource cpu=0m on Node ip-172-31-5-226
  Oct 28 12:32:15.936: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-37-29
  Oct 28 12:32:15.937: INFO: Pod sonobuoy-e2e-job-5367ddbce4cd4be7 requesting resource cpu=0m on Node ip-172-31-20-72
  Oct 28 12:32:15.937: INFO: Pod sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-ndkvj requesting resource cpu=0m on Node ip-172-31-20-72
  Oct 28 12:32:15.937: INFO: Pod sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-tb6hv requesting resource cpu=0m on Node ip-172-31-37-29
  Oct 28 12:32:15.937: INFO: Pod sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-vbz6k requesting resource cpu=0m on Node ip-172-31-5-226
  STEP: Starting Pods to consume most of the cluster CPU. @ 10/28/23 12:32:15.937
  Oct 28 12:32:15.937: INFO: Creating a pod which consumes cpu=1144m on Node ip-172-31-5-226
  Oct 28 12:32:15.946: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-20-72
  Oct 28 12:32:15.953: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-37-29
  STEP: Creating another pod that requires unavailable amount of CPU. @ 10/28/23 12:32:17.976
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2c92b506-bbb7-4b24-9b55-ce014b9f0180.1792456b2599561e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9927/filler-pod-2c92b506-bbb7-4b24-9b55-ce014b9f0180 to ip-172-31-37-29] @ 10/28/23 12:32:17.98
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2c92b506-bbb7-4b24-9b55-ce014b9f0180.1792456b4adb21d3], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 10/28/23 12:32:17.98
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2c92b506-bbb7-4b24-9b55-ce014b9f0180.1792456b4c0f366a], Reason = [Created], Message = [Created container filler-pod-2c92b506-bbb7-4b24-9b55-ce014b9f0180] @ 10/28/23 12:32:17.98
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2c92b506-bbb7-4b24-9b55-ce014b9f0180.1792456b52c99fd5], Reason = [Started], Message = [Started container filler-pod-2c92b506-bbb7-4b24-9b55-ce014b9f0180] @ 10/28/23 12:32:17.98
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5bfe5cca-3ade-4c7f-8e2a-e303c1216e92.1792456b256c86b9], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9927/filler-pod-5bfe5cca-3ade-4c7f-8e2a-e303c1216e92 to ip-172-31-20-72] @ 10/28/23 12:32:17.98
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5bfe5cca-3ade-4c7f-8e2a-e303c1216e92.1792456b4b8ec3f6], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 10/28/23 12:32:17.98
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5bfe5cca-3ade-4c7f-8e2a-e303c1216e92.1792456b4c7d2764], Reason = [Created], Message = [Created container filler-pod-5bfe5cca-3ade-4c7f-8e2a-e303c1216e92] @ 10/28/23 12:32:17.98
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5bfe5cca-3ade-4c7f-8e2a-e303c1216e92.1792456b528a6631], Reason = [Started], Message = [Started container filler-pod-5bfe5cca-3ade-4c7f-8e2a-e303c1216e92] @ 10/28/23 12:32:17.98
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-94662b2e-846f-42b9-a69f-aa409c80ab0b.1792456b24c906e8], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9927/filler-pod-94662b2e-846f-42b9-a69f-aa409c80ab0b to ip-172-31-5-226] @ 10/28/23 12:32:17.98
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-94662b2e-846f-42b9-a69f-aa409c80ab0b.1792456b49304e5b], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.9"] @ 10/28/23 12:32:17.98
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-94662b2e-846f-42b9-a69f-aa409c80ab0b.1792456b5e85f18c], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.9" in 357ms (357ms including waiting)] @ 10/28/23 12:32:17.98
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-94662b2e-846f-42b9-a69f-aa409c80ab0b.1792456b5fc9d359], Reason = [Created], Message = [Created container filler-pod-94662b2e-846f-42b9-a69f-aa409c80ab0b] @ 10/28/23 12:32:17.98
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-94662b2e-846f-42b9-a69f-aa409c80ab0b.1792456b6560abb4], Reason = [Started], Message = [Started container filler-pod-94662b2e-846f-42b9-a69f-aa409c80ab0b] @ 10/28/23 12:32:17.98
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1792456b9e0842af], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod..] @ 10/28/23 12:32:17.994
  STEP: removing the label node off the node ip-172-31-5-226 @ 10/28/23 12:32:18.992
  STEP: verifying the node doesn't have the label node @ 10/28/23 12:32:19.002
  STEP: removing the label node off the node ip-172-31-20-72 @ 10/28/23 12:32:19.006
  STEP: verifying the node doesn't have the label node @ 10/28/23 12:32:19.022
  STEP: removing the label node off the node ip-172-31-37-29 @ 10/28/23 12:32:19.029
  STEP: verifying the node doesn't have the label node @ 10/28/23 12:32:19.041
  Oct 28 12:32:19.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9927" for this suite. @ 10/28/23 12:32:19.049
• [3.228 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 10/28/23 12:32:19.057
  Oct 28 12:32:19.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 12:32:19.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:32:19.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:32:19.078
  STEP: Creating configMap with name cm-test-opt-del-f48ec401-90b3-4576-b285-70db87714919 @ 10/28/23 12:32:19.088
  STEP: Creating configMap with name cm-test-opt-upd-1c9408ad-573d-41d6-bb0b-78e61e22dcca @ 10/28/23 12:32:19.093
  STEP: Creating the pod @ 10/28/23 12:32:19.098
  STEP: Deleting configmap cm-test-opt-del-f48ec401-90b3-4576-b285-70db87714919 @ 10/28/23 12:32:21.264
  STEP: Updating configmap cm-test-opt-upd-1c9408ad-573d-41d6-bb0b-78e61e22dcca @ 10/28/23 12:32:21.27
  STEP: Creating configMap with name cm-test-opt-create-c01d0ae3-46f5-400d-9727-1f50a5253e6d @ 10/28/23 12:32:21.275
  STEP: waiting to observe update in volume @ 10/28/23 12:32:21.279
  Oct 28 12:33:53.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4809" for this suite. @ 10/28/23 12:33:53.727
• [94.678 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 10/28/23 12:33:53.735
  Oct 28 12:33:53.735: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 12:33:53.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:33:53.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:33:53.762
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 12:33:53.768
  STEP: Saw pod success @ 10/28/23 12:33:57.801
  Oct 28 12:33:57.804: INFO: Trying to get logs from node ip-172-31-20-72 pod downwardapi-volume-c27b0af9-16ca-4719-ae4e-29d73467ee8e container client-container: <nil>
  STEP: delete the pod @ 10/28/23 12:33:57.82
  Oct 28 12:33:57.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7607" for this suite. @ 10/28/23 12:33:57.839
• [4.111 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 10/28/23 12:33:57.846
  Oct 28 12:33:57.846: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename endpointslice @ 10/28/23 12:33:57.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:33:57.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:33:57.865
  Oct 28 12:33:59.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4882" for this suite. @ 10/28/23 12:33:59.926
• [2.088 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 10/28/23 12:33:59.934
  Oct 28 12:33:59.934: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename taint-multiple-pods @ 10/28/23 12:33:59.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:33:59.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:33:59.954
  Oct 28 12:33:59.957: INFO: Waiting up to 1m0s for all nodes to be ready
  Oct 28 12:34:59.975: INFO: Waiting for terminating namespaces to be deleted...
  Oct 28 12:34:59.978: INFO: Starting informer...
  STEP: Starting pods... @ 10/28/23 12:34:59.978
  Oct 28 12:35:00.196: INFO: Pod1 is running on ip-172-31-37-29. Tainting Node
  Oct 28 12:35:02.421: INFO: Pod2 is running on ip-172-31-37-29. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/28/23 12:35:02.421
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/28/23 12:35:02.433
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 10/28/23 12:35:02.438
  Oct 28 12:35:08.043: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Oct 28 12:35:28.080: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Oct 28 12:35:28.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/28/23 12:35:28.096
  STEP: Destroying namespace "taint-multiple-pods-610" for this suite. @ 10/28/23 12:35:28.1
• [88.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 10/28/23 12:35:28.108
  Oct 28 12:35:28.108: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 12:35:28.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:35:28.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:35:28.142
  STEP: Creating projection with secret that has name projected-secret-test-9223245c-d7f0-465b-9a7b-e7bf2caab674 @ 10/28/23 12:35:28.145
  STEP: Creating a pod to test consume secrets @ 10/28/23 12:35:28.15
  STEP: Saw pod success @ 10/28/23 12:35:32.172
  Oct 28 12:35:32.175: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-projected-secrets-2339ba60-e7bd-41f4-bf91-1820a1b8e9db container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 12:35:32.194
  Oct 28 12:35:32.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6058" for this suite. @ 10/28/23 12:35:32.215
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 10/28/23 12:35:32.224
  Oct 28 12:35:32.224: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/28/23 12:35:32.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:35:32.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:35:32.244
  STEP: create the container to handle the HTTPGet hook request. @ 10/28/23 12:35:32.252
  STEP: create the pod with lifecycle hook @ 10/28/23 12:35:34.277
  STEP: delete the pod with lifecycle hook @ 10/28/23 12:35:36.296
  STEP: check prestop hook @ 10/28/23 12:35:38.311
  Oct 28 12:35:38.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5381" for this suite. @ 10/28/23 12:35:38.337
• [6.120 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 10/28/23 12:35:38.344
  Oct 28 12:35:38.344: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename secrets @ 10/28/23 12:35:38.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:35:38.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:35:38.366
  STEP: creating a secret @ 10/28/23 12:35:38.369
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 10/28/23 12:35:38.376
  STEP: patching the secret @ 10/28/23 12:35:38.379
  STEP: deleting the secret using a LabelSelector @ 10/28/23 12:35:38.388
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 10/28/23 12:35:38.395
  Oct 28 12:35:38.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6556" for this suite. @ 10/28/23 12:35:38.402
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 10/28/23 12:35:38.412
  Oct 28 12:35:38.412: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 12:35:38.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:35:38.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:35:38.437
  STEP: Creating a pod to test emptydir volume type on node default medium @ 10/28/23 12:35:38.44
  STEP: Saw pod success @ 10/28/23 12:35:42.464
  Oct 28 12:35:42.467: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-706674f3-ff21-47ce-bfc9-8134ea8d5c23 container test-container: <nil>
  STEP: delete the pod @ 10/28/23 12:35:42.474
  Oct 28 12:35:42.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4754" for this suite. @ 10/28/23 12:35:42.495
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 10/28/23 12:35:42.504
  Oct 28 12:35:42.504: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename var-expansion @ 10/28/23 12:35:42.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:35:42.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:35:42.523
  Oct 28 12:35:44.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 28 12:35:44.544: INFO: Deleting pod "var-expansion-ab713b6c-96dc-4534-900b-598ba71c9d43" in namespace "var-expansion-465"
  Oct 28 12:35:44.553: INFO: Wait up to 5m0s for pod "var-expansion-ab713b6c-96dc-4534-900b-598ba71c9d43" to be fully deleted
  STEP: Destroying namespace "var-expansion-465" for this suite. @ 10/28/23 12:35:46.561
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 10/28/23 12:35:46.571
  Oct 28 12:35:46.571: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename secrets @ 10/28/23 12:35:46.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:35:46.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:35:46.594
  STEP: Creating secret with name secret-test-17870a31-fa5f-43d7-a758-7303455a08a4 @ 10/28/23 12:35:46.597
  STEP: Creating a pod to test consume secrets @ 10/28/23 12:35:46.603
  STEP: Saw pod success @ 10/28/23 12:35:50.624
  Oct 28 12:35:50.628: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-secrets-c4df227f-b85c-47f7-a54a-57bcf5b4e8db container secret-env-test: <nil>
  STEP: delete the pod @ 10/28/23 12:35:50.637
  Oct 28 12:35:50.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8006" for this suite. @ 10/28/23 12:35:50.657
• [4.094 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 10/28/23 12:35:50.665
  Oct 28 12:35:50.665: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename var-expansion @ 10/28/23 12:35:50.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:35:50.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:35:50.693
  STEP: Creating a pod to test substitution in container's args @ 10/28/23 12:35:50.698
  STEP: Saw pod success @ 10/28/23 12:35:54.727
  Oct 28 12:35:54.730: INFO: Trying to get logs from node ip-172-31-37-29 pod var-expansion-132b9f9d-e0d7-46a2-bf0b-2b35140f1b31 container dapi-container: <nil>
  STEP: delete the pod @ 10/28/23 12:35:54.737
  Oct 28 12:35:54.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1497" for this suite. @ 10/28/23 12:35:54.764
• [4.106 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 10/28/23 12:35:54.772
  Oct 28 12:35:54.772: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 12:35:54.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:35:54.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:35:54.917
  STEP: Creating configMap with name configmap-test-volume-map-92c709f5-4485-4b9b-8fa5-9e4656bbd996 @ 10/28/23 12:35:54.923
  STEP: Creating a pod to test consume configMaps @ 10/28/23 12:35:54.928
  STEP: Saw pod success @ 10/28/23 12:35:58.954
  Oct 28 12:35:58.958: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-configmaps-b17ef19b-af27-4259-a855-5b1ed1cf43c6 container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 12:35:58.967
  Oct 28 12:35:58.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5077" for this suite. @ 10/28/23 12:35:58.988
• [4.224 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 10/28/23 12:35:58.996
  Oct 28 12:35:58.996: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename watch @ 10/28/23 12:35:58.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:35:59.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:35:59.02
  STEP: getting a starting resourceVersion @ 10/28/23 12:35:59.024
  STEP: starting a background goroutine to produce watch events @ 10/28/23 12:35:59.028
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 10/28/23 12:35:59.028
  Oct 28 12:36:01.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4745" for this suite. @ 10/28/23 12:36:01.851
• [2.917 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 10/28/23 12:36:01.913
  Oct 28 12:36:01.913: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename secrets @ 10/28/23 12:36:01.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:36:01.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:36:01.959
  STEP: Creating secret with name secret-test-2d1a886d-7669-44a7-8a9f-acc76321b776 @ 10/28/23 12:36:01.967
  STEP: Creating a pod to test consume secrets @ 10/28/23 12:36:01.979
  STEP: Saw pod success @ 10/28/23 12:36:06.014
  Oct 28 12:36:06.018: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-secrets-ac48238a-cde1-4560-806e-7a3f0d808385 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 12:36:06.024
  Oct 28 12:36:06.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4913" for this suite. @ 10/28/23 12:36:06.045
• [4.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 10/28/23 12:36:06.054
  Oct 28 12:36:06.054: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename var-expansion @ 10/28/23 12:36:06.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:36:06.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:36:06.076
  Oct 28 12:36:08.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 28 12:36:08.106: INFO: Deleting pod "var-expansion-91edfeb9-4144-4b4e-932a-9d318bf0f1f8" in namespace "var-expansion-7881"
  Oct 28 12:36:08.115: INFO: Wait up to 5m0s for pod "var-expansion-91edfeb9-4144-4b4e-932a-9d318bf0f1f8" to be fully deleted
  STEP: Destroying namespace "var-expansion-7881" for this suite. @ 10/28/23 12:36:10.124
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 10/28/23 12:36:10.135
  Oct 28 12:36:10.135: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 12:36:10.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:36:10.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:36:10.154
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 12:36:10.158
  STEP: Saw pod success @ 10/28/23 12:36:14.18
  Oct 28 12:36:14.184: INFO: Trying to get logs from node ip-172-31-37-29 pod downwardapi-volume-7c30fa6b-aca4-4b70-9d10-de5e39034ebf container client-container: <nil>
  STEP: delete the pod @ 10/28/23 12:36:14.191
  Oct 28 12:36:14.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5082" for this suite. @ 10/28/23 12:36:14.209
• [4.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 10/28/23 12:36:14.216
  Oct 28 12:36:14.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/28/23 12:36:14.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:36:14.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:36:14.241
  STEP: set up a multi version CRD @ 10/28/23 12:36:14.252
  Oct 28 12:36:14.252: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: rename a version @ 10/28/23 12:36:17.628
  STEP: check the new version name is served @ 10/28/23 12:36:17.642
  STEP: check the old version name is removed @ 10/28/23 12:36:18.55
  STEP: check the other version is not changed @ 10/28/23 12:36:19.197
  Oct 28 12:36:21.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4338" for this suite. @ 10/28/23 12:36:21.924
• [7.717 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 10/28/23 12:36:21.933
  Oct 28 12:36:21.933: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename svcaccounts @ 10/28/23 12:36:21.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:36:21.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:36:21.953
  STEP: Creating ServiceAccount "e2e-sa-6ch2k"  @ 10/28/23 12:36:21.956
  Oct 28 12:36:21.960: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-6ch2k"  @ 10/28/23 12:36:21.96
  Oct 28 12:36:21.969: INFO: AutomountServiceAccountToken: true
  Oct 28 12:36:21.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2656" for this suite. @ 10/28/23 12:36:21.973
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 10/28/23 12:36:21.981
  Oct 28 12:36:21.981: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/28/23 12:36:21.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:36:22.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:36:22.009
  Oct 28 12:36:22.012: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/28/23 12:36:23.32
  Oct 28 12:36:23.320: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-630 --namespace=crd-publish-openapi-630 create -f -'
  Oct 28 12:36:25.781: INFO: stderr: ""
  Oct 28 12:36:25.781: INFO: stdout: "e2e-test-crd-publish-openapi-2692-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Oct 28 12:36:25.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-630 --namespace=crd-publish-openapi-630 delete e2e-test-crd-publish-openapi-2692-crds test-cr'
  Oct 28 12:36:25.847: INFO: stderr: ""
  Oct 28 12:36:25.847: INFO: stdout: "e2e-test-crd-publish-openapi-2692-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Oct 28 12:36:25.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-630 --namespace=crd-publish-openapi-630 apply -f -'
  Oct 28 12:36:25.995: INFO: stderr: ""
  Oct 28 12:36:25.995: INFO: stdout: "e2e-test-crd-publish-openapi-2692-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Oct 28 12:36:25.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-630 --namespace=crd-publish-openapi-630 delete e2e-test-crd-publish-openapi-2692-crds test-cr'
  Oct 28 12:36:26.062: INFO: stderr: ""
  Oct 28 12:36:26.062: INFO: stdout: "e2e-test-crd-publish-openapi-2692-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 10/28/23 12:36:26.062
  Oct 28 12:36:26.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-630 explain e2e-test-crd-publish-openapi-2692-crds'
  Oct 28 12:36:26.197: INFO: stderr: ""
  Oct 28 12:36:26.197: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2692-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Oct 28 12:36:27.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-630" for this suite. @ 10/28/23 12:36:27.519
• [5.547 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 10/28/23 12:36:27.529
  Oct 28 12:36:27.529: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename events @ 10/28/23 12:36:27.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:36:27.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:36:27.551
  STEP: creating a test event @ 10/28/23 12:36:27.555
  STEP: listing all events in all namespaces @ 10/28/23 12:36:27.56
  STEP: patching the test event @ 10/28/23 12:36:27.569
  STEP: fetching the test event @ 10/28/23 12:36:27.576
  STEP: updating the test event @ 10/28/23 12:36:27.58
  STEP: getting the test event @ 10/28/23 12:36:27.592
  STEP: deleting the test event @ 10/28/23 12:36:27.596
  STEP: listing all events in all namespaces @ 10/28/23 12:36:27.604
  Oct 28 12:36:27.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3235" for this suite. @ 10/28/23 12:36:27.638
• [0.122 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 10/28/23 12:36:27.652
  Oct 28 12:36:27.652: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 12:36:27.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:36:27.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:36:27.701
  Oct 28 12:36:27.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7841" for this suite. @ 10/28/23 12:36:27.753
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 10/28/23 12:36:27.765
  Oct 28 12:36:27.766: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename subpath @ 10/28/23 12:36:27.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:36:27.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:36:27.784
  STEP: Setting up data @ 10/28/23 12:36:27.789
  STEP: Creating pod pod-subpath-test-projected-xhb9 @ 10/28/23 12:36:27.797
  STEP: Creating a pod to test atomic-volume-subpath @ 10/28/23 12:36:27.797
  STEP: Saw pod success @ 10/28/23 12:36:51.866
  Oct 28 12:36:51.869: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-subpath-test-projected-xhb9 container test-container-subpath-projected-xhb9: <nil>
  STEP: delete the pod @ 10/28/23 12:36:51.892
  STEP: Deleting pod pod-subpath-test-projected-xhb9 @ 10/28/23 12:36:51.909
  Oct 28 12:36:51.909: INFO: Deleting pod "pod-subpath-test-projected-xhb9" in namespace "subpath-7259"
  Oct 28 12:36:51.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7259" for this suite. @ 10/28/23 12:36:51.917
• [24.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 10/28/23 12:36:51.927
  Oct 28 12:36:51.927: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename resourcequota @ 10/28/23 12:36:51.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:36:51.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:36:51.949
  STEP: Discovering how many secrets are in namespace by default @ 10/28/23 12:36:51.952
  STEP: Counting existing ResourceQuota @ 10/28/23 12:36:56.956
  STEP: Creating a ResourceQuota @ 10/28/23 12:37:01.96
  STEP: Ensuring resource quota status is calculated @ 10/28/23 12:37:01.968
  STEP: Creating a Secret @ 10/28/23 12:37:03.973
  STEP: Ensuring resource quota status captures secret creation @ 10/28/23 12:37:03.984
  STEP: Deleting a secret @ 10/28/23 12:37:05.99
  STEP: Ensuring resource quota status released usage @ 10/28/23 12:37:05.998
  Oct 28 12:37:08.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2495" for this suite. @ 10/28/23 12:37:08.007
• [16.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 10/28/23 12:37:08.017
  Oct 28 12:37:08.017: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename resourcequota @ 10/28/23 12:37:08.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:37:08.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:37:08.038
  STEP: Counting existing ResourceQuota @ 10/28/23 12:37:08.041
  STEP: Creating a ResourceQuota @ 10/28/23 12:37:13.045
  STEP: Ensuring resource quota status is calculated @ 10/28/23 12:37:13.052
  STEP: Creating a ReplicationController @ 10/28/23 12:37:15.058
  STEP: Ensuring resource quota status captures replication controller creation @ 10/28/23 12:37:15.072
  STEP: Deleting a ReplicationController @ 10/28/23 12:37:17.076
  STEP: Ensuring resource quota status released usage @ 10/28/23 12:37:17.084
  Oct 28 12:37:19.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2475" for this suite. @ 10/28/23 12:37:19.092
• [11.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 10/28/23 12:37:19.101
  Oct 28 12:37:19.101: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename security-context @ 10/28/23 12:37:19.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:37:19.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:37:19.122
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/28/23 12:37:19.125
  STEP: Saw pod success @ 10/28/23 12:37:23.149
  Oct 28 12:37:23.153: INFO: Trying to get logs from node ip-172-31-37-29 pod security-context-8cb1ae82-8ef0-461f-a9f3-b096bb8ab6bc container test-container: <nil>
  STEP: delete the pod @ 10/28/23 12:37:23.161
  Oct 28 12:37:23.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8343" for this suite. @ 10/28/23 12:37:23.181
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 10/28/23 12:37:23.189
  Oct 28 12:37:23.189: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 12:37:23.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:37:23.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:37:23.211
  STEP: Creating configMap configmap-9011/configmap-test-75ccde1a-9623-498c-8321-336071c34bc9 @ 10/28/23 12:37:23.214
  STEP: Creating a pod to test consume configMaps @ 10/28/23 12:37:23.219
  STEP: Saw pod success @ 10/28/23 12:37:27.243
  Oct 28 12:37:27.247: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-configmaps-0c294750-b754-488e-802b-e3b9fcd5e2e4 container env-test: <nil>
  STEP: delete the pod @ 10/28/23 12:37:27.256
  Oct 28 12:37:27.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9011" for this suite. @ 10/28/23 12:37:27.276
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 10/28/23 12:37:27.285
  Oct 28 12:37:27.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename proxy @ 10/28/23 12:37:27.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:37:27.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:37:27.308
  Oct 28 12:37:27.311: INFO: Creating pod...
  Oct 28 12:37:29.330: INFO: Creating service...
  Oct 28 12:37:29.349: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3927/pods/agnhost/proxy?method=DELETE
  Oct 28 12:37:29.357: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct 28 12:37:29.357: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3927/pods/agnhost/proxy?method=OPTIONS
  Oct 28 12:37:29.361: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct 28 12:37:29.361: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3927/pods/agnhost/proxy?method=PATCH
  Oct 28 12:37:29.365: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct 28 12:37:29.366: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3927/pods/agnhost/proxy?method=POST
  Oct 28 12:37:29.372: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct 28 12:37:29.372: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3927/pods/agnhost/proxy?method=PUT
  Oct 28 12:37:29.376: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct 28 12:37:29.376: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3927/services/e2e-proxy-test-service/proxy?method=DELETE
  Oct 28 12:37:29.381: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct 28 12:37:29.381: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3927/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Oct 28 12:37:29.388: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct 28 12:37:29.388: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3927/services/e2e-proxy-test-service/proxy?method=PATCH
  Oct 28 12:37:29.394: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct 28 12:37:29.394: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3927/services/e2e-proxy-test-service/proxy?method=POST
  Oct 28 12:37:29.399: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct 28 12:37:29.399: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3927/services/e2e-proxy-test-service/proxy?method=PUT
  Oct 28 12:37:29.406: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct 28 12:37:29.406: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3927/pods/agnhost/proxy?method=GET
  Oct 28 12:37:29.409: INFO: http.Client request:GET StatusCode:301
  Oct 28 12:37:29.409: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3927/services/e2e-proxy-test-service/proxy?method=GET
  Oct 28 12:37:29.414: INFO: http.Client request:GET StatusCode:301
  Oct 28 12:37:29.414: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3927/pods/agnhost/proxy?method=HEAD
  Oct 28 12:37:29.418: INFO: http.Client request:HEAD StatusCode:301
  Oct 28 12:37:29.418: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3927/services/e2e-proxy-test-service/proxy?method=HEAD
  Oct 28 12:37:29.422: INFO: http.Client request:HEAD StatusCode:301
  Oct 28 12:37:29.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3927" for this suite. @ 10/28/23 12:37:29.427
• [2.148 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 10/28/23 12:37:29.434
  Oct 28 12:37:29.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 12:37:29.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:37:29.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:37:29.456
  STEP: Creating secret with name projected-secret-test-73f64b6c-2b56-493d-990d-1046467babf6 @ 10/28/23 12:37:29.459
  STEP: Creating a pod to test consume secrets @ 10/28/23 12:37:29.464
  STEP: Saw pod success @ 10/28/23 12:37:33.487
  Oct 28 12:37:33.491: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-projected-secrets-f2d420c9-dc7a-4f3a-81c8-4354ddaeef20 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 12:37:33.499
  Oct 28 12:37:33.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-568" for this suite. @ 10/28/23 12:37:33.518
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 10/28/23 12:37:33.527
  Oct 28 12:37:33.527: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/28/23 12:37:33.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:37:33.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:37:33.546
  Oct 28 12:37:33.550: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/28/23 12:37:34.901
  Oct 28 12:37:34.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-5133 --namespace=crd-publish-openapi-5133 create -f -'
  Oct 28 12:37:35.356: INFO: stderr: ""
  Oct 28 12:37:35.356: INFO: stdout: "e2e-test-crd-publish-openapi-9632-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Oct 28 12:37:35.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-5133 --namespace=crd-publish-openapi-5133 delete e2e-test-crd-publish-openapi-9632-crds test-cr'
  Oct 28 12:37:35.423: INFO: stderr: ""
  Oct 28 12:37:35.423: INFO: stdout: "e2e-test-crd-publish-openapi-9632-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Oct 28 12:37:35.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-5133 --namespace=crd-publish-openapi-5133 apply -f -'
  Oct 28 12:37:35.588: INFO: stderr: ""
  Oct 28 12:37:35.588: INFO: stdout: "e2e-test-crd-publish-openapi-9632-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Oct 28 12:37:35.588: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-5133 --namespace=crd-publish-openapi-5133 delete e2e-test-crd-publish-openapi-9632-crds test-cr'
  Oct 28 12:37:35.656: INFO: stderr: ""
  Oct 28 12:37:35.656: INFO: stdout: "e2e-test-crd-publish-openapi-9632-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/28/23 12:37:35.656
  Oct 28 12:37:35.656: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-5133 explain e2e-test-crd-publish-openapi-9632-crds'
  Oct 28 12:37:35.792: INFO: stderr: ""
  Oct 28 12:37:35.792: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9632-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Oct 28 12:37:37.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5133" for this suite. @ 10/28/23 12:37:37.116
• [3.596 seconds]
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 10/28/23 12:37:37.123
  Oct 28 12:37:37.123: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename certificates @ 10/28/23 12:37:37.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:37:37.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:37:37.147
  STEP: getting /apis @ 10/28/23 12:37:37.865
  STEP: getting /apis/certificates.k8s.io @ 10/28/23 12:37:37.87
  STEP: getting /apis/certificates.k8s.io/v1 @ 10/28/23 12:37:37.871
  STEP: creating @ 10/28/23 12:37:37.872
  STEP: getting @ 10/28/23 12:37:37.891
  STEP: listing @ 10/28/23 12:37:37.893
  STEP: watching @ 10/28/23 12:37:37.896
  Oct 28 12:37:37.896: INFO: starting watch
  STEP: patching @ 10/28/23 12:37:37.898
  STEP: updating @ 10/28/23 12:37:37.903
  Oct 28 12:37:37.909: INFO: waiting for watch events with expected annotations
  Oct 28 12:37:37.909: INFO: saw patched and updated annotations
  STEP: getting /approval @ 10/28/23 12:37:37.909
  STEP: patching /approval @ 10/28/23 12:37:37.912
  STEP: updating /approval @ 10/28/23 12:37:37.918
  STEP: getting /status @ 10/28/23 12:37:37.925
  STEP: patching /status @ 10/28/23 12:37:37.928
  STEP: updating /status @ 10/28/23 12:37:37.936
  STEP: deleting @ 10/28/23 12:37:37.942
  STEP: deleting a collection @ 10/28/23 12:37:37.955
  Oct 28 12:37:37.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5712" for this suite. @ 10/28/23 12:37:37.977
• [0.861 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 10/28/23 12:37:37.984
  Oct 28 12:37:37.984: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename resourcequota @ 10/28/23 12:37:37.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:37:38.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:37:38.004
  STEP: Counting existing ResourceQuota @ 10/28/23 12:37:38.007
  STEP: Creating a ResourceQuota @ 10/28/23 12:37:43.012
  STEP: Ensuring resource quota status is calculated @ 10/28/23 12:37:43.017
  STEP: Creating a Service @ 10/28/23 12:37:45.022
  STEP: Creating a NodePort Service @ 10/28/23 12:37:45.046
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 10/28/23 12:37:45.067
  STEP: Ensuring resource quota status captures service creation @ 10/28/23 12:37:45.087
  STEP: Deleting Services @ 10/28/23 12:37:47.093
  STEP: Ensuring resource quota status released usage @ 10/28/23 12:37:47.126
  Oct 28 12:37:49.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5870" for this suite. @ 10/28/23 12:37:49.136
• [11.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 10/28/23 12:37:49.15
  Oct 28 12:37:49.151: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename proxy @ 10/28/23 12:37:49.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:37:49.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:37:49.175
  Oct 28 12:37:49.177: INFO: Creating pod...
  Oct 28 12:37:51.192: INFO: Creating service...
  Oct 28 12:37:51.204: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2568/pods/agnhost/proxy/some/path/with/DELETE
  Oct 28 12:37:51.210: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct 28 12:37:51.210: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2568/pods/agnhost/proxy/some/path/with/GET
  Oct 28 12:37:51.216: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Oct 28 12:37:51.216: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2568/pods/agnhost/proxy/some/path/with/HEAD
  Oct 28 12:37:51.220: INFO: http.Client request:HEAD | StatusCode:200
  Oct 28 12:37:51.220: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2568/pods/agnhost/proxy/some/path/with/OPTIONS
  Oct 28 12:37:51.224: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct 28 12:37:51.224: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2568/pods/agnhost/proxy/some/path/with/PATCH
  Oct 28 12:37:51.228: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct 28 12:37:51.228: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2568/pods/agnhost/proxy/some/path/with/POST
  Oct 28 12:37:51.233: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct 28 12:37:51.233: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2568/pods/agnhost/proxy/some/path/with/PUT
  Oct 28 12:37:51.237: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct 28 12:37:51.237: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2568/services/test-service/proxy/some/path/with/DELETE
  Oct 28 12:37:51.242: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Oct 28 12:37:51.242: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2568/services/test-service/proxy/some/path/with/GET
  Oct 28 12:37:51.248: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Oct 28 12:37:51.248: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2568/services/test-service/proxy/some/path/with/HEAD
  Oct 28 12:37:51.254: INFO: http.Client request:HEAD | StatusCode:200
  Oct 28 12:37:51.255: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2568/services/test-service/proxy/some/path/with/OPTIONS
  Oct 28 12:37:51.260: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Oct 28 12:37:51.260: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2568/services/test-service/proxy/some/path/with/PATCH
  Oct 28 12:37:51.266: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Oct 28 12:37:51.266: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2568/services/test-service/proxy/some/path/with/POST
  Oct 28 12:37:51.272: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Oct 28 12:37:51.272: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2568/services/test-service/proxy/some/path/with/PUT
  Oct 28 12:37:51.277: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Oct 28 12:37:51.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2568" for this suite. @ 10/28/23 12:37:51.282
• [2.139 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 10/28/23 12:37:51.29
  Oct 28 12:37:51.290: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pod-network-test @ 10/28/23 12:37:51.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:37:51.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:37:51.312
  STEP: Performing setup for networking test in namespace pod-network-test-3409 @ 10/28/23 12:37:51.315
  STEP: creating a selector @ 10/28/23 12:37:51.315
  STEP: Creating the service pods in kubernetes @ 10/28/23 12:37:51.315
  Oct 28 12:37:51.315: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/28/23 12:38:13.419
  Oct 28 12:38:15.452: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct 28 12:38:15.452: INFO: Going to poll 192.168.191.213 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Oct 28 12:38:15.454: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.191.213 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3409 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:38:15.454: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:38:15.455: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:38:15.455: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3409/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.191.213+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 28 12:38:16.540: INFO: Found all 1 expected endpoints: [netserver-0]
  Oct 28 12:38:16.540: INFO: Going to poll 192.168.136.254 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Oct 28 12:38:16.544: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.136.254 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3409 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:38:16.544: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:38:16.545: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:38:16.545: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3409/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.136.254+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 28 12:38:17.626: INFO: Found all 1 expected endpoints: [netserver-1]
  Oct 28 12:38:17.626: INFO: Going to poll 192.168.15.144 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Oct 28 12:38:17.630: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.15.144 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3409 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:38:17.630: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:38:17.631: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:38:17.631: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3409/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.15.144+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 28 12:38:18.710: INFO: Found all 1 expected endpoints: [netserver-2]
  Oct 28 12:38:18.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3409" for this suite. @ 10/28/23 12:38:18.715
• [27.435 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 10/28/23 12:38:18.725
  Oct 28 12:38:18.725: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename replication-controller @ 10/28/23 12:38:18.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:38:18.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:38:18.747
  STEP: Given a ReplicationController is created @ 10/28/23 12:38:18.75
  STEP: When the matched label of one of its pods change @ 10/28/23 12:38:18.755
  Oct 28 12:38:18.758: INFO: Pod name pod-release: Found 0 pods out of 1
  Oct 28 12:38:23.765: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/28/23 12:38:23.776
  Oct 28 12:38:24.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7506" for this suite. @ 10/28/23 12:38:24.79
• [6.072 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 10/28/23 12:38:24.797
  Oct 28 12:38:24.797: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename svcaccounts @ 10/28/23 12:38:24.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:38:24.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:38:24.821
  Oct 28 12:38:24.844: INFO: created pod pod-service-account-defaultsa
  Oct 28 12:38:24.844: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Oct 28 12:38:24.850: INFO: created pod pod-service-account-mountsa
  Oct 28 12:38:24.850: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Oct 28 12:38:24.856: INFO: created pod pod-service-account-nomountsa
  Oct 28 12:38:24.856: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Oct 28 12:38:24.865: INFO: created pod pod-service-account-defaultsa-mountspec
  Oct 28 12:38:24.865: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Oct 28 12:38:24.874: INFO: created pod pod-service-account-mountsa-mountspec
  Oct 28 12:38:24.874: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Oct 28 12:38:24.887: INFO: created pod pod-service-account-nomountsa-mountspec
  Oct 28 12:38:24.887: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Oct 28 12:38:24.895: INFO: created pod pod-service-account-defaultsa-nomountspec
  Oct 28 12:38:24.895: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Oct 28 12:38:24.900: INFO: created pod pod-service-account-mountsa-nomountspec
  Oct 28 12:38:24.900: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Oct 28 12:38:24.909: INFO: created pod pod-service-account-nomountsa-nomountspec
  Oct 28 12:38:24.910: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Oct 28 12:38:24.910: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5108" for this suite. @ 10/28/23 12:38:24.914
• [0.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 10/28/23 12:38:24.927
  Oct 28 12:38:24.927: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename podtemplate @ 10/28/23 12:38:24.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:38:24.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:38:24.953
  Oct 28 12:38:24.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5491" for this suite. @ 10/28/23 12:38:24.994
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 10/28/23 12:38:25.004
  Oct 28 12:38:25.004: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename disruption @ 10/28/23 12:38:25.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:38:25.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:38:25.029
  STEP: creating the pdb @ 10/28/23 12:38:25.032
  STEP: Waiting for the pdb to be processed @ 10/28/23 12:38:25.038
  STEP: updating the pdb @ 10/28/23 12:38:27.048
  STEP: Waiting for the pdb to be processed @ 10/28/23 12:38:27.059
  STEP: patching the pdb @ 10/28/23 12:38:27.065
  STEP: Waiting for the pdb to be processed @ 10/28/23 12:38:27.074
  STEP: Waiting for the pdb to be deleted @ 10/28/23 12:38:29.092
  Oct 28 12:38:29.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7522" for this suite. @ 10/28/23 12:38:29.099
• [4.102 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 10/28/23 12:38:29.106
  Oct 28 12:38:29.106: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 12:38:29.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:38:29.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:38:29.131
  STEP: Creating configMap with name configmap-test-upd-bb6878ed-9e2b-45bf-b3a9-05223cfdb3a4 @ 10/28/23 12:38:29.142
  STEP: Creating the pod @ 10/28/23 12:38:29.149
  STEP: Waiting for pod with text data @ 10/28/23 12:38:31.175
  STEP: Waiting for pod with binary data @ 10/28/23 12:38:31.189
  Oct 28 12:38:31.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4938" for this suite. @ 10/28/23 12:38:31.198
• [2.099 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 10/28/23 12:38:31.206
  Oct 28 12:38:31.206: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 12:38:31.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:38:31.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:38:31.228
  STEP: Setting up server cert @ 10/28/23 12:38:31.254
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 12:38:31.668
  STEP: Deploying the webhook pod @ 10/28/23 12:38:31.676
  STEP: Wait for the deployment to be ready @ 10/28/23 12:38:31.689
  Oct 28 12:38:31.696: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 12:38:33.709
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 12:38:33.719
  Oct 28 12:38:34.719: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 10/28/23 12:38:34.727
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/28/23 12:38:34.727
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 10/28/23 12:38:34.743
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 10/28/23 12:38:35.755
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/28/23 12:38:35.755
  STEP: Having no error when timeout is longer than webhook latency @ 10/28/23 12:38:36.786
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/28/23 12:38:36.786
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 10/28/23 12:38:41.82
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/28/23 12:38:41.82
  Oct 28 12:38:46.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6150" for this suite. @ 10/28/23 12:38:46.9
  STEP: Destroying namespace "webhook-markers-70" for this suite. @ 10/28/23 12:38:46.91
• [15.711 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 10/28/23 12:38:46.918
  Oct 28 12:38:46.918: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename dns @ 10/28/23 12:38:46.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:38:46.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:38:46.946
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 10/28/23 12:38:46.949
  Oct 28 12:38:46.960: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2687  1bf04b0e-e8bc-44ae-9032-ec9bdf4122fd 8970 0 2023-10-28 12:38:46 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-10-28 12:38:46 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pwcpd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pwcpd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 10/28/23 12:38:48.968
  Oct 28 12:38:48.968: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2687 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:38:48.968: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:38:48.968: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:38:48.968: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2687/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 10/28/23 12:38:49.066
  Oct 28 12:38:49.066: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2687 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:38:49.066: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:38:49.067: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:38:49.067: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2687/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 28 12:38:49.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 28 12:38:49.171: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-2687" for this suite. @ 10/28/23 12:38:49.185
• [2.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 10/28/23 12:38:49.193
  Oct 28 12:38:49.193: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 12:38:49.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:38:49.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:38:49.217
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/28/23 12:38:49.22
  STEP: Saw pod success @ 10/28/23 12:38:53.242
  Oct 28 12:38:53.245: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-13249eac-71af-41df-b2e4-bbaceababda7 container test-container: <nil>
  STEP: delete the pod @ 10/28/23 12:38:53.26
  Oct 28 12:38:53.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1176" for this suite. @ 10/28/23 12:38:53.282
• [4.095 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 10/28/23 12:38:53.289
  Oct 28 12:38:53.289: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 12:38:53.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:38:53.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:38:53.316
  STEP: Creating configMap with name configmap-projected-all-test-volume-f8037d21-1bc9-41bd-bac6-34edd60c91dc @ 10/28/23 12:38:53.318
  STEP: Creating secret with name secret-projected-all-test-volume-5866bd9e-8c22-4ca7-ab31-6471f1fdb70d @ 10/28/23 12:38:53.323
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 10/28/23 12:38:53.327
  STEP: Saw pod success @ 10/28/23 12:38:57.348
  Oct 28 12:38:57.352: INFO: Trying to get logs from node ip-172-31-37-29 pod projected-volume-f9eb6e45-104b-4b2a-815b-99773f2f0daa container projected-all-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 12:38:57.359
  Oct 28 12:38:57.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9282" for this suite. @ 10/28/23 12:38:57.378
• [4.095 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 10/28/23 12:38:57.386
  Oct 28 12:38:57.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename statefulset @ 10/28/23 12:38:57.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:38:57.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:38:57.408
  STEP: Creating service test in namespace statefulset-8456 @ 10/28/23 12:38:57.411
  STEP: Creating statefulset ss in namespace statefulset-8456 @ 10/28/23 12:38:57.418
  Oct 28 12:38:57.429: INFO: Found 0 stateful pods, waiting for 1
  Oct 28 12:39:07.434: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 10/28/23 12:39:07.44
  STEP: Getting /status @ 10/28/23 12:39:07.448
  Oct 28 12:39:07.453: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 10/28/23 12:39:07.453
  Oct 28 12:39:07.462: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 10/28/23 12:39:07.462
  Oct 28 12:39:07.463: INFO: Observed &StatefulSet event: ADDED
  Oct 28 12:39:07.463: INFO: Found Statefulset ss in namespace statefulset-8456 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 28 12:39:07.463: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 10/28/23 12:39:07.464
  Oct 28 12:39:07.464: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Oct 28 12:39:07.470: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 10/28/23 12:39:07.47
  Oct 28 12:39:07.472: INFO: Observed &StatefulSet event: ADDED
  Oct 28 12:39:07.472: INFO: Observed Statefulset ss in namespace statefulset-8456 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 28 12:39:07.472: INFO: Observed &StatefulSet event: MODIFIED
  Oct 28 12:39:07.472: INFO: Found Statefulset ss in namespace statefulset-8456 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Oct 28 12:39:07.472: INFO: Deleting all statefulset in ns statefulset-8456
  Oct 28 12:39:07.475: INFO: Scaling statefulset ss to 0
  Oct 28 12:39:17.494: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 28 12:39:17.497: INFO: Deleting statefulset ss
  Oct 28 12:39:17.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8456" for this suite. @ 10/28/23 12:39:17.515
• [20.139 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 10/28/23 12:39:17.525
  Oct 28 12:39:17.525: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 12:39:17.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:39:17.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:39:17.546
  STEP: creating a replication controller @ 10/28/23 12:39:17.55
  Oct 28 12:39:17.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 create -f -'
  Oct 28 12:39:18.174: INFO: stderr: ""
  Oct 28 12:39:18.174: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/28/23 12:39:18.174
  Oct 28 12:39:18.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 28 12:39:18.280: INFO: stderr: ""
  Oct 28 12:39:18.280: INFO: stdout: "update-demo-nautilus-s77q8 update-demo-nautilus-v4bkf "
  Oct 28 12:39:18.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods update-demo-nautilus-s77q8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 28 12:39:18.407: INFO: stderr: ""
  Oct 28 12:39:18.407: INFO: stdout: ""
  Oct 28 12:39:18.407: INFO: update-demo-nautilus-s77q8 is created but not running
  Oct 28 12:39:23.409: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 28 12:39:23.474: INFO: stderr: ""
  Oct 28 12:39:23.474: INFO: stdout: "update-demo-nautilus-s77q8 update-demo-nautilus-v4bkf "
  Oct 28 12:39:23.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods update-demo-nautilus-s77q8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 28 12:39:23.537: INFO: stderr: ""
  Oct 28 12:39:23.537: INFO: stdout: "true"
  Oct 28 12:39:23.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods update-demo-nautilus-s77q8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 28 12:39:23.599: INFO: stderr: ""
  Oct 28 12:39:23.599: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 28 12:39:23.599: INFO: validating pod update-demo-nautilus-s77q8
  Oct 28 12:39:23.605: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 28 12:39:23.605: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 28 12:39:23.605: INFO: update-demo-nautilus-s77q8 is verified up and running
  Oct 28 12:39:23.605: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods update-demo-nautilus-v4bkf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 28 12:39:23.667: INFO: stderr: ""
  Oct 28 12:39:23.667: INFO: stdout: "true"
  Oct 28 12:39:23.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods update-demo-nautilus-v4bkf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 28 12:39:23.727: INFO: stderr: ""
  Oct 28 12:39:23.727: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 28 12:39:23.727: INFO: validating pod update-demo-nautilus-v4bkf
  Oct 28 12:39:23.734: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 28 12:39:23.734: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 28 12:39:23.734: INFO: update-demo-nautilus-v4bkf is verified up and running
  STEP: scaling down the replication controller @ 10/28/23 12:39:23.734
  Oct 28 12:39:23.735: INFO: scanned /root for discovery docs: <nil>
  Oct 28 12:39:23.735: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Oct 28 12:39:24.814: INFO: stderr: ""
  Oct 28 12:39:24.814: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/28/23 12:39:24.814
  Oct 28 12:39:24.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 28 12:39:24.876: INFO: stderr: ""
  Oct 28 12:39:24.877: INFO: stdout: "update-demo-nautilus-s77q8 update-demo-nautilus-v4bkf "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 10/28/23 12:39:24.877
  Oct 28 12:39:29.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 28 12:39:29.940: INFO: stderr: ""
  Oct 28 12:39:29.941: INFO: stdout: "update-demo-nautilus-s77q8 "
  Oct 28 12:39:29.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods update-demo-nautilus-s77q8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 28 12:39:30.003: INFO: stderr: ""
  Oct 28 12:39:30.003: INFO: stdout: "true"
  Oct 28 12:39:30.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods update-demo-nautilus-s77q8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 28 12:39:30.064: INFO: stderr: ""
  Oct 28 12:39:30.064: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 28 12:39:30.064: INFO: validating pod update-demo-nautilus-s77q8
  Oct 28 12:39:30.068: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 28 12:39:30.068: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 28 12:39:30.068: INFO: update-demo-nautilus-s77q8 is verified up and running
  STEP: scaling up the replication controller @ 10/28/23 12:39:30.068
  Oct 28 12:39:30.070: INFO: scanned /root for discovery docs: <nil>
  Oct 28 12:39:30.070: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Oct 28 12:39:31.155: INFO: stderr: ""
  Oct 28 12:39:31.155: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/28/23 12:39:31.155
  Oct 28 12:39:31.155: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 28 12:39:31.222: INFO: stderr: ""
  Oct 28 12:39:31.222: INFO: stdout: "update-demo-nautilus-jrbqp update-demo-nautilus-s77q8 "
  Oct 28 12:39:31.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods update-demo-nautilus-jrbqp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 28 12:39:31.282: INFO: stderr: ""
  Oct 28 12:39:31.282: INFO: stdout: ""
  Oct 28 12:39:31.282: INFO: update-demo-nautilus-jrbqp is created but not running
  Oct 28 12:39:36.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 28 12:39:36.348: INFO: stderr: ""
  Oct 28 12:39:36.348: INFO: stdout: "update-demo-nautilus-jrbqp update-demo-nautilus-s77q8 "
  Oct 28 12:39:36.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods update-demo-nautilus-jrbqp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 28 12:39:36.410: INFO: stderr: ""
  Oct 28 12:39:36.410: INFO: stdout: "true"
  Oct 28 12:39:36.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods update-demo-nautilus-jrbqp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 28 12:39:36.469: INFO: stderr: ""
  Oct 28 12:39:36.469: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 28 12:39:36.469: INFO: validating pod update-demo-nautilus-jrbqp
  Oct 28 12:39:36.475: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 28 12:39:36.475: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 28 12:39:36.475: INFO: update-demo-nautilus-jrbqp is verified up and running
  Oct 28 12:39:36.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods update-demo-nautilus-s77q8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 28 12:39:36.537: INFO: stderr: ""
  Oct 28 12:39:36.537: INFO: stdout: "true"
  Oct 28 12:39:36.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods update-demo-nautilus-s77q8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 28 12:39:36.596: INFO: stderr: ""
  Oct 28 12:39:36.596: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 28 12:39:36.596: INFO: validating pod update-demo-nautilus-s77q8
  Oct 28 12:39:36.600: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 28 12:39:36.600: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 28 12:39:36.600: INFO: update-demo-nautilus-s77q8 is verified up and running
  STEP: using delete to clean up resources @ 10/28/23 12:39:36.6
  Oct 28 12:39:36.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 delete --grace-period=0 --force -f -'
  Oct 28 12:39:36.665: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 28 12:39:36.665: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Oct 28 12:39:36.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get rc,svc -l name=update-demo --no-headers'
  Oct 28 12:39:36.759: INFO: stderr: "No resources found in kubectl-4236 namespace.\n"
  Oct 28 12:39:36.759: INFO: stdout: ""
  Oct 28 12:39:36.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4236 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Oct 28 12:39:36.828: INFO: stderr: ""
  Oct 28 12:39:36.828: INFO: stdout: ""
  Oct 28 12:39:36.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4236" for this suite. @ 10/28/23 12:39:36.834
• [19.315 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 10/28/23 12:39:36.84
  Oct 28 12:39:36.840: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-probe @ 10/28/23 12:39:36.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:39:36.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:39:36.861
  Oct 28 12:39:58.931: INFO: Container started at 2023-10-28 12:39:37 +0000 UTC, pod became ready at 2023-10-28 12:39:57 +0000 UTC
  Oct 28 12:39:58.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9388" for this suite. @ 10/28/23 12:39:58.935
• [22.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 10/28/23 12:39:58.947
  Oct 28 12:39:58.947: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-probe @ 10/28/23 12:39:58.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:39:58.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:39:58.968
  STEP: Creating pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291 @ 10/28/23 12:39:58.971
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/28/23 12:40:00.986
  Oct 28 12:40:00.989: INFO: Initial restart count of pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa is 0
  Oct 28 12:40:00.993: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:02.997: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:05.001: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:07.006: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:09.010: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:11.015: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:13.019: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:15.023: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:17.029: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:19.034: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:21.039: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:23.045: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:25.049: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:27.054: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:29.059: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:31.064: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:33.069: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:35.072: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:37.077: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:39.081: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:41.087: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:43.091: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:45.095: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:47.099: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:49.104: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:51.108: INFO: Get pod busybox-4e76adc7-e0fa-4092-8299-debf018361fa in namespace container-probe-6291
  Oct 28 12:40:51.108: INFO: Restart count of pod container-probe-6291/busybox-4e76adc7-e0fa-4092-8299-debf018361fa is now 1 (50.118947256s elapsed)
  Oct 28 12:40:51.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 12:40:51.112
  STEP: Destroying namespace "container-probe-6291" for this suite. @ 10/28/23 12:40:51.124
• [52.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 10/28/23 12:40:51.133
  Oct 28 12:40:51.133: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 12:40:51.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:40:51.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:40:51.157
  STEP: Setting up server cert @ 10/28/23 12:40:51.185
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 12:40:51.462
  STEP: Deploying the webhook pod @ 10/28/23 12:40:51.47
  STEP: Wait for the deployment to be ready @ 10/28/23 12:40:51.482
  Oct 28 12:40:51.489: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 12:40:53.5
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 12:40:53.508
  Oct 28 12:40:54.508: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 10/28/23 12:40:54.516
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 10/28/23 12:40:54.534
  STEP: Creating a configMap that should not be mutated @ 10/28/23 12:40:54.542
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 10/28/23 12:40:54.552
  STEP: Creating a configMap that should be mutated @ 10/28/23 12:40:54.559
  Oct 28 12:40:54.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8127" for this suite. @ 10/28/23 12:40:54.628
  STEP: Destroying namespace "webhook-markers-8009" for this suite. @ 10/28/23 12:40:54.643
• [3.519 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 10/28/23 12:40:54.652
  Oct 28 12:40:54.652: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename resourcequota @ 10/28/23 12:40:54.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:40:54.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:40:54.68
  STEP: Counting existing ResourceQuota @ 10/28/23 12:40:54.683
  STEP: Creating a ResourceQuota @ 10/28/23 12:40:59.688
  STEP: Ensuring resource quota status is calculated @ 10/28/23 12:40:59.695
  Oct 28 12:41:01.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4850" for this suite. @ 10/28/23 12:41:01.706
• [7.063 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 10/28/23 12:41:01.716
  Oct 28 12:41:01.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-probe @ 10/28/23 12:41:01.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:41:01.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:41:01.741
  STEP: Creating pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767 @ 10/28/23 12:41:01.746
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/28/23 12:41:03.766
  Oct 28 12:41:03.769: INFO: Initial restart count of pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 is 0
  Oct 28 12:41:03.774: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:05.777: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:07.782: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:09.786: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:11.793: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:13.797: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:15.801: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:17.806: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:19.810: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:21.815: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:23.820: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:25.824: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:27.829: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:29.833: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:31.837: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:33.842: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:35.847: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:37.852: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:39.856: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:41.861: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:43.866: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:45.870: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:47.876: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:49.881: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:51.888: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:53.894: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:55.898: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:57.902: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:41:59.907: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:01.912: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:03.916: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:05.921: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:07.924: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:09.929: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:11.934: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:13.938: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:15.942: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:17.946: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:19.951: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:21.956: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:23.960: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:25.965: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:27.970: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:29.975: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:31.979: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:33.983: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:35.988: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:37.993: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:39.999: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:42.003: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:44.008: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:46.013: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:48.018: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:50.024: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:52.029: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:54.035: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:56.039: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:42:58.043: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:00.047: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:02.051: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:04.056: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:06.061: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:08.064: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:10.069: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:12.073: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:14.078: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:16.082: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:18.088: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:20.092: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:22.097: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:24.101: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:26.105: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:28.108: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:30.113: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:32.118: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:34.122: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:36.126: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:38.132: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:40.137: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:42.142: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:44.147: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:46.151: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:48.157: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:50.160: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:52.168: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:54.173: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:56.176: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:43:58.180: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:00.186: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:02.190: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:04.195: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:06.200: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:08.204: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:10.208: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:12.213: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:14.217: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:16.225: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:18.231: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:20.235: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:22.240: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:24.245: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:26.250: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:28.254: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:30.260: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:32.265: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:34.270: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:36.275: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:38.280: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:40.285: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:42.289: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:44.293: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:46.299: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:48.303: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:50.308: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:52.314: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:54.318: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:56.322: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:44:58.327: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:45:00.332: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:45:02.337: INFO: Get pod test-grpc-0fa6c451-df8e-4575-a041-6377850c4b29 in namespace container-probe-3767
  Oct 28 12:45:04.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 12:45:04.342
  STEP: Destroying namespace "container-probe-3767" for this suite. @ 10/28/23 12:45:04.358
• [242.651 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 10/28/23 12:45:04.368
  Oct 28 12:45:04.368: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename var-expansion @ 10/28/23 12:45:04.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:45:04.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:45:04.391
  STEP: Creating a pod to test substitution in volume subpath @ 10/28/23 12:45:04.394
  STEP: Saw pod success @ 10/28/23 12:45:08.419
  Oct 28 12:45:08.422: INFO: Trying to get logs from node ip-172-31-37-29 pod var-expansion-82253a6b-2e47-4a8d-aa1d-5eb407d45823 container dapi-container: <nil>
  STEP: delete the pod @ 10/28/23 12:45:08.442
  Oct 28 12:45:08.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-845" for this suite. @ 10/28/23 12:45:08.462
• [4.101 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 10/28/23 12:45:08.469
  Oct 28 12:45:08.469: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename lease-test @ 10/28/23 12:45:08.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:45:08.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:45:08.491
  Oct 28 12:45:08.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-4673" for this suite. @ 10/28/23 12:45:08.552
• [0.089 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 10/28/23 12:45:08.559
  Oct 28 12:45:08.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 12:45:08.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:45:08.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:45:08.581
  STEP: creating a replication controller @ 10/28/23 12:45:08.584
  Oct 28 12:45:08.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-6649 create -f -'
  Oct 28 12:45:09.043: INFO: stderr: ""
  Oct 28 12:45:09.043: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/28/23 12:45:09.043
  Oct 28 12:45:09.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-6649 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 28 12:45:09.112: INFO: stderr: ""
  Oct 28 12:45:09.112: INFO: stdout: "update-demo-nautilus-dk85x update-demo-nautilus-rtsm6 "
  Oct 28 12:45:09.112: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-6649 get pods update-demo-nautilus-dk85x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 28 12:45:09.174: INFO: stderr: ""
  Oct 28 12:45:09.174: INFO: stdout: ""
  Oct 28 12:45:09.174: INFO: update-demo-nautilus-dk85x is created but not running
  Oct 28 12:45:14.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-6649 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Oct 28 12:45:14.285: INFO: stderr: ""
  Oct 28 12:45:14.285: INFO: stdout: "update-demo-nautilus-dk85x update-demo-nautilus-rtsm6 "
  Oct 28 12:45:14.285: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-6649 get pods update-demo-nautilus-dk85x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 28 12:45:14.355: INFO: stderr: ""
  Oct 28 12:45:14.355: INFO: stdout: "true"
  Oct 28 12:45:14.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-6649 get pods update-demo-nautilus-dk85x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 28 12:45:14.420: INFO: stderr: ""
  Oct 28 12:45:14.420: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 28 12:45:14.420: INFO: validating pod update-demo-nautilus-dk85x
  Oct 28 12:45:14.426: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 28 12:45:14.426: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 28 12:45:14.426: INFO: update-demo-nautilus-dk85x is verified up and running
  Oct 28 12:45:14.426: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-6649 get pods update-demo-nautilus-rtsm6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Oct 28 12:45:14.489: INFO: stderr: ""
  Oct 28 12:45:14.489: INFO: stdout: "true"
  Oct 28 12:45:14.489: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-6649 get pods update-demo-nautilus-rtsm6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Oct 28 12:45:14.554: INFO: stderr: ""
  Oct 28 12:45:14.555: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Oct 28 12:45:14.555: INFO: validating pod update-demo-nautilus-rtsm6
  Oct 28 12:45:14.560: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Oct 28 12:45:14.560: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Oct 28 12:45:14.560: INFO: update-demo-nautilus-rtsm6 is verified up and running
  STEP: using delete to clean up resources @ 10/28/23 12:45:14.56
  Oct 28 12:45:14.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-6649 delete --grace-period=0 --force -f -'
  Oct 28 12:45:14.628: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 28 12:45:14.628: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Oct 28 12:45:14.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-6649 get rc,svc -l name=update-demo --no-headers'
  Oct 28 12:45:14.716: INFO: stderr: "No resources found in kubectl-6649 namespace.\n"
  Oct 28 12:45:14.716: INFO: stdout: ""
  Oct 28 12:45:14.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-6649 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Oct 28 12:45:14.829: INFO: stderr: ""
  Oct 28 12:45:14.829: INFO: stdout: ""
  Oct 28 12:45:14.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6649" for this suite. @ 10/28/23 12:45:14.835
• [6.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 10/28/23 12:45:14.844
  Oct 28 12:45:14.844: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pods @ 10/28/23 12:45:14.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:45:14.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:45:14.876
  STEP: creating pod @ 10/28/23 12:45:14.902
  Oct 28 12:45:16.926: INFO: Pod pod-hostip-712e265e-8e76-4a0c-a427-4b33e1fb07bf has hostIP: 172.31.37.29
  Oct 28 12:45:16.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4494" for this suite. @ 10/28/23 12:45:16.93
• [2.093 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 10/28/23 12:45:16.94
  Oct 28 12:45:16.940: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename replicaset @ 10/28/23 12:45:16.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:45:16.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:45:16.96
  Oct 28 12:45:16.976: INFO: Pod name sample-pod: Found 0 pods out of 1
  Oct 28 12:45:21.980: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/28/23 12:45:21.98
  STEP: Scaling up "test-rs" replicaset  @ 10/28/23 12:45:21.98
  Oct 28 12:45:21.994: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 10/28/23 12:45:21.994
  Oct 28 12:45:22.006: INFO: observed ReplicaSet test-rs in namespace replicaset-5077 with ReadyReplicas 1, AvailableReplicas 1
  Oct 28 12:45:22.022: INFO: observed ReplicaSet test-rs in namespace replicaset-5077 with ReadyReplicas 1, AvailableReplicas 1
  Oct 28 12:45:22.047: INFO: observed ReplicaSet test-rs in namespace replicaset-5077 with ReadyReplicas 1, AvailableReplicas 1
  Oct 28 12:45:22.054: INFO: observed ReplicaSet test-rs in namespace replicaset-5077 with ReadyReplicas 1, AvailableReplicas 1
  Oct 28 12:45:23.278: INFO: observed ReplicaSet test-rs in namespace replicaset-5077 with ReadyReplicas 2, AvailableReplicas 2
  Oct 28 12:45:23.323: INFO: observed Replicaset test-rs in namespace replicaset-5077 with ReadyReplicas 3 found true
  Oct 28 12:45:23.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5077" for this suite. @ 10/28/23 12:45:23.332
• [6.399 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 10/28/23 12:45:23.341
  Oct 28 12:45:23.341: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 12:45:23.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:45:23.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:45:23.364
  STEP: Creating configMap with name cm-test-opt-del-a0af6e8b-b785-4e6a-ac46-21dbcb1b7a5c @ 10/28/23 12:45:23.377
  STEP: Creating configMap with name cm-test-opt-upd-036892e8-893d-4260-978e-5140e059bb7e @ 10/28/23 12:45:23.382
  STEP: Creating the pod @ 10/28/23 12:45:23.386
  STEP: Deleting configmap cm-test-opt-del-a0af6e8b-b785-4e6a-ac46-21dbcb1b7a5c @ 10/28/23 12:45:25.434
  STEP: Updating configmap cm-test-opt-upd-036892e8-893d-4260-978e-5140e059bb7e @ 10/28/23 12:45:25.441
  STEP: Creating configMap with name cm-test-opt-create-3dda14c1-cd48-4c6f-8807-11452fd3bbbe @ 10/28/23 12:45:25.447
  STEP: waiting to observe update in volume @ 10/28/23 12:45:25.452
  Oct 28 12:45:27.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5073" for this suite. @ 10/28/23 12:45:27.489
• [4.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 10/28/23 12:45:27.498
  Oct 28 12:45:27.498: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 12:45:27.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:45:27.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:45:27.522
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/28/23 12:45:27.526
  STEP: Saw pod success @ 10/28/23 12:45:31.55
  Oct 28 12:45:31.554: INFO: Trying to get logs from node ip-172-31-20-72 pod pod-978c034c-40d8-4d29-b72f-fd929caab565 container test-container: <nil>
  STEP: delete the pod @ 10/28/23 12:45:31.576
  Oct 28 12:45:31.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8910" for this suite. @ 10/28/23 12:45:31.594
• [4.102 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 10/28/23 12:45:31.601
  Oct 28 12:45:31.601: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 12:45:31.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:45:31.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:45:31.621
  STEP: Setting up server cert @ 10/28/23 12:45:31.65
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 12:45:32.076
  STEP: Deploying the webhook pod @ 10/28/23 12:45:32.085
  STEP: Wait for the deployment to be ready @ 10/28/23 12:45:32.097
  Oct 28 12:45:32.106: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 12:45:34.117
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 12:45:34.129
  Oct 28 12:45:35.130: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/28/23 12:45:35.137
  STEP: create a pod that should be denied by the webhook @ 10/28/23 12:45:35.152
  STEP: create a pod that causes the webhook to hang @ 10/28/23 12:45:35.164
  STEP: create a configmap that should be denied by the webhook @ 10/28/23 12:45:45.171
  STEP: create a configmap that should be admitted by the webhook @ 10/28/23 12:45:45.219
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/28/23 12:45:45.231
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/28/23 12:45:45.24
  STEP: create a namespace that bypass the webhook @ 10/28/23 12:45:45.246
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 10/28/23 12:45:45.28
  Oct 28 12:45:45.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7691" for this suite. @ 10/28/23 12:45:45.339
  STEP: Destroying namespace "webhook-markers-9945" for this suite. @ 10/28/23 12:45:45.345
  STEP: Destroying namespace "exempted-namespace-2923" for this suite. @ 10/28/23 12:45:45.352
• [13.757 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 10/28/23 12:45:45.359
  Oct 28 12:45:45.359: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 12:45:45.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:45:45.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:45:45.406
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/28/23 12:45:45.409
  Oct 28 12:45:45.409: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4518 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Oct 28 12:45:45.498: INFO: stderr: ""
  Oct 28 12:45:45.499: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 10/28/23 12:45:45.499
  Oct 28 12:45:45.499: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4518 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Oct 28 12:45:45.609: INFO: stderr: ""
  Oct 28 12:45:45.609: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/28/23 12:45:45.609
  Oct 28 12:45:45.612: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-4518 delete pods e2e-test-httpd-pod'
  Oct 28 12:45:47.392: INFO: stderr: ""
  Oct 28 12:45:47.392: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Oct 28 12:45:47.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4518" for this suite. @ 10/28/23 12:45:47.396
• [2.045 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 10/28/23 12:45:47.404
  Oct 28 12:45:47.404: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename server-version @ 10/28/23 12:45:47.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:45:47.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:45:47.425
  STEP: Request ServerVersion @ 10/28/23 12:45:47.428
  STEP: Confirm major version @ 10/28/23 12:45:47.429
  Oct 28 12:45:47.429: INFO: Major version: 1
  STEP: Confirm minor version @ 10/28/23 12:45:47.43
  Oct 28 12:45:47.430: INFO: cleanMinorVersion: 28
  Oct 28 12:45:47.430: INFO: Minor version: 28
  Oct 28 12:45:47.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-36" for this suite. @ 10/28/23 12:45:47.434
• [0.036 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 10/28/23 12:45:47.441
  Oct 28 12:45:47.441: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename svcaccounts @ 10/28/23 12:45:47.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:45:47.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:45:47.464
  Oct 28 12:45:47.472: INFO: Got root ca configmap in namespace "svcaccounts-7610"
  Oct 28 12:45:47.478: INFO: Deleted root ca configmap in namespace "svcaccounts-7610"
  STEP: waiting for a new root ca configmap created @ 10/28/23 12:45:47.978
  Oct 28 12:45:47.982: INFO: Recreated root ca configmap in namespace "svcaccounts-7610"
  Oct 28 12:45:47.986: INFO: Updated root ca configmap in namespace "svcaccounts-7610"
  STEP: waiting for the root ca configmap reconciled @ 10/28/23 12:45:48.487
  Oct 28 12:45:48.491: INFO: Reconciled root ca configmap in namespace "svcaccounts-7610"
  Oct 28 12:45:48.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7610" for this suite. @ 10/28/23 12:45:48.496
• [1.063 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 10/28/23 12:45:48.506
  Oct 28 12:45:48.506: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-probe @ 10/28/23 12:45:48.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:45:48.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:45:48.527
  STEP: Creating pod liveness-437a4b22-7306-4aa6-a516-5ca306833564 in namespace container-probe-8427 @ 10/28/23 12:45:48.53
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/28/23 12:45:50.55
  Oct 28 12:45:50.553: INFO: Initial restart count of pod liveness-437a4b22-7306-4aa6-a516-5ca306833564 is 0
  Oct 28 12:45:50.557: INFO: Get pod liveness-437a4b22-7306-4aa6-a516-5ca306833564 in namespace container-probe-8427
  Oct 28 12:45:52.562: INFO: Get pod liveness-437a4b22-7306-4aa6-a516-5ca306833564 in namespace container-probe-8427
  Oct 28 12:45:54.567: INFO: Get pod liveness-437a4b22-7306-4aa6-a516-5ca306833564 in namespace container-probe-8427
  Oct 28 12:45:56.572: INFO: Get pod liveness-437a4b22-7306-4aa6-a516-5ca306833564 in namespace container-probe-8427
  Oct 28 12:45:58.576: INFO: Get pod liveness-437a4b22-7306-4aa6-a516-5ca306833564 in namespace container-probe-8427
  Oct 28 12:46:00.580: INFO: Get pod liveness-437a4b22-7306-4aa6-a516-5ca306833564 in namespace container-probe-8427
  Oct 28 12:46:02.585: INFO: Get pod liveness-437a4b22-7306-4aa6-a516-5ca306833564 in namespace container-probe-8427
  Oct 28 12:46:04.589: INFO: Get pod liveness-437a4b22-7306-4aa6-a516-5ca306833564 in namespace container-probe-8427
  Oct 28 12:46:06.594: INFO: Get pod liveness-437a4b22-7306-4aa6-a516-5ca306833564 in namespace container-probe-8427
  Oct 28 12:46:08.599: INFO: Get pod liveness-437a4b22-7306-4aa6-a516-5ca306833564 in namespace container-probe-8427
  Oct 28 12:46:10.603: INFO: Get pod liveness-437a4b22-7306-4aa6-a516-5ca306833564 in namespace container-probe-8427
  Oct 28 12:46:10.603: INFO: Restart count of pod container-probe-8427/liveness-437a4b22-7306-4aa6-a516-5ca306833564 is now 1 (20.04972911s elapsed)
  Oct 28 12:46:10.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 12:46:10.607
  STEP: Destroying namespace "container-probe-8427" for this suite. @ 10/28/23 12:46:10.632
• [22.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 10/28/23 12:46:10.639
  Oct 28 12:46:10.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 12:46:10.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:46:10.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:46:10.665
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/28/23 12:46:10.668
  STEP: Saw pod success @ 10/28/23 12:46:14.689
  Oct 28 12:46:14.692: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-5f305497-29c9-4bd4-8dd9-002fa5e33df4 container test-container: <nil>
  STEP: delete the pod @ 10/28/23 12:46:14.7
  Oct 28 12:46:14.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5593" for this suite. @ 10/28/23 12:46:14.718
• [4.087 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 10/28/23 12:46:14.727
  Oct 28 12:46:14.727: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubelet-test @ 10/28/23 12:46:14.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:46:14.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:46:14.747
  STEP: Waiting for pod completion @ 10/28/23 12:46:14.758
  Oct 28 12:46:18.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9057" for this suite. @ 10/28/23 12:46:18.782
• [4.063 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 10/28/23 12:46:18.793
  Oct 28 12:46:18.793: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename subjectreview @ 10/28/23 12:46:18.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:46:18.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:46:18.814
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-9440" @ 10/28/23 12:46:18.816
  Oct 28 12:46:18.821: INFO: saUsername: "system:serviceaccount:subjectreview-9440:e2e"
  Oct 28 12:46:18.821: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-9440"}
  Oct 28 12:46:18.821: INFO: saUID: "4265bf7a-d0c8-4aa1-bb9a-fcc5c1983bed"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-9440:e2e" @ 10/28/23 12:46:18.821
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-9440:e2e" @ 10/28/23 12:46:18.821
  Oct 28 12:46:18.823: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-9440:e2e" api 'list' configmaps in "subjectreview-9440" namespace @ 10/28/23 12:46:18.823
  Oct 28 12:46:18.825: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-9440:e2e" @ 10/28/23 12:46:18.825
  Oct 28 12:46:18.826: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Oct 28 12:46:18.826: INFO: LocalSubjectAccessReview has been verified
  Oct 28 12:46:18.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-9440" for this suite. @ 10/28/23 12:46:18.831
• [0.045 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 10/28/23 12:46:18.839
  Oct 28 12:46:18.839: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename gc @ 10/28/23 12:46:18.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:46:18.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:46:18.862
  Oct 28 12:46:18.894: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"8f6d6121-17bb-4941-a713-c91aabb635e7", Controller:(*bool)(0xc0037c412a), BlockOwnerDeletion:(*bool)(0xc0037c412b)}}
  Oct 28 12:46:18.899: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"e83f12b2-db32-4729-bfb2-969a1462fe14", Controller:(*bool)(0xc003db4a8e), BlockOwnerDeletion:(*bool)(0xc003db4a8f)}}
  Oct 28 12:46:18.906: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"22439325-c025-4c37-a1ab-c490d5fb3e7f", Controller:(*bool)(0xc003db4d26), BlockOwnerDeletion:(*bool)(0xc003db4d27)}}
  Oct 28 12:46:23.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4046" for this suite. @ 10/28/23 12:46:23.926
• [5.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 10/28/23 12:46:23.938
  Oct 28 12:46:23.938: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename job @ 10/28/23 12:46:23.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:46:23.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:46:23.974
  STEP: Creating a suspended job @ 10/28/23 12:46:23.987
  STEP: Patching the Job @ 10/28/23 12:46:23.994
  STEP: Watching for Job to be patched @ 10/28/23 12:46:24.027
  Oct 28 12:46:24.029: INFO: Event ADDED observed for Job e2e-g7plh in namespace job-4668 with labels: map[e2e-job-label:e2e-g7plh] and annotations: map[]
  Oct 28 12:46:24.029: INFO: Event MODIFIED observed for Job e2e-g7plh in namespace job-4668 with labels: map[e2e-job-label:e2e-g7plh] and annotations: map[]
  Oct 28 12:46:24.029: INFO: Event MODIFIED found for Job e2e-g7plh in namespace job-4668 with labels: map[e2e-g7plh:patched e2e-job-label:e2e-g7plh] and annotations: map[]
  STEP: Updating the job @ 10/28/23 12:46:24.029
  STEP: Watching for Job to be updated @ 10/28/23 12:46:24.038
  Oct 28 12:46:24.040: INFO: Event MODIFIED found for Job e2e-g7plh in namespace job-4668 with labels: map[e2e-g7plh:patched e2e-job-label:e2e-g7plh] and annotations: map[updated:true]
  Oct 28 12:46:24.040: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 10/28/23 12:46:24.04
  Oct 28 12:46:24.045: INFO: Job: e2e-g7plh as labels: map[e2e-g7plh:patched e2e-job-label:e2e-g7plh]
  STEP: Waiting for job to complete @ 10/28/23 12:46:24.045
  STEP: Delete a job collection with a labelselector @ 10/28/23 12:46:32.049
  STEP: Watching for Job to be deleted @ 10/28/23 12:46:32.058
  Oct 28 12:46:32.060: INFO: Event MODIFIED observed for Job e2e-g7plh in namespace job-4668 with labels: map[e2e-g7plh:patched e2e-job-label:e2e-g7plh] and annotations: map[updated:true]
  Oct 28 12:46:32.060: INFO: Event MODIFIED observed for Job e2e-g7plh in namespace job-4668 with labels: map[e2e-g7plh:patched e2e-job-label:e2e-g7plh] and annotations: map[updated:true]
  Oct 28 12:46:32.060: INFO: Event MODIFIED observed for Job e2e-g7plh in namespace job-4668 with labels: map[e2e-g7plh:patched e2e-job-label:e2e-g7plh] and annotations: map[updated:true]
  Oct 28 12:46:32.060: INFO: Event MODIFIED observed for Job e2e-g7plh in namespace job-4668 with labels: map[e2e-g7plh:patched e2e-job-label:e2e-g7plh] and annotations: map[updated:true]
  Oct 28 12:46:32.060: INFO: Event MODIFIED observed for Job e2e-g7plh in namespace job-4668 with labels: map[e2e-g7plh:patched e2e-job-label:e2e-g7plh] and annotations: map[updated:true]
  Oct 28 12:46:32.060: INFO: Event DELETED found for Job e2e-g7plh in namespace job-4668 with labels: map[e2e-g7plh:patched e2e-job-label:e2e-g7plh] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 10/28/23 12:46:32.06
  Oct 28 12:46:32.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4668" for this suite. @ 10/28/23 12:46:32.068
• [8.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 10/28/23 12:46:32.083
  Oct 28 12:46:32.083: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename statefulset @ 10/28/23 12:46:32.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:46:32.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:46:32.106
  STEP: Creating service test in namespace statefulset-619 @ 10/28/23 12:46:32.109
  Oct 28 12:46:32.126: INFO: Found 0 stateful pods, waiting for 1
  Oct 28 12:46:42.133: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 10/28/23 12:46:42.14
  W1028 12:46:42.147022      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Oct 28 12:46:42.154: INFO: Found 1 stateful pods, waiting for 2
  Oct 28 12:46:52.159: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 28 12:46:52.159: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 10/28/23 12:46:52.166
  STEP: Delete all of the StatefulSets @ 10/28/23 12:46:52.169
  STEP: Verify that StatefulSets have been deleted @ 10/28/23 12:46:52.177
  Oct 28 12:46:52.180: INFO: Deleting all statefulset in ns statefulset-619
  Oct 28 12:46:52.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-619" for this suite. @ 10/28/23 12:46:52.204
• [20.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 10/28/23 12:46:52.222
  Oct 28 12:46:52.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 12:46:52.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:46:52.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:46:52.243
  STEP: creating Agnhost RC @ 10/28/23 12:46:52.248
  Oct 28 12:46:52.248: INFO: namespace kubectl-3371
  Oct 28 12:46:52.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3371 create -f -'
  Oct 28 12:46:52.624: INFO: stderr: ""
  Oct 28 12:46:52.624: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/28/23 12:46:52.624
  Oct 28 12:46:53.629: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 28 12:46:53.629: INFO: Found 1 / 1
  Oct 28 12:46:53.629: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Oct 28 12:46:53.633: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 28 12:46:53.633: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct 28 12:46:53.633: INFO: wait on agnhost-primary startup in kubectl-3371 
  Oct 28 12:46:53.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3371 logs agnhost-primary-xrr6j agnhost-primary'
  Oct 28 12:46:53.711: INFO: stderr: ""
  Oct 28 12:46:53.711: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 10/28/23 12:46:53.711
  Oct 28 12:46:53.712: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3371 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Oct 28 12:46:53.811: INFO: stderr: ""
  Oct 28 12:46:53.811: INFO: stdout: "service/rm2 exposed\n"
  Oct 28 12:46:53.816: INFO: Service rm2 in namespace kubectl-3371 found.
  STEP: exposing service @ 10/28/23 12:46:55.826
  Oct 28 12:46:55.826: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3371 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Oct 28 12:46:55.906: INFO: stderr: ""
  Oct 28 12:46:55.906: INFO: stdout: "service/rm3 exposed\n"
  Oct 28 12:46:55.910: INFO: Service rm3 in namespace kubectl-3371 found.
  Oct 28 12:46:57.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3371" for this suite. @ 10/28/23 12:46:57.921
• [5.706 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 10/28/23 12:46:57.929
  Oct 28 12:46:57.929: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 12:46:57.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:46:57.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:46:57.956
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 12:46:57.959
  STEP: Saw pod success @ 10/28/23 12:47:01.982
  Oct 28 12:47:01.985: INFO: Trying to get logs from node ip-172-31-37-29 pod downwardapi-volume-3fa72a4d-01fb-4d51-af54-528ad87d0510 container client-container: <nil>
  STEP: delete the pod @ 10/28/23 12:47:01.993
  Oct 28 12:47:02.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7554" for this suite. @ 10/28/23 12:47:02.013
• [4.092 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 10/28/23 12:47:02.021
  Oct 28 12:47:02.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/28/23 12:47:02.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:47:02.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:47:02.041
  Oct 28 12:47:02.045: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:47:03.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-833" for this suite. @ 10/28/23 12:47:03.077
• [1.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 10/28/23 12:47:03.088
  Oct 28 12:47:03.088: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename job @ 10/28/23 12:47:03.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:47:03.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:47:03.11
  STEP: Creating a job @ 10/28/23 12:47:03.113
  STEP: Ensure pods equal to parallelism count is attached to the job @ 10/28/23 12:47:03.12
  STEP: patching /status @ 10/28/23 12:47:05.125
  STEP: updating /status @ 10/28/23 12:47:05.132
  STEP: get /status @ 10/28/23 12:47:05.141
  Oct 28 12:47:05.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4347" for this suite. @ 10/28/23 12:47:05.149
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 10/28/23 12:47:05.157
  Oct 28 12:47:05.157: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename namespaces @ 10/28/23 12:47:05.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:47:05.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:47:05.181
  STEP: creating a Namespace @ 10/28/23 12:47:05.184
  STEP: patching the Namespace @ 10/28/23 12:47:05.202
  STEP: get the Namespace and ensuring it has the label @ 10/28/23 12:47:05.208
  Oct 28 12:47:05.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6954" for this suite. @ 10/28/23 12:47:05.216
  STEP: Destroying namespace "nspatchtest-c42481ff-325f-4096-9d3a-395e0ea38537-9399" for this suite. @ 10/28/23 12:47:05.225
• [0.076 seconds]
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 10/28/23 12:47:05.233
  Oct 28 12:47:05.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename replicaset @ 10/28/23 12:47:05.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:47:05.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:47:05.254
  STEP: Create a Replicaset @ 10/28/23 12:47:05.261
  STEP: Verify that the required pods have come up. @ 10/28/23 12:47:05.265
  Oct 28 12:47:05.269: INFO: Pod name sample-pod: Found 0 pods out of 1
  Oct 28 12:47:10.273: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/28/23 12:47:10.273
  STEP: Getting /status @ 10/28/23 12:47:10.273
  Oct 28 12:47:10.277: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 10/28/23 12:47:10.277
  Oct 28 12:47:10.288: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 10/28/23 12:47:10.288
  Oct 28 12:47:10.290: INFO: Observed &ReplicaSet event: ADDED
  Oct 28 12:47:10.290: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 28 12:47:10.290: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 28 12:47:10.290: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 28 12:47:10.290: INFO: Found replicaset test-rs in namespace replicaset-2311 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct 28 12:47:10.290: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 10/28/23 12:47:10.29
  Oct 28 12:47:10.291: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Oct 28 12:47:10.301: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 10/28/23 12:47:10.301
  Oct 28 12:47:10.303: INFO: Observed &ReplicaSet event: ADDED
  Oct 28 12:47:10.303: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 28 12:47:10.303: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 28 12:47:10.304: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 28 12:47:10.304: INFO: Observed replicaset test-rs in namespace replicaset-2311 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 28 12:47:10.304: INFO: Observed &ReplicaSet event: MODIFIED
  Oct 28 12:47:10.304: INFO: Found replicaset test-rs in namespace replicaset-2311 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Oct 28 12:47:10.304: INFO: Replicaset test-rs has a patched status
  Oct 28 12:47:10.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2311" for this suite. @ 10/28/23 12:47:10.318
• [5.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 10/28/23 12:47:10.33
  Oct 28 12:47:10.330: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 12:47:10.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:47:10.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:47:10.359
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 12:47:10.362
  STEP: Saw pod success @ 10/28/23 12:47:14.387
  Oct 28 12:47:14.390: INFO: Trying to get logs from node ip-172-31-37-29 pod downwardapi-volume-abd4234f-cd4a-4b96-9a5b-a32b5420df04 container client-container: <nil>
  STEP: delete the pod @ 10/28/23 12:47:14.399
  Oct 28 12:47:14.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6131" for this suite. @ 10/28/23 12:47:14.416
• [4.093 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 10/28/23 12:47:14.423
  Oct 28 12:47:14.423: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename sched-pred @ 10/28/23 12:47:14.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:47:14.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:47:14.447
  Oct 28 12:47:14.452: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct 28 12:47:14.464: INFO: Waiting for terminating namespaces to be deleted...
  Oct 28 12:47:14.468: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-20-72 before test
  Oct 28 12:47:14.474: INFO: nginx-ingress-controller-kubernetes-worker-8swbr from ingress-nginx-kubernetes-worker started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.474: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 28 12:47:14.474: INFO: suspend-false-to-true-xr2cq from job-4347 started at 2023-10-28 12:47:03 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.474: INFO: 	Container c ready: true, restart count 0
  Oct 28 12:47:14.474: INFO: calico-node-cpcds from kube-system started at 2023-10-28 12:12:02 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.474: INFO: 	Container calico-node ready: true, restart count 0
  Oct 28 12:47:14.474: INFO: sonobuoy-e2e-job-5367ddbce4cd4be7 from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 12:47:14.474: INFO: 	Container e2e ready: true, restart count 0
  Oct 28 12:47:14.474: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 12:47:14.474: INFO: sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-ndkvj from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 12:47:14.474: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 12:47:14.474: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 28 12:47:14.474: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-37-29 before test
  Oct 28 12:47:14.480: INFO: nginx-ingress-controller-kubernetes-worker-kx2mn from ingress-nginx-kubernetes-worker started at 2023-10-28 12:35:28 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.481: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 28 12:47:14.481: INFO: suspend-false-to-true-j5mqc from job-4347 started at 2023-10-28 12:47:03 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.481: INFO: 	Container c ready: true, restart count 0
  Oct 28 12:47:14.481: INFO: calico-node-l75l8 from kube-system started at 2023-10-28 12:16:40 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.481: INFO: 	Container calico-node ready: true, restart count 0
  Oct 28 12:47:14.481: INFO: test-rs-9m8vn from replicaset-2311 started at 2023-10-28 12:47:05 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.481: INFO: 	Container httpd ready: true, restart count 0
  Oct 28 12:47:14.481: INFO: sonobuoy from sonobuoy started at 2023-10-28 12:22:27 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.481: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct 28 12:47:14.481: INFO: sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-tb6hv from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 12:47:14.481: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 12:47:14.481: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 28 12:47:14.481: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-5-226 before test
  Oct 28 12:47:14.488: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-5jq2w from ingress-nginx-kubernetes-worker started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.488: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct 28 12:47:14.488: INFO: nginx-ingress-controller-kubernetes-worker-9fc74 from ingress-nginx-kubernetes-worker started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.488: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 28 12:47:14.488: INFO: calico-kube-controllers-59c77d8d6f-hvzwx from kube-system started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.488: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Oct 28 12:47:14.488: INFO: calico-node-j2png from kube-system started at 2023-10-28 12:12:02 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.488: INFO: 	Container calico-node ready: true, restart count 0
  Oct 28 12:47:14.488: INFO: coredns-59cfb5bf46-vr6sn from kube-system started at 2023-10-28 12:12:17 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.488: INFO: 	Container coredns ready: true, restart count 0
  Oct 28 12:47:14.488: INFO: kube-state-metrics-775d9f4f79-htlwx from kube-system started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.488: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct 28 12:47:14.488: INFO: metrics-server-v0.6.3-69d7fbfdf8-ws5cj from kube-system started at 2023-10-28 12:12:17 +0000 UTC (2 container statuses recorded)
  Oct 28 12:47:14.488: INFO: 	Container metrics-server ready: true, restart count 0
  Oct 28 12:47:14.488: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct 28 12:47:14.488: INFO: dashboard-metrics-scraper-5dd7cb5fc-97qlp from kubernetes-dashboard started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.488: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct 28 12:47:14.488: INFO: kubernetes-dashboard-7b899cb9d9-zdnvw from kubernetes-dashboard started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:47:14.488: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct 28 12:47:14.488: INFO: sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-vbz6k from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 12:47:14.488: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 12:47:14.488: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/28/23 12:47:14.488
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/28/23 12:47:16.511
  STEP: Trying to apply a random label on the found node. @ 10/28/23 12:47:16.521
  STEP: verifying the node has the label kubernetes.io/e2e-d54a7812-7e64-4b6f-af83-56a80caf3d58 42 @ 10/28/23 12:47:16.529
  STEP: Trying to relaunch the pod, now with labels. @ 10/28/23 12:47:16.532
  STEP: removing the label kubernetes.io/e2e-d54a7812-7e64-4b6f-af83-56a80caf3d58 off the node ip-172-31-37-29 @ 10/28/23 12:47:18.55
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-d54a7812-7e64-4b6f-af83-56a80caf3d58 @ 10/28/23 12:47:18.567
  Oct 28 12:47:18.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3642" for this suite. @ 10/28/23 12:47:18.58
• [4.163 seconds]
------------------------------
S
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 10/28/23 12:47:18.587
  Oct 28 12:47:18.587: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pods @ 10/28/23 12:47:18.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:47:18.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:47:18.608
  STEP: creating the pod @ 10/28/23 12:47:18.611
  STEP: submitting the pod to kubernetes @ 10/28/23 12:47:18.611
  STEP: verifying QOS class is set on the pod @ 10/28/23 12:47:18.619
  Oct 28 12:47:18.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5810" for this suite. @ 10/28/23 12:47:18.626
• [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 10/28/23 12:47:18.633
  Oct 28 12:47:18.633: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename statefulset @ 10/28/23 12:47:18.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:47:18.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:47:18.655
  STEP: Creating service test in namespace statefulset-4347 @ 10/28/23 12:47:18.662
  STEP: Creating a new StatefulSet @ 10/28/23 12:47:18.668
  Oct 28 12:47:18.676: INFO: Found 0 stateful pods, waiting for 3
  Oct 28 12:47:28.682: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 28 12:47:28.682: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 28 12:47:28.682: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Oct 28 12:47:28.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-4347 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 28 12:47:28.851: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 28 12:47:28.851: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 28 12:47:28.851: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/28/23 12:47:38.868
  Oct 28 12:47:38.888: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 10/28/23 12:47:38.888
  STEP: Updating Pods in reverse ordinal order @ 10/28/23 12:47:48.906
  Oct 28 12:47:48.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-4347 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 28 12:47:49.054: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 28 12:47:49.054: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 28 12:47:49.054: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 10/28/23 12:48:09.076
  Oct 28 12:48:09.077: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-4347 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 28 12:48:09.218: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 28 12:48:09.218: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 28 12:48:09.218: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 28 12:48:19.252: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 10/28/23 12:48:29.269
  Oct 28 12:48:29.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-4347 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 28 12:48:29.430: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 28 12:48:29.430: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 28 12:48:29.430: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 28 12:48:39.454: INFO: Deleting all statefulset in ns statefulset-4347
  Oct 28 12:48:39.457: INFO: Scaling statefulset ss2 to 0
  Oct 28 12:48:49.475: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 28 12:48:49.478: INFO: Deleting statefulset ss2
  Oct 28 12:48:49.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4347" for this suite. @ 10/28/23 12:48:49.494
• [90.870 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 10/28/23 12:48:49.504
  Oct 28 12:48:49.504: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename field-validation @ 10/28/23 12:48:49.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:48:49.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:48:49.524
  Oct 28 12:48:49.526: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:48:52.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8452" for this suite. @ 10/28/23 12:48:52.628
• [3.130 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 10/28/23 12:48:52.635
  Oct 28 12:48:52.635: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 12:48:52.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:48:52.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:48:52.656
  STEP: Creating secret with name s-test-opt-del-296c2f96-3cee-4dbf-b823-e2779964ac85 @ 10/28/23 12:48:52.663
  STEP: Creating secret with name s-test-opt-upd-3c32c1c7-68b0-4d32-aed5-25763acfadd3 @ 10/28/23 12:48:52.668
  STEP: Creating the pod @ 10/28/23 12:48:52.673
  STEP: Deleting secret s-test-opt-del-296c2f96-3cee-4dbf-b823-e2779964ac85 @ 10/28/23 12:48:54.726
  STEP: Updating secret s-test-opt-upd-3c32c1c7-68b0-4d32-aed5-25763acfadd3 @ 10/28/23 12:48:54.733
  STEP: Creating secret with name s-test-opt-create-017d31f9-9f72-4a80-a513-e642cf964593 @ 10/28/23 12:48:54.738
  STEP: waiting to observe update in volume @ 10/28/23 12:48:54.742
  Oct 28 12:50:17.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8908" for this suite. @ 10/28/23 12:50:17.169
• [84.541 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 10/28/23 12:50:17.177
  Oct 28 12:50:17.177: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 12:50:17.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:50:17.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:50:17.2
  STEP: creating service multi-endpoint-test in namespace services-3442 @ 10/28/23 12:50:17.202
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3442 to expose endpoints map[] @ 10/28/23 12:50:17.217
  Oct 28 12:50:17.233: INFO: successfully validated that service multi-endpoint-test in namespace services-3442 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3442 @ 10/28/23 12:50:17.233
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3442 to expose endpoints map[pod1:[100]] @ 10/28/23 12:50:19.254
  Oct 28 12:50:19.265: INFO: successfully validated that service multi-endpoint-test in namespace services-3442 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-3442 @ 10/28/23 12:50:19.265
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3442 to expose endpoints map[pod1:[100] pod2:[101]] @ 10/28/23 12:50:21.284
  Oct 28 12:50:21.296: INFO: successfully validated that service multi-endpoint-test in namespace services-3442 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 10/28/23 12:50:21.296
  Oct 28 12:50:21.296: INFO: Creating new exec pod
  Oct 28 12:50:24.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-3442 exec execpodfd7sp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Oct 28 12:50:24.460: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Oct 28 12:50:24.460: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 12:50:24.460: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-3442 exec execpodfd7sp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.164 80'
  Oct 28 12:50:24.602: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.164 80\nConnection to 10.152.183.164 80 port [tcp/http] succeeded!\n"
  Oct 28 12:50:24.602: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 12:50:24.602: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-3442 exec execpodfd7sp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Oct 28 12:50:24.740: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Oct 28 12:50:24.740: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 12:50:24.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-3442 exec execpodfd7sp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.164 81'
  Oct 28 12:50:24.888: INFO: stderr: "+ nc -v -t -w 2 10.152.183.164 81\n+ echo hostName\nConnection to 10.152.183.164 81 port [tcp/*] succeeded!\n"
  Oct 28 12:50:24.888: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3442 @ 10/28/23 12:50:24.888
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3442 to expose endpoints map[pod2:[101]] @ 10/28/23 12:50:24.9
  Oct 28 12:50:24.918: INFO: successfully validated that service multi-endpoint-test in namespace services-3442 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-3442 @ 10/28/23 12:50:24.918
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3442 to expose endpoints map[] @ 10/28/23 12:50:24.935
  Oct 28 12:50:24.944: INFO: successfully validated that service multi-endpoint-test in namespace services-3442 exposes endpoints map[]
  Oct 28 12:50:24.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3442" for this suite. @ 10/28/23 12:50:24.963
• [7.800 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 10/28/23 12:50:24.979
  Oct 28 12:50:24.979: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pods @ 10/28/23 12:50:24.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:50:24.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:50:24.998
  Oct 28 12:50:25.001: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: creating the pod @ 10/28/23 12:50:25.002
  STEP: submitting the pod to kubernetes @ 10/28/23 12:50:25.002
  Oct 28 12:50:27.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2283" for this suite. @ 10/28/23 12:50:27.109
• [2.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 10/28/23 12:50:27.117
  Oct 28 12:50:27.117: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename replication-controller @ 10/28/23 12:50:27.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:50:27.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:50:27.137
  STEP: Creating ReplicationController "e2e-rc-qt7kq" @ 10/28/23 12:50:27.14
  Oct 28 12:50:27.144: INFO: Get Replication Controller "e2e-rc-qt7kq" to confirm replicas
  Oct 28 12:50:28.148: INFO: Get Replication Controller "e2e-rc-qt7kq" to confirm replicas
  Oct 28 12:50:28.152: INFO: Found 1 replicas for "e2e-rc-qt7kq" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-qt7kq" @ 10/28/23 12:50:28.153
  STEP: Updating a scale subresource @ 10/28/23 12:50:28.156
  STEP: Verifying replicas where modified for replication controller "e2e-rc-qt7kq" @ 10/28/23 12:50:28.161
  Oct 28 12:50:28.161: INFO: Get Replication Controller "e2e-rc-qt7kq" to confirm replicas
  Oct 28 12:50:29.165: INFO: Get Replication Controller "e2e-rc-qt7kq" to confirm replicas
  Oct 28 12:50:29.169: INFO: Found 2 replicas for "e2e-rc-qt7kq" replication controller
  Oct 28 12:50:29.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9768" for this suite. @ 10/28/23 12:50:29.174
• [2.064 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 10/28/23 12:50:29.181
  Oct 28 12:50:29.181: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/28/23 12:50:29.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:50:29.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:50:29.202
  Oct 28 12:50:29.205: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:50:32.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1558" for this suite. @ 10/28/23 12:50:32.425
• [3.253 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 10/28/23 12:50:32.434
  Oct 28 12:50:32.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/28/23 12:50:32.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:50:32.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:50:32.455
  STEP: create the container to handle the HTTPGet hook request. @ 10/28/23 12:50:32.463
  STEP: create the pod with lifecycle hook @ 10/28/23 12:50:34.487
  STEP: check poststart hook @ 10/28/23 12:50:36.506
  STEP: delete the pod with lifecycle hook @ 10/28/23 12:50:36.514
  Oct 28 12:50:38.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1709" for this suite. @ 10/28/23 12:50:38.533
• [6.105 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 10/28/23 12:50:38.541
  Oct 28 12:50:38.541: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename deployment @ 10/28/23 12:50:38.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:50:38.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:50:38.563
  Oct 28 12:50:38.565: INFO: Creating simple deployment test-new-deployment
  Oct 28 12:50:38.578: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 10/28/23 12:50:40.594
  STEP: updating a scale subresource @ 10/28/23 12:50:40.598
  STEP: verifying the deployment Spec.Replicas was modified @ 10/28/23 12:50:40.604
  STEP: Patch a scale subresource @ 10/28/23 12:50:40.607
  Oct 28 12:50:40.622: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1179",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "107c8ed4-7625-40fc-9374-16bd90e9d8df",
      ResourceVersion: (string) (len=5) "12990",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094238,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 28 12:50:40.631: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1179",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88ed2cba-a6af-44c8-bb73-b8b7573d8013",
      ResourceVersion: (string) (len=5) "12994",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094238,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "107c8ed4-7625-40fc-9374-16bd90e9d8df",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 30 37 63 38 65  64 34 2d 37 36 32 35 2d  |\"107c8ed4-7625-|
              00000120  34 30 66 63 2d 39 33 37  34 2d 31 36 62 64 39 30  |40fc-9374-16bd90|
              00000130  65 39 64 38 64 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e9d8df\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 28 12:50:40.637: INFO: Pod "test-new-deployment-557759b7c7-8plz5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-8plz5",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1179",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0239c2a-3bd4-491a-aa8b-0527634a6a4e",
      ResourceVersion: (string) (len=5) "12982",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094238,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "88ed2cba-a6af-44c8-bb73-b8b7573d8013",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 38  65 64 32 63 62 61 2d 61  |d\":\"88ed2cba-a|
              00000090  36 61 66 2d 34 34 63 38  2d 62 62 37 33 2d 62 38  |6af-44c8-bb73-b8|
              000000a0  62 37 35 37 33 64 38 30  31 33 5c 22 7d 22 3a 7b  |b7573d8013\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 31 2e 32 33 34 5c  |192.168.191.234\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cj2hl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cj2hl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-72",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.191.234",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.191.234"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094238,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834094239,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cdfc37fdab05f22e7cc75ac36d78d0f993f01840cf594693b196a5fa5a42eba3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 12:50:40.640: INFO: Pod "test-new-deployment-557759b7c7-k7lj6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-k7lj6",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1179",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95a02bd7-d9c6-4b2d-8745-5742041942d6",
      ResourceVersion: (string) (len=5) "12993",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094240,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "88ed2cba-a6af-44c8-bb73-b8b7573d8013",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 38  65 64 32 63 62 61 2d 61  |d\":\"88ed2cba-a|
              00000090  36 61 66 2d 34 34 63 38  2d 62 62 37 33 2d 62 38  |6af-44c8-bb73-b8|
              000000a0  62 37 35 37 33 64 38 30  31 33 5c 22 7d 22 3a 7b  |b7573d8013\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wdhwm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wdhwm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-37-29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 12:50:40.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1179" for this suite. @ 10/28/23 12:50:40.646
• [2.115 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 10/28/23 12:50:40.657
  Oct 28 12:50:40.657: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename csistoragecapacity @ 10/28/23 12:50:40.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:50:40.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:50:40.795
  STEP: getting /apis @ 10/28/23 12:50:40.798
  STEP: getting /apis/storage.k8s.io @ 10/28/23 12:50:40.802
  STEP: getting /apis/storage.k8s.io/v1 @ 10/28/23 12:50:40.804
  STEP: creating @ 10/28/23 12:50:40.805
  STEP: watching @ 10/28/23 12:50:40.82
  Oct 28 12:50:40.820: INFO: starting watch
  STEP: getting @ 10/28/23 12:50:40.828
  STEP: listing in namespace @ 10/28/23 12:50:40.831
  STEP: listing across namespaces @ 10/28/23 12:50:40.835
  STEP: patching @ 10/28/23 12:50:40.837
  STEP: updating @ 10/28/23 12:50:40.842
  Oct 28 12:50:40.847: INFO: waiting for watch events with expected annotations in namespace
  Oct 28 12:50:40.847: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 10/28/23 12:50:40.847
  STEP: deleting a collection @ 10/28/23 12:50:40.859
  Oct 28 12:50:40.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5974" for this suite. @ 10/28/23 12:50:40.879
• [0.230 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 10/28/23 12:50:40.887
  Oct 28 12:50:40.887: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 12:50:40.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:50:40.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:50:40.906
  STEP: Creating configMap with name projected-configmap-test-volume-map-73778556-efdf-400a-84fa-777e399fdaba @ 10/28/23 12:50:40.909
  STEP: Creating a pod to test consume configMaps @ 10/28/23 12:50:40.913
  STEP: Saw pod success @ 10/28/23 12:50:44.936
  Oct 28 12:50:44.940: INFO: Trying to get logs from node ip-172-31-20-72 pod pod-projected-configmaps-86efbddb-663d-45a0-86b9-af8e096045b2 container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 12:50:44.957
  Oct 28 12:50:44.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7171" for this suite. @ 10/28/23 12:50:44.981
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 10/28/23 12:50:44.989
  Oct 28 12:50:44.989: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename statefulset @ 10/28/23 12:50:44.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:50:45.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:50:45.01
  STEP: Creating service test in namespace statefulset-2119 @ 10/28/23 12:50:45.013
  STEP: Creating stateful set ss in namespace statefulset-2119 @ 10/28/23 12:50:45.018
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2119 @ 10/28/23 12:50:45.026
  Oct 28 12:50:45.030: INFO: Found 0 stateful pods, waiting for 1
  Oct 28 12:50:55.035: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 10/28/23 12:50:55.036
  Oct 28 12:50:55.040: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-2119 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 28 12:50:55.194: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 28 12:50:55.194: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 28 12:50:55.194: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 28 12:50:55.198: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Oct 28 12:51:05.204: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct 28 12:51:05.204: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct 28 12:51:05.222: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Oct 28 12:51:05.222: INFO: ss-0  ip-172-31-37-29  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:50:45 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:50:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:50:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:50:45 +0000 UTC  }]
  Oct 28 12:51:05.222: INFO: 
  Oct 28 12:51:05.222: INFO: StatefulSet ss has not reached scale 3, at 1
  Oct 28 12:51:06.227: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995607156s
  Oct 28 12:51:07.231: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991221546s
  Oct 28 12:51:08.236: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.986699526s
  Oct 28 12:51:09.240: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.981870789s
  Oct 28 12:51:10.244: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.977590882s
  Oct 28 12:51:11.249: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.973626227s
  Oct 28 12:51:12.255: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.968280289s
  Oct 28 12:51:13.259: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.963318525s
  Oct 28 12:51:14.265: INFO: Verifying statefulset ss doesn't scale past 3 for another 959.074783ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2119 @ 10/28/23 12:51:15.266
  Oct 28 12:51:15.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-2119 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 28 12:51:15.410: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Oct 28 12:51:15.410: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 28 12:51:15.410: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 28 12:51:15.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-2119 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 28 12:51:15.551: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Oct 28 12:51:15.551: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 28 12:51:15.551: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 28 12:51:15.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-2119 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Oct 28 12:51:15.682: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Oct 28 12:51:15.682: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Oct 28 12:51:15.682: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Oct 28 12:51:15.686: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  Oct 28 12:51:25.691: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 28 12:51:25.691: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 28 12:51:25.691: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 10/28/23 12:51:25.691
  Oct 28 12:51:25.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-2119 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 28 12:51:25.842: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 28 12:51:25.842: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 28 12:51:25.842: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 28 12:51:25.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-2119 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 28 12:51:25.985: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 28 12:51:25.985: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 28 12:51:25.985: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 28 12:51:25.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=statefulset-2119 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Oct 28 12:51:26.120: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Oct 28 12:51:26.120: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Oct 28 12:51:26.120: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Oct 28 12:51:26.120: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Oct 28 12:51:26.123: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Oct 28 12:51:36.133: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Oct 28 12:51:36.133: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Oct 28 12:51:36.133: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Oct 28 12:51:36.146: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Oct 28 12:51:36.146: INFO: ss-0  ip-172-31-37-29  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:50:45 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:51:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:51:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:50:45 +0000 UTC  }]
  Oct 28 12:51:36.146: INFO: ss-1  ip-172-31-5-226  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:51:05 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:51:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:51:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:51:05 +0000 UTC  }]
  Oct 28 12:51:36.147: INFO: ss-2  ip-172-31-20-72  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:51:05 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:51:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:51:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:51:05 +0000 UTC  }]
  Oct 28 12:51:36.147: INFO: 
  Oct 28 12:51:36.147: INFO: StatefulSet ss has not reached scale 0, at 3
  Oct 28 12:51:37.151: INFO: POD   NODE             PHASE      GRACE  CONDITIONS
  Oct 28 12:51:37.151: INFO: ss-0  ip-172-31-37-29  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:50:45 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:51:26 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:51:26 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 12:50:45 +0000 UTC  }]
  Oct 28 12:51:37.151: INFO: 
  Oct 28 12:51:37.151: INFO: StatefulSet ss has not reached scale 0, at 1
  Oct 28 12:51:38.155: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.992476589s
  Oct 28 12:51:39.160: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.987058549s
  Oct 28 12:51:40.163: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.983359882s
  Oct 28 12:51:41.167: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.979813157s
  Oct 28 12:51:42.171: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.975602293s
  Oct 28 12:51:43.176: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.971764013s
  Oct 28 12:51:44.180: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.967036594s
  Oct 28 12:51:45.184: INFO: Verifying statefulset ss doesn't scale past 0 for another 962.425263ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2119 @ 10/28/23 12:51:46.185
  Oct 28 12:51:46.189: INFO: Scaling statefulset ss to 0
  Oct 28 12:51:46.201: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 28 12:51:46.204: INFO: Deleting all statefulset in ns statefulset-2119
  Oct 28 12:51:46.208: INFO: Scaling statefulset ss to 0
  Oct 28 12:51:46.217: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 28 12:51:46.221: INFO: Deleting statefulset ss
  Oct 28 12:51:46.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2119" for this suite. @ 10/28/23 12:51:46.236
• [61.257 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 10/28/23 12:51:46.246
  Oct 28 12:51:46.246: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 12:51:46.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:51:46.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:51:46.273
  STEP: Starting the proxy @ 10/28/23 12:51:46.277
  Oct 28 12:51:46.277: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-514 proxy --unix-socket=/tmp/kubectl-proxy-unix2219232367/test'
  STEP: retrieving proxy /api/ output @ 10/28/23 12:51:46.321
  Oct 28 12:51:46.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-514" for this suite. @ 10/28/23 12:51:46.326
• [0.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 10/28/23 12:51:46.333
  Oct 28 12:51:46.333: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/28/23 12:51:46.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:51:46.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:51:46.355
  STEP: create the container to handle the HTTPGet hook request. @ 10/28/23 12:51:46.363
  STEP: create the pod with lifecycle hook @ 10/28/23 12:51:48.384
  STEP: check poststart hook @ 10/28/23 12:51:50.405
  STEP: delete the pod with lifecycle hook @ 10/28/23 12:51:50.422
  Oct 28 12:51:54.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8035" for this suite. @ 10/28/23 12:51:54.446
• [8.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 10/28/23 12:51:54.455
  Oct 28 12:51:54.455: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename namespaces @ 10/28/23 12:51:54.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:51:54.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:51:54.477
  STEP: Updating Namespace "namespaces-2621" @ 10/28/23 12:51:54.48
  Oct 28 12:51:54.491: INFO: Namespace "namespaces-2621" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"7d0acfae-10c9-4207-85d3-236dc25a3ca1", "kubernetes.io/metadata.name":"namespaces-2621", "namespaces-2621":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Oct 28 12:51:54.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2621" for this suite. @ 10/28/23 12:51:54.495
• [0.045 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 10/28/23 12:51:54.501
  Oct 28 12:51:54.501: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename daemonsets @ 10/28/23 12:51:54.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:51:54.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:51:54.522
  Oct 28 12:51:54.543: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 10/28/23 12:51:54.549
  Oct 28 12:51:54.552: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:51:54.552: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 10/28/23 12:51:54.552
  Oct 28 12:51:54.573: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:51:54.573: INFO: Node ip-172-31-5-226 is running 0 daemon pod, expected 1
  Oct 28 12:51:55.579: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:51:55.580: INFO: Node ip-172-31-5-226 is running 0 daemon pod, expected 1
  Oct 28 12:51:56.577: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 28 12:51:56.577: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 10/28/23 12:51:56.58
  Oct 28 12:51:56.597: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 28 12:51:56.597: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Oct 28 12:51:57.602: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:51:57.602: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 10/28/23 12:51:57.602
  Oct 28 12:51:57.618: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:51:57.618: INFO: Node ip-172-31-5-226 is running 0 daemon pod, expected 1
  Oct 28 12:51:58.623: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:51:58.623: INFO: Node ip-172-31-5-226 is running 0 daemon pod, expected 1
  Oct 28 12:51:59.623: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 28 12:51:59.623: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/28/23 12:51:59.63
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3105, will wait for the garbage collector to delete the pods @ 10/28/23 12:51:59.63
  Oct 28 12:51:59.690: INFO: Deleting DaemonSet.extensions daemon-set took: 6.176201ms
  Oct 28 12:51:59.791: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.239016ms
  Oct 28 12:52:01.195: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:52:01.195: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 28 12:52:01.198: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13638"},"items":null}

  Oct 28 12:52:01.201: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13638"},"items":null}

  Oct 28 12:52:01.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3105" for this suite. @ 10/28/23 12:52:01.226
• [6.732 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 10/28/23 12:52:01.234
  Oct 28 12:52:01.234: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pod-network-test @ 10/28/23 12:52:01.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:52:01.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:52:01.256
  STEP: Performing setup for networking test in namespace pod-network-test-3982 @ 10/28/23 12:52:01.259
  STEP: creating a selector @ 10/28/23 12:52:01.259
  STEP: Creating the service pods in kubernetes @ 10/28/23 12:52:01.259
  Oct 28 12:52:01.259: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/28/23 12:52:23.362
  Oct 28 12:52:25.380: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct 28 12:52:25.380: INFO: Breadth first check of 192.168.191.237 on host 172.31.20.72...
  Oct 28 12:52:25.383: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.136.237:9080/dial?request=hostname&protocol=udp&host=192.168.191.237&port=8081&tries=1'] Namespace:pod-network-test-3982 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:52:25.383: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:52:25.384: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:52:25.384: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3982/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.136.237%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.191.237%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 28 12:52:25.473: INFO: Waiting for responses: map[]
  Oct 28 12:52:25.473: INFO: reached 192.168.191.237 after 0/1 tries
  Oct 28 12:52:25.473: INFO: Breadth first check of 192.168.136.236 on host 172.31.37.29...
  Oct 28 12:52:25.478: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.136.237:9080/dial?request=hostname&protocol=udp&host=192.168.136.236&port=8081&tries=1'] Namespace:pod-network-test-3982 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:52:25.478: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:52:25.478: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:52:25.478: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3982/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.136.237%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.136.236%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 28 12:52:25.556: INFO: Waiting for responses: map[]
  Oct 28 12:52:25.556: INFO: reached 192.168.136.236 after 0/1 tries
  Oct 28 12:52:25.556: INFO: Breadth first check of 192.168.15.155 on host 172.31.5.226...
  Oct 28 12:52:25.559: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.136.237:9080/dial?request=hostname&protocol=udp&host=192.168.15.155&port=8081&tries=1'] Namespace:pod-network-test-3982 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:52:25.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:52:25.560: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:52:25.560: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3982/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.136.237%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.15.155%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 28 12:52:25.641: INFO: Waiting for responses: map[]
  Oct 28 12:52:25.641: INFO: reached 192.168.15.155 after 0/1 tries
  Oct 28 12:52:25.641: INFO: Going to retry 0 out of 3 pods....
  Oct 28 12:52:25.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3982" for this suite. @ 10/28/23 12:52:25.645
• [24.418 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 10/28/23 12:52:25.653
  Oct 28 12:52:25.653: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename runtimeclass @ 10/28/23 12:52:25.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:52:25.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:52:25.676
  STEP: getting /apis @ 10/28/23 12:52:25.68
  STEP: getting /apis/node.k8s.io @ 10/28/23 12:52:25.688
  STEP: getting /apis/node.k8s.io/v1 @ 10/28/23 12:52:25.69
  STEP: creating @ 10/28/23 12:52:25.693
  STEP: watching @ 10/28/23 12:52:25.72
  Oct 28 12:52:25.720: INFO: starting watch
  STEP: getting @ 10/28/23 12:52:25.729
  STEP: listing @ 10/28/23 12:52:25.734
  STEP: patching @ 10/28/23 12:52:25.737
  STEP: updating @ 10/28/23 12:52:25.749
  Oct 28 12:52:25.755: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 10/28/23 12:52:25.755
  STEP: deleting a collection @ 10/28/23 12:52:25.767
  Oct 28 12:52:25.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4466" for this suite. @ 10/28/23 12:52:25.786
• [0.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 10/28/23 12:52:25.794
  Oct 28 12:52:25.794: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pods @ 10/28/23 12:52:25.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:52:25.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:52:25.814
  STEP: creating the pod @ 10/28/23 12:52:25.817
  STEP: submitting the pod to kubernetes @ 10/28/23 12:52:25.817
  STEP: verifying the pod is in kubernetes @ 10/28/23 12:52:27.837
  STEP: updating the pod @ 10/28/23 12:52:27.841
  Oct 28 12:52:28.353: INFO: Successfully updated pod "pod-update-4f12ea3f-0b2c-4845-b8fc-d4deb51e09ab"
  STEP: verifying the updated pod is in kubernetes @ 10/28/23 12:52:28.358
  Oct 28 12:52:28.363: INFO: Pod update OK
  Oct 28 12:52:28.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9178" for this suite. @ 10/28/23 12:52:28.368
• [2.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 10/28/23 12:52:28.386
  Oct 28 12:52:28.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 12:52:28.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:52:28.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:52:28.405
  STEP: Creating configMap with name configmap-test-volume-8dca860b-6056-4dbd-a29a-4fabbc65f070 @ 10/28/23 12:52:28.408
  STEP: Creating a pod to test consume configMaps @ 10/28/23 12:52:28.412
  STEP: Saw pod success @ 10/28/23 12:52:32.434
  Oct 28 12:52:32.438: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-configmaps-e244adc2-3bcd-4fe4-9785-68e77d0f8011 container configmap-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 12:52:32.456
  Oct 28 12:52:32.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5735" for this suite. @ 10/28/23 12:52:32.477
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 10/28/23 12:52:32.492
  Oct 28 12:52:32.492: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pods @ 10/28/23 12:52:32.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:52:32.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:52:32.518
  STEP: Create a pod @ 10/28/23 12:52:32.522
  STEP: patching /status @ 10/28/23 12:52:34.541
  Oct 28 12:52:34.552: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Oct 28 12:52:34.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5474" for this suite. @ 10/28/23 12:52:34.557
• [2.072 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 10/28/23 12:52:34.569
  Oct 28 12:52:34.569: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 12:52:34.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:52:34.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:52:34.591
  STEP: creating Agnhost RC @ 10/28/23 12:52:34.596
  Oct 28 12:52:34.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-1852 create -f -'
  Oct 28 12:52:34.805: INFO: stderr: ""
  Oct 28 12:52:34.805: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/28/23 12:52:34.805
  Oct 28 12:52:35.810: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 28 12:52:35.810: INFO: Found 0 / 1
  Oct 28 12:52:36.810: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 28 12:52:36.810: INFO: Found 1 / 1
  Oct 28 12:52:36.810: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 10/28/23 12:52:36.81
  Oct 28 12:52:36.815: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 28 12:52:36.815: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct 28 12:52:36.815: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-1852 patch pod agnhost-primary-fmh77 -p {"metadata":{"annotations":{"x":"y"}}}'
  Oct 28 12:52:36.883: INFO: stderr: ""
  Oct 28 12:52:36.883: INFO: stdout: "pod/agnhost-primary-fmh77 patched\n"
  STEP: checking annotations @ 10/28/23 12:52:36.883
  Oct 28 12:52:36.886: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 28 12:52:36.886: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct 28 12:52:36.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1852" for this suite. @ 10/28/23 12:52:36.89
• [2.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 10/28/23 12:52:36.898
  Oct 28 12:52:36.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename deployment @ 10/28/23 12:52:36.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:52:36.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:52:36.92
  Oct 28 12:52:36.923: INFO: Creating deployment "test-recreate-deployment"
  Oct 28 12:52:36.928: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Oct 28 12:52:36.938: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Oct 28 12:52:38.946: INFO: Waiting deployment "test-recreate-deployment" to complete
  Oct 28 12:52:38.950: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Oct 28 12:52:38.960: INFO: Updating deployment test-recreate-deployment
  Oct 28 12:52:38.960: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Oct 28 12:52:39.036: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7782",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6d96dc4-eaf2-4970-8886-8ab536b01603",
      ResourceVersion: (string) (len=5) "14019",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094356,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 28 12:52:39.041: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7782",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90b3ac02-7d18-496e-99d6-9b968610fb8a",
      ResourceVersion: (string) (len=5) "14016",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094358,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "d6d96dc4-eaf2-4970-8886-8ab536b01603",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 36 64 39 36 64  63 34 2d 65 61 66 32 2d  |\"d6d96dc4-eaf2-|
              00000120  34 39 37 30 2d 38 38 38  36 2d 38 61 62 35 33 36  |4970-8886-8ab536|
              00000130  62 30 31 36 30 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b01603\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 28 12:52:39.042: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Oct 28 12:52:39.043: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7782",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac259566-a341-40ef-9fae-9671ff2fe8dd",
      ResourceVersion: (string) (len=5) "14008",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094356,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "d6d96dc4-eaf2-4970-8886-8ab536b01603",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 36 64 39 36 64  63 34 2d 65 61 66 32 2d  |\"d6d96dc4-eaf2-|
              00000120  34 39 37 30 2d 38 38 38  36 2d 38 61 62 35 33 36  |4970-8886-8ab536|
              00000130  62 30 31 36 30 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b01603\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 28 12:52:39.047: INFO: Pod "test-recreate-deployment-76fb77d45-p9zhs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-p9zhs",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-7782",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0eb5f02d-911c-49b4-9acb-3e424e834bcc",
      ResourceVersion: (string) (len=5) "14020",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094359,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "90b3ac02-7d18-496e-99d6-9b968610fb8a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 30  62 33 61 63 30 32 2d 37  |d\":\"90b3ac02-7|
              00000090  64 31 38 2d 34 39 36 65  2d 39 39 64 36 2d 39 62  |d18-496e-99d6-9b|
              000000a0  39 36 38 36 31 30 66 62  38 61 5c 22 7d 22 3a 7b  |968610fb8a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8lwh4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8lwh4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-72",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094359,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 12:52:39.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7782" for this suite. @ 10/28/23 12:52:39.055
• [2.165 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 10/28/23 12:52:39.064
  Oct 28 12:52:39.064: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 12:52:39.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:52:39.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:52:39.08
  STEP: Creating configMap with name projected-configmap-test-volume-378ed53d-fc73-4483-b50c-95547947411e @ 10/28/23 12:52:39.083
  STEP: Creating a pod to test consume configMaps @ 10/28/23 12:52:39.088
  STEP: Saw pod success @ 10/28/23 12:52:43.111
  Oct 28 12:52:43.114: INFO: Trying to get logs from node ip-172-31-20-72 pod pod-projected-configmaps-d0de7404-5dd9-43b2-9a1d-bba1aa0035e9 container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 12:52:43.132
  Oct 28 12:52:43.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2559" for this suite. @ 10/28/23 12:52:43.15
• [4.092 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 10/28/23 12:52:43.157
  Oct 28 12:52:43.157: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 12:52:43.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:52:43.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:52:43.191
  STEP: Setting up server cert @ 10/28/23 12:52:43.217
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 12:52:43.471
  STEP: Deploying the webhook pod @ 10/28/23 12:52:43.478
  STEP: Wait for the deployment to be ready @ 10/28/23 12:52:43.494
  Oct 28 12:52:43.502: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 12:52:45.515
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 12:52:45.527
  Oct 28 12:52:46.528: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 10/28/23 12:52:46.536
  STEP: Creating a custom resource definition that should be denied by the webhook @ 10/28/23 12:52:46.555
  Oct 28 12:52:46.555: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:52:46.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-434" for this suite. @ 10/28/23 12:52:46.616
  STEP: Destroying namespace "webhook-markers-4673" for this suite. @ 10/28/23 12:52:46.624
• [3.473 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 10/28/23 12:52:46.63
  Oct 28 12:52:46.630: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename sched-pred @ 10/28/23 12:52:46.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:52:46.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:52:46.652
  Oct 28 12:52:46.655: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct 28 12:52:46.662: INFO: Waiting for terminating namespaces to be deleted...
  Oct 28 12:52:46.665: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-20-72 before test
  Oct 28 12:52:46.671: INFO: nginx-ingress-controller-kubernetes-worker-8swbr from ingress-nginx-kubernetes-worker started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:52:46.671: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 28 12:52:46.671: INFO: calico-node-cpcds from kube-system started at 2023-10-28 12:12:02 +0000 UTC (1 container statuses recorded)
  Oct 28 12:52:46.671: INFO: 	Container calico-node ready: true, restart count 0
  Oct 28 12:52:46.671: INFO: sonobuoy-e2e-job-5367ddbce4cd4be7 from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 12:52:46.671: INFO: 	Container e2e ready: true, restart count 0
  Oct 28 12:52:46.671: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 12:52:46.671: INFO: sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-ndkvj from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 12:52:46.671: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 12:52:46.671: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 28 12:52:46.671: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-37-29 before test
  Oct 28 12:52:46.676: INFO: nginx-ingress-controller-kubernetes-worker-kx2mn from ingress-nginx-kubernetes-worker started at 2023-10-28 12:35:28 +0000 UTC (1 container statuses recorded)
  Oct 28 12:52:46.676: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 28 12:52:46.676: INFO: calico-node-l75l8 from kube-system started at 2023-10-28 12:16:40 +0000 UTC (1 container statuses recorded)
  Oct 28 12:52:46.676: INFO: 	Container calico-node ready: true, restart count 0
  Oct 28 12:52:46.676: INFO: sonobuoy from sonobuoy started at 2023-10-28 12:22:27 +0000 UTC (1 container statuses recorded)
  Oct 28 12:52:46.676: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct 28 12:52:46.676: INFO: sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-tb6hv from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 12:52:46.676: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 12:52:46.676: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 28 12:52:46.676: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-5-226 before test
  Oct 28 12:52:46.682: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-5jq2w from ingress-nginx-kubernetes-worker started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:52:46.682: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct 28 12:52:46.682: INFO: nginx-ingress-controller-kubernetes-worker-9fc74 from ingress-nginx-kubernetes-worker started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:52:46.682: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 28 12:52:46.682: INFO: calico-kube-controllers-59c77d8d6f-hvzwx from kube-system started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:52:46.682: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Oct 28 12:52:46.682: INFO: calico-node-j2png from kube-system started at 2023-10-28 12:12:02 +0000 UTC (1 container statuses recorded)
  Oct 28 12:52:46.682: INFO: 	Container calico-node ready: true, restart count 0
  Oct 28 12:52:46.682: INFO: coredns-59cfb5bf46-vr6sn from kube-system started at 2023-10-28 12:12:17 +0000 UTC (1 container statuses recorded)
  Oct 28 12:52:46.682: INFO: 	Container coredns ready: true, restart count 0
  Oct 28 12:52:46.682: INFO: kube-state-metrics-775d9f4f79-htlwx from kube-system started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:52:46.682: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct 28 12:52:46.682: INFO: metrics-server-v0.6.3-69d7fbfdf8-ws5cj from kube-system started at 2023-10-28 12:12:17 +0000 UTC (2 container statuses recorded)
  Oct 28 12:52:46.682: INFO: 	Container metrics-server ready: true, restart count 0
  Oct 28 12:52:46.682: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct 28 12:52:46.682: INFO: dashboard-metrics-scraper-5dd7cb5fc-97qlp from kubernetes-dashboard started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:52:46.682: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct 28 12:52:46.682: INFO: kubernetes-dashboard-7b899cb9d9-zdnvw from kubernetes-dashboard started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 12:52:46.682: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct 28 12:52:46.682: INFO: sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-vbz6k from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 12:52:46.682: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 12:52:46.682: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 10/28/23 12:52:46.682
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17924689b36e42aa], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling..] @ 10/28/23 12:52:46.714
  Oct 28 12:52:47.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7425" for this suite. @ 10/28/23 12:52:47.717
• [1.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 10/28/23 12:52:47.727
  Oct 28 12:52:47.727: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 10/28/23 12:52:47.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:52:47.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:52:47.747
  STEP: Setting up the test @ 10/28/23 12:52:47.75
  STEP: Creating hostNetwork=false pod @ 10/28/23 12:52:47.75
  STEP: Creating hostNetwork=true pod @ 10/28/23 12:52:49.773
  STEP: Running the test @ 10/28/23 12:52:51.79
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 10/28/23 12:52:51.79
  Oct 28 12:52:51.790: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4281 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:52:51.790: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:52:51.791: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:52:51.791: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4281/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct 28 12:52:51.901: INFO: Exec stderr: ""
  Oct 28 12:52:51.901: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4281 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:52:51.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:52:51.902: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:52:51.902: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4281/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct 28 12:52:51.985: INFO: Exec stderr: ""
  Oct 28 12:52:51.985: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4281 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:52:51.985: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:52:51.985: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:52:51.985: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4281/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct 28 12:52:52.068: INFO: Exec stderr: ""
  Oct 28 12:52:52.068: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4281 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:52:52.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:52:52.069: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:52:52.069: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4281/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct 28 12:52:52.140: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 10/28/23 12:52:52.14
  Oct 28 12:52:52.141: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4281 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:52:52.141: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:52:52.141: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:52:52.141: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4281/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Oct 28 12:52:52.220: INFO: Exec stderr: ""
  Oct 28 12:52:52.220: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4281 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:52:52.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:52:52.221: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:52:52.221: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4281/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Oct 28 12:52:52.292: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 10/28/23 12:52:52.292
  Oct 28 12:52:52.292: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4281 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:52:52.292: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:52:52.293: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:52:52.293: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4281/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct 28 12:52:52.368: INFO: Exec stderr: ""
  Oct 28 12:52:52.368: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4281 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:52:52.368: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:52:52.369: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:52:52.369: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4281/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Oct 28 12:52:52.443: INFO: Exec stderr: ""
  Oct 28 12:52:52.443: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4281 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:52:52.443: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:52:52.444: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:52:52.444: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4281/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct 28 12:52:52.532: INFO: Exec stderr: ""
  Oct 28 12:52:52.532: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4281 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:52:52.532: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:52:52.533: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:52:52.533: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4281/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Oct 28 12:52:52.599: INFO: Exec stderr: ""
  Oct 28 12:52:52.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4281" for this suite. @ 10/28/23 12:52:52.604
• [4.885 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 10/28/23 12:52:52.613
  Oct 28 12:52:52.613: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename replicaset @ 10/28/23 12:52:52.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:52:52.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:52:52.633
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 10/28/23 12:52:52.636
  Oct 28 12:52:52.643: INFO: Pod name sample-pod: Found 0 pods out of 1
  Oct 28 12:52:57.647: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/28/23 12:52:57.647
  STEP: getting scale subresource @ 10/28/23 12:52:57.648
  STEP: updating a scale subresource @ 10/28/23 12:52:57.652
  STEP: verifying the replicaset Spec.Replicas was modified @ 10/28/23 12:52:57.66
  STEP: Patch a scale subresource @ 10/28/23 12:52:57.664
  Oct 28 12:52:57.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5015" for this suite. @ 10/28/23 12:52:57.688
• [5.084 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 10/28/23 12:52:57.697
  Oct 28 12:52:57.697: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 12:52:57.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:52:57.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:52:57.726
  Oct 28 12:52:57.730: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-9848 create -f -'
  Oct 28 12:52:57.923: INFO: stderr: ""
  Oct 28 12:52:57.923: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Oct 28 12:52:57.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-9848 create -f -'
  Oct 28 12:52:58.214: INFO: stderr: ""
  Oct 28 12:52:58.214: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/28/23 12:52:58.214
  Oct 28 12:52:59.219: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 28 12:52:59.219: INFO: Found 0 / 1
  Oct 28 12:53:00.221: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 28 12:53:00.221: INFO: Found 1 / 1
  Oct 28 12:53:00.221: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Oct 28 12:53:00.224: INFO: Selector matched 1 pods for map[app:agnhost]
  Oct 28 12:53:00.224: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Oct 28 12:53:00.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-9848 describe pod agnhost-primary-nkhqm'
  Oct 28 12:53:00.295: INFO: stderr: ""
  Oct 28 12:53:00.295: INFO: stdout: "Name:             agnhost-primary-nkhqm\nNamespace:        kubectl-9848\nPriority:         0\nService Account:  default\nNode:             ip-172-31-20-72/172.31.20.72\nStart Time:       Sat, 28 Oct 2023 12:52:57 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.191.241\nIPs:\n  IP:           192.168.191.241\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://1b9fd1d65186519dd358d36afd42855dbc8a876fb9b3066c72bde75072af3e19\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 28 Oct 2023 12:52:58 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-48wmj (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-48wmj:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-9848/agnhost-primary-nkhqm to ip-172-31-20-72\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Oct 28 12:53:00.295: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-9848 describe rc agnhost-primary'
  Oct 28 12:53:00.369: INFO: stderr: ""
  Oct 28 12:53:00.369: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9848\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-nkhqm\n"
  Oct 28 12:53:00.369: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-9848 describe service agnhost-primary'
  Oct 28 12:53:00.441: INFO: stderr: ""
  Oct 28 12:53:00.441: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-9848\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.151\nIPs:               10.152.183.151\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.191.241:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Oct 28 12:53:00.445: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-9848 describe node ip-172-31-15-112'
  Oct 28 12:53:00.559: INFO: stderr: ""
  Oct 28 12:53:00.559: INFO: stdout: "Name:               ip-172-31-15-112\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-15-112\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 28 Oct 2023 12:11:35 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-15-112\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 28 Oct 2023 12:52:54 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 28 Oct 2023 12:12:40 +0000   Sat, 28 Oct 2023 12:12:40 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 28 Oct 2023 12:48:20 +0000   Sat, 28 Oct 2023 12:16:31 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 28 Oct 2023 12:48:20 +0000   Sat, 28 Oct 2023 12:16:31 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 28 Oct 2023 12:48:20 +0000   Sat, 28 Oct 2023 12:16:31 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 28 Oct 2023 12:48:20 +0000   Sat, 28 Oct 2023 12:16:31 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.15.112\n  Hostname:    ip-172-31-15-112\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7907000Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7804600Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec2fd107548b769dd78cf00b80a6e994\n  System UUID:                ec2fd107-548b-769d-d78c-f00b80a6e994\n  Boot ID:                    1de271da-c543-4c18-a0f2-b15cb7535b53\n  Kernel Version:             6.2.0-1014-aws\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.28.3\n  Kube-Proxy Version:         v1.28.3\nNon-terminated Pods:          (2 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-wtt4t                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         41m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-2srz7    0 (0%)        0 (0%)      0 (0%)           0 (0%)         30m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type    Reason                   Age                 From             Message\n  ----    ------                   ----                ----             -------\n  Normal  Starting                 39m                 kube-proxy       \n  Normal  Starting                 37m                 kube-proxy       \n  Normal  RegisteredNode           41m                 node-controller  Node ip-172-31-15-112 event: Registered Node ip-172-31-15-112 in Controller\n  Normal  NodeNotReady             36m                 node-controller  Node ip-172-31-15-112 status is now: NodeNotReady\n  Normal  NodeHasSufficientMemory  36m (x19 over 42m)  kubelet          Node ip-172-31-15-112 status is now: NodeHasSufficientMemory\n"
  Oct 28 12:53:00.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-9848 describe namespace kubectl-9848'
  Oct 28 12:53:00.655: INFO: stderr: ""
  Oct 28 12:53:00.655: INFO: stdout: "Name:         kubectl-9848\nLabels:       e2e-framework=kubectl\n              e2e-run=7d0acfae-10c9-4207-85d3-236dc25a3ca1\n              kubernetes.io/metadata.name=kubectl-9848\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Oct 28 12:53:00.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9848" for this suite. @ 10/28/23 12:53:00.658
• [2.967 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 10/28/23 12:53:00.666
  Oct 28 12:53:00.666: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename watch @ 10/28/23 12:53:00.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:53:00.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:53:00.684
  STEP: creating a new configmap @ 10/28/23 12:53:00.687
  STEP: modifying the configmap once @ 10/28/23 12:53:00.691
  STEP: modifying the configmap a second time @ 10/28/23 12:53:00.699
  STEP: deleting the configmap @ 10/28/23 12:53:00.706
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 10/28/23 12:53:00.713
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 10/28/23 12:53:00.714
  Oct 28 12:53:00.714: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7784  7f54c827-7927-4c5c-b7b5-aaac4d43c119 14396 0 2023-10-28 12:53:00 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-10-28 12:53:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 12:53:00.715: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7784  7f54c827-7927-4c5c-b7b5-aaac4d43c119 14397 0 2023-10-28 12:53:00 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-10-28 12:53:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 12:53:00.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7784" for this suite. @ 10/28/23 12:53:00.718
• [0.059 seconds]
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 10/28/23 12:53:00.725
  Oct 28 12:53:00.725: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename limitrange @ 10/28/23 12:53:00.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:53:00.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:53:00.749
  STEP: Creating a LimitRange @ 10/28/23 12:53:00.752
  STEP: Setting up watch @ 10/28/23 12:53:00.752
  STEP: Submitting a LimitRange @ 10/28/23 12:53:00.857
  STEP: Verifying LimitRange creation was observed @ 10/28/23 12:53:00.862
  STEP: Fetching the LimitRange to ensure it has proper values @ 10/28/23 12:53:00.862
  Oct 28 12:53:00.865: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Oct 28 12:53:00.865: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 10/28/23 12:53:00.865
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 10/28/23 12:53:00.871
  Oct 28 12:53:00.874: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Oct 28 12:53:00.874: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 10/28/23 12:53:00.874
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 10/28/23 12:53:00.881
  Oct 28 12:53:00.884: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Oct 28 12:53:00.884: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 10/28/23 12:53:00.884
  STEP: Failing to create a Pod with more than max resources @ 10/28/23 12:53:00.886
  STEP: Updating a LimitRange @ 10/28/23 12:53:00.888
  STEP: Verifying LimitRange updating is effective @ 10/28/23 12:53:00.893
  STEP: Creating a Pod with less than former min resources @ 10/28/23 12:53:02.896
  STEP: Failing to create a Pod with more than max resources @ 10/28/23 12:53:02.901
  STEP: Deleting a LimitRange @ 10/28/23 12:53:02.903
  STEP: Verifying the LimitRange was deleted @ 10/28/23 12:53:02.914
  Oct 28 12:53:07.920: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 10/28/23 12:53:07.92
  Oct 28 12:53:07.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5228" for this suite. @ 10/28/23 12:53:07.937
• [7.223 seconds]
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 10/28/23 12:53:07.948
  Oct 28 12:53:07.948: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename gc @ 10/28/23 12:53:07.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:53:07.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:53:07.967
  STEP: create the deployment @ 10/28/23 12:53:07.97
  W1028 12:53:07.977625      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/28/23 12:53:07.977
  STEP: delete the deployment @ 10/28/23 12:53:08.484
  STEP: wait for all rs to be garbage collected @ 10/28/23 12:53:08.489
  STEP: expected 0 rs, got 1 rs @ 10/28/23 12:53:08.495
  STEP: expected 0 pods, got 2 pods @ 10/28/23 12:53:08.498
  STEP: Gathering metrics @ 10/28/23 12:53:09.012
  W1028 12:53:09.017530      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 28 12:53:09.017: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 28 12:53:09.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-583" for this suite. @ 10/28/23 12:53:09.021
• [1.081 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 10/28/23 12:53:09.03
  Oct 28 12:53:09.030: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename svc-latency @ 10/28/23 12:53:09.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:53:09.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:53:09.05
  Oct 28 12:53:09.053: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-2227 @ 10/28/23 12:53:09.056
  I1028 12:53:09.061534      19 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2227, replica count: 1
  I1028 12:53:10.112751      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1028 12:53:11.113541      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 28 12:53:11.228: INFO: Created: latency-svc-w6tmq
  Oct 28 12:53:11.236: INFO: Got endpoints: latency-svc-w6tmq [22.65538ms]
  Oct 28 12:53:11.251: INFO: Created: latency-svc-2klpx
  Oct 28 12:53:11.255: INFO: Got endpoints: latency-svc-2klpx [19.114454ms]
  Oct 28 12:53:11.260: INFO: Created: latency-svc-rhw44
  Oct 28 12:53:11.270: INFO: Got endpoints: latency-svc-rhw44 [33.54653ms]
  Oct 28 12:53:11.271: INFO: Created: latency-svc-zwjj2
  Oct 28 12:53:11.275: INFO: Created: latency-svc-lgt5n
  Oct 28 12:53:11.276: INFO: Got endpoints: latency-svc-zwjj2 [39.595837ms]
  Oct 28 12:53:11.280: INFO: Got endpoints: latency-svc-lgt5n [43.870586ms]
  Oct 28 12:53:11.283: INFO: Created: latency-svc-n5l59
  Oct 28 12:53:11.289: INFO: Got endpoints: latency-svc-n5l59 [52.70301ms]
  Oct 28 12:53:11.297: INFO: Created: latency-svc-r8295
  Oct 28 12:53:11.298: INFO: Got endpoints: latency-svc-r8295 [61.307722ms]
  Oct 28 12:53:11.301: INFO: Created: latency-svc-6d9hb
  Oct 28 12:53:11.307: INFO: Got endpoints: latency-svc-6d9hb [69.533844ms]
  Oct 28 12:53:11.309: INFO: Created: latency-svc-tqhxh
  Oct 28 12:53:11.316: INFO: Got endpoints: latency-svc-tqhxh [79.288635ms]
  Oct 28 12:53:11.320: INFO: Created: latency-svc-lcxld
  Oct 28 12:53:11.327: INFO: Created: latency-svc-vpzsh
  Oct 28 12:53:11.327: INFO: Got endpoints: latency-svc-lcxld [89.923599ms]
  Oct 28 12:53:11.335: INFO: Got endpoints: latency-svc-vpzsh [97.902292ms]
  Oct 28 12:53:11.337: INFO: Created: latency-svc-h7pjc
  Oct 28 12:53:11.341: INFO: Got endpoints: latency-svc-h7pjc [103.825777ms]
  Oct 28 12:53:11.344: INFO: Created: latency-svc-5slvd
  Oct 28 12:53:11.350: INFO: Created: latency-svc-gk7w6
  Oct 28 12:53:11.351: INFO: Got endpoints: latency-svc-5slvd [113.991064ms]
  Oct 28 12:53:11.357: INFO: Got endpoints: latency-svc-gk7w6 [119.094292ms]
  Oct 28 12:53:11.358: INFO: Created: latency-svc-t9z8m
  Oct 28 12:53:11.365: INFO: Got endpoints: latency-svc-t9z8m [127.652909ms]
  Oct 28 12:53:11.369: INFO: Created: latency-svc-rhb2r
  Oct 28 12:53:11.373: INFO: Got endpoints: latency-svc-rhb2r [135.664643ms]
  Oct 28 12:53:11.374: INFO: Created: latency-svc-lbkd4
  Oct 28 12:53:11.379: INFO: Created: latency-svc-kvgr2
  Oct 28 12:53:11.380: INFO: Got endpoints: latency-svc-lbkd4 [125.013844ms]
  Oct 28 12:53:11.385: INFO: Got endpoints: latency-svc-kvgr2 [114.928333ms]
  Oct 28 12:53:11.391: INFO: Created: latency-svc-zd5kf
  Oct 28 12:53:11.397: INFO: Created: latency-svc-89kt2
  Oct 28 12:53:11.402: INFO: Created: latency-svc-g5px9
  Oct 28 12:53:11.407: INFO: Got endpoints: latency-svc-zd5kf [131.205574ms]
  Oct 28 12:53:11.410: INFO: Got endpoints: latency-svc-89kt2 [129.592875ms]
  Oct 28 12:53:11.413: INFO: Created: latency-svc-trwsk
  Oct 28 12:53:11.413: INFO: Got endpoints: latency-svc-g5px9 [123.543925ms]
  Oct 28 12:53:11.420: INFO: Created: latency-svc-mvth9
  Oct 28 12:53:11.420: INFO: Got endpoints: latency-svc-trwsk [122.187751ms]
  Oct 28 12:53:11.428: INFO: Got endpoints: latency-svc-mvth9 [121.643973ms]
  Oct 28 12:53:11.429: INFO: Created: latency-svc-7tndl
  Oct 28 12:53:11.436: INFO: Got endpoints: latency-svc-7tndl [120.024365ms]
  Oct 28 12:53:11.438: INFO: Created: latency-svc-26dth
  Oct 28 12:53:11.443: INFO: Created: latency-svc-2xsq5
  Oct 28 12:53:11.443: INFO: Got endpoints: latency-svc-26dth [116.327824ms]
  Oct 28 12:53:11.454: INFO: Got endpoints: latency-svc-2xsq5 [118.388142ms]
  Oct 28 12:53:11.457: INFO: Created: latency-svc-cqkrp
  Oct 28 12:53:11.462: INFO: Got endpoints: latency-svc-cqkrp [120.41111ms]
  Oct 28 12:53:11.467: INFO: Created: latency-svc-42s4w
  Oct 28 12:53:11.471: INFO: Created: latency-svc-s24cm
  Oct 28 12:53:11.472: INFO: Got endpoints: latency-svc-42s4w [120.467718ms]
  Oct 28 12:53:11.476: INFO: Got endpoints: latency-svc-s24cm [118.98321ms]
  Oct 28 12:53:11.479: INFO: Created: latency-svc-gtlpx
  Oct 28 12:53:11.488: INFO: Got endpoints: latency-svc-gtlpx [122.392572ms]
  Oct 28 12:53:11.490: INFO: Created: latency-svc-bc7wm
  Oct 28 12:53:11.494: INFO: Got endpoints: latency-svc-bc7wm [120.615995ms]
  Oct 28 12:53:11.495: INFO: Created: latency-svc-b8xzn
  Oct 28 12:53:11.500: INFO: Created: latency-svc-tcggw
  Oct 28 12:53:11.508: INFO: Got endpoints: latency-svc-b8xzn [127.79941ms]
  Oct 28 12:53:11.516: INFO: Got endpoints: latency-svc-tcggw [130.063777ms]
  Oct 28 12:53:11.521: INFO: Created: latency-svc-nvp7x
  Oct 28 12:53:11.524: INFO: Got endpoints: latency-svc-nvp7x [116.975529ms]
  Oct 28 12:53:11.527: INFO: Created: latency-svc-bqpkt
  Oct 28 12:53:11.532: INFO: Got endpoints: latency-svc-bqpkt [121.158952ms]
  Oct 28 12:53:11.533: INFO: Created: latency-svc-xggtw
  Oct 28 12:53:11.541: INFO: Got endpoints: latency-svc-xggtw [127.166856ms]
  Oct 28 12:53:11.542: INFO: Created: latency-svc-ndr67
  Oct 28 12:53:11.552: INFO: Created: latency-svc-657c5
  Oct 28 12:53:11.552: INFO: Created: latency-svc-74qdx
  Oct 28 12:53:11.558: INFO: Created: latency-svc-lmb9r
  Oct 28 12:53:11.563: INFO: Created: latency-svc-54w96
  Oct 28 12:53:11.568: INFO: Created: latency-svc-8wxnk
  Oct 28 12:53:11.574: INFO: Created: latency-svc-nq9xs
  Oct 28 12:53:11.583: INFO: Created: latency-svc-cjpcm
  Oct 28 12:53:11.583: INFO: Got endpoints: latency-svc-ndr67 [162.705681ms]
  Oct 28 12:53:11.591: INFO: Created: latency-svc-6pr77
  Oct 28 12:53:11.598: INFO: Created: latency-svc-lvxpz
  Oct 28 12:53:11.602: INFO: Created: latency-svc-drxtc
  Oct 28 12:53:11.606: INFO: Created: latency-svc-2vnnp
  Oct 28 12:53:11.615: INFO: Created: latency-svc-9cdrh
  Oct 28 12:53:11.620: INFO: Created: latency-svc-87xj9
  Oct 28 12:53:11.624: INFO: Created: latency-svc-kk7lb
  Oct 28 12:53:11.631: INFO: Got endpoints: latency-svc-657c5 [89.322999ms]
  Oct 28 12:53:11.633: INFO: Created: latency-svc-ngxg4
  Oct 28 12:53:11.640: INFO: Created: latency-svc-68k92
  Oct 28 12:53:11.681: INFO: Got endpoints: latency-svc-74qdx [252.838213ms]
  Oct 28 12:53:11.691: INFO: Created: latency-svc-gw8zn
  Oct 28 12:53:11.732: INFO: Got endpoints: latency-svc-lmb9r [288.10159ms]
  Oct 28 12:53:11.743: INFO: Created: latency-svc-lt7hr
  Oct 28 12:53:11.781: INFO: Got endpoints: latency-svc-54w96 [327.452517ms]
  Oct 28 12:53:11.798: INFO: Created: latency-svc-c8d6s
  Oct 28 12:53:11.835: INFO: Got endpoints: latency-svc-8wxnk [372.681563ms]
  Oct 28 12:53:11.851: INFO: Created: latency-svc-p499b
  Oct 28 12:53:11.880: INFO: Got endpoints: latency-svc-nq9xs [408.160859ms]
  Oct 28 12:53:11.890: INFO: Created: latency-svc-j4bmk
  Oct 28 12:53:11.932: INFO: Got endpoints: latency-svc-cjpcm [456.376664ms]
  Oct 28 12:53:11.941: INFO: Created: latency-svc-7g7ch
  Oct 28 12:53:11.982: INFO: Got endpoints: latency-svc-6pr77 [494.488752ms]
  Oct 28 12:53:11.991: INFO: Created: latency-svc-8dg6z
  Oct 28 12:53:12.031: INFO: Got endpoints: latency-svc-lvxpz [536.701603ms]
  Oct 28 12:53:12.043: INFO: Created: latency-svc-59rwd
  Oct 28 12:53:12.081: INFO: Got endpoints: latency-svc-drxtc [572.29401ms]
  Oct 28 12:53:12.093: INFO: Created: latency-svc-bfpsf
  Oct 28 12:53:12.131: INFO: Got endpoints: latency-svc-2vnnp [615.187331ms]
  Oct 28 12:53:12.139: INFO: Created: latency-svc-n55nh
  Oct 28 12:53:12.182: INFO: Got endpoints: latency-svc-9cdrh [656.649322ms]
  Oct 28 12:53:12.192: INFO: Created: latency-svc-krksv
  Oct 28 12:53:12.232: INFO: Got endpoints: latency-svc-87xj9 [700.621466ms]
  Oct 28 12:53:12.245: INFO: Created: latency-svc-hd9zk
  Oct 28 12:53:12.281: INFO: Got endpoints: latency-svc-kk7lb [844.68752ms]
  Oct 28 12:53:12.292: INFO: Created: latency-svc-qks9r
  Oct 28 12:53:12.331: INFO: Got endpoints: latency-svc-ngxg4 [747.039189ms]
  Oct 28 12:53:12.342: INFO: Created: latency-svc-zczh9
  Oct 28 12:53:12.382: INFO: Got endpoints: latency-svc-68k92 [751.037634ms]
  Oct 28 12:53:12.392: INFO: Created: latency-svc-lv6qj
  Oct 28 12:53:12.437: INFO: Got endpoints: latency-svc-gw8zn [755.691564ms]
  Oct 28 12:53:12.448: INFO: Created: latency-svc-wlm7v
  Oct 28 12:53:12.481: INFO: Got endpoints: latency-svc-lt7hr [749.260116ms]
  Oct 28 12:53:12.580: INFO: Got endpoints: latency-svc-p499b [745.170504ms]
  Oct 28 12:53:12.592: INFO: Created: latency-svc-xj89h
  Oct 28 12:53:12.594: INFO: Got endpoints: latency-svc-c8d6s [811.921911ms]
  Oct 28 12:53:12.601: INFO: Created: latency-svc-px57t
  Oct 28 12:53:12.605: INFO: Created: latency-svc-jkrrb
  Oct 28 12:53:12.633: INFO: Got endpoints: latency-svc-j4bmk [752.118514ms]
  Oct 28 12:53:12.644: INFO: Created: latency-svc-fdj42
  Oct 28 12:53:12.688: INFO: Got endpoints: latency-svc-7g7ch [756.040257ms]
  Oct 28 12:53:12.698: INFO: Created: latency-svc-b8wfp
  Oct 28 12:53:12.730: INFO: Got endpoints: latency-svc-8dg6z [747.616727ms]
  Oct 28 12:53:12.741: INFO: Created: latency-svc-zdtqg
  Oct 28 12:53:12.781: INFO: Got endpoints: latency-svc-59rwd [750.267559ms]
  Oct 28 12:53:12.792: INFO: Created: latency-svc-lhcqx
  Oct 28 12:53:12.832: INFO: Got endpoints: latency-svc-bfpsf [751.357743ms]
  Oct 28 12:53:12.843: INFO: Created: latency-svc-6nj9f
  Oct 28 12:53:12.882: INFO: Got endpoints: latency-svc-n55nh [750.771426ms]
  Oct 28 12:53:12.891: INFO: Created: latency-svc-5nzjt
  Oct 28 12:53:12.933: INFO: Got endpoints: latency-svc-krksv [750.717016ms]
  Oct 28 12:53:12.945: INFO: Created: latency-svc-2wg7h
  Oct 28 12:53:12.981: INFO: Got endpoints: latency-svc-hd9zk [748.261259ms]
  Oct 28 12:53:12.993: INFO: Created: latency-svc-l9xvh
  Oct 28 12:53:13.031: INFO: Got endpoints: latency-svc-qks9r [750.211236ms]
  Oct 28 12:53:13.043: INFO: Created: latency-svc-lfc6b
  Oct 28 12:53:13.081: INFO: Got endpoints: latency-svc-zczh9 [750.207316ms]
  Oct 28 12:53:13.093: INFO: Created: latency-svc-4zksj
  Oct 28 12:53:13.132: INFO: Got endpoints: latency-svc-lv6qj [749.440667ms]
  Oct 28 12:53:13.149: INFO: Created: latency-svc-ttnls
  Oct 28 12:53:13.182: INFO: Got endpoints: latency-svc-wlm7v [743.845774ms]
  Oct 28 12:53:13.193: INFO: Created: latency-svc-lhf59
  Oct 28 12:53:13.230: INFO: Got endpoints: latency-svc-xj89h [748.428237ms]
  Oct 28 12:53:13.251: INFO: Created: latency-svc-7shwj
  Oct 28 12:53:13.283: INFO: Got endpoints: latency-svc-px57t [702.592099ms]
  Oct 28 12:53:13.292: INFO: Created: latency-svc-fbr2t
  Oct 28 12:53:13.332: INFO: Got endpoints: latency-svc-jkrrb [737.915832ms]
  Oct 28 12:53:13.342: INFO: Created: latency-svc-bc7ch
  Oct 28 12:53:13.380: INFO: Got endpoints: latency-svc-fdj42 [747.07381ms]
  Oct 28 12:53:13.392: INFO: Created: latency-svc-gh2q4
  Oct 28 12:53:13.431: INFO: Got endpoints: latency-svc-b8wfp [742.413335ms]
  Oct 28 12:53:13.450: INFO: Created: latency-svc-6hs5f
  Oct 28 12:53:13.483: INFO: Got endpoints: latency-svc-zdtqg [752.362059ms]
  Oct 28 12:53:13.493: INFO: Created: latency-svc-cf7pk
  Oct 28 12:53:13.531: INFO: Got endpoints: latency-svc-lhcqx [749.946423ms]
  Oct 28 12:53:13.541: INFO: Created: latency-svc-hrczb
  Oct 28 12:53:13.584: INFO: Got endpoints: latency-svc-6nj9f [750.956314ms]
  Oct 28 12:53:13.597: INFO: Created: latency-svc-k2c9c
  Oct 28 12:53:13.633: INFO: Got endpoints: latency-svc-5nzjt [750.846484ms]
  Oct 28 12:53:13.644: INFO: Created: latency-svc-58bk6
  Oct 28 12:53:13.682: INFO: Got endpoints: latency-svc-2wg7h [749.712209ms]
  Oct 28 12:53:13.694: INFO: Created: latency-svc-fm5f8
  Oct 28 12:53:13.731: INFO: Got endpoints: latency-svc-l9xvh [750.234467ms]
  Oct 28 12:53:13.744: INFO: Created: latency-svc-s9thj
  Oct 28 12:53:13.782: INFO: Got endpoints: latency-svc-lfc6b [750.172055ms]
  Oct 28 12:53:13.792: INFO: Created: latency-svc-2zn6w
  Oct 28 12:53:13.830: INFO: Got endpoints: latency-svc-4zksj [749.031903ms]
  Oct 28 12:53:13.843: INFO: Created: latency-svc-v9hqs
  Oct 28 12:53:13.881: INFO: Got endpoints: latency-svc-ttnls [749.15702ms]
  Oct 28 12:53:13.893: INFO: Created: latency-svc-8g8vw
  Oct 28 12:53:13.932: INFO: Got endpoints: latency-svc-lhf59 [750.838982ms]
  Oct 28 12:53:13.942: INFO: Created: latency-svc-s27jh
  Oct 28 12:53:13.982: INFO: Got endpoints: latency-svc-7shwj [751.567679ms]
  Oct 28 12:53:13.994: INFO: Created: latency-svc-ld8pg
  Oct 28 12:53:14.030: INFO: Got endpoints: latency-svc-fbr2t [747.636023ms]
  Oct 28 12:53:14.042: INFO: Created: latency-svc-6qk2q
  Oct 28 12:53:14.080: INFO: Got endpoints: latency-svc-bc7ch [748.324489ms]
  Oct 28 12:53:14.089: INFO: Created: latency-svc-jbn79
  Oct 28 12:53:14.132: INFO: Got endpoints: latency-svc-gh2q4 [752.393788ms]
  Oct 28 12:53:14.145: INFO: Created: latency-svc-7w2lz
  Oct 28 12:53:14.181: INFO: Got endpoints: latency-svc-6hs5f [750.300705ms]
  Oct 28 12:53:14.193: INFO: Created: latency-svc-7llvd
  Oct 28 12:53:14.233: INFO: Got endpoints: latency-svc-cf7pk [750.174476ms]
  Oct 28 12:53:14.252: INFO: Created: latency-svc-vj74c
  Oct 28 12:53:14.282: INFO: Got endpoints: latency-svc-hrczb [750.737111ms]
  Oct 28 12:53:14.293: INFO: Created: latency-svc-7rt5j
  Oct 28 12:53:14.331: INFO: Got endpoints: latency-svc-k2c9c [747.520894ms]
  Oct 28 12:53:14.342: INFO: Created: latency-svc-xztzj
  Oct 28 12:53:14.382: INFO: Got endpoints: latency-svc-58bk6 [748.67337ms]
  Oct 28 12:53:14.395: INFO: Created: latency-svc-g9q57
  Oct 28 12:53:14.431: INFO: Got endpoints: latency-svc-fm5f8 [749.061587ms]
  Oct 28 12:53:14.442: INFO: Created: latency-svc-v8z8z
  Oct 28 12:53:14.482: INFO: Got endpoints: latency-svc-s9thj [750.628224ms]
  Oct 28 12:53:14.492: INFO: Created: latency-svc-bpf7r
  Oct 28 12:53:14.532: INFO: Got endpoints: latency-svc-2zn6w [750.467911ms]
  Oct 28 12:53:14.542: INFO: Created: latency-svc-wxg7j
  Oct 28 12:53:14.582: INFO: Got endpoints: latency-svc-v9hqs [751.772168ms]
  Oct 28 12:53:14.594: INFO: Created: latency-svc-xvwrw
  Oct 28 12:53:14.631: INFO: Got endpoints: latency-svc-8g8vw [749.851565ms]
  Oct 28 12:53:14.643: INFO: Created: latency-svc-n85bp
  Oct 28 12:53:14.681: INFO: Got endpoints: latency-svc-s27jh [748.111868ms]
  Oct 28 12:53:14.689: INFO: Created: latency-svc-ldnb9
  Oct 28 12:53:14.733: INFO: Got endpoints: latency-svc-ld8pg [750.681048ms]
  Oct 28 12:53:14.746: INFO: Created: latency-svc-f8vm9
  Oct 28 12:53:14.782: INFO: Got endpoints: latency-svc-6qk2q [751.752544ms]
  Oct 28 12:53:14.792: INFO: Created: latency-svc-5szs4
  Oct 28 12:53:14.832: INFO: Got endpoints: latency-svc-jbn79 [752.370551ms]
  Oct 28 12:53:14.842: INFO: Created: latency-svc-zc5bq
  Oct 28 12:53:14.881: INFO: Got endpoints: latency-svc-7w2lz [748.873566ms]
  Oct 28 12:53:14.893: INFO: Created: latency-svc-7hb9h
  Oct 28 12:53:14.930: INFO: Got endpoints: latency-svc-7llvd [749.315168ms]
  Oct 28 12:53:14.947: INFO: Created: latency-svc-wr75t
  Oct 28 12:53:14.981: INFO: Got endpoints: latency-svc-vj74c [747.178137ms]
  Oct 28 12:53:14.990: INFO: Created: latency-svc-27tkb
  Oct 28 12:53:15.030: INFO: Got endpoints: latency-svc-7rt5j [747.783964ms]
  Oct 28 12:53:15.041: INFO: Created: latency-svc-rncnn
  Oct 28 12:53:15.081: INFO: Got endpoints: latency-svc-xztzj [749.989639ms]
  Oct 28 12:53:15.092: INFO: Created: latency-svc-2wgrk
  Oct 28 12:53:15.132: INFO: Got endpoints: latency-svc-g9q57 [750.115044ms]
  Oct 28 12:53:15.142: INFO: Created: latency-svc-xxht5
  Oct 28 12:53:15.181: INFO: Got endpoints: latency-svc-v8z8z [749.080382ms]
  Oct 28 12:53:15.192: INFO: Created: latency-svc-k2gdb
  Oct 28 12:53:15.233: INFO: Got endpoints: latency-svc-bpf7r [751.44534ms]
  Oct 28 12:53:15.245: INFO: Created: latency-svc-gvp62
  Oct 28 12:53:15.282: INFO: Got endpoints: latency-svc-wxg7j [749.916516ms]
  Oct 28 12:53:15.292: INFO: Created: latency-svc-jb574
  Oct 28 12:53:15.332: INFO: Got endpoints: latency-svc-xvwrw [749.387104ms]
  Oct 28 12:53:15.342: INFO: Created: latency-svc-phpzh
  Oct 28 12:53:15.382: INFO: Got endpoints: latency-svc-n85bp [750.534657ms]
  Oct 28 12:53:15.393: INFO: Created: latency-svc-j5psj
  Oct 28 12:53:15.431: INFO: Got endpoints: latency-svc-ldnb9 [750.408534ms]
  Oct 28 12:53:15.442: INFO: Created: latency-svc-848md
  Oct 28 12:53:15.481: INFO: Got endpoints: latency-svc-f8vm9 [747.738098ms]
  Oct 28 12:53:15.492: INFO: Created: latency-svc-7pr75
  Oct 28 12:53:15.532: INFO: Got endpoints: latency-svc-5szs4 [749.62427ms]
  Oct 28 12:53:15.543: INFO: Created: latency-svc-vd7dp
  Oct 28 12:53:15.582: INFO: Got endpoints: latency-svc-zc5bq [749.481322ms]
  Oct 28 12:53:15.592: INFO: Created: latency-svc-pgv42
  Oct 28 12:53:15.630: INFO: Got endpoints: latency-svc-7hb9h [748.854891ms]
  Oct 28 12:53:15.642: INFO: Created: latency-svc-2x4nk
  Oct 28 12:53:15.680: INFO: Got endpoints: latency-svc-wr75t [749.930723ms]
  Oct 28 12:53:15.691: INFO: Created: latency-svc-7qsrd
  Oct 28 12:53:15.733: INFO: Got endpoints: latency-svc-27tkb [752.333796ms]
  Oct 28 12:53:15.743: INFO: Created: latency-svc-gdr8g
  Oct 28 12:53:15.782: INFO: Got endpoints: latency-svc-rncnn [751.708362ms]
  Oct 28 12:53:15.794: INFO: Created: latency-svc-mv4k8
  Oct 28 12:53:15.832: INFO: Got endpoints: latency-svc-2wgrk [749.997421ms]
  Oct 28 12:53:15.842: INFO: Created: latency-svc-xs6bv
  Oct 28 12:53:15.881: INFO: Got endpoints: latency-svc-xxht5 [749.605882ms]
  Oct 28 12:53:15.890: INFO: Created: latency-svc-qxmwn
  Oct 28 12:53:15.930: INFO: Got endpoints: latency-svc-k2gdb [749.351316ms]
  Oct 28 12:53:15.943: INFO: Created: latency-svc-kw2fc
  Oct 28 12:53:15.981: INFO: Got endpoints: latency-svc-gvp62 [746.474927ms]
  Oct 28 12:53:15.991: INFO: Created: latency-svc-tr4j2
  Oct 28 12:53:16.032: INFO: Got endpoints: latency-svc-jb574 [749.894806ms]
  Oct 28 12:53:16.041: INFO: Created: latency-svc-cgwmn
  Oct 28 12:53:16.085: INFO: Got endpoints: latency-svc-phpzh [752.770128ms]
  Oct 28 12:53:16.095: INFO: Created: latency-svc-dt8cp
  Oct 28 12:53:16.132: INFO: Got endpoints: latency-svc-j5psj [750.497714ms]
  Oct 28 12:53:16.143: INFO: Created: latency-svc-kf2kb
  Oct 28 12:53:16.181: INFO: Got endpoints: latency-svc-848md [750.277886ms]
  Oct 28 12:53:16.190: INFO: Created: latency-svc-7mpv4
  Oct 28 12:53:16.231: INFO: Got endpoints: latency-svc-7pr75 [749.974196ms]
  Oct 28 12:53:16.243: INFO: Created: latency-svc-mpmhf
  Oct 28 12:53:16.282: INFO: Got endpoints: latency-svc-vd7dp [750.33066ms]
  Oct 28 12:53:16.292: INFO: Created: latency-svc-svs2v
  Oct 28 12:53:16.333: INFO: Got endpoints: latency-svc-pgv42 [750.52625ms]
  Oct 28 12:53:16.342: INFO: Created: latency-svc-85x5w
  Oct 28 12:53:16.380: INFO: Got endpoints: latency-svc-2x4nk [749.647749ms]
  Oct 28 12:53:16.392: INFO: Created: latency-svc-hb224
  Oct 28 12:53:16.431: INFO: Got endpoints: latency-svc-7qsrd [749.843197ms]
  Oct 28 12:53:16.441: INFO: Created: latency-svc-85pbp
  Oct 28 12:53:16.483: INFO: Got endpoints: latency-svc-gdr8g [749.318214ms]
  Oct 28 12:53:16.491: INFO: Created: latency-svc-blfnw
  Oct 28 12:53:16.532: INFO: Got endpoints: latency-svc-mv4k8 [749.519086ms]
  Oct 28 12:53:16.544: INFO: Created: latency-svc-n256n
  Oct 28 12:53:16.582: INFO: Got endpoints: latency-svc-xs6bv [750.152973ms]
  Oct 28 12:53:16.592: INFO: Created: latency-svc-pnhzn
  Oct 28 12:53:16.631: INFO: Got endpoints: latency-svc-qxmwn [749.58472ms]
  Oct 28 12:53:16.642: INFO: Created: latency-svc-ndrv8
  Oct 28 12:53:16.680: INFO: Got endpoints: latency-svc-kw2fc [749.632422ms]
  Oct 28 12:53:16.691: INFO: Created: latency-svc-h9bws
  Oct 28 12:53:16.732: INFO: Got endpoints: latency-svc-tr4j2 [750.717694ms]
  Oct 28 12:53:16.742: INFO: Created: latency-svc-v8z7z
  Oct 28 12:53:16.782: INFO: Got endpoints: latency-svc-cgwmn [749.753947ms]
  Oct 28 12:53:16.792: INFO: Created: latency-svc-h8h6s
  Oct 28 12:53:16.830: INFO: Got endpoints: latency-svc-dt8cp [745.316894ms]
  Oct 28 12:53:16.841: INFO: Created: latency-svc-267bp
  Oct 28 12:53:16.880: INFO: Got endpoints: latency-svc-kf2kb [747.505759ms]
  Oct 28 12:53:16.890: INFO: Created: latency-svc-mnpl9
  Oct 28 12:53:16.932: INFO: Got endpoints: latency-svc-7mpv4 [750.639332ms]
  Oct 28 12:53:16.941: INFO: Created: latency-svc-w7k2g
  Oct 28 12:53:16.981: INFO: Got endpoints: latency-svc-mpmhf [749.884977ms]
  Oct 28 12:53:16.995: INFO: Created: latency-svc-8dhfs
  Oct 28 12:53:17.031: INFO: Got endpoints: latency-svc-svs2v [749.207574ms]
  Oct 28 12:53:17.041: INFO: Created: latency-svc-qvz55
  Oct 28 12:53:17.083: INFO: Got endpoints: latency-svc-85x5w [749.619465ms]
  Oct 28 12:53:17.094: INFO: Created: latency-svc-vl5k4
  Oct 28 12:53:17.130: INFO: Got endpoints: latency-svc-hb224 [750.261134ms]
  Oct 28 12:53:17.141: INFO: Created: latency-svc-46cl9
  Oct 28 12:53:17.183: INFO: Got endpoints: latency-svc-85pbp [752.550431ms]
  Oct 28 12:53:17.193: INFO: Created: latency-svc-tpp2p
  Oct 28 12:53:17.232: INFO: Got endpoints: latency-svc-blfnw [749.655062ms]
  Oct 28 12:53:17.247: INFO: Created: latency-svc-xd9gp
  Oct 28 12:53:17.280: INFO: Got endpoints: latency-svc-n256n [747.524627ms]
  Oct 28 12:53:17.292: INFO: Created: latency-svc-6m67c
  Oct 28 12:53:17.331: INFO: Got endpoints: latency-svc-pnhzn [748.642363ms]
  Oct 28 12:53:17.342: INFO: Created: latency-svc-s62tp
  Oct 28 12:53:17.381: INFO: Got endpoints: latency-svc-ndrv8 [750.143154ms]
  Oct 28 12:53:17.391: INFO: Created: latency-svc-b2spb
  Oct 28 12:53:17.431: INFO: Got endpoints: latency-svc-h9bws [750.919315ms]
  Oct 28 12:53:17.442: INFO: Created: latency-svc-zmjxp
  Oct 28 12:53:17.483: INFO: Got endpoints: latency-svc-v8z7z [750.77446ms]
  Oct 28 12:53:17.492: INFO: Created: latency-svc-8wmsb
  Oct 28 12:53:17.532: INFO: Got endpoints: latency-svc-h8h6s [750.026492ms]
  Oct 28 12:53:17.541: INFO: Created: latency-svc-jmlqm
  Oct 28 12:53:17.583: INFO: Got endpoints: latency-svc-267bp [752.486936ms]
  Oct 28 12:53:17.594: INFO: Created: latency-svc-klktg
  Oct 28 12:53:17.630: INFO: Got endpoints: latency-svc-mnpl9 [750.205555ms]
  Oct 28 12:53:17.641: INFO: Created: latency-svc-bfl4f
  Oct 28 12:53:17.683: INFO: Got endpoints: latency-svc-w7k2g [750.51392ms]
  Oct 28 12:53:17.693: INFO: Created: latency-svc-5vt8s
  Oct 28 12:53:17.732: INFO: Got endpoints: latency-svc-8dhfs [750.393151ms]
  Oct 28 12:53:17.742: INFO: Created: latency-svc-g8qdl
  Oct 28 12:53:17.782: INFO: Got endpoints: latency-svc-qvz55 [750.123131ms]
  Oct 28 12:53:17.793: INFO: Created: latency-svc-wwthg
  Oct 28 12:53:17.837: INFO: Got endpoints: latency-svc-vl5k4 [753.524234ms]
  Oct 28 12:53:17.846: INFO: Created: latency-svc-x5754
  Oct 28 12:53:17.881: INFO: Got endpoints: latency-svc-46cl9 [750.115509ms]
  Oct 28 12:53:17.892: INFO: Created: latency-svc-x65bj
  Oct 28 12:53:17.930: INFO: Got endpoints: latency-svc-tpp2p [747.087624ms]
  Oct 28 12:53:17.942: INFO: Created: latency-svc-p8glp
  Oct 28 12:53:17.982: INFO: Got endpoints: latency-svc-xd9gp [749.495781ms]
  Oct 28 12:53:17.991: INFO: Created: latency-svc-7mchd
  Oct 28 12:53:18.032: INFO: Got endpoints: latency-svc-6m67c [751.801795ms]
  Oct 28 12:53:18.042: INFO: Created: latency-svc-xvq5c
  Oct 28 12:53:18.082: INFO: Got endpoints: latency-svc-s62tp [750.988793ms]
  Oct 28 12:53:18.094: INFO: Created: latency-svc-x4tdx
  Oct 28 12:53:18.132: INFO: Got endpoints: latency-svc-b2spb [750.775231ms]
  Oct 28 12:53:18.141: INFO: Created: latency-svc-fzsfw
  Oct 28 12:53:18.183: INFO: Got endpoints: latency-svc-zmjxp [751.918919ms]
  Oct 28 12:53:18.194: INFO: Created: latency-svc-74pw6
  Oct 28 12:53:18.233: INFO: Got endpoints: latency-svc-8wmsb [749.497656ms]
  Oct 28 12:53:18.243: INFO: Created: latency-svc-t6r7m
  Oct 28 12:53:18.282: INFO: Got endpoints: latency-svc-jmlqm [749.662277ms]
  Oct 28 12:53:18.291: INFO: Created: latency-svc-8pqb4
  Oct 28 12:53:18.330: INFO: Got endpoints: latency-svc-klktg [747.182072ms]
  Oct 28 12:53:18.342: INFO: Created: latency-svc-s8djs
  Oct 28 12:53:18.380: INFO: Got endpoints: latency-svc-bfl4f [749.853126ms]
  Oct 28 12:53:18.391: INFO: Created: latency-svc-xqgzg
  Oct 28 12:53:18.436: INFO: Got endpoints: latency-svc-5vt8s [752.821189ms]
  Oct 28 12:53:18.447: INFO: Created: latency-svc-7jkl2
  Oct 28 12:53:18.480: INFO: Got endpoints: latency-svc-g8qdl [747.75546ms]
  Oct 28 12:53:18.494: INFO: Created: latency-svc-7wdjm
  Oct 28 12:53:18.532: INFO: Got endpoints: latency-svc-wwthg [750.244858ms]
  Oct 28 12:53:18.542: INFO: Created: latency-svc-68z4z
  Oct 28 12:53:18.583: INFO: Got endpoints: latency-svc-x5754 [746.11053ms]
  Oct 28 12:53:18.592: INFO: Created: latency-svc-rg48w
  Oct 28 12:53:18.632: INFO: Got endpoints: latency-svc-x65bj [750.958217ms]
  Oct 28 12:53:18.643: INFO: Created: latency-svc-6r5dn
  Oct 28 12:53:18.681: INFO: Got endpoints: latency-svc-p8glp [750.061061ms]
  Oct 28 12:53:18.692: INFO: Created: latency-svc-bz75h
  Oct 28 12:53:18.731: INFO: Got endpoints: latency-svc-7mchd [748.546868ms]
  Oct 28 12:53:18.740: INFO: Created: latency-svc-24d6s
  Oct 28 12:53:18.782: INFO: Got endpoints: latency-svc-xvq5c [749.672502ms]
  Oct 28 12:53:18.793: INFO: Created: latency-svc-67rrn
  Oct 28 12:53:18.833: INFO: Got endpoints: latency-svc-x4tdx [750.349899ms]
  Oct 28 12:53:18.842: INFO: Created: latency-svc-2c8sh
  Oct 28 12:53:18.882: INFO: Got endpoints: latency-svc-fzsfw [750.112728ms]
  Oct 28 12:53:18.893: INFO: Created: latency-svc-6p6hs
  Oct 28 12:53:18.930: INFO: Got endpoints: latency-svc-74pw6 [747.305512ms]
  Oct 28 12:53:18.942: INFO: Created: latency-svc-p4tq8
  Oct 28 12:53:18.987: INFO: Got endpoints: latency-svc-t6r7m [754.179469ms]
  Oct 28 12:53:18.999: INFO: Created: latency-svc-dpkrl
  Oct 28 12:53:19.032: INFO: Got endpoints: latency-svc-8pqb4 [749.854782ms]
  Oct 28 12:53:19.042: INFO: Created: latency-svc-w9hmk
  Oct 28 12:53:19.082: INFO: Got endpoints: latency-svc-s8djs [751.965789ms]
  Oct 28 12:53:19.130: INFO: Got endpoints: latency-svc-xqgzg [749.742579ms]
  Oct 28 12:53:19.183: INFO: Got endpoints: latency-svc-7jkl2 [746.844115ms]
  Oct 28 12:53:19.230: INFO: Got endpoints: latency-svc-7wdjm [749.567434ms]
  Oct 28 12:53:19.282: INFO: Got endpoints: latency-svc-68z4z [750.155158ms]
  Oct 28 12:53:19.330: INFO: Got endpoints: latency-svc-rg48w [747.292845ms]
  Oct 28 12:53:19.381: INFO: Got endpoints: latency-svc-6r5dn [748.348415ms]
  Oct 28 12:53:19.432: INFO: Got endpoints: latency-svc-bz75h [751.421878ms]
  Oct 28 12:53:19.481: INFO: Got endpoints: latency-svc-24d6s [750.118843ms]
  Oct 28 12:53:19.532: INFO: Got endpoints: latency-svc-67rrn [750.441113ms]
  Oct 28 12:53:19.581: INFO: Got endpoints: latency-svc-2c8sh [747.779843ms]
  Oct 28 12:53:19.632: INFO: Got endpoints: latency-svc-6p6hs [749.554336ms]
  Oct 28 12:53:19.680: INFO: Got endpoints: latency-svc-p4tq8 [750.015301ms]
  Oct 28 12:53:19.732: INFO: Got endpoints: latency-svc-dpkrl [744.369226ms]
  Oct 28 12:53:19.781: INFO: Got endpoints: latency-svc-w9hmk [749.153323ms]
  Oct 28 12:53:19.782: INFO: Latencies: [19.114454ms 33.54653ms 39.595837ms 43.870586ms 52.70301ms 61.307722ms 69.533844ms 79.288635ms 89.322999ms 89.923599ms 97.902292ms 103.825777ms 113.991064ms 114.928333ms 116.327824ms 116.975529ms 118.388142ms 118.98321ms 119.094292ms 120.024365ms 120.41111ms 120.467718ms 120.615995ms 121.158952ms 121.643973ms 122.187751ms 122.392572ms 123.543925ms 125.013844ms 127.166856ms 127.652909ms 127.79941ms 129.592875ms 130.063777ms 131.205574ms 135.664643ms 162.705681ms 252.838213ms 288.10159ms 327.452517ms 372.681563ms 408.160859ms 456.376664ms 494.488752ms 536.701603ms 572.29401ms 615.187331ms 656.649322ms 700.621466ms 702.592099ms 737.915832ms 742.413335ms 743.845774ms 744.369226ms 745.170504ms 745.316894ms 746.11053ms 746.474927ms 746.844115ms 747.039189ms 747.07381ms 747.087624ms 747.178137ms 747.182072ms 747.292845ms 747.305512ms 747.505759ms 747.520894ms 747.524627ms 747.616727ms 747.636023ms 747.738098ms 747.75546ms 747.779843ms 747.783964ms 748.111868ms 748.261259ms 748.324489ms 748.348415ms 748.428237ms 748.546868ms 748.642363ms 748.67337ms 748.854891ms 748.873566ms 749.031903ms 749.061587ms 749.080382ms 749.153323ms 749.15702ms 749.207574ms 749.260116ms 749.315168ms 749.318214ms 749.351316ms 749.387104ms 749.440667ms 749.481322ms 749.495781ms 749.497656ms 749.519086ms 749.554336ms 749.567434ms 749.58472ms 749.605882ms 749.619465ms 749.62427ms 749.632422ms 749.647749ms 749.655062ms 749.662277ms 749.672502ms 749.712209ms 749.742579ms 749.753947ms 749.843197ms 749.851565ms 749.853126ms 749.854782ms 749.884977ms 749.894806ms 749.916516ms 749.930723ms 749.946423ms 749.974196ms 749.989639ms 749.997421ms 750.015301ms 750.026492ms 750.061061ms 750.112728ms 750.115044ms 750.115509ms 750.118843ms 750.123131ms 750.143154ms 750.152973ms 750.155158ms 750.172055ms 750.174476ms 750.205555ms 750.207316ms 750.211236ms 750.234467ms 750.244858ms 750.261134ms 750.267559ms 750.277886ms 750.300705ms 750.33066ms 750.349899ms 750.393151ms 750.408534ms 750.441113ms 750.467911ms 750.497714ms 750.51392ms 750.52625ms 750.534657ms 750.628224ms 750.639332ms 750.681048ms 750.717016ms 750.717694ms 750.737111ms 750.771426ms 750.77446ms 750.775231ms 750.838982ms 750.846484ms 750.919315ms 750.956314ms 750.958217ms 750.988793ms 751.037634ms 751.357743ms 751.421878ms 751.44534ms 751.567679ms 751.708362ms 751.752544ms 751.772168ms 751.801795ms 751.918919ms 751.965789ms 752.118514ms 752.333796ms 752.362059ms 752.370551ms 752.393788ms 752.486936ms 752.550431ms 752.770128ms 752.821189ms 753.524234ms 754.179469ms 755.691564ms 756.040257ms 811.921911ms 844.68752ms]
  Oct 28 12:53:19.782: INFO: 50 %ile: 749.519086ms
  Oct 28 12:53:19.782: INFO: 90 %ile: 751.752544ms
  Oct 28 12:53:19.782: INFO: 99 %ile: 811.921911ms
  Oct 28 12:53:19.782: INFO: Total sample count: 200
  Oct 28 12:53:19.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-2227" for this suite. @ 10/28/23 12:53:19.788
• [10.766 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 10/28/23 12:53:19.797
  Oct 28 12:53:19.797: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-runtime @ 10/28/23 12:53:19.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:53:19.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:53:19.822
  STEP: create the container @ 10/28/23 12:53:19.825
  W1028 12:53:19.834001      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/28/23 12:53:19.834
  STEP: get the container status @ 10/28/23 12:53:22.853
  STEP: the container should be terminated @ 10/28/23 12:53:22.856
  STEP: the termination message should be set @ 10/28/23 12:53:22.856
  Oct 28 12:53:22.856: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 10/28/23 12:53:22.856
  Oct 28 12:53:22.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4024" for this suite. @ 10/28/23 12:53:22.874
• [3.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 10/28/23 12:53:22.883
  Oct 28 12:53:22.883: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename gc @ 10/28/23 12:53:22.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:53:22.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:53:22.904
  STEP: create the rc1 @ 10/28/23 12:53:22.911
  STEP: create the rc2 @ 10/28/23 12:53:22.918
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 10/28/23 12:53:28.998
  STEP: delete the rc simpletest-rc-to-be-deleted @ 10/28/23 12:53:29.487
  STEP: wait for the rc to be deleted @ 10/28/23 12:53:29.495
  Oct 28 12:53:34.535: INFO: 89 pods remaining
  Oct 28 12:53:34.535: INFO: 88 pods has nil DeletionTimestamp
  Oct 28 12:53:34.535: INFO: 
  Oct 28 12:53:39.514: INFO: 60 pods remaining
  Oct 28 12:53:39.515: INFO: 60 pods has nil DeletionTimestamp
  Oct 28 12:53:39.515: INFO: 
  STEP: Gathering metrics @ 10/28/23 12:53:44.507
  W1028 12:53:44.514107      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 28 12:53:44.514: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 28 12:53:44.514: INFO: Deleting pod "simpletest-rc-to-be-deleted-4gcw7" in namespace "gc-491"
  Oct 28 12:53:44.536: INFO: Deleting pod "simpletest-rc-to-be-deleted-4m4gq" in namespace "gc-491"
  Oct 28 12:53:44.546: INFO: Deleting pod "simpletest-rc-to-be-deleted-4rs9c" in namespace "gc-491"
  Oct 28 12:53:44.556: INFO: Deleting pod "simpletest-rc-to-be-deleted-4x68q" in namespace "gc-491"
  Oct 28 12:53:44.566: INFO: Deleting pod "simpletest-rc-to-be-deleted-4xch5" in namespace "gc-491"
  Oct 28 12:53:44.580: INFO: Deleting pod "simpletest-rc-to-be-deleted-4zh9l" in namespace "gc-491"
  Oct 28 12:53:44.597: INFO: Deleting pod "simpletest-rc-to-be-deleted-5j2lg" in namespace "gc-491"
  Oct 28 12:53:44.607: INFO: Deleting pod "simpletest-rc-to-be-deleted-5zfm6" in namespace "gc-491"
  Oct 28 12:53:44.619: INFO: Deleting pod "simpletest-rc-to-be-deleted-6flwh" in namespace "gc-491"
  Oct 28 12:53:44.630: INFO: Deleting pod "simpletest-rc-to-be-deleted-6l7mj" in namespace "gc-491"
  Oct 28 12:53:44.640: INFO: Deleting pod "simpletest-rc-to-be-deleted-776hq" in namespace "gc-491"
  Oct 28 12:53:44.652: INFO: Deleting pod "simpletest-rc-to-be-deleted-78twn" in namespace "gc-491"
  Oct 28 12:53:44.664: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bdbf" in namespace "gc-491"
  Oct 28 12:53:44.675: INFO: Deleting pod "simpletest-rc-to-be-deleted-8l6tj" in namespace "gc-491"
  Oct 28 12:53:44.687: INFO: Deleting pod "simpletest-rc-to-be-deleted-8ntdk" in namespace "gc-491"
  Oct 28 12:53:44.697: INFO: Deleting pod "simpletest-rc-to-be-deleted-8q4g9" in namespace "gc-491"
  Oct 28 12:53:44.709: INFO: Deleting pod "simpletest-rc-to-be-deleted-8w72v" in namespace "gc-491"
  Oct 28 12:53:44.720: INFO: Deleting pod "simpletest-rc-to-be-deleted-98bs8" in namespace "gc-491"
  Oct 28 12:53:44.730: INFO: Deleting pod "simpletest-rc-to-be-deleted-9djsd" in namespace "gc-491"
  Oct 28 12:53:44.743: INFO: Deleting pod "simpletest-rc-to-be-deleted-b59jm" in namespace "gc-491"
  Oct 28 12:53:44.756: INFO: Deleting pod "simpletest-rc-to-be-deleted-b9vlz" in namespace "gc-491"
  Oct 28 12:53:44.767: INFO: Deleting pod "simpletest-rc-to-be-deleted-bdp4k" in namespace "gc-491"
  Oct 28 12:53:44.779: INFO: Deleting pod "simpletest-rc-to-be-deleted-bf5q6" in namespace "gc-491"
  Oct 28 12:53:44.790: INFO: Deleting pod "simpletest-rc-to-be-deleted-bxmln" in namespace "gc-491"
  Oct 28 12:53:44.805: INFO: Deleting pod "simpletest-rc-to-be-deleted-c2plg" in namespace "gc-491"
  Oct 28 12:53:44.817: INFO: Deleting pod "simpletest-rc-to-be-deleted-cmdns" in namespace "gc-491"
  Oct 28 12:53:44.829: INFO: Deleting pod "simpletest-rc-to-be-deleted-cncmj" in namespace "gc-491"
  Oct 28 12:53:44.842: INFO: Deleting pod "simpletest-rc-to-be-deleted-cx6st" in namespace "gc-491"
  Oct 28 12:53:44.858: INFO: Deleting pod "simpletest-rc-to-be-deleted-czljk" in namespace "gc-491"
  Oct 28 12:53:44.932: INFO: Deleting pod "simpletest-rc-to-be-deleted-d6b5n" in namespace "gc-491"
  Oct 28 12:53:44.947: INFO: Deleting pod "simpletest-rc-to-be-deleted-d7zkx" in namespace "gc-491"
  Oct 28 12:53:44.967: INFO: Deleting pod "simpletest-rc-to-be-deleted-dhldw" in namespace "gc-491"
  Oct 28 12:53:44.982: INFO: Deleting pod "simpletest-rc-to-be-deleted-djbpp" in namespace "gc-491"
  Oct 28 12:53:44.995: INFO: Deleting pod "simpletest-rc-to-be-deleted-f95w2" in namespace "gc-491"
  Oct 28 12:53:45.013: INFO: Deleting pod "simpletest-rc-to-be-deleted-fbdh2" in namespace "gc-491"
  Oct 28 12:53:45.023: INFO: Deleting pod "simpletest-rc-to-be-deleted-fdh49" in namespace "gc-491"
  Oct 28 12:53:45.037: INFO: Deleting pod "simpletest-rc-to-be-deleted-fjqz4" in namespace "gc-491"
  Oct 28 12:53:45.050: INFO: Deleting pod "simpletest-rc-to-be-deleted-g55pq" in namespace "gc-491"
  Oct 28 12:53:45.066: INFO: Deleting pod "simpletest-rc-to-be-deleted-gc2kl" in namespace "gc-491"
  Oct 28 12:53:45.077: INFO: Deleting pod "simpletest-rc-to-be-deleted-gvcvm" in namespace "gc-491"
  Oct 28 12:53:45.089: INFO: Deleting pod "simpletest-rc-to-be-deleted-hb7lk" in namespace "gc-491"
  Oct 28 12:53:45.108: INFO: Deleting pod "simpletest-rc-to-be-deleted-hksd9" in namespace "gc-491"
  Oct 28 12:53:45.121: INFO: Deleting pod "simpletest-rc-to-be-deleted-hm9c8" in namespace "gc-491"
  Oct 28 12:53:45.132: INFO: Deleting pod "simpletest-rc-to-be-deleted-hx6bh" in namespace "gc-491"
  Oct 28 12:53:45.144: INFO: Deleting pod "simpletest-rc-to-be-deleted-j8vt5" in namespace "gc-491"
  Oct 28 12:53:45.156: INFO: Deleting pod "simpletest-rc-to-be-deleted-j9cqf" in namespace "gc-491"
  Oct 28 12:53:45.171: INFO: Deleting pod "simpletest-rc-to-be-deleted-jbmhh" in namespace "gc-491"
  Oct 28 12:53:45.184: INFO: Deleting pod "simpletest-rc-to-be-deleted-jlp5v" in namespace "gc-491"
  Oct 28 12:53:45.195: INFO: Deleting pod "simpletest-rc-to-be-deleted-jnnfh" in namespace "gc-491"
  Oct 28 12:53:45.207: INFO: Deleting pod "simpletest-rc-to-be-deleted-jp9nc" in namespace "gc-491"
  Oct 28 12:53:45.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-491" for this suite. @ 10/28/23 12:53:45.228
• [22.353 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 10/28/23 12:53:45.237
  Oct 28 12:53:45.238: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename tables @ 10/28/23 12:53:45.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:53:45.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:53:45.277
  Oct 28 12:53:45.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-6529" for this suite. @ 10/28/23 12:53:45.293
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 10/28/23 12:53:45.314
  Oct 28 12:53:45.314: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename dns @ 10/28/23 12:53:45.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:53:45.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:53:45.342
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/28/23 12:53:45.346
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/28/23 12:53:45.346
  STEP: creating a pod to probe DNS @ 10/28/23 12:53:45.346
  STEP: submitting the pod to kubernetes @ 10/28/23 12:53:45.346
  STEP: retrieving the pod @ 10/28/23 12:53:49.413
  STEP: looking for the results for each expected name from probers @ 10/28/23 12:53:49.417
  Oct 28 12:53:49.435: INFO: DNS probes using dns-8970/dns-test-bf280875-ea00-405e-bb36-295857a04bbe succeeded

  Oct 28 12:53:49.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 12:53:49.438
  STEP: Destroying namespace "dns-8970" for this suite. @ 10/28/23 12:53:49.453
• [4.145 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 10/28/23 12:53:49.46
  Oct 28 12:53:49.460: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename var-expansion @ 10/28/23 12:53:49.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:53:49.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:53:49.482
  STEP: creating the pod @ 10/28/23 12:53:49.485
  STEP: waiting for pod running @ 10/28/23 12:53:49.497
  STEP: creating a file in subpath @ 10/28/23 12:53:51.508
  Oct 28 12:53:51.511: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-365 PodName:var-expansion-61829a16-ed8d-4d75-bced-10a6d5a9355a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:53:51.512: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:53:51.513: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:53:51.513: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-365/pods/var-expansion-61829a16-ed8d-4d75-bced-10a6d5a9355a/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 10/28/23 12:53:51.588
  Oct 28 12:53:51.592: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-365 PodName:var-expansion-61829a16-ed8d-4d75-bced-10a6d5a9355a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:53:51.592: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:53:51.593: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:53:51.593: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-365/pods/var-expansion-61829a16-ed8d-4d75-bced-10a6d5a9355a/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 10/28/23 12:53:51.66
  Oct 28 12:53:52.173: INFO: Successfully updated pod "var-expansion-61829a16-ed8d-4d75-bced-10a6d5a9355a"
  STEP: waiting for annotated pod running @ 10/28/23 12:53:52.173
  STEP: deleting the pod gracefully @ 10/28/23 12:53:52.177
  Oct 28 12:53:52.177: INFO: Deleting pod "var-expansion-61829a16-ed8d-4d75-bced-10a6d5a9355a" in namespace "var-expansion-365"
  Oct 28 12:53:52.185: INFO: Wait up to 5m0s for pod "var-expansion-61829a16-ed8d-4d75-bced-10a6d5a9355a" to be fully deleted
  Oct 28 12:54:24.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-365" for this suite. @ 10/28/23 12:54:24.268
• [34.814 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 10/28/23 12:54:24.276
  Oct 28 12:54:24.276: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename field-validation @ 10/28/23 12:54:24.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:54:24.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:54:24.298
  STEP: apply creating a deployment @ 10/28/23 12:54:24.301
  Oct 28 12:54:24.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5972" for this suite. @ 10/28/23 12:54:24.318
• [0.050 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 10/28/23 12:54:24.326
  Oct 28 12:54:24.326: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename daemonsets @ 10/28/23 12:54:24.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:54:24.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:54:24.352
  STEP: Creating simple DaemonSet "daemon-set" @ 10/28/23 12:54:24.374
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/28/23 12:54:24.38
  Oct 28 12:54:24.388: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:54:24.388: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:54:24.392: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:54:24.392: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 12:54:25.396: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:54:25.396: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:54:25.400: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 12:54:25.400: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 12:54:26.398: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:54:26.398: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 12:54:26.402: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 28 12:54:26.402: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 10/28/23 12:54:26.406
  STEP: DeleteCollection of the DaemonSets @ 10/28/23 12:54:26.409
  STEP: Verify that ReplicaSets have been deleted @ 10/28/23 12:54:26.419
  Oct 28 12:54:26.429: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19193"},"items":null}

  Oct 28 12:54:26.434: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19193"},"items":[{"metadata":{"name":"daemon-set-wlt6r","generateName":"daemon-set-","namespace":"daemonsets-5157","uid":"e93a7c20-28a0-40a0-b389-a7a947b2fc36","resourceVersion":"19190","creationTimestamp":"2023-10-28T12:54:24Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"24d10355-8ea5-451d-8156-d779e9f63233","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-28T12:54:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"24d10355-8ea5-451d-8156-d779e9f63233\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-28T12:54:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.15.189\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2k7gk","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2k7gk","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-5-226","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-5-226"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-28T12:54:24Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-28T12:54:26Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-28T12:54:26Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-28T12:54:24Z"}],"hostIP":"172.31.5.226","podIP":"192.168.15.189","podIPs":[{"ip":"192.168.15.189"}],"startTime":"2023-10-28T12:54:24Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-28T12:54:25Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://29d197c0b011e46f3237568667148f0c0c7886c3da296b67698e7e066a3957e4","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-xqhjw","generateName":"daemon-set-","namespace":"daemonsets-5157","uid":"b84207d3-c419-45ec-a5a0-10698d594ea4","resourceVersion":"19188","creationTimestamp":"2023-10-28T12:54:24Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"24d10355-8ea5-451d-8156-d779e9f63233","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-28T12:54:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"24d10355-8ea5-451d-8156-d779e9f63233\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-28T12:54:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.136.221\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-cxk5r","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-cxk5r","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-37-29","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-37-29"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-28T12:54:24Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-28T12:54:25Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-28T12:54:25Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-28T12:54:24Z"}],"hostIP":"172.31.37.29","podIP":"192.168.136.221","podIPs":[{"ip":"192.168.136.221"}],"startTime":"2023-10-28T12:54:24Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-28T12:54:25Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://12e1454000aaea3201fc3665cf4f3a1bca15331b8e3f37418accd221306bc4a1","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-z2v5g","generateName":"daemon-set-","namespace":"daemonsets-5157","uid":"f39599cb-716c-42cc-b74d-3abb8d5f7a6e","resourceVersion":"19185","creationTimestamp":"2023-10-28T12:54:24Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"24d10355-8ea5-451d-8156-d779e9f63233","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-28T12:54:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"24d10355-8ea5-451d-8156-d779e9f63233\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-28T12:54:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.191.216\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-qzw74","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-qzw74","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-20-72","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-20-72"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-28T12:54:24Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-28T12:54:25Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-28T12:54:25Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-28T12:54:24Z"}],"hostIP":"172.31.20.72","podIP":"192.168.191.216","podIPs":[{"ip":"192.168.191.216"}],"startTime":"2023-10-28T12:54:24Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-28T12:54:25Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://8d0960588e73283913a125a38aecefeed8a93b12ab289407f148b60a79e0d32b","started":true}],"qosClass":"BestEffort"}}]}

  Oct 28 12:54:26.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5157" for this suite. @ 10/28/23 12:54:26.459
• [2.139 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 10/28/23 12:54:26.466
  Oct 28 12:54:26.466: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename job @ 10/28/23 12:54:26.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:54:26.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:54:26.485
  STEP: Creating a job @ 10/28/23 12:54:26.488
  STEP: Ensuring active pods == parallelism @ 10/28/23 12:54:26.494
  STEP: Orphaning one of the Job's Pods @ 10/28/23 12:54:28.5
  Oct 28 12:54:29.016: INFO: Successfully updated pod "adopt-release-hp2dd"
  STEP: Checking that the Job readopts the Pod @ 10/28/23 12:54:29.016
  STEP: Removing the labels from the Job's Pod @ 10/28/23 12:54:31.024
  Oct 28 12:54:31.536: INFO: Successfully updated pod "adopt-release-hp2dd"
  STEP: Checking that the Job releases the Pod @ 10/28/23 12:54:31.536
  Oct 28 12:54:33.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1103" for this suite. @ 10/28/23 12:54:33.548
• [7.090 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 10/28/23 12:54:33.556
  Oct 28 12:54:33.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename resourcequota @ 10/28/23 12:54:33.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:54:33.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:54:33.578
  STEP: Counting existing ResourceQuota @ 10/28/23 12:54:33.581
  STEP: Creating a ResourceQuota @ 10/28/23 12:54:38.585
  STEP: Ensuring resource quota status is calculated @ 10/28/23 12:54:38.592
  STEP: Creating a ReplicaSet @ 10/28/23 12:54:40.596
  STEP: Ensuring resource quota status captures replicaset creation @ 10/28/23 12:54:40.609
  STEP: Deleting a ReplicaSet @ 10/28/23 12:54:42.614
  STEP: Ensuring resource quota status released usage @ 10/28/23 12:54:42.62
  Oct 28 12:54:44.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3634" for this suite. @ 10/28/23 12:54:44.628
• [11.079 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 10/28/23 12:54:44.637
  Oct 28 12:54:44.637: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename disruption @ 10/28/23 12:54:44.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:54:44.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:54:44.661
  STEP: Waiting for the pdb to be processed @ 10/28/23 12:54:44.67
  STEP: Waiting for all pods to be running @ 10/28/23 12:54:46.706
  Oct 28 12:54:46.712: INFO: running pods: 0 < 3
  Oct 28 12:54:48.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3332" for this suite. @ 10/28/23 12:54:48.723
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 10/28/23 12:54:48.733
  Oct 28 12:54:48.733: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename svcaccounts @ 10/28/23 12:54:48.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:54:48.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:54:48.754
  Oct 28 12:54:48.772: INFO: created pod
  STEP: Saw pod success @ 10/28/23 12:54:52.788
  Oct 28 12:55:22.789: INFO: polling logs
  Oct 28 12:55:22.806: INFO: Pod logs: 
  I1028 12:54:49.548107       1 log.go:194] OK: Got token
  I1028 12:54:49.548318       1 log.go:194] validating with in-cluster discovery
  I1028 12:54:49.548644       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I1028 12:54:49.548746       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6451:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000139850), NotBefore:(*jwt.NumericDate)(0xc000139938), IssuedAt:(*jwt.NumericDate)(0xc000139860), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6451", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f04b7a9f-f9d0-4262-aaac-6b7419546e73"}}}
  I1028 12:54:49.559038       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1028 12:54:49.565774       1 log.go:194] OK: Validated signature on JWT
  I1028 12:54:49.565923       1 log.go:194] OK: Got valid claims from token!
  I1028 12:54:49.565960       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6451:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000492e0), NotBefore:(*jwt.NumericDate)(0xc000049328), IssuedAt:(*jwt.NumericDate)(0xc0000492e8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6451", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f04b7a9f-f9d0-4262-aaac-6b7419546e73"}}}

  Oct 28 12:55:22.806: INFO: completed pod
  Oct 28 12:55:22.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6451" for this suite. @ 10/28/23 12:55:22.816
• [34.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 10/28/23 12:55:22.824
  Oct 28 12:55:22.824: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/28/23 12:55:22.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:55:22.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:55:22.843
  STEP: creating a target pod @ 10/28/23 12:55:22.845
  STEP: adding an ephemeral container @ 10/28/23 12:55:24.865
  STEP: checking pod container endpoints @ 10/28/23 12:55:26.881
  Oct 28 12:55:26.881: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6994 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 12:55:26.881: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 12:55:26.882: INFO: ExecWithOptions: Clientset creation
  Oct 28 12:55:26.882: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-6994/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Oct 28 12:55:26.972: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 10/28/23 12:55:26.991
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 10/28/23 12:55:26.997
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 10/28/23 12:55:27.007
  Oct 28 12:55:27.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6994" for this suite. @ 10/28/23 12:55:27.017
• [4.199 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 10/28/23 12:55:27.024
  Oct 28 12:55:27.024: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename namespaces @ 10/28/23 12:55:27.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:55:27.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:55:27.048
  STEP: Creating a test namespace @ 10/28/23 12:55:27.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:55:27.076
  STEP: Creating a service in the namespace @ 10/28/23 12:55:27.079
  STEP: Deleting the namespace @ 10/28/23 12:55:27.094
  STEP: Waiting for the namespace to be removed. @ 10/28/23 12:55:27.105
  STEP: Recreating the namespace @ 10/28/23 12:55:33.111
  STEP: Verifying there is no service in the namespace @ 10/28/23 12:55:33.14
  Oct 28 12:55:33.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3833" for this suite. @ 10/28/23 12:55:33.147
  STEP: Destroying namespace "nsdeletetest-4692" for this suite. @ 10/28/23 12:55:33.154
  Oct 28 12:55:33.157: INFO: Namespace nsdeletetest-4692 was already deleted
  STEP: Destroying namespace "nsdeletetest-5764" for this suite. @ 10/28/23 12:55:33.157
• [6.141 seconds]
------------------------------
SSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 10/28/23 12:55:33.165
  Oct 28 12:55:33.165: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename conformance-tests @ 10/28/23 12:55:33.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:55:33.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:55:33.188
  STEP: Getting node addresses @ 10/28/23 12:55:33.191
  Oct 28 12:55:33.191: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Oct 28 12:55:33.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2693" for this suite. @ 10/28/23 12:55:33.202
• [0.044 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 10/28/23 12:55:33.209
  Oct 28 12:55:33.209: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubelet-test @ 10/28/23 12:55:33.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:55:33.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:55:33.232
  Oct 28 12:55:37.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7421" for this suite. @ 10/28/23 12:55:37.256
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 10/28/23 12:55:37.266
  Oct 28 12:55:37.266: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-probe @ 10/28/23 12:55:37.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:55:37.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:55:37.284
  STEP: Creating pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512 @ 10/28/23 12:55:37.287
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/28/23 12:55:39.304
  Oct 28 12:55:39.308: INFO: Initial restart count of pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 is 0
  Oct 28 12:55:39.312: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:55:41.315: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:55:43.320: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:55:45.326: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:55:47.330: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:55:49.334: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:55:51.339: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:55:53.345: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:55:55.349: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:55:57.353: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:55:59.359: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:01.364: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:03.369: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:05.373: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:07.377: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:09.382: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:11.386: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:13.391: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:15.395: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:17.401: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:19.404: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:21.408: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:23.414: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:25.418: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:27.422: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:29.427: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:31.431: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:33.436: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:35.440: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:37.445: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:39.449: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:41.453: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:43.457: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:45.462: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:47.469: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:49.474: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:51.477: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:53.482: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:55.487: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:57.492: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:56:59.497: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:01.502: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:03.508: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:05.513: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:07.517: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:09.521: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:11.525: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:13.531: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:15.536: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:17.540: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:19.545: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:21.548: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:23.553: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:25.558: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:27.562: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:29.567: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:31.571: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:33.575: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:35.581: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:37.586: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:39.590: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:41.594: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:43.599: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:45.603: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:47.608: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:49.612: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:51.616: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:53.621: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:55.625: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:57.629: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:57:59.633: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:01.639: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:03.644: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:05.648: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:07.652: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:09.656: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:11.661: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:13.666: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:15.669: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:17.673: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:19.679: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:21.683: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:23.687: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:25.692: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:27.696: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:29.700: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:31.704: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:33.709: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:35.714: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:37.719: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:39.723: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:41.728: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:43.733: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:45.737: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:47.741: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:49.745: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:51.751: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:53.756: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:55.761: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:57.765: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:58:59.771: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:01.777: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:03.783: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:05.788: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:07.793: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:09.796: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:11.801: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:13.805: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:15.810: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:17.815: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:19.818: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:21.823: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:23.827: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:25.830: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:27.835: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:29.838: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:31.843: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:33.860: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:35.864: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:37.869: INFO: Get pod test-webserver-f60de33c-5694-4822-8d32-51f4ffdcc083 in namespace container-probe-6512
  Oct 28 12:59:39.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 12:59:39.875
  STEP: Destroying namespace "container-probe-6512" for this suite. @ 10/28/23 12:59:39.891
• [242.632 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 10/28/23 12:59:39.9
  Oct 28 12:59:39.900: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename proxy @ 10/28/23 12:59:39.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:59:39.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:59:39.923
  STEP: starting an echo server on multiple ports @ 10/28/23 12:59:39.941
  STEP: creating replication controller proxy-service-8lqbz in namespace proxy-11 @ 10/28/23 12:59:39.941
  I1028 12:59:39.950759      19 runners.go:197] Created replication controller with name: proxy-service-8lqbz, namespace: proxy-11, replica count: 1
  I1028 12:59:41.000970      19 runners.go:197] proxy-service-8lqbz Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1028 12:59:42.002089      19 runners.go:197] proxy-service-8lqbz Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 28 12:59:42.006: INFO: setup took 2.079509872s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 10/28/23 12:59:42.006
  Oct 28 12:59:42.012: INFO: (0) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 6.311831ms)
  Oct 28 12:59:42.014: INFO: (0) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 7.572728ms)
  Oct 28 12:59:42.014: INFO: (0) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 8.263207ms)
  Oct 28 12:59:42.015: INFO: (0) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 8.200361ms)
  Oct 28 12:59:42.021: INFO: (0) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 14.004719ms)
  Oct 28 12:59:42.021: INFO: (0) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 14.326672ms)
  Oct 28 12:59:42.025: INFO: (0) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 18.835831ms)
  Oct 28 12:59:42.025: INFO: (0) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 18.850988ms)
  Oct 28 12:59:42.026: INFO: (0) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 20.073159ms)
  Oct 28 12:59:42.027: INFO: (0) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 20.225885ms)
  Oct 28 12:59:42.027: INFO: (0) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 20.45668ms)
  Oct 28 12:59:42.027: INFO: (0) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 20.455265ms)
  Oct 28 12:59:42.027: INFO: (0) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 20.757504ms)
  Oct 28 12:59:42.027: INFO: (0) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 20.837667ms)
  Oct 28 12:59:42.027: INFO: (0) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 21.177399ms)
  Oct 28 12:59:42.029: INFO: (0) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 22.973917ms)
  Oct 28 12:59:42.034: INFO: (1) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 4.517802ms)
  Oct 28 12:59:42.035: INFO: (1) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 5.968197ms)
  Oct 28 12:59:42.036: INFO: (1) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 6.417872ms)
  Oct 28 12:59:42.036: INFO: (1) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 6.450876ms)
  Oct 28 12:59:42.037: INFO: (1) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 7.743098ms)
  Oct 28 12:59:42.038: INFO: (1) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 7.880359ms)
  Oct 28 12:59:42.038: INFO: (1) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 8.24213ms)
  Oct 28 12:59:42.039: INFO: (1) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 9.338735ms)
  Oct 28 12:59:42.040: INFO: (1) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 10.141342ms)
  Oct 28 12:59:42.041: INFO: (1) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 10.959896ms)
  Oct 28 12:59:42.041: INFO: (1) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 11.349279ms)
  Oct 28 12:59:42.042: INFO: (1) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 11.881026ms)
  Oct 28 12:59:42.042: INFO: (1) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 11.925995ms)
  Oct 28 12:59:42.042: INFO: (1) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 12.331541ms)
  Oct 28 12:59:42.042: INFO: (1) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 12.512973ms)
  Oct 28 12:59:42.043: INFO: (1) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 12.762323ms)
  Oct 28 12:59:42.048: INFO: (2) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 4.784794ms)
  Oct 28 12:59:42.049: INFO: (2) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 6.577706ms)
  Oct 28 12:59:42.050: INFO: (2) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 7.514097ms)
  Oct 28 12:59:42.051: INFO: (2) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 7.65938ms)
  Oct 28 12:59:42.052: INFO: (2) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 8.890498ms)
  Oct 28 12:59:42.052: INFO: (2) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 9.056434ms)
  Oct 28 12:59:42.053: INFO: (2) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 9.439048ms)
  Oct 28 12:59:42.053: INFO: (2) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 9.665054ms)
  Oct 28 12:59:42.053: INFO: (2) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 10.259787ms)
  Oct 28 12:59:42.054: INFO: (2) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 10.473247ms)
  Oct 28 12:59:42.055: INFO: (2) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 11.650677ms)
  Oct 28 12:59:42.055: INFO: (2) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 11.604459ms)
  Oct 28 12:59:42.055: INFO: (2) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 11.872922ms)
  Oct 28 12:59:42.055: INFO: (2) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 11.850045ms)
  Oct 28 12:59:42.055: INFO: (2) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 12.036168ms)
  Oct 28 12:59:42.056: INFO: (2) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 12.593574ms)
  Oct 28 12:59:42.060: INFO: (3) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 4.664621ms)
  Oct 28 12:59:42.062: INFO: (3) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 5.818827ms)
  Oct 28 12:59:42.062: INFO: (3) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 6.190313ms)
  Oct 28 12:59:42.062: INFO: (3) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 5.939906ms)
  Oct 28 12:59:42.063: INFO: (3) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 6.633753ms)
  Oct 28 12:59:42.063: INFO: (3) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 7.22876ms)
  Oct 28 12:59:42.064: INFO: (3) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 7.907373ms)
  Oct 28 12:59:42.064: INFO: (3) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 8.172311ms)
  Oct 28 12:59:42.064: INFO: (3) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 8.334103ms)
  Oct 28 12:59:42.065: INFO: (3) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 9.212675ms)
  Oct 28 12:59:42.065: INFO: (3) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 9.214016ms)
  Oct 28 12:59:42.065: INFO: (3) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 9.343584ms)
  Oct 28 12:59:42.066: INFO: (3) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 9.793357ms)
  Oct 28 12:59:42.066: INFO: (3) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 9.956376ms)
  Oct 28 12:59:42.066: INFO: (3) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 10.321279ms)
  Oct 28 12:59:42.067: INFO: (3) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 10.894632ms)
  Oct 28 12:59:42.072: INFO: (4) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 4.462491ms)
  Oct 28 12:59:42.072: INFO: (4) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 4.856777ms)
  Oct 28 12:59:42.072: INFO: (4) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 5.078022ms)
  Oct 28 12:59:42.074: INFO: (4) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 5.956853ms)
  Oct 28 12:59:42.074: INFO: (4) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 6.586361ms)
  Oct 28 12:59:42.074: INFO: (4) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 6.524942ms)
  Oct 28 12:59:42.075: INFO: (4) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 7.179257ms)
  Oct 28 12:59:42.075: INFO: (4) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 7.631995ms)
  Oct 28 12:59:42.076: INFO: (4) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 8.758613ms)
  Oct 28 12:59:42.076: INFO: (4) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 9.016614ms)
  Oct 28 12:59:42.077: INFO: (4) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 9.296628ms)
  Oct 28 12:59:42.077: INFO: (4) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 9.299634ms)
  Oct 28 12:59:42.077: INFO: (4) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 9.656354ms)
  Oct 28 12:59:42.078: INFO: (4) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 10.850758ms)
  Oct 28 12:59:42.078: INFO: (4) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 10.692132ms)
  Oct 28 12:59:42.080: INFO: (4) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 12.659821ms)
  Oct 28 12:59:42.085: INFO: (5) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 4.742205ms)
  Oct 28 12:59:42.085: INFO: (5) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 4.997013ms)
  Oct 28 12:59:42.086: INFO: (5) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 5.468592ms)
  Oct 28 12:59:42.087: INFO: (5) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 6.053932ms)
  Oct 28 12:59:42.087: INFO: (5) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 6.549138ms)
  Oct 28 12:59:42.089: INFO: (5) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 7.821686ms)
  Oct 28 12:59:42.089: INFO: (5) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 8.421094ms)
  Oct 28 12:59:42.089: INFO: (5) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 7.904523ms)
  Oct 28 12:59:42.089: INFO: (5) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 8.68556ms)
  Oct 28 12:59:42.090: INFO: (5) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 9.173526ms)
  Oct 28 12:59:42.090: INFO: (5) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 10.007157ms)
  Oct 28 12:59:42.091: INFO: (5) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 10.035841ms)
  Oct 28 12:59:42.091: INFO: (5) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 10.54045ms)
  Oct 28 12:59:42.091: INFO: (5) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 10.433711ms)
  Oct 28 12:59:42.092: INFO: (5) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 11.450439ms)
  Oct 28 12:59:42.092: INFO: (5) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 11.687691ms)
  Oct 28 12:59:42.097: INFO: (6) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 4.540341ms)
  Oct 28 12:59:42.097: INFO: (6) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 4.790142ms)
  Oct 28 12:59:42.099: INFO: (6) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 6.270993ms)
  Oct 28 12:59:42.100: INFO: (6) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 7.309111ms)
  Oct 28 12:59:42.100: INFO: (6) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 7.15042ms)
  Oct 28 12:59:42.101: INFO: (6) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 8.441171ms)
  Oct 28 12:59:42.102: INFO: (6) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 8.884324ms)
  Oct 28 12:59:42.101: INFO: (6) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 8.606695ms)
  Oct 28 12:59:42.102: INFO: (6) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 9.074196ms)
  Oct 28 12:59:42.102: INFO: (6) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 9.680474ms)
  Oct 28 12:59:42.103: INFO: (6) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 9.535151ms)
  Oct 28 12:59:42.103: INFO: (6) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 10.282562ms)
  Oct 28 12:59:42.103: INFO: (6) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 10.437487ms)
  Oct 28 12:59:42.103: INFO: (6) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 10.395125ms)
  Oct 28 12:59:42.103: INFO: (6) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 10.753895ms)
  Oct 28 12:59:42.104: INFO: (6) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 11.496937ms)
  Oct 28 12:59:42.109: INFO: (7) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 4.460706ms)
  Oct 28 12:59:42.110: INFO: (7) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 5.814868ms)
  Oct 28 12:59:42.111: INFO: (7) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 6.128196ms)
  Oct 28 12:59:42.112: INFO: (7) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 6.975559ms)
  Oct 28 12:59:42.112: INFO: (7) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 7.400986ms)
  Oct 28 12:59:42.113: INFO: (7) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 7.851279ms)
  Oct 28 12:59:42.114: INFO: (7) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 9.940335ms)
  Oct 28 12:59:42.115: INFO: (7) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 9.635626ms)
  Oct 28 12:59:42.115: INFO: (7) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 10.339583ms)
  Oct 28 12:59:42.115: INFO: (7) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 10.139402ms)
  Oct 28 12:59:42.115: INFO: (7) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 10.182848ms)
  Oct 28 12:59:42.115: INFO: (7) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 9.974212ms)
  Oct 28 12:59:42.116: INFO: (7) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 10.829451ms)
  Oct 28 12:59:42.116: INFO: (7) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 10.809973ms)
  Oct 28 12:59:42.116: INFO: (7) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 11.122964ms)
  Oct 28 12:59:42.117: INFO: (7) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 11.652241ms)
  Oct 28 12:59:42.122: INFO: (8) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 4.647258ms)
  Oct 28 12:59:42.126: INFO: (8) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 9.168545ms)
  Oct 28 12:59:42.126: INFO: (8) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 9.16739ms)
  Oct 28 12:59:42.128: INFO: (8) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 10.624806ms)
  Oct 28 12:59:42.128: INFO: (8) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 10.837851ms)
  Oct 28 12:59:42.128: INFO: (8) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 10.88038ms)
  Oct 28 12:59:42.128: INFO: (8) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 11.091539ms)
  Oct 28 12:59:42.128: INFO: (8) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 10.981232ms)
  Oct 28 12:59:42.129: INFO: (8) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 12.121307ms)
  Oct 28 12:59:42.129: INFO: (8) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 11.99405ms)
  Oct 28 12:59:42.130: INFO: (8) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 12.373394ms)
  Oct 28 12:59:42.130: INFO: (8) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 12.907594ms)
  Oct 28 12:59:42.130: INFO: (8) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 13.102785ms)
  Oct 28 12:59:42.130: INFO: (8) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 13.499122ms)
  Oct 28 12:59:42.132: INFO: (8) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 14.520677ms)
  Oct 28 12:59:42.132: INFO: (8) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 14.690687ms)
  Oct 28 12:59:42.137: INFO: (9) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 5.313992ms)
  Oct 28 12:59:42.138: INFO: (9) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 5.602595ms)
  Oct 28 12:59:42.138: INFO: (9) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 6.032128ms)
  Oct 28 12:59:42.139: INFO: (9) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 6.360249ms)
  Oct 28 12:59:42.140: INFO: (9) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 7.008618ms)
  Oct 28 12:59:42.140: INFO: (9) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 7.503534ms)
  Oct 28 12:59:42.140: INFO: (9) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 7.744397ms)
  Oct 28 12:59:42.141: INFO: (9) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 8.388419ms)
  Oct 28 12:59:42.141: INFO: (9) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 8.62588ms)
  Oct 28 12:59:42.141: INFO: (9) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 8.832169ms)
  Oct 28 12:59:42.142: INFO: (9) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 9.39616ms)
  Oct 28 12:59:42.142: INFO: (9) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 10.078495ms)
  Oct 28 12:59:42.143: INFO: (9) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 10.080908ms)
  Oct 28 12:59:42.143: INFO: (9) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 10.604593ms)
  Oct 28 12:59:42.144: INFO: (9) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 11.31986ms)
  Oct 28 12:59:42.145: INFO: (9) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 12.326465ms)
  Oct 28 12:59:42.150: INFO: (10) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 5.193904ms)
  Oct 28 12:59:42.153: INFO: (10) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 7.946735ms)
  Oct 28 12:59:42.154: INFO: (10) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 9.130596ms)
  Oct 28 12:59:42.154: INFO: (10) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 9.403662ms)
  Oct 28 12:59:42.155: INFO: (10) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 10.26323ms)
  Oct 28 12:59:42.155: INFO: (10) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 10.052127ms)
  Oct 28 12:59:42.155: INFO: (10) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 10.200885ms)
  Oct 28 12:59:42.156: INFO: (10) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 10.816481ms)
  Oct 28 12:59:42.156: INFO: (10) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 10.667533ms)
  Oct 28 12:59:42.156: INFO: (10) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 10.441038ms)
  Oct 28 12:59:42.156: INFO: (10) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 10.626877ms)
  Oct 28 12:59:42.156: INFO: (10) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 10.620592ms)
  Oct 28 12:59:42.156: INFO: (10) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 10.603596ms)
  Oct 28 12:59:42.156: INFO: (10) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 10.565153ms)
  Oct 28 12:59:42.156: INFO: (10) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 10.604034ms)
  Oct 28 12:59:42.156: INFO: (10) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 10.609443ms)
  Oct 28 12:59:42.162: INFO: (11) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 5.307594ms)
  Oct 28 12:59:42.162: INFO: (11) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 5.909758ms)
  Oct 28 12:59:42.163: INFO: (11) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 6.801979ms)
  Oct 28 12:59:42.164: INFO: (11) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 7.726512ms)
  Oct 28 12:59:42.165: INFO: (11) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 8.782332ms)
  Oct 28 12:59:42.166: INFO: (11) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 9.45906ms)
  Oct 28 12:59:42.166: INFO: (11) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 10.083506ms)
  Oct 28 12:59:42.166: INFO: (11) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 10.149597ms)
  Oct 28 12:59:42.167: INFO: (11) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 9.927824ms)
  Oct 28 12:59:42.167: INFO: (11) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 10.28446ms)
  Oct 28 12:59:42.167: INFO: (11) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 9.829287ms)
  Oct 28 12:59:42.167: INFO: (11) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 10.291992ms)
  Oct 28 12:59:42.167: INFO: (11) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 10.824508ms)
  Oct 28 12:59:42.167: INFO: (11) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 10.654365ms)
  Oct 28 12:59:42.168: INFO: (11) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 11.276791ms)
  Oct 28 12:59:42.169: INFO: (11) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 12.39375ms)
  Oct 28 12:59:42.174: INFO: (12) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 4.520729ms)
  Oct 28 12:59:42.175: INFO: (12) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 5.522968ms)
  Oct 28 12:59:42.176: INFO: (12) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 6.506682ms)
  Oct 28 12:59:42.177: INFO: (12) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 6.864842ms)
  Oct 28 12:59:42.178: INFO: (12) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 7.59949ms)
  Oct 28 12:59:42.178: INFO: (12) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 9.164204ms)
  Oct 28 12:59:42.178: INFO: (12) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 8.620034ms)
  Oct 28 12:59:42.179: INFO: (12) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 9.402094ms)
  Oct 28 12:59:42.179: INFO: (12) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 9.080091ms)
  Oct 28 12:59:42.180: INFO: (12) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 9.90079ms)
  Oct 28 12:59:42.180: INFO: (12) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 9.668457ms)
  Oct 28 12:59:42.180: INFO: (12) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 10.108482ms)
  Oct 28 12:59:42.180: INFO: (12) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 10.075636ms)
  Oct 28 12:59:42.180: INFO: (12) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 10.523297ms)
  Oct 28 12:59:42.180: INFO: (12) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 10.994333ms)
  Oct 28 12:59:42.181: INFO: (12) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 10.443701ms)
  Oct 28 12:59:42.186: INFO: (13) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 4.635704ms)
  Oct 28 12:59:42.186: INFO: (13) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 5.071583ms)
  Oct 28 12:59:42.187: INFO: (13) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 5.585623ms)
  Oct 28 12:59:42.188: INFO: (13) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 6.653206ms)
  Oct 28 12:59:42.188: INFO: (13) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 6.906847ms)
  Oct 28 12:59:42.189: INFO: (13) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 8.31011ms)
  Oct 28 12:59:42.189: INFO: (13) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 7.934753ms)
  Oct 28 12:59:42.190: INFO: (13) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 8.57265ms)
  Oct 28 12:59:42.190: INFO: (13) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 9.461246ms)
  Oct 28 12:59:42.191: INFO: (13) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 9.765292ms)
  Oct 28 12:59:42.191: INFO: (13) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 9.845261ms)
  Oct 28 12:59:42.191: INFO: (13) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 10.740173ms)
  Oct 28 12:59:42.191: INFO: (13) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 10.665412ms)
  Oct 28 12:59:42.191: INFO: (13) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 10.185626ms)
  Oct 28 12:59:42.192: INFO: (13) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 10.528655ms)
  Oct 28 12:59:42.192: INFO: (13) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 10.8957ms)
  Oct 28 12:59:42.199: INFO: (14) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 6.140199ms)
  Oct 28 12:59:42.200: INFO: (14) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 6.485503ms)
  Oct 28 12:59:42.200: INFO: (14) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 6.946186ms)
  Oct 28 12:59:42.201: INFO: (14) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 8.070265ms)
  Oct 28 12:59:42.201: INFO: (14) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 8.542541ms)
  Oct 28 12:59:42.201: INFO: (14) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 7.72956ms)
  Oct 28 12:59:42.201: INFO: (14) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 8.350535ms)
  Oct 28 12:59:42.202: INFO: (14) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 8.401298ms)
  Oct 28 12:59:42.203: INFO: (14) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 9.624406ms)
  Oct 28 12:59:42.203: INFO: (14) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 10.236276ms)
  Oct 28 12:59:42.203: INFO: (14) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 10.285006ms)
  Oct 28 12:59:42.203: INFO: (14) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 10.689691ms)
  Oct 28 12:59:42.203: INFO: (14) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 10.672936ms)
  Oct 28 12:59:42.204: INFO: (14) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 11.361714ms)
  Oct 28 12:59:42.204: INFO: (14) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 11.259502ms)
  Oct 28 12:59:42.204: INFO: (14) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 11.437554ms)
  Oct 28 12:59:42.209: INFO: (15) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 4.68503ms)
  Oct 28 12:59:42.209: INFO: (15) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 4.823999ms)
  Oct 28 12:59:42.211: INFO: (15) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 5.992989ms)
  Oct 28 12:59:42.212: INFO: (15) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 7.254095ms)
  Oct 28 12:59:42.212: INFO: (15) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 7.111064ms)
  Oct 28 12:59:42.212: INFO: (15) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 7.228288ms)
  Oct 28 12:59:42.213: INFO: (15) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 7.846992ms)
  Oct 28 12:59:42.214: INFO: (15) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 8.891468ms)
  Oct 28 12:59:42.214: INFO: (15) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 8.719854ms)
  Oct 28 12:59:42.215: INFO: (15) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 9.875136ms)
  Oct 28 12:59:42.215: INFO: (15) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 9.745171ms)
  Oct 28 12:59:42.215: INFO: (15) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 10.301545ms)
  Oct 28 12:59:42.215: INFO: (15) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 10.397988ms)
  Oct 28 12:59:42.215: INFO: (15) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 10.2612ms)
  Oct 28 12:59:42.216: INFO: (15) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 10.685824ms)
  Oct 28 12:59:42.217: INFO: (15) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 11.549118ms)
  Oct 28 12:59:42.222: INFO: (16) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 5.053979ms)
  Oct 28 12:59:42.223: INFO: (16) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 6.049433ms)
  Oct 28 12:59:42.223: INFO: (16) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 6.276253ms)
  Oct 28 12:59:42.223: INFO: (16) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 6.161429ms)
  Oct 28 12:59:42.223: INFO: (16) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 6.495191ms)
  Oct 28 12:59:42.224: INFO: (16) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 7.248234ms)
  Oct 28 12:59:42.224: INFO: (16) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 7.552218ms)
  Oct 28 12:59:42.225: INFO: (16) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 7.636806ms)
  Oct 28 12:59:42.225: INFO: (16) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 8.212409ms)
  Oct 28 12:59:42.225: INFO: (16) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 8.322801ms)
  Oct 28 12:59:42.226: INFO: (16) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 9.440079ms)
  Oct 28 12:59:42.227: INFO: (16) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 9.798951ms)
  Oct 28 12:59:42.227: INFO: (16) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 9.853115ms)
  Oct 28 12:59:42.227: INFO: (16) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 10.199346ms)
  Oct 28 12:59:42.228: INFO: (16) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 10.951886ms)
  Oct 28 12:59:42.229: INFO: (16) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 11.371404ms)
  Oct 28 12:59:42.233: INFO: (17) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 4.650226ms)
  Oct 28 12:59:42.234: INFO: (17) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 5.021533ms)
  Oct 28 12:59:42.235: INFO: (17) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 5.614756ms)
  Oct 28 12:59:42.236: INFO: (17) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 6.926138ms)
  Oct 28 12:59:42.237: INFO: (17) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 7.73569ms)
  Oct 28 12:59:42.237: INFO: (17) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 7.69ms)
  Oct 28 12:59:42.238: INFO: (17) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 8.87477ms)
  Oct 28 12:59:42.238: INFO: (17) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 8.92724ms)
  Oct 28 12:59:42.238: INFO: (17) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 9.641602ms)
  Oct 28 12:59:42.238: INFO: (17) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 9.298457ms)
  Oct 28 12:59:42.239: INFO: (17) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 10.070383ms)
  Oct 28 12:59:42.239: INFO: (17) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 10.059649ms)
  Oct 28 12:59:42.239: INFO: (17) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 10.331827ms)
  Oct 28 12:59:42.239: INFO: (17) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 10.520124ms)
  Oct 28 12:59:42.240: INFO: (17) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 10.880989ms)
  Oct 28 12:59:42.240: INFO: (17) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 11.565973ms)
  Oct 28 12:59:42.246: INFO: (18) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 5.569985ms)
  Oct 28 12:59:42.246: INFO: (18) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 5.508382ms)
  Oct 28 12:59:42.247: INFO: (18) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 6.427471ms)
  Oct 28 12:59:42.248: INFO: (18) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 7.024096ms)
  Oct 28 12:59:42.248: INFO: (18) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 7.107663ms)
  Oct 28 12:59:42.249: INFO: (18) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 8.155797ms)
  Oct 28 12:59:42.249: INFO: (18) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 8.130242ms)
  Oct 28 12:59:42.249: INFO: (18) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 8.266798ms)
  Oct 28 12:59:42.250: INFO: (18) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 8.845923ms)
  Oct 28 12:59:42.250: INFO: (18) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 8.704343ms)
  Oct 28 12:59:42.250: INFO: (18) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 9.206541ms)
  Oct 28 12:59:42.250: INFO: (18) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 9.383002ms)
  Oct 28 12:59:42.251: INFO: (18) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 9.616161ms)
  Oct 28 12:59:42.251: INFO: (18) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 9.925176ms)
  Oct 28 12:59:42.252: INFO: (18) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 10.567832ms)
  Oct 28 12:59:42.253: INFO: (18) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 12.28003ms)
  Oct 28 12:59:42.258: INFO: (19) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 5.065268ms)
  Oct 28 12:59:42.261: INFO: (19) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:462/proxy/: tls qux (200; 7.609508ms)
  Oct 28 12:59:42.262: INFO: (19) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname2/proxy/: bar (200; 8.112525ms)
  Oct 28 12:59:42.262: INFO: (19) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:160/proxy/: foo (200; 7.811993ms)
  Oct 28 12:59:42.262: INFO: (19) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">te... (200; 8.722067ms)
  Oct 28 12:59:42.263: INFO: (19) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:1080/proxy/rewriteme">test</a... (200; 8.834099ms)
  Oct 28 12:59:42.263: INFO: (19) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:443/proxy/tlsrewriteme"... (200; 9.448004ms)
  Oct 28 12:59:42.263: INFO: (19) /api/v1/namespaces/proxy-11/pods/http:proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 9.214953ms)
  Oct 28 12:59:42.264: INFO: (19) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/: <a href="/api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6/proxy/rewriteme">test</a> (200; 9.881248ms)
  Oct 28 12:59:42.264: INFO: (19) /api/v1/namespaces/proxy-11/services/http:proxy-service-8lqbz:portname1/proxy/: foo (200; 10.282847ms)
  Oct 28 12:59:42.265: INFO: (19) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname1/proxy/: tls baz (200; 11.047249ms)
  Oct 28 12:59:42.265: INFO: (19) /api/v1/namespaces/proxy-11/pods/proxy-service-8lqbz-sg2k6:162/proxy/: bar (200; 11.448329ms)
  Oct 28 12:59:42.265: INFO: (19) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname1/proxy/: foo (200; 11.445096ms)
  Oct 28 12:59:42.265: INFO: (19) /api/v1/namespaces/proxy-11/pods/https:proxy-service-8lqbz-sg2k6:460/proxy/: tls baz (200; 11.70331ms)
  Oct 28 12:59:42.266: INFO: (19) /api/v1/namespaces/proxy-11/services/https:proxy-service-8lqbz:tlsportname2/proxy/: tls qux (200; 11.85436ms)
  Oct 28 12:59:42.266: INFO: (19) /api/v1/namespaces/proxy-11/services/proxy-service-8lqbz:portname2/proxy/: bar (200; 12.478169ms)
  Oct 28 12:59:42.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-8lqbz in namespace proxy-11, will wait for the garbage collector to delete the pods @ 10/28/23 12:59:42.27
  Oct 28 12:59:42.329: INFO: Deleting ReplicationController proxy-service-8lqbz took: 6.338073ms
  Oct 28 12:59:42.430: INFO: Terminating ReplicationController proxy-service-8lqbz pods took: 100.595268ms
  STEP: Destroying namespace "proxy-11" for this suite. @ 10/28/23 12:59:44.631
• [4.738 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 10/28/23 12:59:44.639
  Oct 28 12:59:44.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename containers @ 10/28/23 12:59:44.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:59:44.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:59:44.676
  STEP: Creating a pod to test override command @ 10/28/23 12:59:44.679
  STEP: Saw pod success @ 10/28/23 12:59:48.701
  Oct 28 12:59:48.705: INFO: Trying to get logs from node ip-172-31-37-29 pod client-containers-c777bddd-cecf-4ab6-b526-3a64b2fb8c2e container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 12:59:48.719
  Oct 28 12:59:48.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7189" for this suite. @ 10/28/23 12:59:48.74
• [4.109 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 10/28/23 12:59:48.749
  Oct 28 12:59:48.749: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 12:59:48.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:59:48.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:59:48.768
  STEP: Creating a pod to test downward api env vars @ 10/28/23 12:59:48.771
  STEP: Saw pod success @ 10/28/23 12:59:52.797
  Oct 28 12:59:52.800: INFO: Trying to get logs from node ip-172-31-37-29 pod downward-api-bec2285a-aed5-4cf4-99fe-eecdd9362732 container dapi-container: <nil>
  STEP: delete the pod @ 10/28/23 12:59:52.808
  Oct 28 12:59:52.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9210" for this suite. @ 10/28/23 12:59:52.825
• [4.082 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 10/28/23 12:59:52.831
  Oct 28 12:59:52.831: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 12:59:52.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:59:52.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:59:52.854
  STEP: Creating projection with secret that has name projected-secret-test-c174684e-490f-4867-9c0e-e31d096d8e79 @ 10/28/23 12:59:52.857
  STEP: Creating a pod to test consume secrets @ 10/28/23 12:59:52.86
  STEP: Saw pod success @ 10/28/23 12:59:56.882
  Oct 28 12:59:56.886: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-projected-secrets-3f95d657-33d8-462f-9909-0492575b48da container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 12:59:56.894
  Oct 28 12:59:56.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4727" for this suite. @ 10/28/23 12:59:56.912
• [4.087 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 10/28/23 12:59:56.918
  Oct 28 12:59:56.918: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename deployment @ 10/28/23 12:59:56.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 12:59:56.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 12:59:56.94
  Oct 28 12:59:56.942: INFO: Creating deployment "webserver-deployment"
  Oct 28 12:59:56.949: INFO: Waiting for observed generation 1
  Oct 28 12:59:58.956: INFO: Waiting for all required pods to come up
  Oct 28 12:59:58.960: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 10/28/23 12:59:58.96
  Oct 28 13:00:00.969: INFO: Waiting for deployment "webserver-deployment" to complete
  Oct 28 13:00:00.977: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Oct 28 13:00:00.986: INFO: Updating deployment webserver-deployment
  Oct 28 13:00:00.986: INFO: Waiting for observed generation 2
  Oct 28 13:00:02.995: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Oct 28 13:00:02.999: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Oct 28 13:00:03.002: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Oct 28 13:00:03.012: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Oct 28 13:00:03.012: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Oct 28 13:00:03.015: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Oct 28 13:00:03.022: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Oct 28 13:00:03.022: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Oct 28 13:00:03.032: INFO: Updating deployment webserver-deployment
  Oct 28 13:00:03.032: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Oct 28 13:00:03.040: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Oct 28 13:00:03.043: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Oct 28 13:00:03.052: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65f6a38e-a1d5-439a-a57f-01e99f782510",
      ResourceVersion: (string) (len=5) "20718",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 28 13:00:03.066: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1016a505-ee0e-4e56-9515-d44eb20f92f9",
      ResourceVersion: (string) (len=5) "20721",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "65f6a38e-a1d5-439a-a57f-01e99f782510",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 35 66 36 61 33  38 65 2d 61 31 64 35 2d  |\"65f6a38e-a1d5-|
              00000120  34 33 39 61 2d 61 35 37  66 2d 30 31 65 39 39 66  |439a-a57f-01e99f|
              00000130  37 38 32 35 31 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |782510\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 28 13:00:03.067: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Oct 28 13:00:03.068: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06c89b0b-d248-422c-8605-74611e27f2fe",
      ResourceVersion: (string) (len=5) "20719",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "65f6a38e-a1d5-439a-a57f-01e99f782510",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 35 66 36 61 33  38 65 2d 61 31 64 35 2d  |\"65f6a38e-a1d5-|
              00000120  34 33 39 61 2d 61 35 37  66 2d 30 31 65 39 39 66  |439a-a57f-01e99f|
              00000130  37 38 32 35 31 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |782510\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 28 13:00:03.076: INFO: Pod "webserver-deployment-557759b7c7-8blqp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8blqp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "44bd3279-8179-4985-8362-6659deb32d10",
      ResourceVersion: (string) (len=5) "20619",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "06c89b0b-d248-422c-8605-74611e27f2fe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  63 38 39 62 30 62 2d 64  |d\":\"06c89b0b-d|
              00000090  32 34 38 2d 34 32 32 63  2d 38 36 30 35 2d 37 34  |248-422c-8605-74|
              000000a0  36 31 31 65 32 37 66 32  66 65 5c 22 7d 22 3a 7b  |611e27f2fe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 31 2e 32 32 33 5c  |192.168.191.223\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zkl2k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zkl2k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-72",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.191.223",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.191.223"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834094798,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2438eecb00d35e0013985ee4094d39562e08d91987e0bf87b8b32997a140f004",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.079: INFO: Pod "webserver-deployment-557759b7c7-9c6xz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9c6xz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cad04c9b-4bd8-4f02-b31b-78146e89ab35",
      ResourceVersion: (string) (len=5) "20613",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "06c89b0b-d248-422c-8605-74611e27f2fe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  63 38 39 62 30 62 2d 64  |d\":\"06c89b0b-d|
              00000090  32 34 38 2d 34 32 32 63  2d 38 36 30 35 2d 37 34  |248-422c-8605-74|
              000000a0  36 31 31 65 32 37 66 32  66 65 5c 22 7d 22 3a 7b  |611e27f2fe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 35 2e 31 39 30 5c 22  |192.168.15.190\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nl8bn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nl8bn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-226",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.226",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.15.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.15.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834094798,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9dfa3071045b3cff6c7a7a9412598a8ae94464167e7ab2e5db2491598ed6b97b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.083: INFO: Pod "webserver-deployment-557759b7c7-hw49n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hw49n",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a4a59a5-6999-4539-b750-98741eed44de",
      ResourceVersion: (string) (len=5) "20588",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "06c89b0b-d248-422c-8605-74611e27f2fe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  63 38 39 62 30 62 2d 64  |d\":\"06c89b0b-d|
              00000090  32 34 38 2d 34 32 32 63  2d 38 36 30 35 2d 37 34  |248-422c-8605-74|
              000000a0  36 31 31 65 32 37 66 32  66 65 5c 22 7d 22 3a 7b  |611e27f2fe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 31 2e 32 32 32 5c  |192.168.191.222\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-528qk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-528qk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-72",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.191.222",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.191.222"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834094797,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5707bd6a180fe7fb7d8a05637b9f777aeecb249037456508bfee94edea5b97c1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.088: INFO: Pod "webserver-deployment-557759b7c7-ngckq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ngckq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46afcf01-fb0d-48d9-843e-8acd950f4946",
      ResourceVersion: (string) (len=5) "20616",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "06c89b0b-d248-422c-8605-74611e27f2fe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  63 38 39 62 30 62 2d 64  |d\":\"06c89b0b-d|
              00000090  32 34 38 2d 34 32 32 63  2d 38 36 30 35 2d 37 34  |248-422c-8605-74|
              000000a0  36 31 31 65 32 37 66 32  66 65 5c 22 7d 22 3a 7b  |611e27f2fe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 35 2e 31 33 35 5c 22  |192.168.15.135\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-td7sk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-td7sk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-226",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.226",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.15.135",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.15.135"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834094798,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://192465352efa06be8e9dc8788b4ff789c2bd00f21fbcf3051d9d513cd7890e28",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.096: INFO: Pod "webserver-deployment-557759b7c7-p26jt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-p26jt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7e51cec-0677-4520-b91b-5e109deb31e6",
      ResourceVersion: (string) (len=5) "20735",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094803,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "06c89b0b-d248-422c-8605-74611e27f2fe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  63 38 39 62 30 62 2d 64  |d\":\"06c89b0b-d|
              00000090  32 34 38 2d 34 32 32 63  2d 38 36 30 35 2d 37 34  |248-422c-8605-74|
              000000a0  36 31 31 65 32 37 66 32  66 65 5c 22 7d 22 3a 7b  |611e27f2fe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kz7c4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kz7c4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-72",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.098: INFO: Pod "webserver-deployment-557759b7c7-qp6cs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qp6cs",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c026db2-d789-4a30-96a0-3f7bce67940e",
      ResourceVersion: (string) (len=5) "20600",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "06c89b0b-d248-422c-8605-74611e27f2fe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  63 38 39 62 30 62 2d 64  |d\":\"06c89b0b-d|
              00000090  32 34 38 2d 34 32 32 63  2d 38 36 30 35 2d 37 34  |248-422c-8605-74|
              000000a0  36 31 31 65 32 37 66 32  66 65 5c 22 7d 22 3a 7b  |611e27f2fe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 33 36 2e 32 33 32 5c  |192.168.136.232\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ftqbv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ftqbv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-37-29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.37.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.136.232",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.136.232"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834094798,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bd8a1813fd658c1f517e15ccdbcd98107d0402acd127a9eae032e00e561c4762",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.100: INFO: Pod "webserver-deployment-557759b7c7-rjq7t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rjq7t",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "700c4fa7-3337-4d89-b6c1-0feb1d27d961",
      ResourceVersion: (string) (len=5) "20723",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094803,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "06c89b0b-d248-422c-8605-74611e27f2fe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  63 38 39 62 30 62 2d 64  |d\":\"06c89b0b-d|
              00000090  32 34 38 2d 34 32 32 63  2d 38 36 30 35 2d 37 34  |248-422c-8605-74|
              000000a0  36 31 31 65 32 37 66 32  66 65 5c 22 7d 22 3a 7b  |611e27f2fe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gkcgq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gkcgq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-37-29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.104: INFO: Pod "webserver-deployment-557759b7c7-rxds6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rxds6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f74e4631-6c40-4080-bf3d-7e446d57d745",
      ResourceVersion: (string) (len=5) "20603",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "06c89b0b-d248-422c-8605-74611e27f2fe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  63 38 39 62 30 62 2d 64  |d\":\"06c89b0b-d|
              00000090  32 34 38 2d 34 32 32 63  2d 38 36 30 35 2d 37 34  |248-422c-8605-74|
              000000a0  36 31 31 65 32 37 66 32  66 65 5c 22 7d 22 3a 7b  |611e27f2fe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 33 36 2e 32 33 31 5c  |192.168.136.231\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tpkbp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tpkbp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-37-29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.37.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.136.231",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.136.231"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834094798,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f8a3803bf85410d6b87a5b2571d881de4032640a60f440a795a642a6495da2e6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.106: INFO: Pod "webserver-deployment-557759b7c7-tgnd4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tgnd4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33364897-9d58-4433-84c2-da19abd6187c",
      ResourceVersion: (string) (len=5) "20610",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "06c89b0b-d248-422c-8605-74611e27f2fe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  63 38 39 62 30 62 2d 64  |d\":\"06c89b0b-d|
              00000090  32 34 38 2d 34 32 32 63  2d 38 36 30 35 2d 37 34  |248-422c-8605-74|
              000000a0  36 31 31 65 32 37 66 32  66 65 5c 22 7d 22 3a 7b  |611e27f2fe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 35 2e 31 39 31 5c 22  |192.168.15.191\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6s2rz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6s2rz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-226",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.226",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.15.191",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.15.191"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834094798,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://18be72c71845b9520a8b2e3183fc332638fd0a84292d4172777617b1671137ff",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.109: INFO: Pod "webserver-deployment-557759b7c7-vsc72" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vsc72",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a899d08-8604-4134-b828-f672bd49732d",
      ResourceVersion: (string) (len=5) "20592",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "06c89b0b-d248-422c-8605-74611e27f2fe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  63 38 39 62 30 62 2d 64  |d\":\"06c89b0b-d|
              00000090  32 34 38 2d 34 32 32 63  2d 38 36 30 35 2d 37 34  |248-422c-8605-74|
              000000a0  36 31 31 65 32 37 66 32  66 65 5c 22 7d 22 3a 7b  |611e27f2fe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 31 2e 32 32 31 5c  |192.168.191.221\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fnxcn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fnxcn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-72",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.191.221",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.191.221"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834094798,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9c62b781b4d5bd47707dda9462f9c83225b8623a41175855221eb062dff991e4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.123: INFO: Pod "webserver-deployment-557759b7c7-xxk8d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xxk8d",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96635c05-58ef-4903-91bb-15d2a6900339",
      ResourceVersion: (string) (len=5) "20726",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094803,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "06c89b0b-d248-422c-8605-74611e27f2fe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  63 38 39 62 30 62 2d 64  |d\":\"06c89b0b-d|
              00000090  32 34 38 2d 34 32 32 63  2d 38 36 30 35 2d 37 34  |248-422c-8605-74|
              000000a0  36 31 31 65 32 37 66 32  66 65 5c 22 7d 22 3a 7b  |611e27f2fe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kxqvb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kxqvb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.140: INFO: Pod "webserver-deployment-9b4f5bf69-5slkv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5slkv",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b7bd09f-d200-4e95-9da5-8ca7ab4bb7b9",
      ResourceVersion: (string) (len=5) "20733",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094803,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1016a505-ee0e-4e56-9515-d44eb20f92f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  31 36 61 35 30 35 2d 65  |d\":\"1016a505-e|
              00000090  65 30 65 2d 34 65 35 36  2d 39 35 31 35 2d 64 34  |e0e-4e56-9515-d4|
              000000a0  34 65 62 32 30 66 39 32  66 39 5c 22 7d 22 3a 7b  |4eb20f92f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q56nz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q56nz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.145: INFO: Pod "webserver-deployment-9b4f5bf69-dxz9q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-dxz9q",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c5301b85-189d-405a-bf3e-3483e5984914",
      ResourceVersion: (string) (len=5) "20732",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094803,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1016a505-ee0e-4e56-9515-d44eb20f92f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  31 36 61 35 30 35 2d 65  |d\":\"1016a505-e|
              00000090  65 30 65 2d 34 65 35 36  2d 39 35 31 35 2d 64 34  |e0e-4e56-9515-d4|
              000000a0  34 65 62 32 30 66 39 32  66 39 5c 22 7d 22 3a 7b  |4eb20f92f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cqbkx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cqbkx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.154: INFO: Pod "webserver-deployment-9b4f5bf69-fq2cp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fq2cp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2326fa75-ce3e-4061-8a5c-dd868c3becc9",
      ResourceVersion: (string) (len=5) "20653",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094801,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1016a505-ee0e-4e56-9515-d44eb20f92f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  31 36 61 35 30 35 2d 65  |d\":\"1016a505-e|
              00000090  65 30 65 2d 34 65 35 36  2d 39 35 31 35 2d 64 34  |e0e-4e56-9515-d4|
              000000a0  34 65 62 32 30 66 39 32  66 39 5c 22 7d 22 3a 7b  |4eb20f92f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-plxxh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-plxxh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-72",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094801,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.156: INFO: Pod "webserver-deployment-9b4f5bf69-jzs7w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jzs7w",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "39137195-2e90-4eec-b522-9a65a7a3f9b1",
      ResourceVersion: (string) (len=5) "20675",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094801,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1016a505-ee0e-4e56-9515-d44eb20f92f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  31 36 61 35 30 35 2d 65  |d\":\"1016a505-e|
              00000090  65 30 65 2d 34 65 35 36  2d 39 35 31 35 2d 64 34  |e0e-4e56-9515-d4|
              000000a0  34 65 62 32 30 66 39 32  66 39 5c 22 7d 22 3a 7b  |4eb20f92f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2wc5n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2wc5n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-37-29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.37.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094801,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.159: INFO: Pod "webserver-deployment-9b4f5bf69-kgq6k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kgq6k",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3252eea-1527-4791-a08e-4921f9ef82a8",
      ResourceVersion: (string) (len=5) "20655",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094801,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1016a505-ee0e-4e56-9515-d44eb20f92f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  31 36 61 35 30 35 2d 65  |d\":\"1016a505-e|
              00000090  65 30 65 2d 34 65 35 36  2d 39 35 31 35 2d 64 34  |e0e-4e56-9515-d4|
              000000a0  34 65 62 32 30 66 39 32  66 39 5c 22 7d 22 3a 7b  |4eb20f92f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tb7nm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tb7nm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-226",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.226",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094801,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.166: INFO: Pod "webserver-deployment-9b4f5bf69-mlrwh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-mlrwh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37c86c84-fa3d-424a-855d-bf4eb45f456c",
      ResourceVersion: (string) (len=5) "20643",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1016a505-ee0e-4e56-9515-d44eb20f92f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  31 36 61 35 30 35 2d 65  |d\":\"1016a505-e|
              00000090  65 30 65 2d 34 65 35 36  2d 39 35 31 35 2d 64 34  |e0e-4e56-9515-d4|
              000000a0  34 65 62 32 30 66 39 32  66 39 5c 22 7d 22 3a 7b  |4eb20f92f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dzrfx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dzrfx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-37-29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.37.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094801,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.168: INFO: Pod "webserver-deployment-9b4f5bf69-qddtb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qddtb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a47658a8-1da8-414d-9c6c-50bb7ea79f71",
      ResourceVersion: (string) (len=5) "20731",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094803,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1016a505-ee0e-4e56-9515-d44eb20f92f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  31 36 61 35 30 35 2d 65  |d\":\"1016a505-e|
              00000090  65 30 65 2d 34 65 35 36  2d 39 35 31 35 2d 64 34  |e0e-4e56-9515-d4|
              000000a0  34 65 62 32 30 66 39 32  66 39 5c 22 7d 22 3a 7b  |4eb20f92f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n4r7d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n4r7d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-226",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.171: INFO: Pod "webserver-deployment-9b4f5bf69-qsfxk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qsfxk",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5640",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef2d843f-8786-46df-9291-7cbb43f79c7f",
      ResourceVersion: (string) (len=5) "20674",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094801,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1016a505-ee0e-4e56-9515-d44eb20f92f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  31 36 61 35 30 35 2d 65  |d\":\"1016a505-e|
              00000090  65 30 65 2d 34 65 35 36  2d 39 35 31 35 2d 64 34  |e0e-4e56-9515-d4|
              000000a0  34 65 62 32 30 66 39 32  66 39 5c 22 7d 22 3a 7b  |4eb20f92f9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hd8s8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hd8s8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-72",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834094801,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.72",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834094801,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:00:03.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5640" for this suite. @ 10/28/23 13:00:03.181
• [6.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 10/28/23 13:00:03.191
  Oct 28 13:00:03.191: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename daemonsets @ 10/28/23 13:00:03.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:00:03.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:00:03.306
  Oct 28 13:00:03.340: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/28/23 13:00:03.344
  Oct 28 13:00:03.348: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:03.348: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:03.351: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 13:00:03.351: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 13:00:04.356: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:04.356: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:04.361: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 28 13:00:04.361: INFO: Node ip-172-31-37-29 is running 0 daemon pod, expected 1
  Oct 28 13:00:05.357: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:05.357: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:05.361: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 28 13:00:05.361: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 10/28/23 13:00:05.376
  STEP: Check that daemon pods images are updated. @ 10/28/23 13:00:05.386
  Oct 28 13:00:05.389: INFO: Wrong image for pod: daemon-set-5r5wh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 28 13:00:05.389: INFO: Wrong image for pod: daemon-set-fqqwt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 28 13:00:05.389: INFO: Wrong image for pod: daemon-set-vwqtv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 28 13:00:05.394: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:05.394: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:06.398: INFO: Wrong image for pod: daemon-set-5r5wh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 28 13:00:06.398: INFO: Pod daemon-set-rjn88 is not available
  Oct 28 13:00:06.398: INFO: Wrong image for pod: daemon-set-vwqtv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 28 13:00:06.407: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:06.407: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:07.399: INFO: Wrong image for pod: daemon-set-5r5wh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 28 13:00:07.399: INFO: Pod daemon-set-rjn88 is not available
  Oct 28 13:00:07.399: INFO: Wrong image for pod: daemon-set-vwqtv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 28 13:00:07.402: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:07.402: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:08.400: INFO: Wrong image for pod: daemon-set-5r5wh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 28 13:00:08.400: INFO: Pod daemon-set-8kxp8 is not available
  Oct 28 13:00:08.406: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:08.406: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:09.399: INFO: Wrong image for pod: daemon-set-5r5wh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Oct 28 13:00:09.399: INFO: Pod daemon-set-8kxp8 is not available
  Oct 28 13:00:09.406: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:09.406: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:10.398: INFO: Pod daemon-set-w6b6n is not available
  Oct 28 13:00:10.403: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:10.403: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 10/28/23 13:00:10.403
  Oct 28 13:00:10.408: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:10.408: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:10.411: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 28 13:00:10.411: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 13:00:11.416: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:11.416: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:00:11.420: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 28 13:00:11.420: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/28/23 13:00:11.438
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9922, will wait for the garbage collector to delete the pods @ 10/28/23 13:00:11.438
  Oct 28 13:00:11.498: INFO: Deleting DaemonSet.extensions daemon-set took: 6.895535ms
  Oct 28 13:00:11.599: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.277222ms
  Oct 28 13:00:13.402: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 13:00:13.402: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 28 13:00:13.405: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21193"},"items":null}

  Oct 28 13:00:13.408: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21193"},"items":null}

  Oct 28 13:00:13.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9922" for this suite. @ 10/28/23 13:00:13.426
• [10.243 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 10/28/23 13:00:13.435
  Oct 28 13:00:13.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename security-context-test @ 10/28/23 13:00:13.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:00:13.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:00:13.456
  Oct 28 13:00:17.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6376" for this suite. @ 10/28/23 13:00:17.493
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 10/28/23 13:00:17.502
  Oct 28 13:00:17.502: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename cronjob @ 10/28/23 13:00:17.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:00:17.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:00:17.525
  STEP: Creating a cronjob @ 10/28/23 13:00:17.528
  STEP: creating @ 10/28/23 13:00:17.528
  STEP: getting @ 10/28/23 13:00:17.536
  STEP: listing @ 10/28/23 13:00:17.541
  STEP: watching @ 10/28/23 13:00:17.545
  Oct 28 13:00:17.545: INFO: starting watch
  STEP: cluster-wide listing @ 10/28/23 13:00:17.546
  STEP: cluster-wide watching @ 10/28/23 13:00:17.549
  Oct 28 13:00:17.549: INFO: starting watch
  STEP: patching @ 10/28/23 13:00:17.55
  STEP: updating @ 10/28/23 13:00:17.557
  Oct 28 13:00:17.566: INFO: waiting for watch events with expected annotations
  Oct 28 13:00:17.566: INFO: saw patched and updated annotations
  STEP: patching /status @ 10/28/23 13:00:17.566
  STEP: updating /status @ 10/28/23 13:00:17.571
  STEP: get /status @ 10/28/23 13:00:17.579
  STEP: deleting @ 10/28/23 13:00:17.582
  STEP: deleting a collection @ 10/28/23 13:00:17.598
  Oct 28 13:00:17.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-334" for this suite. @ 10/28/23 13:00:17.613
• [0.116 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 10/28/23 13:00:17.619
  Oct 28 13:00:17.619: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename watch @ 10/28/23 13:00:17.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:00:17.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:00:17.64
  STEP: creating a watch on configmaps with a certain label @ 10/28/23 13:00:17.643
  STEP: creating a new configmap @ 10/28/23 13:00:17.647
  STEP: modifying the configmap once @ 10/28/23 13:00:17.652
  STEP: changing the label value of the configmap @ 10/28/23 13:00:17.66
  STEP: Expecting to observe a delete notification for the watched object @ 10/28/23 13:00:17.668
  Oct 28 13:00:17.668: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9368  3835250a-8085-4985-b40c-9a20010936ee 21241 0 2023-10-28 13:00:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-28 13:00:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:00:17.668: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9368  3835250a-8085-4985-b40c-9a20010936ee 21242 0 2023-10-28 13:00:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-28 13:00:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:00:17.669: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9368  3835250a-8085-4985-b40c-9a20010936ee 21243 0 2023-10-28 13:00:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-28 13:00:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 10/28/23 13:00:17.669
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 10/28/23 13:00:17.679
  STEP: changing the label value of the configmap back @ 10/28/23 13:00:27.682
  STEP: modifying the configmap a third time @ 10/28/23 13:00:27.69
  STEP: deleting the configmap @ 10/28/23 13:00:27.7
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 10/28/23 13:00:27.706
  Oct 28 13:00:27.706: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9368  3835250a-8085-4985-b40c-9a20010936ee 21329 0 2023-10-28 13:00:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-28 13:00:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:00:27.706: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9368  3835250a-8085-4985-b40c-9a20010936ee 21330 0 2023-10-28 13:00:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-28 13:00:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:00:27.706: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9368  3835250a-8085-4985-b40c-9a20010936ee 21331 0 2023-10-28 13:00:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-28 13:00:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:00:27.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9368" for this suite. @ 10/28/23 13:00:27.71
• [10.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 10/28/23 13:00:27.719
  Oct 28 13:00:27.719: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename runtimeclass @ 10/28/23 13:00:27.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:00:27.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:00:27.738
  STEP: Deleting RuntimeClass runtimeclass-6301-delete-me @ 10/28/23 13:00:27.745
  STEP: Waiting for the RuntimeClass to disappear @ 10/28/23 13:00:27.754
  Oct 28 13:00:27.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6301" for this suite. @ 10/28/23 13:00:27.767
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 10/28/23 13:00:27.775
  Oct 28 13:00:27.775: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename namespaces @ 10/28/23 13:00:27.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:00:27.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:00:27.798
  STEP: Creating namespace "e2e-ns-ltm5z" @ 10/28/23 13:00:27.801
  Oct 28 13:00:27.818: INFO: Namespace "e2e-ns-ltm5z-8974" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-ltm5z-8974" @ 10/28/23 13:00:27.819
  Oct 28 13:00:27.827: INFO: Namespace "e2e-ns-ltm5z-8974" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-ltm5z-8974" @ 10/28/23 13:00:27.827
  Oct 28 13:00:27.834: INFO: Namespace "e2e-ns-ltm5z-8974" has []v1.FinalizerName{"kubernetes"}
  Oct 28 13:00:27.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6880" for this suite. @ 10/28/23 13:00:27.839
  STEP: Destroying namespace "e2e-ns-ltm5z-8974" for this suite. @ 10/28/23 13:00:27.845
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 10/28/23 13:00:27.855
  Oct 28 13:00:27.855: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename namespaces @ 10/28/23 13:00:27.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:00:27.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:00:27.875
  STEP: Creating a test namespace @ 10/28/23 13:00:27.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:00:27.894
  STEP: Creating a pod in the namespace @ 10/28/23 13:00:27.896
  STEP: Waiting for the pod to have running status @ 10/28/23 13:00:27.906
  STEP: Deleting the namespace @ 10/28/23 13:00:29.912
  STEP: Waiting for the namespace to be removed. @ 10/28/23 13:00:29.92
  STEP: Recreating the namespace @ 10/28/23 13:00:40.924
  STEP: Verifying there are no pods in the namespace @ 10/28/23 13:00:40.948
  Oct 28 13:00:40.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2829" for this suite. @ 10/28/23 13:00:40.955
  STEP: Destroying namespace "nsdeletetest-9170" for this suite. @ 10/28/23 13:00:40.962
  Oct 28 13:00:40.966: INFO: Namespace nsdeletetest-9170 was already deleted
  STEP: Destroying namespace "nsdeletetest-9612" for this suite. @ 10/28/23 13:00:40.966
• [13.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 10/28/23 13:00:40.974
  Oct 28 13:00:40.974: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 13:00:40.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:00:40.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:00:40.994
  STEP: creating an Endpoint @ 10/28/23 13:00:40.999
  STEP: waiting for available Endpoint @ 10/28/23 13:00:41.004
  STEP: listing all Endpoints @ 10/28/23 13:00:41.006
  STEP: updating the Endpoint @ 10/28/23 13:00:41.009
  STEP: fetching the Endpoint @ 10/28/23 13:00:41.016
  STEP: patching the Endpoint @ 10/28/23 13:00:41.02
  STEP: fetching the Endpoint @ 10/28/23 13:00:41.027
  STEP: deleting the Endpoint by Collection @ 10/28/23 13:00:41.03
  STEP: waiting for Endpoint deletion @ 10/28/23 13:00:41.039
  STEP: fetching the Endpoint @ 10/28/23 13:00:41.04
  Oct 28 13:00:41.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2033" for this suite. @ 10/28/23 13:00:41.048
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 10/28/23 13:00:41.057
  Oct 28 13:00:41.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 13:00:41.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:00:41.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:00:41.078
  STEP: Setting up server cert @ 10/28/23 13:00:41.106
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 13:00:41.42
  STEP: Deploying the webhook pod @ 10/28/23 13:00:41.428
  STEP: Wait for the deployment to be ready @ 10/28/23 13:00:41.44
  Oct 28 13:00:41.449: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 13:00:43.46
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 13:00:43.471
  Oct 28 13:00:44.472: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 10/28/23 13:00:44.48
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 10/28/23 13:00:44.482
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 10/28/23 13:00:44.482
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 10/28/23 13:00:44.482
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 10/28/23 13:00:44.483
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/28/23 13:00:44.483
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/28/23 13:00:44.485
  Oct 28 13:00:44.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9925" for this suite. @ 10/28/23 13:00:44.525
  STEP: Destroying namespace "webhook-markers-4736" for this suite. @ 10/28/23 13:00:44.537
• [3.487 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 10/28/23 13:00:44.546
  Oct 28 13:00:44.546: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 13:00:44.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:00:44.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:00:44.567
  STEP: creating a ConfigMap @ 10/28/23 13:00:44.574
  STEP: fetching the ConfigMap @ 10/28/23 13:00:44.578
  STEP: patching the ConfigMap @ 10/28/23 13:00:44.581
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 10/28/23 13:00:44.59
  STEP: deleting the ConfigMap by collection with a label selector @ 10/28/23 13:00:44.593
  STEP: listing all ConfigMaps in test namespace @ 10/28/23 13:00:44.602
  Oct 28 13:00:44.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5" for this suite. @ 10/28/23 13:00:44.61
• [0.073 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 10/28/23 13:00:44.62
  Oct 28 13:00:44.620: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 13:00:44.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:00:44.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:00:44.641
  STEP: creating service in namespace services-4884 @ 10/28/23 13:00:44.644
  STEP: creating service affinity-nodeport in namespace services-4884 @ 10/28/23 13:00:44.644
  STEP: creating replication controller affinity-nodeport in namespace services-4884 @ 10/28/23 13:00:44.666
  I1028 13:00:44.673179      19 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-4884, replica count: 3
  I1028 13:00:47.724749      19 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 28 13:00:47.735: INFO: Creating new exec pod
  Oct 28 13:00:50.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-4884 exec execpod-affinitywmwj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Oct 28 13:00:50.920: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Oct 28 13:00:50.920: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 13:00:50.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-4884 exec execpod-affinitywmwj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.186 80'
  Oct 28 13:00:51.071: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.186 80\nConnection to 10.152.183.186 80 port [tcp/http] succeeded!\n"
  Oct 28 13:00:51.071: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 13:00:51.071: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-4884 exec execpod-affinitywmwj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.72 31368'
  Oct 28 13:00:51.220: INFO: stderr: "+ nc -v -t -w 2 172.31.20.72 31368\n+ echo hostName\nConnection to 172.31.20.72 31368 port [tcp/*] succeeded!\n"
  Oct 28 13:00:51.220: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 13:00:51.221: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-4884 exec execpod-affinitywmwj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.37.29 31368'
  Oct 28 13:00:51.367: INFO: stderr: "+ nc -v -t -w 2 172.31.37.29 31368\nConnection to 172.31.37.29 31368 port [tcp/*] succeeded!\n+ echo hostName\n"
  Oct 28 13:00:51.367: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 13:00:51.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-4884 exec execpod-affinitywmwj6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.20.72:31368/ ; done'
  Oct 28 13:00:51.593: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:31368/\n"
  Oct 28 13:00:51.593: INFO: stdout: "\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb\naffinity-nodeport-smsgb"
  Oct 28 13:00:51.593: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.593: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Received response from host: affinity-nodeport-smsgb
  Oct 28 13:00:51.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 28 13:00:51.598: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-4884, will wait for the garbage collector to delete the pods @ 10/28/23 13:00:51.612
  Oct 28 13:00:51.673: INFO: Deleting ReplicationController affinity-nodeport took: 6.584023ms
  Oct 28 13:00:51.774: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.048222ms
  STEP: Destroying namespace "services-4884" for this suite. @ 10/28/23 13:00:54.998
• [10.385 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 10/28/23 13:00:55.011
  Oct 28 13:00:55.011: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 13:00:55.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:00:55.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:00:55.035
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/28/23 13:00:55.038
  STEP: Saw pod success @ 10/28/23 13:00:59.059
  Oct 28 13:00:59.063: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-d0971b84-ea22-4d67-96de-65bd79d2e823 container test-container: <nil>
  STEP: delete the pod @ 10/28/23 13:00:59.074
  Oct 28 13:00:59.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2145" for this suite. @ 10/28/23 13:00:59.093
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 10/28/23 13:00:59.101
  Oct 28 13:00:59.101: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-probe @ 10/28/23 13:00:59.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:00:59.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:00:59.122
  Oct 28 13:01:59.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6917" for this suite. @ 10/28/23 13:01:59.149
• [60.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 10/28/23 13:01:59.163
  Oct 28 13:01:59.163: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/28/23 13:01:59.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:01:59.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:01:59.183
  Oct 28 13:01:59.186: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:01:59.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8171" for this suite. @ 10/28/23 13:01:59.742
• [0.588 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 10/28/23 13:01:59.751
  Oct 28 13:01:59.751: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 13:01:59.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:01:59.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:01:59.782
  STEP: creating service nodeport-test with type=NodePort in namespace services-8010 @ 10/28/23 13:01:59.786
  STEP: creating replication controller nodeport-test in namespace services-8010 @ 10/28/23 13:01:59.803
  I1028 13:01:59.813943      19 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-8010, replica count: 2
  I1028 13:02:02.865350      19 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 28 13:02:02.865: INFO: Creating new exec pod
  Oct 28 13:02:05.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-8010 exec execpodbv8b8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Oct 28 13:02:06.028: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Oct 28 13:02:06.028: INFO: stdout: ""
  Oct 28 13:02:07.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-8010 exec execpodbv8b8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Oct 28 13:02:07.173: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Oct 28 13:02:07.173: INFO: stdout: "nodeport-test-244jm"
  Oct 28 13:02:07.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-8010 exec execpodbv8b8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.82 80'
  Oct 28 13:02:07.307: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.82 80\nConnection to 10.152.183.82 80 port [tcp/http] succeeded!\n"
  Oct 28 13:02:07.307: INFO: stdout: ""
  Oct 28 13:02:08.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-8010 exec execpodbv8b8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.82 80'
  Oct 28 13:02:08.448: INFO: stderr: "+ nc -v -t -w 2 10.152.183.82 80\n+ echo hostName\nConnection to 10.152.183.82 80 port [tcp/http] succeeded!\n"
  Oct 28 13:02:08.448: INFO: stdout: "nodeport-test-244jm"
  Oct 28 13:02:08.448: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-8010 exec execpodbv8b8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.72 30418'
  Oct 28 13:02:08.590: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.72 30418\nConnection to 172.31.20.72 30418 port [tcp/*] succeeded!\n"
  Oct 28 13:02:08.590: INFO: stdout: "nodeport-test-q6npk"
  Oct 28 13:02:08.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-8010 exec execpodbv8b8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.37.29 30418'
  Oct 28 13:02:08.736: INFO: stderr: "+ nc -v -t -w 2 172.31.37.29 30418\n+ echo hostName\nConnection to 172.31.37.29 30418 port [tcp/*] succeeded!\n"
  Oct 28 13:02:08.736: INFO: stdout: "nodeport-test-244jm"
  Oct 28 13:02:08.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8010" for this suite. @ 10/28/23 13:02:08.741
• [8.997 seconds]
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 10/28/23 13:02:08.748
  Oct 28 13:02:08.748: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 13:02:08.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:02:08.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:02:08.768
  STEP: creating a Service @ 10/28/23 13:02:08.778
  STEP: watching for the Service to be added @ 10/28/23 13:02:08.788
  Oct 28 13:02:08.790: INFO: Found Service test-service-n96rz in namespace services-6395 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Oct 28 13:02:08.790: INFO: Service test-service-n96rz created
  STEP: Getting /status @ 10/28/23 13:02:08.79
  Oct 28 13:02:08.795: INFO: Service test-service-n96rz has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 10/28/23 13:02:08.795
  STEP: watching for the Service to be patched @ 10/28/23 13:02:08.802
  Oct 28 13:02:08.803: INFO: observed Service test-service-n96rz in namespace services-6395 with annotations: map[] & LoadBalancer: {[]}
  Oct 28 13:02:08.803: INFO: Found Service test-service-n96rz in namespace services-6395 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Oct 28 13:02:08.803: INFO: Service test-service-n96rz has service status patched
  STEP: updating the ServiceStatus @ 10/28/23 13:02:08.803
  Oct 28 13:02:08.813: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 10/28/23 13:02:08.813
  Oct 28 13:02:08.815: INFO: Observed Service test-service-n96rz in namespace services-6395 with annotations: map[] & Conditions: {[]}
  Oct 28 13:02:08.816: INFO: Observed event: &Service{ObjectMeta:{test-service-n96rz  services-6395  6dabde90-18ba-4743-806c-6396dbacfb88 22044 0 2023-10-28 13:02:08 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-10-28 13:02:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-10-28 13:02:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.70,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.70],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Oct 28 13:02:08.816: INFO: Found Service test-service-n96rz in namespace services-6395 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct 28 13:02:08.816: INFO: Service test-service-n96rz has service status updated
  STEP: patching the service @ 10/28/23 13:02:08.816
  STEP: watching for the Service to be patched @ 10/28/23 13:02:08.828
  Oct 28 13:02:08.830: INFO: observed Service test-service-n96rz in namespace services-6395 with labels: map[test-service-static:true]
  Oct 28 13:02:08.830: INFO: observed Service test-service-n96rz in namespace services-6395 with labels: map[test-service-static:true]
  Oct 28 13:02:08.830: INFO: observed Service test-service-n96rz in namespace services-6395 with labels: map[test-service-static:true]
  Oct 28 13:02:08.830: INFO: Found Service test-service-n96rz in namespace services-6395 with labels: map[test-service:patched test-service-static:true]
  Oct 28 13:02:08.830: INFO: Service test-service-n96rz patched
  STEP: deleting the service @ 10/28/23 13:02:08.83
  STEP: watching for the Service to be deleted @ 10/28/23 13:02:08.845
  Oct 28 13:02:08.846: INFO: Observed event: ADDED
  Oct 28 13:02:08.846: INFO: Observed event: MODIFIED
  Oct 28 13:02:08.846: INFO: Observed event: MODIFIED
  Oct 28 13:02:08.847: INFO: Observed event: MODIFIED
  Oct 28 13:02:08.847: INFO: Found Service test-service-n96rz in namespace services-6395 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Oct 28 13:02:08.847: INFO: Service test-service-n96rz deleted
  Oct 28 13:02:08.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6395" for this suite. @ 10/28/23 13:02:08.851
• [0.109 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 10/28/23 13:02:08.857
  Oct 28 13:02:08.857: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename gc @ 10/28/23 13:02:08.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:02:08.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:02:08.878
  STEP: create the rc @ 10/28/23 13:02:08.885
  W1028 13:02:08.890607      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 10/28/23 13:02:13.898
  STEP: wait for all pods to be garbage collected @ 10/28/23 13:02:13.906
  STEP: Gathering metrics @ 10/28/23 13:02:18.918
  W1028 13:02:18.923225      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 28 13:02:18.923: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 28 13:02:18.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3151" for this suite. @ 10/28/23 13:02:18.927
• [10.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 10/28/23 13:02:18.934
  Oct 28 13:02:18.934: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename security-context-test @ 10/28/23 13:02:18.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:02:18.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:02:18.958
  Oct 28 13:02:22.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7177" for this suite. @ 10/28/23 13:02:22.985
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 10/28/23 13:02:22.993
  Oct 28 13:02:22.993: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename crd-watch @ 10/28/23 13:02:22.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:02:23.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:02:23.013
  Oct 28 13:02:23.016: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Creating first CR  @ 10/28/23 13:02:25.561
  Oct 28 13:02:25.566: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-28T13:02:25Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-28T13:02:25Z]] name:name1 resourceVersion:22242 uid:0edde2b0-4981-498f-909a-ba298bf0e08a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 10/28/23 13:02:35.567
  Oct 28 13:02:35.574: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-28T13:02:35Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-28T13:02:35Z]] name:name2 resourceVersion:22274 uid:e59ff289-39aa-4abd-bbc5-6a82ed310ac2] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 10/28/23 13:02:45.575
  Oct 28 13:02:45.583: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-28T13:02:25Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-28T13:02:45Z]] name:name1 resourceVersion:22293 uid:0edde2b0-4981-498f-909a-ba298bf0e08a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 10/28/23 13:02:55.583
  Oct 28 13:02:55.592: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-28T13:02:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-28T13:02:55Z]] name:name2 resourceVersion:22313 uid:e59ff289-39aa-4abd-bbc5-6a82ed310ac2] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 10/28/23 13:03:05.593
  Oct 28 13:03:05.601: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-28T13:02:25Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-28T13:02:45Z]] name:name1 resourceVersion:22333 uid:0edde2b0-4981-498f-909a-ba298bf0e08a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 10/28/23 13:03:15.603
  Oct 28 13:03:15.611: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-28T13:02:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-28T13:02:55Z]] name:name2 resourceVersion:22353 uid:e59ff289-39aa-4abd-bbc5-6a82ed310ac2] num:map[num1:9223372036854775807 num2:1000000]]}
  Oct 28 13:03:26.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4007" for this suite. @ 10/28/23 13:03:26.133
• [63.146 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 10/28/23 13:03:26.139
  Oct 28 13:03:26.139: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 13:03:26.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:03:26.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:03:26.164
  STEP: Setting up server cert @ 10/28/23 13:03:26.192
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 13:03:26.628
  STEP: Deploying the webhook pod @ 10/28/23 13:03:26.637
  STEP: Wait for the deployment to be ready @ 10/28/23 13:03:26.65
  Oct 28 13:03:26.658: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 13:03:28.669
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 13:03:28.677
  Oct 28 13:03:29.679: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct 28 13:03:29.686: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8956-crds.webhook.example.com via the AdmissionRegistration API @ 10/28/23 13:03:30.196
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/28/23 13:03:30.214
  Oct 28 13:03:32.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1264" for this suite. @ 10/28/23 13:03:32.826
  STEP: Destroying namespace "webhook-markers-7850" for this suite. @ 10/28/23 13:03:32.833
• [6.703 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 10/28/23 13:03:32.843
  Oct 28 13:03:32.843: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename taint-single-pod @ 10/28/23 13:03:32.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:03:32.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:03:32.865
  Oct 28 13:03:32.869: INFO: Waiting up to 1m0s for all nodes to be ready
  Oct 28 13:04:32.890: INFO: Waiting for terminating namespaces to be deleted...
  Oct 28 13:04:32.893: INFO: Starting informer...
  STEP: Starting pod... @ 10/28/23 13:04:32.893
  Oct 28 13:04:33.106: INFO: Pod is running on ip-172-31-37-29. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/28/23 13:04:33.106
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/28/23 13:04:33.116
  STEP: Waiting short time to make sure Pod is queued for deletion @ 10/28/23 13:04:33.12
  Oct 28 13:04:33.120: INFO: Pod wasn't evicted. Proceeding
  Oct 28 13:04:33.120: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/28/23 13:04:33.134
  STEP: Waiting some time to make sure that toleration time passed. @ 10/28/23 13:04:33.138
  Oct 28 13:05:48.138: INFO: Pod wasn't evicted. Test successful
  Oct 28 13:05:48.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2436" for this suite. @ 10/28/23 13:05:48.143
• [135.308 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 10/28/23 13:05:48.152
  Oct 28 13:05:48.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 13:05:48.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:05:48.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:05:48.173
  STEP: Creating the pod @ 10/28/23 13:05:48.177
  Oct 28 13:05:50.724: INFO: Successfully updated pod "annotationupdate2ca4b8eb-89a1-404b-bf9b-f985f37a64f2"
  Oct 28 13:05:52.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8435" for this suite. @ 10/28/23 13:05:52.744
• [4.601 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 10/28/23 13:05:52.756
  Oct 28 13:05:52.756: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 13:05:52.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:05:52.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:05:52.777
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/28/23 13:05:52.78
  STEP: Saw pod success @ 10/28/23 13:05:56.802
  Oct 28 13:05:56.806: INFO: Trying to get logs from node ip-172-31-20-72 pod pod-ff802f43-f929-43cf-81ff-abb6eaa77313 container test-container: <nil>
  STEP: delete the pod @ 10/28/23 13:05:56.825
  Oct 28 13:05:56.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7128" for this suite. @ 10/28/23 13:05:56.844
• [4.098 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 10/28/23 13:05:56.855
  Oct 28 13:05:56.855: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 13:05:56.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:05:56.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:05:56.877
  STEP: Creating configMap with name configmap-test-volume-map-6e7dc769-804a-4f2a-9d1b-200c3ba61010 @ 10/28/23 13:05:56.883
  STEP: Creating a pod to test consume configMaps @ 10/28/23 13:05:56.887
  STEP: Saw pod success @ 10/28/23 13:06:00.911
  Oct 28 13:06:00.914: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-configmaps-399e0bc8-abd3-470e-9d3d-cb26e71ff93e container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 13:06:00.924
  Oct 28 13:06:00.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2127" for this suite. @ 10/28/23 13:06:00.945
• [4.098 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 10/28/23 13:06:00.954
  Oct 28 13:06:00.954: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename daemonsets @ 10/28/23 13:06:00.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:00.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:00.975
  STEP: Creating simple DaemonSet "daemon-set" @ 10/28/23 13:06:01.002
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/28/23 13:06:01.006
  Oct 28 13:06:01.010: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:06:01.010: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:06:01.015: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 13:06:01.015: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 13:06:02.020: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:06:02.020: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:06:02.024: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 28 13:06:02.024: INFO: Node ip-172-31-37-29 is running 0 daemon pod, expected 1
  Oct 28 13:06:03.019: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:06:03.019: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:06:03.024: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 28 13:06:03.024: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 10/28/23 13:06:03.028
  Oct 28 13:06:03.032: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 10/28/23 13:06:03.032
  Oct 28 13:06:03.040: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 10/28/23 13:06:03.04
  Oct 28 13:06:03.042: INFO: Observed &DaemonSet event: ADDED
  Oct 28 13:06:03.042: INFO: Observed &DaemonSet event: MODIFIED
  Oct 28 13:06:03.042: INFO: Observed &DaemonSet event: MODIFIED
  Oct 28 13:06:03.042: INFO: Observed &DaemonSet event: MODIFIED
  Oct 28 13:06:03.043: INFO: Observed &DaemonSet event: MODIFIED
  Oct 28 13:06:03.043: INFO: Found daemon set daemon-set in namespace daemonsets-8015 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct 28 13:06:03.043: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 10/28/23 13:06:03.043
  STEP: watching for the daemon set status to be patched @ 10/28/23 13:06:03.05
  Oct 28 13:06:03.052: INFO: Observed &DaemonSet event: ADDED
  Oct 28 13:06:03.052: INFO: Observed &DaemonSet event: MODIFIED
  Oct 28 13:06:03.052: INFO: Observed &DaemonSet event: MODIFIED
  Oct 28 13:06:03.052: INFO: Observed &DaemonSet event: MODIFIED
  Oct 28 13:06:03.053: INFO: Observed &DaemonSet event: MODIFIED
  Oct 28 13:06:03.053: INFO: Observed daemon set daemon-set in namespace daemonsets-8015 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Oct 28 13:06:03.053: INFO: Observed &DaemonSet event: MODIFIED
  Oct 28 13:06:03.053: INFO: Found daemon set daemon-set in namespace daemonsets-8015 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Oct 28 13:06:03.053: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 10/28/23 13:06:03.056
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8015, will wait for the garbage collector to delete the pods @ 10/28/23 13:06:03.056
  Oct 28 13:06:03.116: INFO: Deleting DaemonSet.extensions daemon-set took: 6.63181ms
  Oct 28 13:06:03.217: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.11038ms
  Oct 28 13:06:04.520: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 13:06:04.520: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 28 13:06:04.523: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23023"},"items":null}

  Oct 28 13:06:04.527: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23023"},"items":null}

  Oct 28 13:06:04.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8015" for this suite. @ 10/28/23 13:06:04.544
• [3.597 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 10/28/23 13:06:04.551
  Oct 28 13:06:04.551: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 13:06:04.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:04.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:04.573
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 13:06:04.576
  STEP: Saw pod success @ 10/28/23 13:06:08.596
  Oct 28 13:06:08.600: INFO: Trying to get logs from node ip-172-31-37-29 pod downwardapi-volume-3fe0f08f-4d3e-48cf-8aac-71e26edd8996 container client-container: <nil>
  STEP: delete the pod @ 10/28/23 13:06:08.607
  Oct 28 13:06:08.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6620" for this suite. @ 10/28/23 13:06:08.626
• [4.082 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 10/28/23 13:06:08.633
  Oct 28 13:06:08.633: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pods @ 10/28/23 13:06:08.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:08.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:08.652
  STEP: creating the pod @ 10/28/23 13:06:08.659
  STEP: setting up watch @ 10/28/23 13:06:08.659
  STEP: submitting the pod to kubernetes @ 10/28/23 13:06:08.763
  STEP: verifying the pod is in kubernetes @ 10/28/23 13:06:08.774
  STEP: verifying pod creation was observed @ 10/28/23 13:06:08.779
  STEP: deleting the pod gracefully @ 10/28/23 13:06:10.789
  STEP: verifying pod deletion was observed @ 10/28/23 13:06:10.798
  Oct 28 13:06:13.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8937" for this suite. @ 10/28/23 13:06:13.504
• [4.877 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 10/28/23 13:06:13.514
  Oct 28 13:06:13.514: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 13:06:13.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:13.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:13.537
  STEP: Creating configMap configmap-8987/configmap-test-5af9326e-4525-4d68-aa31-68f30595e92b @ 10/28/23 13:06:13.541
  STEP: Creating a pod to test consume configMaps @ 10/28/23 13:06:13.548
  STEP: Saw pod success @ 10/28/23 13:06:17.57
  Oct 28 13:06:17.574: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-configmaps-1ccf21bf-12ff-4b67-b9eb-56f6b394223c container env-test: <nil>
  STEP: delete the pod @ 10/28/23 13:06:17.581
  Oct 28 13:06:17.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8987" for this suite. @ 10/28/23 13:06:17.598
• [4.090 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 10/28/23 13:06:17.605
  Oct 28 13:06:17.605: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 13:06:17.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:17.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:17.627
  STEP: create deployment with httpd image @ 10/28/23 13:06:17.63
  Oct 28 13:06:17.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-5566 create -f -'
  Oct 28 13:06:17.803: INFO: stderr: ""
  Oct 28 13:06:17.803: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 10/28/23 13:06:17.803
  Oct 28 13:06:17.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-5566 diff -f -'
  Oct 28 13:06:17.954: INFO: rc: 1
  Oct 28 13:06:17.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-5566 delete -f -'
  Oct 28 13:06:18.021: INFO: stderr: ""
  Oct 28 13:06:18.021: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Oct 28 13:06:18.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5566" for this suite. @ 10/28/23 13:06:18.026
• [0.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 10/28/23 13:06:18.032
  Oct 28 13:06:18.032: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/28/23 13:06:18.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:18.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:18.053
  Oct 28 13:06:18.056: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/28/23 13:06:19.349
  Oct 28 13:06:19.349: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-6104 --namespace=crd-publish-openapi-6104 create -f -'
  Oct 28 13:06:21.841: INFO: stderr: ""
  Oct 28 13:06:21.841: INFO: stdout: "e2e-test-crd-publish-openapi-554-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Oct 28 13:06:21.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-6104 --namespace=crd-publish-openapi-6104 delete e2e-test-crd-publish-openapi-554-crds test-cr'
  Oct 28 13:06:21.912: INFO: stderr: ""
  Oct 28 13:06:21.912: INFO: stdout: "e2e-test-crd-publish-openapi-554-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Oct 28 13:06:21.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-6104 --namespace=crd-publish-openapi-6104 apply -f -'
  Oct 28 13:06:22.061: INFO: stderr: ""
  Oct 28 13:06:22.061: INFO: stdout: "e2e-test-crd-publish-openapi-554-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Oct 28 13:06:22.061: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-6104 --namespace=crd-publish-openapi-6104 delete e2e-test-crd-publish-openapi-554-crds test-cr'
  Oct 28 13:06:22.131: INFO: stderr: ""
  Oct 28 13:06:22.131: INFO: stdout: "e2e-test-crd-publish-openapi-554-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/28/23 13:06:22.131
  Oct 28 13:06:22.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=crd-publish-openapi-6104 explain e2e-test-crd-publish-openapi-554-crds'
  Oct 28 13:06:22.650: INFO: stderr: ""
  Oct 28 13:06:22.650: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-554-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Oct 28 13:06:23.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6104" for this suite. @ 10/28/23 13:06:23.987
• [5.962 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 10/28/23 13:06:23.995
  Oct 28 13:06:23.995: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename secrets @ 10/28/23 13:06:23.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:24.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:24.015
  STEP: Creating secret with name secret-test-map-26826ae1-632c-485e-935b-b91bf547eff8 @ 10/28/23 13:06:24.018
  STEP: Creating a pod to test consume secrets @ 10/28/23 13:06:24.024
  STEP: Saw pod success @ 10/28/23 13:06:28.049
  Oct 28 13:06:28.053: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-secrets-c4d82de4-540d-4c12-a1d4-6d8b40266002 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 13:06:28.076
  Oct 28 13:06:28.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9063" for this suite. @ 10/28/23 13:06:28.1
• [4.114 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 10/28/23 13:06:28.109
  Oct 28 13:06:28.109: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename sysctl @ 10/28/23 13:06:28.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:28.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:28.152
  STEP: Creating a pod with one valid and two invalid sysctls @ 10/28/23 13:06:28.157
  Oct 28 13:06:28.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8684" for this suite. @ 10/28/23 13:06:28.177
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 10/28/23 13:06:28.188
  Oct 28 13:06:28.188: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 13:06:28.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:28.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:28.216
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/28/23 13:06:28.219
  STEP: Saw pod success @ 10/28/23 13:06:32.245
  Oct 28 13:06:32.249: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-b5f147bb-0a6c-4ffe-a1cc-d7a81f840618 container test-container: <nil>
  STEP: delete the pod @ 10/28/23 13:06:32.257
  Oct 28 13:06:32.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6689" for this suite. @ 10/28/23 13:06:32.275
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 10/28/23 13:06:32.284
  Oct 28 13:06:32.284: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 13:06:32.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:32.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:32.3
  Oct 28 13:06:32.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-642 version'
  Oct 28 13:06:32.362: INFO: stderr: ""
  Oct 28 13:06:32.362: INFO: stdout: "Client Version: v1.28.3\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.3\n"
  Oct 28 13:06:32.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-642" for this suite. @ 10/28/23 13:06:32.367
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 10/28/23 13:06:32.375
  Oct 28 13:06:32.375: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 13:06:32.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:32.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:32.399
  STEP: fetching services @ 10/28/23 13:06:32.402
  Oct 28 13:06:32.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3130" for this suite. @ 10/28/23 13:06:32.411
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 10/28/23 13:06:32.419
  Oct 28 13:06:32.419: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/28/23 13:06:32.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:32.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:32.439
  STEP: set up a multi version CRD @ 10/28/23 13:06:32.446
  Oct 28 13:06:32.446: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: mark a version not serverd @ 10/28/23 13:06:35.915
  STEP: check the unserved version gets removed @ 10/28/23 13:06:35.935
  STEP: check the other version is not changed @ 10/28/23 13:06:36.804
  Oct 28 13:06:39.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8558" for this suite. @ 10/28/23 13:06:39.447
• [7.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 10/28/23 13:06:39.456
  Oct 28 13:06:39.456: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 13:06:39.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:39.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:39.476
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/28/23 13:06:39.48
  STEP: Saw pod success @ 10/28/23 13:06:43.504
  Oct 28 13:06:43.508: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-8c7c5a75-ad87-4131-85ab-e3a0f19ac28f container test-container: <nil>
  STEP: delete the pod @ 10/28/23 13:06:43.517
  Oct 28 13:06:43.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5297" for this suite. @ 10/28/23 13:06:43.537
• [4.088 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 10/28/23 13:06:43.545
  Oct 28 13:06:43.545: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 13:06:43.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:43.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:43.565
  STEP: Setting up server cert @ 10/28/23 13:06:43.586
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 13:06:43.824
  STEP: Deploying the webhook pod @ 10/28/23 13:06:43.833
  STEP: Wait for the deployment to be ready @ 10/28/23 13:06:43.846
  Oct 28 13:06:43.862: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 13:06:45.875
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 13:06:45.893
  Oct 28 13:06:46.894: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/28/23 13:06:46.965
  STEP: Creating a configMap that should be mutated @ 10/28/23 13:06:46.978
  STEP: Deleting the collection of validation webhooks @ 10/28/23 13:06:47.011
  STEP: Creating a configMap that should not be mutated @ 10/28/23 13:06:47.063
  Oct 28 13:06:47.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7117" for this suite. @ 10/28/23 13:06:47.119
  STEP: Destroying namespace "webhook-markers-3413" for this suite. @ 10/28/23 13:06:47.125
• [3.592 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 10/28/23 13:06:47.138
  Oct 28 13:06:47.138: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename secrets @ 10/28/23 13:06:47.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:47.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:47.156
  STEP: Creating secret with name secret-test-map-ab9934e9-c36f-4db3-aaac-6520c9d61945 @ 10/28/23 13:06:47.159
  STEP: Creating a pod to test consume secrets @ 10/28/23 13:06:47.165
  STEP: Saw pod success @ 10/28/23 13:06:51.189
  Oct 28 13:06:51.193: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-secrets-a5856bab-7dd0-41bf-9b3e-9da90c7b2061 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 13:06:51.201
  Oct 28 13:06:51.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4823" for this suite. @ 10/28/23 13:06:51.223
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 10/28/23 13:06:51.23
  Oct 28 13:06:51.230: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename events @ 10/28/23 13:06:51.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:51.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:51.254
  STEP: creating a test event @ 10/28/23 13:06:51.257
  STEP: listing events in all namespaces @ 10/28/23 13:06:51.266
  STEP: listing events in test namespace @ 10/28/23 13:06:51.275
  STEP: listing events with field selection filtering on source @ 10/28/23 13:06:51.279
  STEP: listing events with field selection filtering on reportingController @ 10/28/23 13:06:51.283
  STEP: getting the test event @ 10/28/23 13:06:51.286
  STEP: patching the test event @ 10/28/23 13:06:51.291
  STEP: getting the test event @ 10/28/23 13:06:51.299
  STEP: updating the test event @ 10/28/23 13:06:51.303
  STEP: getting the test event @ 10/28/23 13:06:51.31
  STEP: deleting the test event @ 10/28/23 13:06:51.313
  STEP: listing events in all namespaces @ 10/28/23 13:06:51.322
  STEP: listing events in test namespace @ 10/28/23 13:06:51.331
  Oct 28 13:06:51.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5067" for this suite. @ 10/28/23 13:06:51.338
• [0.114 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 10/28/23 13:06:51.345
  Oct 28 13:06:51.345: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 13:06:51.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:51.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:51.365
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 13:06:51.368
  STEP: Saw pod success @ 10/28/23 13:06:55.392
  Oct 28 13:06:55.396: INFO: Trying to get logs from node ip-172-31-37-29 pod downwardapi-volume-3928bcb8-7148-40d5-97b9-bfad5334b0c7 container client-container: <nil>
  STEP: delete the pod @ 10/28/23 13:06:55.405
  Oct 28 13:06:55.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1537" for this suite. @ 10/28/23 13:06:55.424
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 10/28/23 13:06:55.435
  Oct 28 13:06:55.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 13:06:55.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:06:55.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:06:55.456
  STEP: Setting up server cert @ 10/28/23 13:06:55.482
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 13:06:55.74
  STEP: Deploying the webhook pod @ 10/28/23 13:06:55.747
  STEP: Wait for the deployment to be ready @ 10/28/23 13:06:55.762
  Oct 28 13:06:55.775: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 13:06:57.788
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 13:06:57.799
  Oct 28 13:06:58.800: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/28/23 13:06:58.809
  STEP: create a pod @ 10/28/23 13:06:58.825
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 10/28/23 13:07:00.841
  Oct 28 13:07:00.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=webhook-8791 attach --namespace=webhook-8791 to-be-attached-pod -i -c=container1'
  Oct 28 13:07:00.917: INFO: rc: 1
  Oct 28 13:07:00.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8791" for this suite. @ 10/28/23 13:07:00.977
  STEP: Destroying namespace "webhook-markers-2568" for this suite. @ 10/28/23 13:07:00.986
• [5.560 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 10/28/23 13:07:00.995
  Oct 28 13:07:00.995: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 13:07:00.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:07:01.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:07:01.012
  STEP: Creating a pod to test downward api env vars @ 10/28/23 13:07:01.015
  STEP: Saw pod success @ 10/28/23 13:07:05.039
  Oct 28 13:07:05.045: INFO: Trying to get logs from node ip-172-31-37-29 pod downward-api-0a880bbd-5ac2-45de-9aab-df0bd8cac915 container dapi-container: <nil>
  STEP: delete the pod @ 10/28/23 13:07:05.053
  Oct 28 13:07:05.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7829" for this suite. @ 10/28/23 13:07:05.071
• [4.084 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 10/28/23 13:07:05.08
  Oct 28 13:07:05.080: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename subpath @ 10/28/23 13:07:05.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:07:05.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:07:05.099
  STEP: Setting up data @ 10/28/23 13:07:05.102
  STEP: Creating pod pod-subpath-test-downwardapi-txsx @ 10/28/23 13:07:05.112
  STEP: Creating a pod to test atomic-volume-subpath @ 10/28/23 13:07:05.112
  STEP: Saw pod success @ 10/28/23 13:07:29.184
  Oct 28 13:07:29.188: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-subpath-test-downwardapi-txsx container test-container-subpath-downwardapi-txsx: <nil>
  STEP: delete the pod @ 10/28/23 13:07:29.196
  STEP: Deleting pod pod-subpath-test-downwardapi-txsx @ 10/28/23 13:07:29.21
  Oct 28 13:07:29.210: INFO: Deleting pod "pod-subpath-test-downwardapi-txsx" in namespace "subpath-1542"
  Oct 28 13:07:29.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1542" for this suite. @ 10/28/23 13:07:29.218
• [24.144 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 10/28/23 13:07:29.226
  Oct 28 13:07:29.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename dns @ 10/28/23 13:07:29.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:07:29.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:07:29.25
  STEP: Creating a test headless service @ 10/28/23 13:07:29.252
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-8041.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-8041.svc.cluster.local;sleep 1; done
   @ 10/28/23 13:07:29.257
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-8041.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8041.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-8041.svc.cluster.local;sleep 1; done
   @ 10/28/23 13:07:29.258
  STEP: creating a pod to probe DNS @ 10/28/23 13:07:29.258
  STEP: submitting the pod to kubernetes @ 10/28/23 13:07:29.258
  STEP: retrieving the pod @ 10/28/23 13:07:31.286
  STEP: looking for the results for each expected name from probers @ 10/28/23 13:07:31.29
  Oct 28 13:07:31.300: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local from pod dns-8041/dns-test-3250c114-9152-4214-989e-0a1add211ddb: the server could not find the requested resource (get pods dns-test-3250c114-9152-4214-989e-0a1add211ddb)
  Oct 28 13:07:31.306: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local from pod dns-8041/dns-test-3250c114-9152-4214-989e-0a1add211ddb: the server could not find the requested resource (get pods dns-test-3250c114-9152-4214-989e-0a1add211ddb)
  Oct 28 13:07:31.310: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8041.svc.cluster.local from pod dns-8041/dns-test-3250c114-9152-4214-989e-0a1add211ddb: the server could not find the requested resource (get pods dns-test-3250c114-9152-4214-989e-0a1add211ddb)
  Oct 28 13:07:31.315: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8041.svc.cluster.local from pod dns-8041/dns-test-3250c114-9152-4214-989e-0a1add211ddb: the server could not find the requested resource (get pods dns-test-3250c114-9152-4214-989e-0a1add211ddb)
  Oct 28 13:07:31.320: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local from pod dns-8041/dns-test-3250c114-9152-4214-989e-0a1add211ddb: the server could not find the requested resource (get pods dns-test-3250c114-9152-4214-989e-0a1add211ddb)
  Oct 28 13:07:31.323: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local from pod dns-8041/dns-test-3250c114-9152-4214-989e-0a1add211ddb: the server could not find the requested resource (get pods dns-test-3250c114-9152-4214-989e-0a1add211ddb)
  Oct 28 13:07:31.328: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8041.svc.cluster.local from pod dns-8041/dns-test-3250c114-9152-4214-989e-0a1add211ddb: the server could not find the requested resource (get pods dns-test-3250c114-9152-4214-989e-0a1add211ddb)
  Oct 28 13:07:31.333: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8041.svc.cluster.local from pod dns-8041/dns-test-3250c114-9152-4214-989e-0a1add211ddb: the server could not find the requested resource (get pods dns-test-3250c114-9152-4214-989e-0a1add211ddb)
  Oct 28 13:07:31.333: INFO: Lookups using dns-8041/dns-test-3250c114-9152-4214-989e-0a1add211ddb failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8041.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8041.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8041.svc.cluster.local jessie_udp@dns-test-service-2.dns-8041.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8041.svc.cluster.local]

  Oct 28 13:07:31.340: INFO: Pod client logs for webserver: 
  Oct 28 13:07:31.347: INFO: Pod client logs for querier: 
  Oct 28 13:07:31.354: INFO: Pod client logs for jessie-querier: 
  Oct 28 13:07:36.392: INFO: DNS probes using dns-8041/dns-test-3250c114-9152-4214-989e-0a1add211ddb succeeded

  Oct 28 13:07:36.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 13:07:36.396
  STEP: deleting the test headless service @ 10/28/23 13:07:36.408
  STEP: Destroying namespace "dns-8041" for this suite. @ 10/28/23 13:07:36.428
• [7.209 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 10/28/23 13:07:36.435
  Oct 28 13:07:36.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename replication-controller @ 10/28/23 13:07:36.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:07:36.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:07:36.454
  STEP: Creating replication controller my-hostname-basic-2addfbde-e647-48b6-a4c9-7b21a550c9d0 @ 10/28/23 13:07:36.457
  Oct 28 13:07:36.466: INFO: Pod name my-hostname-basic-2addfbde-e647-48b6-a4c9-7b21a550c9d0: Found 0 pods out of 1
  Oct 28 13:07:41.471: INFO: Pod name my-hostname-basic-2addfbde-e647-48b6-a4c9-7b21a550c9d0: Found 1 pods out of 1
  Oct 28 13:07:41.471: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-2addfbde-e647-48b6-a4c9-7b21a550c9d0" are running
  Oct 28 13:07:41.475: INFO: Pod "my-hostname-basic-2addfbde-e647-48b6-a4c9-7b21a550c9d0-lrzpx" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-28 13:07:36 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-28 13:07:37 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-28 13:07:37 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-28 13:07:36 +0000 UTC Reason: Message:}])
  Oct 28 13:07:41.475: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/28/23 13:07:41.475
  Oct 28 13:07:41.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9939" for this suite. @ 10/28/23 13:07:41.492
• [5.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 10/28/23 13:07:41.501
  Oct 28 13:07:41.501: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 13:07:41.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:07:41.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:07:41.522
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 13:07:41.525
  STEP: Saw pod success @ 10/28/23 13:07:45.549
  Oct 28 13:07:45.552: INFO: Trying to get logs from node ip-172-31-20-72 pod downwardapi-volume-ecb7dc08-89a1-4eb9-8147-b18a111968a1 container client-container: <nil>
  STEP: delete the pod @ 10/28/23 13:07:45.569
  Oct 28 13:07:45.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7015" for this suite. @ 10/28/23 13:07:45.587
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 10/28/23 13:07:45.594
  Oct 28 13:07:45.594: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 13:07:45.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:07:45.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:07:45.611
  STEP: Setting up server cert @ 10/28/23 13:07:45.634
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 13:07:45.885
  STEP: Deploying the webhook pod @ 10/28/23 13:07:45.895
  STEP: Wait for the deployment to be ready @ 10/28/23 13:07:45.907
  Oct 28 13:07:45.920: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 13:07:47.932
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 13:07:47.944
  Oct 28 13:07:48.944: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 10/28/23 13:07:48.955
  STEP: create a namespace for the webhook @ 10/28/23 13:07:48.972
  STEP: create a configmap should be unconditionally rejected by the webhook @ 10/28/23 13:07:48.985
  Oct 28 13:07:48.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3387" for this suite. @ 10/28/23 13:07:49.099
  STEP: Destroying namespace "webhook-markers-6147" for this suite. @ 10/28/23 13:07:49.11
  STEP: Destroying namespace "fail-closed-namespace-7008" for this suite. @ 10/28/23 13:07:49.12
• [3.532 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 10/28/23 13:07:49.127
  Oct 28 13:07:49.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename deployment @ 10/28/23 13:07:49.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:07:49.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:07:49.149
  Oct 28 13:07:49.170: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Oct 28 13:07:54.178: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/28/23 13:07:54.178
  Oct 28 13:07:54.180: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 10/28/23 13:07:54.192
  Oct 28 13:07:54.211: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2384",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8846c64d-8878-4367-8157-ba5cb58fd534",
      ResourceVersion: (string) (len=5) "24182",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834095274,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834095274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 28 13:07:54.217: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Oct 28 13:07:54.217: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Oct 28 13:07:54.218: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2384",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7bf009e5-1fdf-48a4-9a99-dc5e625d56a2",
      ResourceVersion: (string) (len=5) "24184",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834095269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "8846c64d-8878-4367-8157-ba5cb58fd534",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834095269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834095270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834095274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 38 38 34 36 63 36 34  |"uid\":\"8846c64|
              00000040  64 2d 38 38 37 38 2d 34  33 36 37 2d 38 31 35 37  |d-8878-4367-8157|
              00000050  2d 62 61 35 63 62 35 38  66 64 35 33 34 5c 22 7d  |-ba5cb58fd534\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 28 13:07:54.253: INFO: Pod "test-cleanup-controller-2ncwx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-2ncwx",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-2384",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ad2b931-a4ac-441e-8fde-699496b28f9f",
      ResourceVersion: (string) (len=5) "24159",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834095269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "7bf009e5-1fdf-48a4-9a99-dc5e625d56a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834095269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  37 62 66 30 30 39 65 35  |uid\":\"7bf009e5|
              00000080  2d 31 66 64 66 2d 34 38  61 34 2d 39 61 39 39 2d  |-1fdf-48a4-9a99-|
              00000090  64 63 35 65 36 32 35 64  35 36 61 32 5c 22 7d 22  |dc5e625d56a2\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834095270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 33 36 2e 32 35 32 5c  |192.168.136.252\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gksdg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gksdg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-37-29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834095269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834095270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834095270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834095269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.37.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.136.252",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.136.252"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834095269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834095269,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a2caf5bc9220fe1bc4958d4e9db46131f51400693e28d8078079fb19ed4a8005",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:07:54.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2384" for this suite. @ 10/28/23 13:07:54.28
• [5.163 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 10/28/23 13:07:54.291
  Oct 28 13:07:54.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 13:07:54.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:07:54.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:07:54.339
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/28/23 13:07:54.347
  Oct 28 13:07:54.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-1228 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Oct 28 13:07:54.421: INFO: stderr: ""
  Oct 28 13:07:54.421: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/28/23 13:07:54.421
  Oct 28 13:07:54.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-1228 delete pods e2e-test-httpd-pod'
  Oct 28 13:07:55.766: INFO: stderr: ""
  Oct 28 13:07:55.766: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Oct 28 13:07:55.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1228" for this suite. @ 10/28/23 13:07:55.773
• [1.492 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 10/28/23 13:07:55.783
  Oct 28 13:07:55.783: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 13:07:55.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:07:55.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:07:55.81
  STEP: Setting up server cert @ 10/28/23 13:07:55.848
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 13:07:56.166
  STEP: Deploying the webhook pod @ 10/28/23 13:07:56.173
  STEP: Wait for the deployment to be ready @ 10/28/23 13:07:56.185
  Oct 28 13:07:56.192: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 13:07:58.206
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 13:07:58.222
  Oct 28 13:07:59.222: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct 28 13:07:59.230: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8234-crds.webhook.example.com via the AdmissionRegistration API @ 10/28/23 13:07:59.741
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/28/23 13:07:59.759
  Oct 28 13:08:01.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9578" for this suite. @ 10/28/23 13:08:02.346
  STEP: Destroying namespace "webhook-markers-1309" for this suite. @ 10/28/23 13:08:02.353
• [6.576 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 10/28/23 13:08:02.361
  Oct 28 13:08:02.361: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename limitrange @ 10/28/23 13:08:02.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:08:02.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:08:02.379
  STEP: Creating LimitRange "e2e-limitrange-wp48s" in namespace "limitrange-2808" @ 10/28/23 13:08:02.382
  STEP: Creating another limitRange in another namespace @ 10/28/23 13:08:02.392
  Oct 28 13:08:02.412: INFO: Namespace "e2e-limitrange-wp48s-103" created
  Oct 28 13:08:02.412: INFO: Creating LimitRange "e2e-limitrange-wp48s" in namespace "e2e-limitrange-wp48s-103"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-wp48s" @ 10/28/23 13:08:02.42
  Oct 28 13:08:02.423: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-wp48s" in "limitrange-2808" namespace @ 10/28/23 13:08:02.423
  Oct 28 13:08:02.429: INFO: LimitRange "e2e-limitrange-wp48s" has been patched
  STEP: Delete LimitRange "e2e-limitrange-wp48s" by Collection with labelSelector: "e2e-limitrange-wp48s=patched" @ 10/28/23 13:08:02.429
  STEP: Confirm that the limitRange "e2e-limitrange-wp48s" has been deleted @ 10/28/23 13:08:02.438
  Oct 28 13:08:02.438: INFO: Requesting list of LimitRange to confirm quantity
  Oct 28 13:08:02.442: INFO: Found 0 LimitRange with label "e2e-limitrange-wp48s=patched"
  Oct 28 13:08:02.442: INFO: LimitRange "e2e-limitrange-wp48s" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-wp48s" @ 10/28/23 13:08:02.442
  Oct 28 13:08:02.446: INFO: Found 1 limitRange
  Oct 28 13:08:02.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2808" for this suite. @ 10/28/23 13:08:02.451
  STEP: Destroying namespace "e2e-limitrange-wp48s-103" for this suite. @ 10/28/23 13:08:02.457
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 10/28/23 13:08:02.468
  Oct 28 13:08:02.468: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename dns @ 10/28/23 13:08:02.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:08:02.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:08:02.489
  STEP: Creating a test headless service @ 10/28/23 13:08:02.492
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9634 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9634;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9634 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9634;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9634.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9634.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9634.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9634.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9634.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9634.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9634.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9634.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9634.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9634.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9634.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9634.svc;check="$$(dig +notcp +noall +answer +search 56.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.56_udp@PTR;check="$$(dig +tcp +noall +answer +search 56.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.56_tcp@PTR;sleep 1; done
   @ 10/28/23 13:08:02.514
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9634 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9634;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9634 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9634;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9634.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9634.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9634.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9634.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9634.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9634.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9634.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9634.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9634.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9634.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9634.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9634.svc;check="$$(dig +notcp +noall +answer +search 56.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.56_udp@PTR;check="$$(dig +tcp +noall +answer +search 56.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.56_tcp@PTR;sleep 1; done
   @ 10/28/23 13:08:02.514
  STEP: creating a pod to probe DNS @ 10/28/23 13:08:02.514
  STEP: submitting the pod to kubernetes @ 10/28/23 13:08:02.514
  STEP: retrieving the pod @ 10/28/23 13:08:04.539
  STEP: looking for the results for each expected name from probers @ 10/28/23 13:08:04.543
  Oct 28 13:08:04.548: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.553: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.557: INFO: Unable to read wheezy_udp@dns-test-service.dns-9634 from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.561: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9634 from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.566: INFO: Unable to read wheezy_udp@dns-test-service.dns-9634.svc from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.570: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9634.svc from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.574: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9634.svc from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.579: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9634.svc from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.599: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.604: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.608: INFO: Unable to read jessie_udp@dns-test-service.dns-9634 from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.612: INFO: Unable to read jessie_tcp@dns-test-service.dns-9634 from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.617: INFO: Unable to read jessie_udp@dns-test-service.dns-9634.svc from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.620: INFO: Unable to read jessie_tcp@dns-test-service.dns-9634.svc from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.624: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9634.svc from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.629: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9634.svc from pod dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e: the server could not find the requested resource (get pods dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e)
  Oct 28 13:08:04.645: INFO: Lookups using dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9634 wheezy_tcp@dns-test-service.dns-9634 wheezy_udp@dns-test-service.dns-9634.svc wheezy_tcp@dns-test-service.dns-9634.svc wheezy_udp@_http._tcp.dns-test-service.dns-9634.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9634.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9634 jessie_tcp@dns-test-service.dns-9634 jessie_udp@dns-test-service.dns-9634.svc jessie_tcp@dns-test-service.dns-9634.svc jessie_udp@_http._tcp.dns-test-service.dns-9634.svc jessie_tcp@_http._tcp.dns-test-service.dns-9634.svc]

  Oct 28 13:08:04.653: INFO: Pod client logs for webserver: 
  Oct 28 13:08:04.661: INFO: Pod client logs for querier: 
  Oct 28 13:08:04.667: INFO: Pod client logs for jessie-querier: 
  Oct 28 13:08:09.770: INFO: DNS probes using dns-9634/dns-test-143dad6b-62dc-42e0-b15d-2fe8874a698e succeeded

  Oct 28 13:08:09.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 13:08:09.774
  STEP: deleting the test service @ 10/28/23 13:08:09.788
  STEP: deleting the test headless service @ 10/28/23 13:08:09.82
  STEP: Destroying namespace "dns-9634" for this suite. @ 10/28/23 13:08:09.842
• [7.384 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 10/28/23 13:08:09.853
  Oct 28 13:08:09.853: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pods @ 10/28/23 13:08:09.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:08:09.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:08:09.871
  STEP: creating a Pod with a static label @ 10/28/23 13:08:09.879
  STEP: watching for Pod to be ready @ 10/28/23 13:08:09.888
  Oct 28 13:08:09.889: INFO: observed Pod pod-test in namespace pods-1064 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Oct 28 13:08:09.891: INFO: observed Pod pod-test in namespace pods-1064 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 13:08:09 +0000 UTC  }]
  Oct 28 13:08:09.911: INFO: observed Pod pod-test in namespace pods-1064 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 13:08:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-28 13:08:09 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-28 13:08:09 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 13:08:09 +0000 UTC  }]
  Oct 28 13:08:10.797: INFO: Found Pod pod-test in namespace pods-1064 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 13:08:09 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 13:08:10 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 13:08:10 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-28 13:08:09 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 10/28/23 13:08:10.801
  STEP: getting the Pod and ensuring that it's patched @ 10/28/23 13:08:10.811
  STEP: replacing the Pod's status Ready condition to False @ 10/28/23 13:08:10.818
  STEP: check the Pod again to ensure its Ready conditions are False @ 10/28/23 13:08:10.831
  STEP: deleting the Pod via a Collection with a LabelSelector @ 10/28/23 13:08:10.831
  STEP: watching for the Pod to be deleted @ 10/28/23 13:08:10.842
  Oct 28 13:08:10.844: INFO: observed event type MODIFIED
  Oct 28 13:08:12.802: INFO: observed event type MODIFIED
  Oct 28 13:08:13.064: INFO: observed event type MODIFIED
  Oct 28 13:08:13.808: INFO: observed event type MODIFIED
  Oct 28 13:08:13.820: INFO: observed event type MODIFIED
  Oct 28 13:08:13.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1064" for this suite. @ 10/28/23 13:08:13.83
• [3.983 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 10/28/23 13:08:13.836
  Oct 28 13:08:13.836: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 13:08:13.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:08:13.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:08:13.852
  STEP: Setting up server cert @ 10/28/23 13:08:13.879
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 13:08:14.194
  STEP: Deploying the webhook pod @ 10/28/23 13:08:14.199
  STEP: Wait for the deployment to be ready @ 10/28/23 13:08:14.213
  Oct 28 13:08:14.228: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Oct 28 13:08:16.241: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 28, 13, 8, 14, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 8, 14, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 8, 14, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 8, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 10/28/23 13:08:18.245
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 13:08:18.26
  Oct 28 13:08:19.260: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct 28 13:08:19.268: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-578-crds.webhook.example.com via the AdmissionRegistration API @ 10/28/23 13:08:19.779
  STEP: Creating a custom resource while v1 is storage version @ 10/28/23 13:08:19.796
  STEP: Patching Custom Resource Definition to set v2 as storage @ 10/28/23 13:08:21.845
  STEP: Patching the custom resource while v2 is storage version @ 10/28/23 13:08:21.86
  Oct 28 13:08:21.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9829" for this suite. @ 10/28/23 13:08:22.494
  STEP: Destroying namespace "webhook-markers-5389" for this suite. @ 10/28/23 13:08:22.502
• [8.673 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 10/28/23 13:08:22.511
  Oct 28 13:08:22.511: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename secrets @ 10/28/23 13:08:22.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:08:22.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:08:22.529
  STEP: Creating secret with name secret-test-d512eb64-6037-4247-8997-d0d7a50d5e78 @ 10/28/23 13:08:22.532
  STEP: Creating a pod to test consume secrets @ 10/28/23 13:08:22.537
  STEP: Saw pod success @ 10/28/23 13:08:26.561
  Oct 28 13:08:26.566: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-secrets-7918b43c-a7e3-456c-9d93-7afce9ab56d4 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 13:08:26.583
  Oct 28 13:08:26.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9251" for this suite. @ 10/28/23 13:08:26.604
• [4.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 10/28/23 13:08:26.613
  Oct 28 13:08:26.613: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pods @ 10/28/23 13:08:26.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:08:26.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:08:26.636
  STEP: Create set of pods @ 10/28/23 13:08:26.64
  Oct 28 13:08:26.648: INFO: created test-pod-1
  Oct 28 13:08:26.657: INFO: created test-pod-2
  Oct 28 13:08:26.670: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 10/28/23 13:08:26.67
  STEP: waiting for all pods to be deleted @ 10/28/23 13:08:28.724
  Oct 28 13:08:28.727: INFO: Pod quantity 3 is different from expected quantity 0
  Oct 28 13:08:29.731: INFO: Pod quantity 3 is different from expected quantity 0
  Oct 28 13:08:30.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6543" for this suite. @ 10/28/23 13:08:30.736
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 10/28/23 13:08:30.747
  Oct 28 13:08:30.747: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 13:08:30.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:08:30.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:08:30.768
  STEP: Creating configMap that has name configmap-test-emptyKey-14712328-d07f-4ba1-97f1-aa1d09562ad5 @ 10/28/23 13:08:30.77
  Oct 28 13:08:30.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-363" for this suite. @ 10/28/23 13:08:30.777
• [0.037 seconds]
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 10/28/23 13:08:30.784
  Oct 28 13:08:30.784: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename security-context-test @ 10/28/23 13:08:30.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:08:30.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:08:30.804
  Oct 28 13:08:34.844: INFO: Got logs for pod "busybox-privileged-false-1dbd587f-eccf-4d26-a201-4e417066170f": "ip: RTNETLINK answers: Operation not permitted\n"
  Oct 28 13:08:34.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8889" for this suite. @ 10/28/23 13:08:34.848
• [4.072 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 10/28/23 13:08:34.856
  Oct 28 13:08:34.856: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename var-expansion @ 10/28/23 13:08:34.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:08:34.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:08:34.876
  STEP: creating the pod with failed condition @ 10/28/23 13:08:34.879
  STEP: updating the pod @ 10/28/23 13:10:34.89
  Oct 28 13:10:35.404: INFO: Successfully updated pod "var-expansion-87d94e80-7eb9-4c46-98b9-fbd365d44357"
  STEP: waiting for pod running @ 10/28/23 13:10:35.404
  STEP: deleting the pod gracefully @ 10/28/23 13:10:37.412
  Oct 28 13:10:37.412: INFO: Deleting pod "var-expansion-87d94e80-7eb9-4c46-98b9-fbd365d44357" in namespace "var-expansion-1187"
  Oct 28 13:10:37.421: INFO: Wait up to 5m0s for pod "var-expansion-87d94e80-7eb9-4c46-98b9-fbd365d44357" to be fully deleted
  Oct 28 13:11:09.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1187" for this suite. @ 10/28/23 13:11:09.504
• [154.657 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 10/28/23 13:11:09.515
  Oct 28 13:11:09.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename field-validation @ 10/28/23 13:11:09.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:11:09.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:11:09.535
  Oct 28 13:11:09.538: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  W1028 13:11:12.094097      19 warnings.go:70] unknown field "alpha"
  W1028 13:11:12.094118      19 warnings.go:70] unknown field "beta"
  W1028 13:11:12.094125      19 warnings.go:70] unknown field "delta"
  W1028 13:11:12.094131      19 warnings.go:70] unknown field "epsilon"
  W1028 13:11:12.094138      19 warnings.go:70] unknown field "gamma"
  Oct 28 13:11:12.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6522" for this suite. @ 10/28/23 13:11:12.648
• [3.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 10/28/23 13:11:12.66
  Oct 28 13:11:12.660: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename gc @ 10/28/23 13:11:12.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:11:12.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:11:12.68
  STEP: create the rc @ 10/28/23 13:11:12.687
  W1028 13:11:12.694990      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 10/28/23 13:11:18.716
  STEP: wait for the rc to be deleted @ 10/28/23 13:11:18.73
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 10/28/23 13:11:23.736
  STEP: Gathering metrics @ 10/28/23 13:11:53.747
  W1028 13:11:53.754241      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 28 13:11:53.754: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 28 13:11:53.754: INFO: Deleting pod "simpletest.rc-2mlrv" in namespace "gc-701"
  Oct 28 13:11:53.767: INFO: Deleting pod "simpletest.rc-49l4h" in namespace "gc-701"
  Oct 28 13:11:53.781: INFO: Deleting pod "simpletest.rc-4nrls" in namespace "gc-701"
  Oct 28 13:11:53.793: INFO: Deleting pod "simpletest.rc-4v5th" in namespace "gc-701"
  Oct 28 13:11:53.804: INFO: Deleting pod "simpletest.rc-5fpr6" in namespace "gc-701"
  Oct 28 13:11:53.816: INFO: Deleting pod "simpletest.rc-5plhk" in namespace "gc-701"
  Oct 28 13:11:53.829: INFO: Deleting pod "simpletest.rc-5w8hv" in namespace "gc-701"
  Oct 28 13:11:53.843: INFO: Deleting pod "simpletest.rc-6gvjv" in namespace "gc-701"
  Oct 28 13:11:53.855: INFO: Deleting pod "simpletest.rc-6tblt" in namespace "gc-701"
  Oct 28 13:11:53.868: INFO: Deleting pod "simpletest.rc-7g68q" in namespace "gc-701"
  Oct 28 13:11:53.879: INFO: Deleting pod "simpletest.rc-7kfbl" in namespace "gc-701"
  Oct 28 13:11:53.892: INFO: Deleting pod "simpletest.rc-7lwtt" in namespace "gc-701"
  Oct 28 13:11:53.907: INFO: Deleting pod "simpletest.rc-7sc5z" in namespace "gc-701"
  Oct 28 13:11:53.925: INFO: Deleting pod "simpletest.rc-8tb9h" in namespace "gc-701"
  Oct 28 13:11:53.939: INFO: Deleting pod "simpletest.rc-9lvjl" in namespace "gc-701"
  Oct 28 13:11:53.951: INFO: Deleting pod "simpletest.rc-9xxsp" in namespace "gc-701"
  Oct 28 13:11:53.968: INFO: Deleting pod "simpletest.rc-bj4mj" in namespace "gc-701"
  Oct 28 13:11:53.987: INFO: Deleting pod "simpletest.rc-bmlz6" in namespace "gc-701"
  Oct 28 13:11:54.003: INFO: Deleting pod "simpletest.rc-bp729" in namespace "gc-701"
  Oct 28 13:11:54.014: INFO: Deleting pod "simpletest.rc-btvxm" in namespace "gc-701"
  Oct 28 13:11:54.029: INFO: Deleting pod "simpletest.rc-bxzh4" in namespace "gc-701"
  Oct 28 13:11:54.043: INFO: Deleting pod "simpletest.rc-c4n5f" in namespace "gc-701"
  Oct 28 13:11:54.058: INFO: Deleting pod "simpletest.rc-c94qt" in namespace "gc-701"
  Oct 28 13:11:54.070: INFO: Deleting pod "simpletest.rc-cp267" in namespace "gc-701"
  Oct 28 13:11:54.088: INFO: Deleting pod "simpletest.rc-d4grz" in namespace "gc-701"
  Oct 28 13:11:54.100: INFO: Deleting pod "simpletest.rc-d52rq" in namespace "gc-701"
  Oct 28 13:11:54.112: INFO: Deleting pod "simpletest.rc-d6rx6" in namespace "gc-701"
  Oct 28 13:11:54.125: INFO: Deleting pod "simpletest.rc-d98zt" in namespace "gc-701"
  Oct 28 13:11:54.138: INFO: Deleting pod "simpletest.rc-dxp26" in namespace "gc-701"
  Oct 28 13:11:54.153: INFO: Deleting pod "simpletest.rc-fb727" in namespace "gc-701"
  Oct 28 13:11:54.164: INFO: Deleting pod "simpletest.rc-fdl6k" in namespace "gc-701"
  Oct 28 13:11:54.176: INFO: Deleting pod "simpletest.rc-ffjgg" in namespace "gc-701"
  Oct 28 13:11:54.189: INFO: Deleting pod "simpletest.rc-gpnr5" in namespace "gc-701"
  Oct 28 13:11:54.204: INFO: Deleting pod "simpletest.rc-gztjs" in namespace "gc-701"
  Oct 28 13:11:54.218: INFO: Deleting pod "simpletest.rc-h4hgh" in namespace "gc-701"
  Oct 28 13:11:54.232: INFO: Deleting pod "simpletest.rc-hds84" in namespace "gc-701"
  Oct 28 13:11:54.244: INFO: Deleting pod "simpletest.rc-hnfz5" in namespace "gc-701"
  Oct 28 13:11:54.256: INFO: Deleting pod "simpletest.rc-j9tnz" in namespace "gc-701"
  Oct 28 13:11:54.268: INFO: Deleting pod "simpletest.rc-jkq6k" in namespace "gc-701"
  Oct 28 13:11:54.280: INFO: Deleting pod "simpletest.rc-jsjs6" in namespace "gc-701"
  Oct 28 13:11:54.295: INFO: Deleting pod "simpletest.rc-jv2nm" in namespace "gc-701"
  Oct 28 13:11:54.308: INFO: Deleting pod "simpletest.rc-jz7zr" in namespace "gc-701"
  Oct 28 13:11:54.329: INFO: Deleting pod "simpletest.rc-k7vj2" in namespace "gc-701"
  Oct 28 13:11:54.342: INFO: Deleting pod "simpletest.rc-k9wd4" in namespace "gc-701"
  Oct 28 13:11:54.354: INFO: Deleting pod "simpletest.rc-kgpqj" in namespace "gc-701"
  Oct 28 13:11:54.366: INFO: Deleting pod "simpletest.rc-kqd82" in namespace "gc-701"
  Oct 28 13:11:54.378: INFO: Deleting pod "simpletest.rc-kzbkt" in namespace "gc-701"
  Oct 28 13:11:54.407: INFO: Deleting pod "simpletest.rc-ldhr8" in namespace "gc-701"
  Oct 28 13:11:54.468: INFO: Deleting pod "simpletest.rc-lfgq5" in namespace "gc-701"
  Oct 28 13:11:54.520: INFO: Deleting pod "simpletest.rc-m6frp" in namespace "gc-701"
  Oct 28 13:11:54.538: INFO: Deleting pod "simpletest.rc-m8slk" in namespace "gc-701"
  Oct 28 13:11:54.556: INFO: Deleting pod "simpletest.rc-mdgjv" in namespace "gc-701"
  Oct 28 13:11:54.570: INFO: Deleting pod "simpletest.rc-mm24m" in namespace "gc-701"
  Oct 28 13:11:54.584: INFO: Deleting pod "simpletest.rc-mmg6z" in namespace "gc-701"
  Oct 28 13:11:54.603: INFO: Deleting pod "simpletest.rc-mrtjw" in namespace "gc-701"
  Oct 28 13:11:54.618: INFO: Deleting pod "simpletest.rc-ms27z" in namespace "gc-701"
  Oct 28 13:11:54.630: INFO: Deleting pod "simpletest.rc-n5dwz" in namespace "gc-701"
  Oct 28 13:11:54.642: INFO: Deleting pod "simpletest.rc-n7j45" in namespace "gc-701"
  Oct 28 13:11:54.657: INFO: Deleting pod "simpletest.rc-n7zbc" in namespace "gc-701"
  Oct 28 13:11:54.672: INFO: Deleting pod "simpletest.rc-nj5jt" in namespace "gc-701"
  Oct 28 13:11:54.684: INFO: Deleting pod "simpletest.rc-nznrf" in namespace "gc-701"
  Oct 28 13:11:54.699: INFO: Deleting pod "simpletest.rc-p8lc5" in namespace "gc-701"
  Oct 28 13:11:54.713: INFO: Deleting pod "simpletest.rc-p92xm" in namespace "gc-701"
  Oct 28 13:11:54.726: INFO: Deleting pod "simpletest.rc-pd9zb" in namespace "gc-701"
  Oct 28 13:11:54.739: INFO: Deleting pod "simpletest.rc-pvht2" in namespace "gc-701"
  Oct 28 13:11:54.752: INFO: Deleting pod "simpletest.rc-pznhm" in namespace "gc-701"
  Oct 28 13:11:54.766: INFO: Deleting pod "simpletest.rc-q472h" in namespace "gc-701"
  Oct 28 13:11:54.778: INFO: Deleting pod "simpletest.rc-q6fz6" in namespace "gc-701"
  Oct 28 13:11:54.789: INFO: Deleting pod "simpletest.rc-q85wg" in namespace "gc-701"
  Oct 28 13:11:54.802: INFO: Deleting pod "simpletest.rc-qdp6w" in namespace "gc-701"
  Oct 28 13:11:54.849: INFO: Deleting pod "simpletest.rc-qg997" in namespace "gc-701"
  Oct 28 13:11:54.902: INFO: Deleting pod "simpletest.rc-qj586" in namespace "gc-701"
  Oct 28 13:11:54.966: INFO: Deleting pod "simpletest.rc-qnz68" in namespace "gc-701"
  Oct 28 13:11:55.004: INFO: Deleting pod "simpletest.rc-qshjz" in namespace "gc-701"
  Oct 28 13:11:55.051: INFO: Deleting pod "simpletest.rc-r2ccn" in namespace "gc-701"
  Oct 28 13:11:55.103: INFO: Deleting pod "simpletest.rc-r2s56" in namespace "gc-701"
  Oct 28 13:11:55.152: INFO: Deleting pod "simpletest.rc-r782m" in namespace "gc-701"
  Oct 28 13:11:55.201: INFO: Deleting pod "simpletest.rc-rljx9" in namespace "gc-701"
  Oct 28 13:11:55.251: INFO: Deleting pod "simpletest.rc-rzlgr" in namespace "gc-701"
  Oct 28 13:11:55.303: INFO: Deleting pod "simpletest.rc-sfxqt" in namespace "gc-701"
  Oct 28 13:11:55.354: INFO: Deleting pod "simpletest.rc-shvvv" in namespace "gc-701"
  Oct 28 13:11:55.399: INFO: Deleting pod "simpletest.rc-spdsh" in namespace "gc-701"
  Oct 28 13:11:55.454: INFO: Deleting pod "simpletest.rc-spldp" in namespace "gc-701"
  Oct 28 13:11:55.512: INFO: Deleting pod "simpletest.rc-t644g" in namespace "gc-701"
  Oct 28 13:11:55.559: INFO: Deleting pod "simpletest.rc-t9clg" in namespace "gc-701"
  Oct 28 13:11:55.601: INFO: Deleting pod "simpletest.rc-tgcpx" in namespace "gc-701"
  Oct 28 13:11:55.653: INFO: Deleting pod "simpletest.rc-twxqk" in namespace "gc-701"
  Oct 28 13:11:55.705: INFO: Deleting pod "simpletest.rc-v65xq" in namespace "gc-701"
  Oct 28 13:11:55.755: INFO: Deleting pod "simpletest.rc-v6srs" in namespace "gc-701"
  Oct 28 13:11:55.805: INFO: Deleting pod "simpletest.rc-v7qwc" in namespace "gc-701"
  Oct 28 13:11:55.858: INFO: Deleting pod "simpletest.rc-vv7hq" in namespace "gc-701"
  Oct 28 13:11:55.907: INFO: Deleting pod "simpletest.rc-w2dwm" in namespace "gc-701"
  Oct 28 13:11:55.973: INFO: Deleting pod "simpletest.rc-wd4hg" in namespace "gc-701"
  Oct 28 13:11:56.007: INFO: Deleting pod "simpletest.rc-wx5lj" in namespace "gc-701"
  Oct 28 13:11:56.061: INFO: Deleting pod "simpletest.rc-xb8kf" in namespace "gc-701"
  Oct 28 13:11:56.120: INFO: Deleting pod "simpletest.rc-xjhn4" in namespace "gc-701"
  Oct 28 13:11:56.148: INFO: Deleting pod "simpletest.rc-xn79q" in namespace "gc-701"
  Oct 28 13:11:56.209: INFO: Deleting pod "simpletest.rc-zbjbq" in namespace "gc-701"
  Oct 28 13:11:56.249: INFO: Deleting pod "simpletest.rc-zh45v" in namespace "gc-701"
  Oct 28 13:11:56.299: INFO: Deleting pod "simpletest.rc-zhq6f" in namespace "gc-701"
  Oct 28 13:11:56.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-701" for this suite. @ 10/28/23 13:11:56.407
• [43.787 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 10/28/23 13:11:56.448
  Oct 28 13:11:56.448: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename security-context-test @ 10/28/23 13:11:56.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:11:56.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:11:56.474
  Oct 28 13:12:04.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5439" for this suite. @ 10/28/23 13:12:04.525
• [8.085 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 10/28/23 13:12:04.533
  Oct 28 13:12:04.533: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 13:12:04.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:12:04.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:12:04.554
  STEP: Creating configMap with name projected-configmap-test-volume-7e27f55b-c0d2-4b87-b004-c31e1b943e9d @ 10/28/23 13:12:04.557
  STEP: Creating a pod to test consume configMaps @ 10/28/23 13:12:04.564
  STEP: Saw pod success @ 10/28/23 13:12:08.588
  Oct 28 13:12:08.591: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-projected-configmaps-695fafc0-4295-4cf1-9c1f-c03b5c81ed06 container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 13:12:08.612
  Oct 28 13:12:08.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5926" for this suite. @ 10/28/23 13:12:08.631
• [4.106 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 10/28/23 13:12:08.639
  Oct 28 13:12:08.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename sched-preemption @ 10/28/23 13:12:08.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:12:08.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:12:08.658
  Oct 28 13:12:08.678: INFO: Waiting up to 1m0s for all nodes to be ready
  Oct 28 13:13:08.702: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/28/23 13:13:08.705
  Oct 28 13:13:08.731: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Oct 28 13:13:08.740: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Oct 28 13:13:08.777: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Oct 28 13:13:08.784: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Oct 28 13:13:08.810: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Oct 28 13:13:08.826: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/28/23 13:13:08.826
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 10/28/23 13:13:10.855
  Oct 28 13:13:14.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7661" for this suite. @ 10/28/23 13:13:14.96
• [66.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 10/28/23 13:13:14.97
  Oct 28 13:13:14.970: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 13:13:14.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:13:14.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:13:14.996
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/28/23 13:13:14.999
  STEP: Saw pod success @ 10/28/23 13:13:19.03
  Oct 28 13:13:19.034: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-52efc725-06e5-4a7b-b239-2c72364c6482 container test-container: <nil>
  STEP: delete the pod @ 10/28/23 13:13:19.042
  Oct 28 13:13:19.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5296" for this suite. @ 10/28/23 13:13:19.06
• [4.099 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 10/28/23 13:13:19.069
  Oct 28 13:13:19.069: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename containers @ 10/28/23 13:13:19.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:13:19.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:13:19.09
  STEP: Creating a pod to test override all @ 10/28/23 13:13:19.093
  STEP: Saw pod success @ 10/28/23 13:13:23.117
  Oct 28 13:13:23.120: INFO: Trying to get logs from node ip-172-31-20-72 pod client-containers-75496621-8bc7-49c6-b069-26c53b527257 container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 13:13:23.139
  Oct 28 13:13:23.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9185" for this suite. @ 10/28/23 13:13:23.162
• [4.102 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 10/28/23 13:13:23.171
  Oct 28 13:13:23.171: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 13:13:23.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:13:23.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:13:23.189
  STEP: Creating configMap with name configmap-test-volume-ac3438cd-4768-4825-a142-53af86bce76e @ 10/28/23 13:13:23.192
  STEP: Creating a pod to test consume configMaps @ 10/28/23 13:13:23.197
  STEP: Saw pod success @ 10/28/23 13:13:27.222
  Oct 28 13:13:27.226: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-configmaps-1be64f71-e800-47a1-b57c-e0a049dc1508 container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 13:13:27.235
  Oct 28 13:13:27.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8710" for this suite. @ 10/28/23 13:13:27.253
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 10/28/23 13:13:27.27
  Oct 28 13:13:27.270: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 13:13:27.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:13:27.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:13:27.29
  STEP: Creating configMap with name configmap-test-upd-efb4bbb2-8d61-4e20-9181-f0d6a79e5180 @ 10/28/23 13:13:27.297
  STEP: Creating the pod @ 10/28/23 13:13:27.302
  STEP: Updating configmap configmap-test-upd-efb4bbb2-8d61-4e20-9181-f0d6a79e5180 @ 10/28/23 13:13:29.331
  STEP: waiting to observe update in volume @ 10/28/23 13:13:29.336
  Oct 28 13:14:43.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7212" for this suite. @ 10/28/23 13:14:43.708
• [76.445 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 10/28/23 13:14:43.715
  Oct 28 13:14:43.715: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename watch @ 10/28/23 13:14:43.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:14:43.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:14:43.736
  STEP: creating a watch on configmaps @ 10/28/23 13:14:43.739
  STEP: creating a new configmap @ 10/28/23 13:14:43.741
  STEP: modifying the configmap once @ 10/28/23 13:14:43.745
  STEP: closing the watch once it receives two notifications @ 10/28/23 13:14:43.76
  Oct 28 13:14:43.760: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7874  4461f98b-b06b-4399-9f56-47636e4c6a7e 28427 0 2023-10-28 13:14:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-28 13:14:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:14:43.760: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7874  4461f98b-b06b-4399-9f56-47636e4c6a7e 28428 0 2023-10-28 13:14:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-28 13:14:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 10/28/23 13:14:43.76
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 10/28/23 13:14:43.767
  STEP: deleting the configmap @ 10/28/23 13:14:43.769
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 10/28/23 13:14:43.775
  Oct 28 13:14:43.775: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7874  4461f98b-b06b-4399-9f56-47636e4c6a7e 28429 0 2023-10-28 13:14:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-28 13:14:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:14:43.775: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7874  4461f98b-b06b-4399-9f56-47636e4c6a7e 28430 0 2023-10-28 13:14:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-28 13:14:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:14:43.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7874" for this suite. @ 10/28/23 13:14:43.779
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 10/28/23 13:14:43.79
  Oct 28 13:14:43.790: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename secrets @ 10/28/23 13:14:43.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:14:43.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:14:43.81
  STEP: Creating secret with name secret-test-74556ea9-c912-4a7e-86f0-3c61f56fad87 @ 10/28/23 13:14:43.814
  STEP: Creating a pod to test consume secrets @ 10/28/23 13:14:43.818
  STEP: Saw pod success @ 10/28/23 13:14:47.841
  Oct 28 13:14:47.845: INFO: Trying to get logs from node ip-172-31-20-72 pod pod-secrets-91a0643b-52a3-4205-84b5-47bdf1902e92 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 13:14:47.853
  Oct 28 13:14:47.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6627" for this suite. @ 10/28/23 13:14:47.872
• [4.089 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 10/28/23 13:14:47.88
  Oct 28 13:14:47.880: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename crd-webhook @ 10/28/23 13:14:47.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:14:47.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:14:47.9
  STEP: Setting up server cert @ 10/28/23 13:14:47.904
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/28/23 13:14:48.522
  STEP: Deploying the custom resource conversion webhook pod @ 10/28/23 13:14:48.534
  STEP: Wait for the deployment to be ready @ 10/28/23 13:14:48.549
  Oct 28 13:14:48.557: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  Oct 28 13:14:50.569: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 28, 13, 14, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 14, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 14, 48, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 14, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-7ff47d8d4c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 10/28/23 13:14:52.573
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 13:14:52.59
  Oct 28 13:14:53.590: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Oct 28 13:14:53.603: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Creating a v1 custom resource @ 10/28/23 13:14:56.191
  STEP: Create a v2 custom resource @ 10/28/23 13:14:56.208
  STEP: List CRs in v1 @ 10/28/23 13:14:56.255
  STEP: List CRs in v2 @ 10/28/23 13:14:56.26
  Oct 28 13:14:56.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8441" for this suite. @ 10/28/23 13:14:56.864
• [8.993 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 10/28/23 13:14:56.875
  Oct 28 13:14:56.875: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 13:14:56.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:14:56.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:14:56.913
  STEP: Creating configMap with name configmap-test-volume-map-24e5fca4-5359-40b9-9b3b-f77b6e237e26 @ 10/28/23 13:14:56.917
  STEP: Creating a pod to test consume configMaps @ 10/28/23 13:14:56.922
  STEP: Saw pod success @ 10/28/23 13:15:00.958
  Oct 28 13:15:00.962: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-configmaps-6204a92f-b0e6-4644-bfb8-5e3d73faf63b container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 13:15:00.969
  Oct 28 13:15:00.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2056" for this suite. @ 10/28/23 13:15:00.987
• [4.118 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 10/28/23 13:15:00.993
  Oct 28 13:15:00.994: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pods @ 10/28/23 13:15:00.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:15:01.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:15:01.013
  STEP: Saw pod success @ 10/28/23 13:15:07.079
  Oct 28 13:15:07.083: INFO: Trying to get logs from node ip-172-31-20-72 pod client-envvars-19716941-d6b8-4d87-92d1-4af94b34cbe0 container env3cont: <nil>
  STEP: delete the pod @ 10/28/23 13:15:07.091
  Oct 28 13:15:07.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9968" for this suite. @ 10/28/23 13:15:07.109
• [6.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 10/28/23 13:15:07.119
  Oct 28 13:15:07.119: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename replicaset @ 10/28/23 13:15:07.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:15:07.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:15:07.139
  Oct 28 13:15:07.142: INFO: Creating ReplicaSet my-hostname-basic-5cf85f33-8e77-4ae1-a3a7-a3a1a627f034
  Oct 28 13:15:07.150: INFO: Pod name my-hostname-basic-5cf85f33-8e77-4ae1-a3a7-a3a1a627f034: Found 0 pods out of 1
  Oct 28 13:15:12.158: INFO: Pod name my-hostname-basic-5cf85f33-8e77-4ae1-a3a7-a3a1a627f034: Found 1 pods out of 1
  Oct 28 13:15:12.158: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-5cf85f33-8e77-4ae1-a3a7-a3a1a627f034" is running
  Oct 28 13:15:12.163: INFO: Pod "my-hostname-basic-5cf85f33-8e77-4ae1-a3a7-a3a1a627f034-mvxsh" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-28 13:15:07 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-28 13:15:08 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-28 13:15:08 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-28 13:15:07 +0000 UTC Reason: Message:}])
  Oct 28 13:15:12.163: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/28/23 13:15:12.163
  Oct 28 13:15:12.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4323" for this suite. @ 10/28/23 13:15:12.18
• [5.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 10/28/23 13:15:12.187
  Oct 28 13:15:12.187: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 13:15:12.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:15:12.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:15:12.212
  STEP: Setting up server cert @ 10/28/23 13:15:12.239
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 13:15:12.647
  STEP: Deploying the webhook pod @ 10/28/23 13:15:12.654
  STEP: Wait for the deployment to be ready @ 10/28/23 13:15:12.668
  Oct 28 13:15:12.676: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 13:15:14.689
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 13:15:14.701
  Oct 28 13:15:15.702: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Oct 28 13:15:15.711: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 10/28/23 13:15:16.22
  STEP: Creating a custom resource that should be denied by the webhook @ 10/28/23 13:15:16.235
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 10/28/23 13:15:18.262
  STEP: Updating the custom resource with disallowed data should be denied @ 10/28/23 13:15:18.27
  STEP: Deleting the custom resource should be denied @ 10/28/23 13:15:18.28
  STEP: Remove the offending key and value from the custom resource data @ 10/28/23 13:15:18.288
  STEP: Deleting the updated custom resource should be successful @ 10/28/23 13:15:18.297
  Oct 28 13:15:18.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8513" for this suite. @ 10/28/23 13:15:18.882
  STEP: Destroying namespace "webhook-markers-7204" for this suite. @ 10/28/23 13:15:18.89
• [6.710 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 10/28/23 13:15:18.898
  Oct 28 13:15:18.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename runtimeclass @ 10/28/23 13:15:18.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:15:18.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:15:18.917
  Oct 28 13:15:20.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6030" for this suite. @ 10/28/23 13:15:20.954
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 10/28/23 13:15:20.963
  Oct 28 13:15:20.963: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename cronjob @ 10/28/23 13:15:20.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:15:20.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:15:20.981
  STEP: Creating a suspended cronjob @ 10/28/23 13:15:20.984
  STEP: Ensuring no jobs are scheduled @ 10/28/23 13:15:20.989
  STEP: Ensuring no job exists by listing jobs explicitly @ 10/28/23 13:20:20.996
  STEP: Removing cronjob @ 10/28/23 13:20:20.999
  Oct 28 13:20:21.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-240" for this suite. @ 10/28/23 13:20:21.01
• [300.054 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 10/28/23 13:20:21.018
  Oct 28 13:20:21.018: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 13:20:21.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:20:21.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:20:21.038
  STEP: Creating projection with secret that has name projected-secret-test-422dda9a-d634-4f00-b602-17ac438251e1 @ 10/28/23 13:20:21.041
  STEP: Creating a pod to test consume secrets @ 10/28/23 13:20:21.047
  STEP: Saw pod success @ 10/28/23 13:20:25.074
  Oct 28 13:20:25.078: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-projected-secrets-8756e579-79c0-428b-8dba-3c38cccf4e9b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 13:20:25.097
  Oct 28 13:20:25.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3762" for this suite. @ 10/28/23 13:20:25.117
• [4.106 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 10/28/23 13:20:25.124
  Oct 28 13:20:25.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename init-container @ 10/28/23 13:20:25.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:20:25.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:20:25.145
  STEP: creating the pod @ 10/28/23 13:20:25.148
  Oct 28 13:20:25.148: INFO: PodSpec: initContainers in spec.initContainers
  Oct 28 13:20:30.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2413" for this suite. @ 10/28/23 13:20:30.173
• [5.056 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 10/28/23 13:20:30.182
  Oct 28 13:20:30.182: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 13:20:30.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:20:30.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:20:30.2
  STEP: Creating a pod to test downward api env vars @ 10/28/23 13:20:30.203
  STEP: Saw pod success @ 10/28/23 13:20:34.231
  Oct 28 13:20:34.236: INFO: Trying to get logs from node ip-172-31-37-29 pod downward-api-5a7c0f54-5c0f-4f2b-a4d0-2677016544fa container dapi-container: <nil>
  STEP: delete the pod @ 10/28/23 13:20:34.248
  Oct 28 13:20:34.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9095" for this suite. @ 10/28/23 13:20:34.269
• [4.096 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 10/28/23 13:20:34.278
  Oct 28 13:20:34.278: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename resourcequota @ 10/28/23 13:20:34.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:20:34.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:20:34.301
  STEP: Creating a ResourceQuota @ 10/28/23 13:20:34.303
  STEP: Getting a ResourceQuota @ 10/28/23 13:20:34.308
  STEP: Listing all ResourceQuotas with LabelSelector @ 10/28/23 13:20:34.315
  STEP: Patching the ResourceQuota @ 10/28/23 13:20:34.318
  STEP: Deleting a Collection of ResourceQuotas @ 10/28/23 13:20:34.326
  STEP: Verifying the deleted ResourceQuota @ 10/28/23 13:20:34.337
  Oct 28 13:20:34.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7114" for this suite. @ 10/28/23 13:20:34.344
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 10/28/23 13:20:34.352
  Oct 28 13:20:34.352: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 13:20:34.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:20:34.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:20:34.37
  STEP: creating the pod @ 10/28/23 13:20:34.377
  Oct 28 13:20:34.377: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-8127 create -f -'
  Oct 28 13:20:34.606: INFO: stderr: ""
  Oct 28 13:20:34.606: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 10/28/23 13:20:36.616
  Oct 28 13:20:36.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-8127 label pods pause testing-label=testing-label-value'
  Oct 28 13:20:36.687: INFO: stderr: ""
  Oct 28 13:20:36.687: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 10/28/23 13:20:36.687
  Oct 28 13:20:36.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-8127 get pod pause -L testing-label'
  Oct 28 13:20:36.751: INFO: stderr: ""
  Oct 28 13:20:36.751: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 10/28/23 13:20:36.751
  Oct 28 13:20:36.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-8127 label pods pause testing-label-'
  Oct 28 13:20:36.821: INFO: stderr: ""
  Oct 28 13:20:36.821: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 10/28/23 13:20:36.821
  Oct 28 13:20:36.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-8127 get pod pause -L testing-label'
  Oct 28 13:20:36.884: INFO: stderr: ""
  Oct 28 13:20:36.884: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 10/28/23 13:20:36.884
  Oct 28 13:20:36.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-8127 delete --grace-period=0 --force -f -'
  Oct 28 13:20:36.957: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 28 13:20:36.957: INFO: stdout: "pod \"pause\" force deleted\n"
  Oct 28 13:20:36.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-8127 get rc,svc -l name=pause --no-headers'
  Oct 28 13:20:37.025: INFO: stderr: "No resources found in kubectl-8127 namespace.\n"
  Oct 28 13:20:37.025: INFO: stdout: ""
  Oct 28 13:20:37.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-8127 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Oct 28 13:20:37.085: INFO: stderr: ""
  Oct 28 13:20:37.085: INFO: stdout: ""
  Oct 28 13:20:37.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8127" for this suite. @ 10/28/23 13:20:37.089
• [2.745 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 10/28/23 13:20:37.101
  Oct 28 13:20:37.101: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename init-container @ 10/28/23 13:20:37.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:20:37.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:20:37.121
  STEP: creating the pod @ 10/28/23 13:20:37.124
  Oct 28 13:20:37.124: INFO: PodSpec: initContainers in spec.initContainers
  Oct 28 13:21:15.080: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-616121cc-78a9-4c7a-ab79-1a35d1d6fd56", GenerateName:"", Namespace:"init-container-9787", SelfLink:"", UID:"d1979db2-66ae-43b1-a28a-3f65e970093b", ResourceVersion:"29797", Generation:0, CreationTimestamp:time.Date(2023, time.October, 28, 13, 20, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"124335175"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.October, 28, 13, 20, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e7a0a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.October, 28, 13, 21, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e7a0d8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-hs57x", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004e4e020), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hs57x", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hs57x", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hs57x", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0031d6268), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-37-29", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0004a4000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0031d6390)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0031d63d0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0031d63d8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0031d63dc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0007500c0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 28, 13, 20, 37, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 28, 13, 20, 37, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 28, 13, 20, 37, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 28, 13, 20, 37, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.37.29", HostIPs:[]v1.HostIP(nil), PodIP:"192.168.136.219", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.136.219"}}, StartTime:time.Date(2023, time.October, 28, 13, 20, 37, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004a4150)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004a4230)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://f86fc94726c5d6d5ebc2e2263a5137d374cec233188091a8d31e0f5ed6eed763", Started:(*bool)(0xc0031d65ba), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004e4e0a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc0031d65df), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004e4e080), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0031d659f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Oct 28 13:21:15.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9787" for this suite. @ 10/28/23 13:21:15.086
• [37.991 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 10/28/23 13:21:15.093
  Oct 28 13:21:15.093: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pod-network-test @ 10/28/23 13:21:15.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:21:15.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:21:15.112
  STEP: Performing setup for networking test in namespace pod-network-test-5532 @ 10/28/23 13:21:15.115
  STEP: creating a selector @ 10/28/23 13:21:15.115
  STEP: Creating the service pods in kubernetes @ 10/28/23 13:21:15.115
  Oct 28 13:21:15.115: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/28/23 13:21:27.203
  Oct 28 13:21:29.240: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct 28 13:21:29.240: INFO: Going to poll 192.168.191.216 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Oct 28 13:21:29.244: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.191.216:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5532 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 13:21:29.244: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:21:29.245: INFO: ExecWithOptions: Clientset creation
  Oct 28 13:21:29.245: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5532/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.191.216%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 28 13:21:29.326: INFO: Found all 1 expected endpoints: [netserver-0]
  Oct 28 13:21:29.326: INFO: Going to poll 192.168.136.253 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Oct 28 13:21:29.330: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.136.253:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5532 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 13:21:29.330: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:21:29.331: INFO: ExecWithOptions: Clientset creation
  Oct 28 13:21:29.331: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5532/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.136.253%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 28 13:21:29.412: INFO: Found all 1 expected endpoints: [netserver-1]
  Oct 28 13:21:29.412: INFO: Going to poll 192.168.15.184 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Oct 28 13:21:29.416: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.15.184:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5532 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 13:21:29.416: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:21:29.417: INFO: ExecWithOptions: Clientset creation
  Oct 28 13:21:29.417: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5532/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.15.184%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Oct 28 13:21:29.497: INFO: Found all 1 expected endpoints: [netserver-2]
  Oct 28 13:21:29.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5532" for this suite. @ 10/28/23 13:21:29.502
• [14.418 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 10/28/23 13:21:29.512
  Oct 28 13:21:29.512: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 13:21:29.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:21:29.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:21:29.538
  STEP: starting the proxy server @ 10/28/23 13:21:29.54
  Oct 28 13:21:29.540: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-9100 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 10/28/23 13:21:29.585
  Oct 28 13:21:29.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9100" for this suite. @ 10/28/23 13:21:29.598
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 10/28/23 13:21:29.609
  Oct 28 13:21:29.609: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename replication-controller @ 10/28/23 13:21:29.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:21:29.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:21:29.629
  Oct 28 13:21:29.632: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 10/28/23 13:21:30.648
  STEP: Checking rc "condition-test" has the desired failure condition set @ 10/28/23 13:21:30.654
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 10/28/23 13:21:31.664
  Oct 28 13:21:31.674: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 10/28/23 13:21:31.674
  Oct 28 13:21:32.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3192" for this suite. @ 10/28/23 13:21:32.69
• [3.088 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 10/28/23 13:21:32.698
  Oct 28 13:21:32.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl-logs @ 10/28/23 13:21:32.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:21:32.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:21:32.716
  STEP: creating an pod @ 10/28/23 13:21:32.719
  Oct 28 13:21:32.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-logs-5479 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Oct 28 13:21:32.791: INFO: stderr: ""
  Oct 28 13:21:32.791: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 10/28/23 13:21:32.791
  Oct 28 13:21:32.791: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Oct 28 13:21:34.800: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 10/28/23 13:21:34.8
  Oct 28 13:21:34.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-logs-5479 logs logs-generator logs-generator'
  Oct 28 13:21:35.006: INFO: stderr: ""
  Oct 28 13:21:35.006: INFO: stdout: "I1028 13:21:33.550700       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/xvn 405\nI1028 13:21:33.750784       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/z89 543\nI1028 13:21:33.951324       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/tnbs 503\nI1028 13:21:34.151618       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/nzh 398\nI1028 13:21:34.350827       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/kf5s 323\nI1028 13:21:34.551119       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/7hx 360\nI1028 13:21:34.751409       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/j8f 451\nI1028 13:21:34.951700       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/lbch 265\n"
  STEP: limiting log lines @ 10/28/23 13:21:35.006
  Oct 28 13:21:35.006: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-logs-5479 logs logs-generator logs-generator --tail=1'
  Oct 28 13:21:35.099: INFO: stderr: ""
  Oct 28 13:21:35.099: INFO: stdout: "I1028 13:21:34.951700       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/lbch 265\n"
  Oct 28 13:21:35.099: INFO: got output "I1028 13:21:34.951700       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/lbch 265\n"
  STEP: limiting log bytes @ 10/28/23 13:21:35.099
  Oct 28 13:21:35.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-logs-5479 logs logs-generator logs-generator --limit-bytes=1'
  Oct 28 13:21:35.202: INFO: stderr: ""
  Oct 28 13:21:35.202: INFO: stdout: "I"
  Oct 28 13:21:35.202: INFO: got output "I"
  STEP: exposing timestamps @ 10/28/23 13:21:35.202
  Oct 28 13:21:35.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-logs-5479 logs logs-generator logs-generator --tail=1 --timestamps'
  Oct 28 13:21:35.366: INFO: stderr: ""
  Oct 28 13:21:35.366: INFO: stdout: "2023-10-28T13:21:35.351578467Z I1028 13:21:35.351476       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/5fww 464\n"
  Oct 28 13:21:35.366: INFO: got output "2023-10-28T13:21:35.351578467Z I1028 13:21:35.351476       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/5fww 464\n"
  STEP: restricting to a time range @ 10/28/23 13:21:35.366
  Oct 28 13:21:37.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-logs-5479 logs logs-generator logs-generator --since=1s'
  Oct 28 13:21:38.030: INFO: stderr: ""
  Oct 28 13:21:38.030: INFO: stdout: "I1028 13:21:37.150877       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/jzd6 499\nI1028 13:21:37.351166       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/qkl2 228\nI1028 13:21:37.551457       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/mbs 402\nI1028 13:21:37.751748       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/kube-system/pods/ml7 586\nI1028 13:21:37.951315       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/kube-system/pods/4lq 348\n"
  Oct 28 13:21:38.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-logs-5479 logs logs-generator logs-generator --since=24h'
  Oct 28 13:21:38.141: INFO: stderr: ""
  Oct 28 13:21:38.141: INFO: stdout: "I1028 13:21:33.550700       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/xvn 405\nI1028 13:21:33.750784       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/z89 543\nI1028 13:21:33.951324       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/tnbs 503\nI1028 13:21:34.151618       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/nzh 398\nI1028 13:21:34.350827       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/kf5s 323\nI1028 13:21:34.551119       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/7hx 360\nI1028 13:21:34.751409       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/j8f 451\nI1028 13:21:34.951700       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/lbch 265\nI1028 13:21:35.150796       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/bmh6 497\nI1028 13:21:35.351476       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/5fww 464\nI1028 13:21:35.550759       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/7x9 271\nI1028 13:21:35.751062       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/tl8b 303\nI1028 13:21:35.951253       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/w2v 584\nI1028 13:21:36.151542       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/nstv 269\nI1028 13:21:36.350777       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/tjq 389\nI1028 13:21:36.551065       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/vxc 276\nI1028 13:21:36.751356       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/ksfw 352\nI1028 13:21:36.951645       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/m5rr 503\nI1028 13:21:37.150877       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/jzd6 499\nI1028 13:21:37.351166       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/qkl2 228\nI1028 13:21:37.551457       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/mbs 402\nI1028 13:21:37.751748       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/kube-system/pods/ml7 586\nI1028 13:21:37.951315       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/kube-system/pods/4lq 348\n"
  Oct 28 13:21:38.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-logs-5479 delete pod logs-generator'
  Oct 28 13:21:39.222: INFO: stderr: ""
  Oct 28 13:21:39.222: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Oct 28 13:21:39.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-5479" for this suite. @ 10/28/23 13:21:39.226
• [6.534 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 10/28/23 13:21:39.234
  Oct 28 13:21:39.234: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 13:21:39.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:21:39.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:21:39.254
  STEP: Creating a pod to test downward api env vars @ 10/28/23 13:21:39.258
  STEP: Saw pod success @ 10/28/23 13:21:43.28
  Oct 28 13:21:43.284: INFO: Trying to get logs from node ip-172-31-37-29 pod downward-api-bf74ec31-f81d-4f83-8cd6-f08fdf26e2f3 container dapi-container: <nil>
  STEP: delete the pod @ 10/28/23 13:21:43.294
  Oct 28 13:21:43.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4622" for this suite. @ 10/28/23 13:21:43.314
• [4.089 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 10/28/23 13:21:43.323
  Oct 28 13:21:43.323: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 13:21:43.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:21:43.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:21:43.343
  STEP: validating api versions @ 10/28/23 13:21:43.347
  Oct 28 13:21:43.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-2680 api-versions'
  Oct 28 13:21:43.405: INFO: stderr: ""
  Oct 28 13:21:43.405: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Oct 28 13:21:43.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2680" for this suite. @ 10/28/23 13:21:43.41
• [0.098 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 10/28/23 13:21:43.421
  Oct 28 13:21:43.421: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 13:21:43.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:21:43.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:21:43.45
  STEP: Creating configMap with name projected-configmap-test-volume-62e82109-ca55-4571-a140-28799490d0f0 @ 10/28/23 13:21:43.454
  STEP: Creating a pod to test consume configMaps @ 10/28/23 13:21:43.462
  STEP: Saw pod success @ 10/28/23 13:21:47.496
  Oct 28 13:21:47.500: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-projected-configmaps-0ff6ea4d-19df-4e0e-badb-843b3d7ef20a container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 13:21:47.508
  Oct 28 13:21:47.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6572" for this suite. @ 10/28/23 13:21:47.53
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 10/28/23 13:21:47.54
  Oct 28 13:21:47.540: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename hostport @ 10/28/23 13:21:47.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:21:47.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:21:47.56
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 10/28/23 13:21:47.568
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.20.72 on the node which pod1 resides and expect scheduled @ 10/28/23 13:21:49.585
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.20.72 but use UDP protocol on the node which pod2 resides @ 10/28/23 13:22:01.621
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 10/28/23 13:22:05.655
  Oct 28 13:22:05.655: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.20.72 http://127.0.0.1:54323/hostname] Namespace:hostport-1321 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 13:22:05.655: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:22:05.655: INFO: ExecWithOptions: Clientset creation
  Oct 28 13:22:05.655: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1321/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.20.72+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.20.72, port: 54323 @ 10/28/23 13:22:05.736
  Oct 28 13:22:05.736: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.20.72:54323/hostname] Namespace:hostport-1321 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 13:22:05.736: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:22:05.737: INFO: ExecWithOptions: Clientset creation
  Oct 28 13:22:05.737: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1321/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.20.72%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.20.72, port: 54323 UDP @ 10/28/23 13:22:05.824
  Oct 28 13:22:05.824: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.20.72 54323] Namespace:hostport-1321 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 13:22:05.824: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:22:05.825: INFO: ExecWithOptions: Clientset creation
  Oct 28 13:22:05.825: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1321/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.20.72+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Oct 28 13:22:10.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-1321" for this suite. @ 10/28/23 13:22:10.913
• [23.380 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 10/28/23 13:22:10.921
  Oct 28 13:22:10.921: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename disruption @ 10/28/23 13:22:10.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:22:10.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:22:10.944
  STEP: Waiting for the pdb to be processed @ 10/28/23 13:22:10.952
  STEP: Updating PodDisruptionBudget status @ 10/28/23 13:22:12.959
  STEP: Waiting for all pods to be running @ 10/28/23 13:22:12.968
  Oct 28 13:22:12.975: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 10/28/23 13:22:14.981
  STEP: Waiting for the pdb to be processed @ 10/28/23 13:22:14.994
  STEP: Patching PodDisruptionBudget status @ 10/28/23 13:22:15.002
  STEP: Waiting for the pdb to be processed @ 10/28/23 13:22:15.013
  Oct 28 13:22:15.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7743" for this suite. @ 10/28/23 13:22:15.022
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 10/28/23 13:22:15.033
  Oct 28 13:22:15.034: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 13:22:15.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:22:15.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:22:15.052
  STEP: Creating the pod @ 10/28/23 13:22:15.055
  Oct 28 13:22:17.598: INFO: Successfully updated pod "labelsupdate2bddffea-f993-4739-84aa-56ff3d5eb8db"
  Oct 28 13:22:19.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8749" for this suite. @ 10/28/23 13:22:19.619
• [4.593 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 10/28/23 13:22:19.626
  Oct 28 13:22:19.626: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 13:22:19.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:22:19.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:22:19.645
  STEP: Creating projection with secret that has name projected-secret-test-map-945b1d02-9b81-44c2-82d6-d20b8cc4203f @ 10/28/23 13:22:19.648
  STEP: Creating a pod to test consume secrets @ 10/28/23 13:22:19.654
  STEP: Saw pod success @ 10/28/23 13:22:23.68
  Oct 28 13:22:23.683: INFO: Trying to get logs from node ip-172-31-20-72 pod pod-projected-secrets-eb708ad5-26f3-43b0-b394-1b1ec846372d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 13:22:23.691
  Oct 28 13:22:23.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9151" for this suite. @ 10/28/23 13:22:23.711
• [4.092 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 10/28/23 13:22:23.719
  Oct 28 13:22:23.719: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename sched-pred @ 10/28/23 13:22:23.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:22:23.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:22:23.736
  Oct 28 13:22:23.739: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Oct 28 13:22:23.747: INFO: Waiting for terminating namespaces to be deleted...
  Oct 28 13:22:23.750: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-20-72 before test
  Oct 28 13:22:23.756: INFO: nginx-ingress-controller-kubernetes-worker-8swbr from ingress-nginx-kubernetes-worker started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 13:22:23.756: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 28 13:22:23.756: INFO: calico-node-cpcds from kube-system started at 2023-10-28 12:12:02 +0000 UTC (1 container statuses recorded)
  Oct 28 13:22:23.756: INFO: 	Container calico-node ready: true, restart count 0
  Oct 28 13:22:23.756: INFO: sonobuoy-e2e-job-5367ddbce4cd4be7 from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 13:22:23.756: INFO: 	Container e2e ready: true, restart count 0
  Oct 28 13:22:23.756: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 13:22:23.757: INFO: sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-ndkvj from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 13:22:23.757: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 13:22:23.757: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 28 13:22:23.757: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-37-29 before test
  Oct 28 13:22:23.764: INFO: labelsupdate2bddffea-f993-4739-84aa-56ff3d5eb8db from downward-api-8749 started at 2023-10-28 13:22:15 +0000 UTC (1 container statuses recorded)
  Oct 28 13:22:23.764: INFO: 	Container client-container ready: true, restart count 0
  Oct 28 13:22:23.764: INFO: nginx-ingress-controller-kubernetes-worker-9tq9n from ingress-nginx-kubernetes-worker started at 2023-10-28 13:04:44 +0000 UTC (1 container statuses recorded)
  Oct 28 13:22:23.764: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 28 13:22:23.764: INFO: calico-node-l75l8 from kube-system started at 2023-10-28 12:16:40 +0000 UTC (1 container statuses recorded)
  Oct 28 13:22:23.764: INFO: 	Container calico-node ready: true, restart count 0
  Oct 28 13:22:23.764: INFO: sonobuoy from sonobuoy started at 2023-10-28 12:22:27 +0000 UTC (1 container statuses recorded)
  Oct 28 13:22:23.764: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Oct 28 13:22:23.764: INFO: sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-tb6hv from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 13:22:23.764: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 13:22:23.764: INFO: 	Container systemd-logs ready: true, restart count 0
  Oct 28 13:22:23.764: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-5-226 before test
  Oct 28 13:22:23.770: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-5jq2w from ingress-nginx-kubernetes-worker started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 13:22:23.770: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Oct 28 13:22:23.770: INFO: nginx-ingress-controller-kubernetes-worker-9fc74 from ingress-nginx-kubernetes-worker started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 13:22:23.770: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Oct 28 13:22:23.770: INFO: calico-kube-controllers-59c77d8d6f-hvzwx from kube-system started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 13:22:23.770: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Oct 28 13:22:23.770: INFO: calico-node-j2png from kube-system started at 2023-10-28 12:12:02 +0000 UTC (1 container statuses recorded)
  Oct 28 13:22:23.770: INFO: 	Container calico-node ready: true, restart count 0
  Oct 28 13:22:23.770: INFO: coredns-59cfb5bf46-vr6sn from kube-system started at 2023-10-28 12:12:17 +0000 UTC (1 container statuses recorded)
  Oct 28 13:22:23.770: INFO: 	Container coredns ready: true, restart count 0
  Oct 28 13:22:23.770: INFO: kube-state-metrics-775d9f4f79-htlwx from kube-system started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 13:22:23.770: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Oct 28 13:22:23.770: INFO: metrics-server-v0.6.3-69d7fbfdf8-ws5cj from kube-system started at 2023-10-28 12:12:17 +0000 UTC (2 container statuses recorded)
  Oct 28 13:22:23.770: INFO: 	Container metrics-server ready: true, restart count 0
  Oct 28 13:22:23.770: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Oct 28 13:22:23.770: INFO: dashboard-metrics-scraper-5dd7cb5fc-97qlp from kubernetes-dashboard started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 13:22:23.770: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Oct 28 13:22:23.770: INFO: kubernetes-dashboard-7b899cb9d9-zdnvw from kubernetes-dashboard started at 2023-10-28 12:12:18 +0000 UTC (1 container statuses recorded)
  Oct 28 13:22:23.770: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Oct 28 13:22:23.770: INFO: sonobuoy-systemd-logs-daemon-set-82697a46b52d4513-vbz6k from sonobuoy started at 2023-10-28 12:22:30 +0000 UTC (2 container statuses recorded)
  Oct 28 13:22:23.770: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Oct 28 13:22:23.770: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/28/23 13:22:23.771
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/28/23 13:22:25.796
  STEP: Trying to apply a random label on the found node. @ 10/28/23 13:22:25.81
  STEP: verifying the node has the label kubernetes.io/e2e-d9f35a77-44d8-4c3d-8dd5-7d1f874470a2 95 @ 10/28/23 13:22:25.82
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 10/28/23 13:22:25.826
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.20.72 on the node which pod4 resides and expect not scheduled @ 10/28/23 13:22:27.844
  STEP: removing the label kubernetes.io/e2e-d9f35a77-44d8-4c3d-8dd5-7d1f874470a2 off the node ip-172-31-20-72 @ 10/28/23 13:27:27.851
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-d9f35a77-44d8-4c3d-8dd5-7d1f874470a2 @ 10/28/23 13:27:27.864
  Oct 28 13:27:27.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9331" for this suite. @ 10/28/23 13:27:27.88
• [304.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 10/28/23 13:27:27.892
  Oct 28 13:27:27.892: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename runtimeclass @ 10/28/23 13:27:27.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:27:27.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:27:27.913
  Oct 28 13:27:27.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2177" for this suite. @ 10/28/23 13:27:27.953
• [0.071 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 10/28/23 13:27:27.964
  Oct 28 13:27:27.964: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 13:27:27.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:27:27.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:27:27.982
  STEP: validating cluster-info @ 10/28/23 13:27:27.985
  Oct 28 13:27:27.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-2671 cluster-info'
  Oct 28 13:27:28.049: INFO: stderr: ""
  Oct 28 13:27:28.049: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Oct 28 13:27:28.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2671" for this suite. @ 10/28/23 13:27:28.056
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 10/28/23 13:27:28.068
  Oct 28 13:27:28.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 13:27:28.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:27:28.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:27:28.085
  STEP: Creating Pod @ 10/28/23 13:27:28.089
  STEP: Reading file content from the nginx-container @ 10/28/23 13:27:30.122
  Oct 28 13:27:30.122: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-6321 PodName:pod-sharedvolume-d0eba75c-19e4-49cc-84cb-35745b98b709 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 13:27:30.122: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:27:30.123: INFO: ExecWithOptions: Clientset creation
  Oct 28 13:27:30.123: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-6321/pods/pod-sharedvolume-d0eba75c-19e4-49cc-84cb-35745b98b709/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Oct 28 13:27:30.208: INFO: Exec stderr: ""
  Oct 28 13:27:30.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6321" for this suite. @ 10/28/23 13:27:30.213
• [2.154 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 10/28/23 13:27:30.223
  Oct 28 13:27:30.223: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename security-context @ 10/28/23 13:27:30.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:27:30.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:27:30.241
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/28/23 13:27:30.244
  STEP: Saw pod success @ 10/28/23 13:27:34.265
  Oct 28 13:27:34.269: INFO: Trying to get logs from node ip-172-31-20-72 pod security-context-77f8fbba-c36a-4c03-aa36-06528292fdf9 container test-container: <nil>
  STEP: delete the pod @ 10/28/23 13:27:34.289
  Oct 28 13:27:34.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6294" for this suite. @ 10/28/23 13:27:34.309
• [4.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 10/28/23 13:27:34.319
  Oct 28 13:27:34.319: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename var-expansion @ 10/28/23 13:27:34.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:27:34.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:27:34.339
  STEP: Creating a pod to test substitution in container's command @ 10/28/23 13:27:34.344
  STEP: Saw pod success @ 10/28/23 13:27:38.372
  Oct 28 13:27:38.377: INFO: Trying to get logs from node ip-172-31-20-72 pod var-expansion-690cbca9-67af-454f-b01c-46e68259ee4a container dapi-container: <nil>
  STEP: delete the pod @ 10/28/23 13:27:38.385
  Oct 28 13:27:38.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1238" for this suite. @ 10/28/23 13:27:38.405
• [4.092 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 10/28/23 13:27:38.411
  Oct 28 13:27:38.411: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-probe @ 10/28/23 13:27:38.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:27:38.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:27:38.433
  STEP: Creating pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545 @ 10/28/23 13:27:38.437
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/28/23 13:27:40.457
  Oct 28 13:27:40.460: INFO: Initial restart count of pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 is 0
  Oct 28 13:27:40.464: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:27:42.469: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:27:44.473: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:27:46.478: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:27:48.484: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:27:50.490: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:27:52.494: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:27:54.499: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:27:56.504: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:27:58.510: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:00.514: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:02.520: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:04.524: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:06.530: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:08.535: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:10.540: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:12.545: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:14.549: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:16.555: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:18.559: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:20.564: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:22.568: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:24.573: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:26.576: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:28.583: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:30.587: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:32.591: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:34.595: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:36.599: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:38.604: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:40.609: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:42.614: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:44.618: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:46.624: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:48.629: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:50.635: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:52.639: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:54.644: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:56.649: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:28:58.655: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:00.661: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:02.666: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:04.671: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:06.676: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:08.682: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:10.686: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:12.691: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:14.696: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:16.701: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:18.706: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:20.711: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:22.715: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:24.720: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:26.725: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:28.730: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:30.735: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:32.741: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:34.745: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:36.751: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:38.758: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:40.763: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:42.767: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:44.774: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:46.778: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:48.784: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:50.788: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:52.794: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:54.797: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:56.803: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:29:58.807: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:00.812: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:02.816: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:04.820: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:06.824: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:08.830: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:10.835: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:12.840: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:14.845: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:16.848: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:18.853: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:20.858: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:22.863: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:24.867: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:26.872: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:28.877: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:30.882: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:32.886: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:34.891: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:36.896: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:38.900: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:40.904: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:42.909: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:44.913: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:46.919: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:48.925: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:50.929: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:52.933: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:54.939: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:56.945: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:30:58.951: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:00.957: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:02.962: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:04.966: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:06.972: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:08.986: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:10.990: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:12.995: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:14.999: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:17.004: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:19.009: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:21.014: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:23.018: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:25.022: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:27.027: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:29.033: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:31.038: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:33.043: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:35.048: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:37.052: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:39.058: INFO: Get pod busybox-b69377c7-876d-4e14-becb-b8e508d5f2a3 in namespace container-probe-6545
  Oct 28 13:31:41.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 13:31:41.065
  STEP: Destroying namespace "container-probe-6545" for this suite. @ 10/28/23 13:31:41.078
• [242.675 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 10/28/23 13:31:41.088
  Oct 28 13:31:41.089: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename resourcequota @ 10/28/23 13:31:41.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:31:41.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:31:41.111
  STEP: Counting existing ResourceQuota @ 10/28/23 13:31:58.118
  STEP: Creating a ResourceQuota @ 10/28/23 13:32:03.124
  STEP: Ensuring resource quota status is calculated @ 10/28/23 13:32:03.131
  STEP: Creating a ConfigMap @ 10/28/23 13:32:05.137
  STEP: Ensuring resource quota status captures configMap creation @ 10/28/23 13:32:05.149
  STEP: Deleting a ConfigMap @ 10/28/23 13:32:07.154
  STEP: Ensuring resource quota status released usage @ 10/28/23 13:32:07.162
  Oct 28 13:32:09.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4560" for this suite. @ 10/28/23 13:32:09.17
• [28.090 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 10/28/23 13:32:09.178
  Oct 28 13:32:09.178: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename prestop @ 10/28/23 13:32:09.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:32:09.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:32:09.199
  STEP: Creating server pod server in namespace prestop-115 @ 10/28/23 13:32:09.202
  STEP: Waiting for pods to come up. @ 10/28/23 13:32:09.211
  STEP: Creating tester pod tester in namespace prestop-115 @ 10/28/23 13:32:11.227
  STEP: Deleting pre-stop pod @ 10/28/23 13:32:13.242
  Oct 28 13:32:18.258: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Oct 28 13:32:18.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 10/28/23 13:32:18.263
  STEP: Destroying namespace "prestop-115" for this suite. @ 10/28/23 13:32:18.276
• [9.104 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 10/28/23 13:32:18.283
  Oct 28 13:32:18.283: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename deployment @ 10/28/23 13:32:18.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:32:18.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:32:18.301
  Oct 28 13:32:18.316: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Oct 28 13:32:23.321: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/28/23 13:32:23.321
  Oct 28 13:32:23.321: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Oct 28 13:32:25.327: INFO: Creating deployment "test-rollover-deployment"
  Oct 28 13:32:25.335: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Oct 28 13:32:27.343: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Oct 28 13:32:27.349: INFO: Ensure that both replica sets have 1 created replica
  Oct 28 13:32:27.357: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Oct 28 13:32:27.367: INFO: Updating deployment test-rollover-deployment
  Oct 28 13:32:27.367: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Oct 28 13:32:29.377: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Oct 28 13:32:29.386: INFO: Make sure deployment "test-rollover-deployment" is complete
  Oct 28 13:32:29.391: INFO: all replica sets need to contain the pod-template-hash label
  Oct 28 13:32:29.391: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 32, 28, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:32:31.400: INFO: all replica sets need to contain the pod-template-hash label
  Oct 28 13:32:31.400: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 32, 28, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:32:33.402: INFO: all replica sets need to contain the pod-template-hash label
  Oct 28 13:32:33.402: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 32, 28, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:32:35.399: INFO: all replica sets need to contain the pod-template-hash label
  Oct 28 13:32:35.399: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 32, 28, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:32:37.401: INFO: all replica sets need to contain the pod-template-hash label
  Oct 28 13:32:37.401: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 32, 28, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 32, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:32:39.399: INFO: 
  Oct 28 13:32:39.399: INFO: Ensure that both old replica sets have no replicas
  Oct 28 13:32:39.411: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5099",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a18f4358-dbe5-43a6-92de-e8ab8f20b415",
      ResourceVersion: (string) (len=5) "32079",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834096745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 28 13:32:39.416: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5099",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f4a0916-2346-4e2c-842f-31fdbcd8cd8d",
      ResourceVersion: (string) (len=5) "32069",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834096747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "a18f4358-dbe5-43a6-92de-e8ab8f20b415",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 31 38 66 34 33  35 38 2d 64 62 65 35 2d  |\"a18f4358-dbe5-|
              00000120  34 33 61 36 2d 39 32 64  65 2d 65 38 61 62 38 66  |43a6-92de-e8ab8f|
              00000130  32 30 62 34 31 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |20b415\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 28 13:32:39.419: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Oct 28 13:32:39.419: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5099",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c96c0038-71f9-434e-9021-3b22072b93fd",
      ResourceVersion: (string) (len=5) "32078",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834096738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "a18f4358-dbe5-43a6-92de-e8ab8f20b415",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  61 31 38 66 34 33 35 38  2d 64 62 65 35 2d 34 33  |a18f4358-dbe5-43|
              000000c0  61 36 2d 39 32 64 65 2d  65 38 61 62 38 66 32 30  |a6-92de-e8ab8f20|
              000000d0  62 34 31 35 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |b415\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 28 13:32:39.422: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5099",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b43a7d9-5813-4cc6-85bc-09772995cebe",
      ResourceVersion: (string) (len=5) "32033",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834096745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "a18f4358-dbe5-43a6-92de-e8ab8f20b415",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 31 38 66 34 33  35 38 2d 64 62 65 35 2d  |\"a18f4358-dbe5-|
              00000120  34 33 61 36 2d 39 32 64  65 2d 65 38 61 62 38 66  |43a6-92de-e8ab8f|
              00000130  32 30 62 34 31 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |20b415\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 28 13:32:39.426: INFO: Pod "test-rollover-deployment-5d484bf7f9-hczcg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-hczcg",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-5099",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eabfa3f4-6ae4-4a90-b744-e3cb4477fab2",
      ResourceVersion: (string) (len=5) "32047",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834096747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "6f4a0916-2346-4e2c-842f-31fdbcd8cd8d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  34 61 30 39 31 36 2d 32  |d\":\"6f4a0916-2|
              00000090  33 34 36 2d 34 65 32 63  2d 38 34 32 66 2d 33 31  |346-4e2c-842f-31|
              000000a0  66 64 62 63 64 38 63 64  38 64 5c 22 7d 22 3a 7b  |fdbcd8cd8d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 33 36 2e 32 33 38 5c  |192.168.136.238\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cp6x8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cp6x8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-37-29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.37.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.136.238",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.136.238"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834096747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834096748,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://f1421af4447ad289f99903c592a6cb1440d7e165a3c204ebf8f83f519cc14b8e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:32:39.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5099" for this suite. @ 10/28/23 13:32:39.434
• [21.159 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 10/28/23 13:32:39.443
  Oct 28 13:32:39.443: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 13:32:39.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:32:39.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:32:39.464
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 10/28/23 13:32:39.467
  STEP: Saw pod success @ 10/28/23 13:32:43.494
  Oct 28 13:32:43.498: INFO: Trying to get logs from node ip-172-31-20-72 pod pod-4f869349-9c2d-48d5-9d76-00ef7a232caa container test-container: <nil>
  STEP: delete the pod @ 10/28/23 13:32:43.519
  Oct 28 13:32:43.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8040" for this suite. @ 10/28/23 13:32:43.538
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 10/28/23 13:32:43.546
  Oct 28 13:32:43.546: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename svcaccounts @ 10/28/23 13:32:43.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:32:43.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:32:43.565
  STEP: creating a ServiceAccount @ 10/28/23 13:32:43.569
  STEP: watching for the ServiceAccount to be added @ 10/28/23 13:32:43.579
  STEP: patching the ServiceAccount @ 10/28/23 13:32:43.584
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 10/28/23 13:32:43.591
  STEP: deleting the ServiceAccount @ 10/28/23 13:32:43.596
  Oct 28 13:32:43.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3772" for this suite. @ 10/28/23 13:32:43.62
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 10/28/23 13:32:43.627
  Oct 28 13:32:43.627: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename statefulset @ 10/28/23 13:32:43.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:32:43.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:32:43.649
  STEP: Creating service test in namespace statefulset-258 @ 10/28/23 13:32:43.654
  STEP: Looking for a node to schedule stateful set and pod @ 10/28/23 13:32:43.659
  STEP: Creating pod with conflicting port in namespace statefulset-258 @ 10/28/23 13:32:43.664
  STEP: Waiting until pod test-pod will start running in namespace statefulset-258 @ 10/28/23 13:32:43.676
  STEP: Creating statefulset with conflicting port in namespace statefulset-258 @ 10/28/23 13:32:45.684
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-258 @ 10/28/23 13:32:45.691
  Oct 28 13:32:45.712: INFO: Observed stateful pod in namespace: statefulset-258, name: ss-0, uid: a449884b-e5d5-4590-9323-6b7a27636f86, status phase: Pending. Waiting for statefulset controller to delete.
  Oct 28 13:32:45.731: INFO: Observed stateful pod in namespace: statefulset-258, name: ss-0, uid: a449884b-e5d5-4590-9323-6b7a27636f86, status phase: Failed. Waiting for statefulset controller to delete.
  Oct 28 13:32:45.741: INFO: Observed stateful pod in namespace: statefulset-258, name: ss-0, uid: a449884b-e5d5-4590-9323-6b7a27636f86, status phase: Failed. Waiting for statefulset controller to delete.
  Oct 28 13:32:45.746: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-258
  STEP: Removing pod with conflicting port in namespace statefulset-258 @ 10/28/23 13:32:45.746
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-258 and will be in running state @ 10/28/23 13:32:45.773
  Oct 28 13:32:47.783: INFO: Deleting all statefulset in ns statefulset-258
  Oct 28 13:32:47.786: INFO: Scaling statefulset ss to 0
  Oct 28 13:32:57.808: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 28 13:32:57.811: INFO: Deleting statefulset ss
  Oct 28 13:32:57.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-258" for this suite. @ 10/28/23 13:32:57.832
• [14.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 10/28/23 13:32:57.842
  Oct 28 13:32:57.842: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename deployment @ 10/28/23 13:32:57.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:32:57.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:32:57.867
  Oct 28 13:32:57.870: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Oct 28 13:32:57.878: INFO: Pod name sample-pod: Found 0 pods out of 1
  Oct 28 13:33:02.884: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/28/23 13:33:02.884
  Oct 28 13:33:02.884: INFO: Creating deployment "test-rolling-update-deployment"
  Oct 28 13:33:02.894: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Oct 28 13:33:02.908: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Oct 28 13:33:04.915: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Oct 28 13:33:04.919: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Oct 28 13:33:04.929: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8568",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e892ad1-0f8b-498b-95dc-a67ba872218a",
      ResourceVersion: (string) (len=5) "32394",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834096782,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Oct 28 13:33:04.937: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8568",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec7f27a6-2a68-47ba-99ac-207a96ab9add",
      ResourceVersion: (string) (len=5) "32384",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834096782,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "0e892ad1-0f8b-498b-95dc-a67ba872218a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 65 38 39 32 61  64 31 2d 30 66 38 62 2d  |\"0e892ad1-0f8b-|
              00000120  34 39 38 62 2d 39 35 64  63 2d 61 36 37 62 61 38  |498b-95dc-a67ba8|
              00000130  37 32 32 31 38 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |72218a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 28 13:33:04.939: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Oct 28 13:33:04.940: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8568",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11c41fae-febd-45fa-a859-48eaa46be524",
      ResourceVersion: (string) (len=5) "32393",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834096777,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "0e892ad1-0f8b-498b-95dc-a67ba872218a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 30 65 38 39 32 61 64  |"uid\":\"0e892ad|
              000000b0  31 2d 30 66 38 62 2d 34  39 38 62 2d 39 35 64 63  |1-0f8b-498b-95dc|
              000000c0  2d 61 36 37 62 61 38 37  32 32 31 38 61 5c 22 7d  |-a67ba872218a\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Oct 28 13:33:04.946: INFO: Pod "test-rolling-update-deployment-7f5c55c64-7h7lm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-7h7lm",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-8568",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a6d1b7f-44c1-4cbc-af34-387105a583f3",
      ResourceVersion: (string) (len=5) "32383",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834096782,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "ec7f27a6-2a68-47ba-99ac-207a96ab9add",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 63  37 66 32 37 61 36 2d 32  |d\":\"ec7f27a6-2|
              00000090  61 36 38 2d 34 37 62 61  2d 39 39 61 63 2d 32 30  |a68-47ba-99ac-20|
              000000a0  37 61 39 36 61 62 39 61  64 64 5c 22 7d 22 3a 7b  |7a96ab9add\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 33 36 2e 32 34 30 5c  |192.168.136.240\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t8w8h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t8w8h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-37-29",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834096782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.37.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.136.240",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.136.240"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834096782,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63834096783,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://920d969e24849f94a2f437a0288c6bf7b7e5e49f365d6eace047019cc1653aa8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Oct 28 13:33:04.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8568" for this suite. @ 10/28/23 13:33:04.957
• [7.122 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 10/28/23 13:33:04.965
  Oct 28 13:33:04.965: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename disruption @ 10/28/23 13:33:04.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:33:04.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:33:04.985
  STEP: Creating a pdb that targets all three pods in a test replica set @ 10/28/23 13:33:04.988
  STEP: Waiting for the pdb to be processed @ 10/28/23 13:33:04.992
  STEP: First trying to evict a pod which shouldn't be evictable @ 10/28/23 13:33:07.005
  STEP: Waiting for all pods to be running @ 10/28/23 13:33:07.005
  Oct 28 13:33:07.010: INFO: pods: 0 < 3
  STEP: locating a running pod @ 10/28/23 13:33:09.015
  STEP: Updating the pdb to allow a pod to be evicted @ 10/28/23 13:33:09.025
  STEP: Waiting for the pdb to be processed @ 10/28/23 13:33:09.034
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/28/23 13:33:09.039
  STEP: Waiting for all pods to be running @ 10/28/23 13:33:09.039
  STEP: Waiting for the pdb to observed all healthy pods @ 10/28/23 13:33:09.043
  STEP: Patching the pdb to disallow a pod to be evicted @ 10/28/23 13:33:09.069
  STEP: Waiting for the pdb to be processed @ 10/28/23 13:33:09.091
  STEP: Waiting for all pods to be running @ 10/28/23 13:33:11.099
  STEP: locating a running pod @ 10/28/23 13:33:11.102
  STEP: Deleting the pdb to allow a pod to be evicted @ 10/28/23 13:33:11.113
  STEP: Waiting for the pdb to be deleted @ 10/28/23 13:33:11.12
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/28/23 13:33:11.123
  STEP: Waiting for all pods to be running @ 10/28/23 13:33:11.123
  Oct 28 13:33:11.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5242" for this suite. @ 10/28/23 13:33:11.149
• [6.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 10/28/23 13:33:11.168
  Oct 28 13:33:11.168: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename watch @ 10/28/23 13:33:11.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:33:11.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:33:11.186
  STEP: creating a watch on configmaps with label A @ 10/28/23 13:33:11.234
  STEP: creating a watch on configmaps with label B @ 10/28/23 13:33:11.236
  STEP: creating a watch on configmaps with label A or B @ 10/28/23 13:33:11.238
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 10/28/23 13:33:11.239
  Oct 28 13:33:11.243: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-849  9012b96e-bcb7-4356-b93e-d6feebd2bfe3 32547 0 2023-10-28 13:33:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-28 13:33:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:33:11.243: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-849  9012b96e-bcb7-4356-b93e-d6feebd2bfe3 32547 0 2023-10-28 13:33:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-28 13:33:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 10/28/23 13:33:11.243
  Oct 28 13:33:11.252: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-849  9012b96e-bcb7-4356-b93e-d6feebd2bfe3 32548 0 2023-10-28 13:33:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-28 13:33:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:33:11.252: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-849  9012b96e-bcb7-4356-b93e-d6feebd2bfe3 32548 0 2023-10-28 13:33:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-28 13:33:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 10/28/23 13:33:11.252
  Oct 28 13:33:11.262: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-849  9012b96e-bcb7-4356-b93e-d6feebd2bfe3 32549 0 2023-10-28 13:33:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-28 13:33:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:33:11.262: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-849  9012b96e-bcb7-4356-b93e-d6feebd2bfe3 32549 0 2023-10-28 13:33:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-28 13:33:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 10/28/23 13:33:11.262
  Oct 28 13:33:11.268: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-849  9012b96e-bcb7-4356-b93e-d6feebd2bfe3 32550 0 2023-10-28 13:33:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-28 13:33:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:33:11.269: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-849  9012b96e-bcb7-4356-b93e-d6feebd2bfe3 32550 0 2023-10-28 13:33:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-28 13:33:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 10/28/23 13:33:11.269
  Oct 28 13:33:11.273: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-849  6ef9a8e7-87db-48c7-a63d-ade8e14693c2 32551 0 2023-10-28 13:33:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-28 13:33:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:33:11.273: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-849  6ef9a8e7-87db-48c7-a63d-ade8e14693c2 32551 0 2023-10-28 13:33:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-28 13:33:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 10/28/23 13:33:21.274
  Oct 28 13:33:21.281: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-849  6ef9a8e7-87db-48c7-a63d-ade8e14693c2 32627 0 2023-10-28 13:33:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-28 13:33:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:33:21.281: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-849  6ef9a8e7-87db-48c7-a63d-ade8e14693c2 32627 0 2023-10-28 13:33:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-28 13:33:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Oct 28 13:33:31.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-849" for this suite. @ 10/28/23 13:33:31.287
• [20.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 10/28/23 13:33:31.298
  Oct 28 13:33:31.298: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-runtime @ 10/28/23 13:33:31.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:33:31.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:33:31.319
  STEP: create the container @ 10/28/23 13:33:31.322
  W1028 13:33:31.330830      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 10/28/23 13:33:31.331
  STEP: get the container status @ 10/28/23 13:33:34.349
  STEP: the container should be terminated @ 10/28/23 13:33:34.353
  STEP: the termination message should be set @ 10/28/23 13:33:34.353
  Oct 28 13:33:34.353: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/28/23 13:33:34.354
  Oct 28 13:33:34.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8520" for this suite. @ 10/28/23 13:33:34.375
• [3.084 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 10/28/23 13:33:34.383
  Oct 28 13:33:34.383: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 13:33:34.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:33:34.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:33:34.403
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 13:33:34.407
  STEP: Saw pod success @ 10/28/23 13:33:38.433
  Oct 28 13:33:38.436: INFO: Trying to get logs from node ip-172-31-37-29 pod downwardapi-volume-a8e3e59c-d92d-42c6-b55c-4ed99f14ec49 container client-container: <nil>
  STEP: delete the pod @ 10/28/23 13:33:38.456
  Oct 28 13:33:38.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3016" for this suite. @ 10/28/23 13:33:38.48
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 10/28/23 13:33:38.49
  Oct 28 13:33:38.490: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename containers @ 10/28/23 13:33:38.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:33:38.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:33:38.512
  STEP: Creating a pod to test override arguments @ 10/28/23 13:33:38.515
  STEP: Saw pod success @ 10/28/23 13:33:42.539
  Oct 28 13:33:42.542: INFO: Trying to get logs from node ip-172-31-37-29 pod client-containers-b4288cb0-2fee-44c0-ac88-9f7fb57ada07 container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 13:33:42.55
  Oct 28 13:33:42.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7949" for this suite. @ 10/28/23 13:33:42.569
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 10/28/23 13:33:42.578
  Oct 28 13:33:42.578: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename resourcequota @ 10/28/23 13:33:42.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:33:42.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:33:42.6
  STEP: Counting existing ResourceQuota @ 10/28/23 13:33:42.603
  STEP: Creating a ResourceQuota @ 10/28/23 13:33:47.607
  STEP: Ensuring resource quota status is calculated @ 10/28/23 13:33:47.613
  STEP: Creating a Pod that fits quota @ 10/28/23 13:33:49.619
  STEP: Ensuring ResourceQuota status captures the pod usage @ 10/28/23 13:33:49.637
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 10/28/23 13:33:51.643
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 10/28/23 13:33:51.646
  STEP: Ensuring a pod cannot update its resource requirements @ 10/28/23 13:33:51.649
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 10/28/23 13:33:51.655
  STEP: Deleting the pod @ 10/28/23 13:33:53.662
  STEP: Ensuring resource quota status released the pod usage @ 10/28/23 13:33:53.676
  Oct 28 13:33:55.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3555" for this suite. @ 10/28/23 13:33:55.69
• [13.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 10/28/23 13:33:55.701
  Oct 28 13:33:55.701: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename dns @ 10/28/23 13:33:55.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:33:55.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:33:55.731
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3903.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-3903.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 10/28/23 13:33:55.735
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3903.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-3903.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 10/28/23 13:33:55.735
  STEP: creating a pod to probe /etc/hosts @ 10/28/23 13:33:55.735
  STEP: submitting the pod to kubernetes @ 10/28/23 13:33:55.735
  STEP: retrieving the pod @ 10/28/23 13:33:57.768
  STEP: looking for the results for each expected name from probers @ 10/28/23 13:33:57.772
  Oct 28 13:33:57.793: INFO: DNS probes using dns-3903/dns-test-54cd0527-cbf6-48ed-bc0b-c24c7ddbe0b1 succeeded

  Oct 28 13:33:57.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 13:33:57.798
  STEP: Destroying namespace "dns-3903" for this suite. @ 10/28/23 13:33:57.816
• [2.122 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 10/28/23 13:33:57.826
  Oct 28 13:33:57.826: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/28/23 13:33:57.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:33:57.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:33:57.852
  Oct 28 13:33:57.856: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:34:04.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7803" for this suite. @ 10/28/23 13:34:04.113
• [6.295 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 10/28/23 13:34:04.122
  Oct 28 13:34:04.122: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 13:34:04.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:34:04.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:34:04.141
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 13:34:04.144
  STEP: Saw pod success @ 10/28/23 13:34:08.171
  Oct 28 13:34:08.176: INFO: Trying to get logs from node ip-172-31-37-29 pod downwardapi-volume-40f1a5d0-97dc-491d-a34b-3f1af9438cb6 container client-container: <nil>
  STEP: delete the pod @ 10/28/23 13:34:08.185
  Oct 28 13:34:08.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1916" for this suite. @ 10/28/23 13:34:08.208
• [4.096 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 10/28/23 13:34:08.218
  Oct 28 13:34:08.218: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/28/23 13:34:08.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:34:08.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:34:08.241
  STEP: create the container to handle the HTTPGet hook request. @ 10/28/23 13:34:08.248
  STEP: create the pod with lifecycle hook @ 10/28/23 13:34:10.27
  STEP: delete the pod with lifecycle hook @ 10/28/23 13:34:12.291
  STEP: check prestop hook @ 10/28/23 13:34:14.31
  Oct 28 13:34:14.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2684" for this suite. @ 10/28/23 13:34:14.334
• [6.122 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 10/28/23 13:34:14.341
  Oct 28 13:34:14.341: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 13:34:14.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:34:14.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:34:14.361
  STEP: Creating configMap with name projected-configmap-test-volume-map-a239cd90-dafa-4aac-a9c0-f1ba23d7f44a @ 10/28/23 13:34:14.364
  STEP: Creating a pod to test consume configMaps @ 10/28/23 13:34:14.369
  STEP: Saw pod success @ 10/28/23 13:34:18.393
  Oct 28 13:34:18.397: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-projected-configmaps-92fd6067-db83-4fa8-a4c0-e13d39ecd342 container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 13:34:18.404
  Oct 28 13:34:18.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2921" for this suite. @ 10/28/23 13:34:18.424
• [4.091 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 10/28/23 13:34:18.432
  Oct 28 13:34:18.432: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename statefulset @ 10/28/23 13:34:18.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:34:18.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:34:18.456
  STEP: Creating service test in namespace statefulset-5784 @ 10/28/23 13:34:18.459
  STEP: Creating a new StatefulSet @ 10/28/23 13:34:18.465
  Oct 28 13:34:18.483: INFO: Found 0 stateful pods, waiting for 3
  Oct 28 13:34:28.492: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 28 13:34:28.492: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 28 13:34:28.492: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/28/23 13:34:28.502
  Oct 28 13:34:28.523: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 10/28/23 13:34:28.523
  STEP: Not applying an update when the partition is greater than the number of replicas @ 10/28/23 13:34:38.543
  STEP: Performing a canary update @ 10/28/23 13:34:38.543
  Oct 28 13:34:38.564: INFO: Updating stateful set ss2
  Oct 28 13:34:38.575: INFO: Waiting for Pod statefulset-5784/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 10/28/23 13:34:48.585
  Oct 28 13:34:48.623: INFO: Found 2 stateful pods, waiting for 3
  Oct 28 13:34:58.630: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Oct 28 13:34:58.631: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Oct 28 13:34:58.631: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 10/28/23 13:34:58.638
  Oct 28 13:34:58.659: INFO: Updating stateful set ss2
  Oct 28 13:34:58.671: INFO: Waiting for Pod statefulset-5784/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Oct 28 13:35:08.699: INFO: Updating stateful set ss2
  Oct 28 13:35:08.706: INFO: Waiting for StatefulSet statefulset-5784/ss2 to complete update
  Oct 28 13:35:08.706: INFO: Waiting for Pod statefulset-5784/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Oct 28 13:35:18.717: INFO: Deleting all statefulset in ns statefulset-5784
  Oct 28 13:35:18.721: INFO: Scaling statefulset ss2 to 0
  Oct 28 13:35:28.742: INFO: Waiting for statefulset status.replicas updated to 0
  Oct 28 13:35:28.745: INFO: Deleting statefulset ss2
  Oct 28 13:35:28.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5784" for this suite. @ 10/28/23 13:35:28.769
• [70.348 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 10/28/23 13:35:28.781
  Oct 28 13:35:28.781: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/28/23 13:35:28.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:35:28.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:35:28.802
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 10/28/23 13:35:28.805
  Oct 28 13:35:28.806: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:35:30.121: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:35:35.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4481" for this suite. @ 10/28/23 13:35:35.598
• [6.826 seconds]
------------------------------
SSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 10/28/23 13:35:35.607
  Oct 28 13:35:35.607: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename events @ 10/28/23 13:35:35.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:35:35.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:35:35.628
  STEP: Create set of events @ 10/28/23 13:35:35.632
  Oct 28 13:35:35.637: INFO: created test-event-1
  Oct 28 13:35:35.643: INFO: created test-event-2
  Oct 28 13:35:35.647: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 10/28/23 13:35:35.647
  STEP: delete collection of events @ 10/28/23 13:35:35.651
  Oct 28 13:35:35.651: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/28/23 13:35:35.675
  Oct 28 13:35:35.675: INFO: requesting list of events to confirm quantity
  Oct 28 13:35:35.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1575" for this suite. @ 10/28/23 13:35:35.682
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 10/28/23 13:35:35.689
  Oct 28 13:35:35.689: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 13:35:35.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:35:35.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:35:35.709
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-1e0687cf-7d1e-4c94-8dbf-2d70e2a905b8 @ 10/28/23 13:35:35.716
  STEP: Creating the pod @ 10/28/23 13:35:35.722
  STEP: Updating configmap projected-configmap-test-upd-1e0687cf-7d1e-4c94-8dbf-2d70e2a905b8 @ 10/28/23 13:35:37.752
  STEP: waiting to observe update in volume @ 10/28/23 13:35:37.757
  Oct 28 13:37:10.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3353" for this suite. @ 10/28/23 13:37:10.224
• [94.541 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 10/28/23 13:37:10.233
  Oct 28 13:37:10.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename resourcequota @ 10/28/23 13:37:10.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:37:10.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:37:10.254
  STEP: Creating a ResourceQuota with best effort scope @ 10/28/23 13:37:10.257
  STEP: Ensuring ResourceQuota status is calculated @ 10/28/23 13:37:10.262
  STEP: Creating a ResourceQuota with not best effort scope @ 10/28/23 13:37:12.266
  STEP: Ensuring ResourceQuota status is calculated @ 10/28/23 13:37:12.272
  STEP: Creating a best-effort pod @ 10/28/23 13:37:14.277
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 10/28/23 13:37:14.292
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 10/28/23 13:37:16.297
  STEP: Deleting the pod @ 10/28/23 13:37:18.302
  STEP: Ensuring resource quota status released the pod usage @ 10/28/23 13:37:18.32
  STEP: Creating a not best-effort pod @ 10/28/23 13:37:20.325
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 10/28/23 13:37:20.336
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 10/28/23 13:37:22.34
  STEP: Deleting the pod @ 10/28/23 13:37:24.345
  STEP: Ensuring resource quota status released the pod usage @ 10/28/23 13:37:24.358
  Oct 28 13:37:26.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3403" for this suite. @ 10/28/23 13:37:26.368
• [16.141 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 10/28/23 13:37:26.375
  Oct 28 13:37:26.375: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename configmap @ 10/28/23 13:37:26.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:37:26.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:37:26.395
  STEP: Creating configMap with name configmap-test-volume-891afdbd-5091-4502-835e-4ac62bf7539a @ 10/28/23 13:37:26.398
  STEP: Creating a pod to test consume configMaps @ 10/28/23 13:37:26.403
  STEP: Saw pod success @ 10/28/23 13:37:30.43
  Oct 28 13:37:30.433: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-configmaps-dee2b2d0-458e-4238-87e1-20ccb76fb96c container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 13:37:30.441
  Oct 28 13:37:30.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7744" for this suite. @ 10/28/23 13:37:30.463
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 10/28/23 13:37:30.472
  Oct 28 13:37:30.472: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename secrets @ 10/28/23 13:37:30.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:37:30.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:37:30.496
  STEP: Creating secret with name secret-test-c3ff971f-3453-422b-8b67-5fdb2b323f81 @ 10/28/23 13:37:30.504
  STEP: Creating a pod to test consume secrets @ 10/28/23 13:37:30.517
  STEP: Saw pod success @ 10/28/23 13:37:34.548
  Oct 28 13:37:34.552: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-secrets-c67a1c1d-65fc-4220-b965-d1fc77d718f5 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 13:37:34.561
  Oct 28 13:37:34.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8153" for this suite. @ 10/28/23 13:37:34.583
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 10/28/23 13:37:34.592
  Oct 28 13:37:34.592: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 13:37:34.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:37:34.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:37:34.611
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 13:37:34.614
  STEP: Saw pod success @ 10/28/23 13:37:38.642
  Oct 28 13:37:38.646: INFO: Trying to get logs from node ip-172-31-37-29 pod downwardapi-volume-6498494d-91ad-4f56-ba14-661130d4c2d4 container client-container: <nil>
  STEP: delete the pod @ 10/28/23 13:37:38.653
  Oct 28 13:37:38.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-776" for this suite. @ 10/28/23 13:37:38.674
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 10/28/23 13:37:38.693
  Oct 28 13:37:38.693: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 13:37:38.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:37:38.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:37:38.716
  STEP: Setting up server cert @ 10/28/23 13:37:38.745
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 13:37:38.944
  STEP: Deploying the webhook pod @ 10/28/23 13:37:38.952
  STEP: Wait for the deployment to be ready @ 10/28/23 13:37:38.967
  Oct 28 13:37:38.978: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 13:37:40.989
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 13:37:41.006
  Oct 28 13:37:42.007: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 10/28/23 13:37:42.015
  STEP: create a pod that should be updated by the webhook @ 10/28/23 13:37:42.033
  Oct 28 13:37:42.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-94" for this suite. @ 10/28/23 13:37:42.107
  STEP: Destroying namespace "webhook-markers-4064" for this suite. @ 10/28/23 13:37:42.115
• [3.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 10/28/23 13:37:42.127
  Oct 28 13:37:42.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pod-network-test @ 10/28/23 13:37:42.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:37:42.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:37:42.146
  STEP: Performing setup for networking test in namespace pod-network-test-4136 @ 10/28/23 13:37:42.149
  STEP: creating a selector @ 10/28/23 13:37:42.149
  STEP: Creating the service pods in kubernetes @ 10/28/23 13:37:42.149
  Oct 28 13:37:42.149: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/28/23 13:37:54.238
  Oct 28 13:37:56.260: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Oct 28 13:37:56.260: INFO: Breadth first check of 192.168.191.231 on host 172.31.20.72...
  Oct 28 13:37:56.264: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.136.224:9080/dial?request=hostname&protocol=http&host=192.168.191.231&port=8083&tries=1'] Namespace:pod-network-test-4136 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 13:37:56.264: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:37:56.265: INFO: ExecWithOptions: Clientset creation
  Oct 28 13:37:56.265: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4136/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.136.224%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.191.231%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 28 13:37:56.363: INFO: Waiting for responses: map[]
  Oct 28 13:37:56.363: INFO: reached 192.168.191.231 after 0/1 tries
  Oct 28 13:37:56.363: INFO: Breadth first check of 192.168.136.244 on host 172.31.37.29...
  Oct 28 13:37:56.367: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.136.224:9080/dial?request=hostname&protocol=http&host=192.168.136.244&port=8083&tries=1'] Namespace:pod-network-test-4136 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 13:37:56.368: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:37:56.369: INFO: ExecWithOptions: Clientset creation
  Oct 28 13:37:56.369: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4136/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.136.224%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.136.244%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 28 13:37:56.470: INFO: Waiting for responses: map[]
  Oct 28 13:37:56.470: INFO: reached 192.168.136.244 after 0/1 tries
  Oct 28 13:37:56.470: INFO: Breadth first check of 192.168.15.186 on host 172.31.5.226...
  Oct 28 13:37:56.475: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.136.224:9080/dial?request=hostname&protocol=http&host=192.168.15.186&port=8083&tries=1'] Namespace:pod-network-test-4136 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Oct 28 13:37:56.475: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:37:56.476: INFO: ExecWithOptions: Clientset creation
  Oct 28 13:37:56.476: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4136/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.136.224%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.15.186%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Oct 28 13:37:56.631: INFO: Waiting for responses: map[]
  Oct 28 13:37:56.631: INFO: reached 192.168.15.186 after 0/1 tries
  Oct 28 13:37:56.631: INFO: Going to retry 0 out of 3 pods....
  Oct 28 13:37:56.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4136" for this suite. @ 10/28/23 13:37:56.636
• [14.517 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 10/28/23 13:37:56.645
  Oct 28 13:37:56.645: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename sched-preemption @ 10/28/23 13:37:56.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:37:56.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:37:56.665
  Oct 28 13:37:56.684: INFO: Waiting up to 1m0s for all nodes to be ready
  Oct 28 13:38:56.713: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/28/23 13:38:56.716
  Oct 28 13:38:56.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/28/23 13:38:56.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:38:56.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:38:56.737
  Oct 28 13:38:56.754: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Oct 28 13:38:56.758: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Oct 28 13:38:56.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 28 13:38:56.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1944" for this suite. @ 10/28/23 13:38:56.843
  STEP: Destroying namespace "sched-preemption-2407" for this suite. @ 10/28/23 13:38:56.851
• [60.214 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 10/28/23 13:38:56.859
  Oct 28 13:38:56.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubelet-test @ 10/28/23 13:38:56.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:38:56.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:38:56.878
  Oct 28 13:38:58.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2756" for this suite. @ 10/28/23 13:38:58.919
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 10/28/23 13:38:58.93
  Oct 28 13:38:58.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 13:38:58.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:38:58.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:38:58.951
  STEP: Creating configMap with name projected-configmap-test-volume-f28366a9-ad8d-46ac-81f4-9e8781d4ebc5 @ 10/28/23 13:38:58.955
  STEP: Creating a pod to test consume configMaps @ 10/28/23 13:38:58.959
  STEP: Saw pod success @ 10/28/23 13:39:02.983
  Oct 28 13:39:02.986: INFO: Trying to get logs from node ip-172-31-20-72 pod pod-projected-configmaps-0a257d3d-4594-4f84-a49a-af2fca3512d2 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 13:39:03.004
  Oct 28 13:39:03.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2203" for this suite. @ 10/28/23 13:39:03.03
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 10/28/23 13:39:03.041
  Oct 28 13:39:03.041: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename job @ 10/28/23 13:39:03.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:39:03.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:39:03.06
  STEP: Creating Indexed job @ 10/28/23 13:39:03.063
  STEP: Ensuring job reaches completions @ 10/28/23 13:39:03.069
  STEP: Ensuring pods with index for job exist @ 10/28/23 13:39:11.076
  Oct 28 13:39:11.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8583" for this suite. @ 10/28/23 13:39:11.084
• [8.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 10/28/23 13:39:11.094
  Oct 28 13:39:11.094: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename podtemplate @ 10/28/23 13:39:11.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:39:11.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:39:11.113
  STEP: Create a pod template @ 10/28/23 13:39:11.116
  STEP: Replace a pod template @ 10/28/23 13:39:11.123
  Oct 28 13:39:11.131: INFO: Found updated podtemplate annotation: "true"

  Oct 28 13:39:11.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3308" for this suite. @ 10/28/23 13:39:11.135
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 10/28/23 13:39:11.143
  Oct 28 13:39:11.143: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir @ 10/28/23 13:39:11.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:39:11.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:39:11.16
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/28/23 13:39:11.163
  STEP: Saw pod success @ 10/28/23 13:39:15.187
  Oct 28 13:39:15.191: INFO: Trying to get logs from node ip-172-31-20-72 pod pod-3364b2d6-c6e7-473a-b8b2-485f9cea835a container test-container: <nil>
  STEP: delete the pod @ 10/28/23 13:39:15.199
  Oct 28 13:39:15.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-254" for this suite. @ 10/28/23 13:39:15.217
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 10/28/23 13:39:15.229
  Oct 28 13:39:15.229: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename sched-preemption @ 10/28/23 13:39:15.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:39:15.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:39:15.252
  Oct 28 13:39:15.269: INFO: Waiting up to 1m0s for all nodes to be ready
  Oct 28 13:40:15.293: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/28/23 13:40:15.298
  Oct 28 13:40:15.321: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Oct 28 13:40:15.329: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Oct 28 13:40:15.348: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Oct 28 13:40:15.356: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Oct 28 13:40:15.380: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Oct 28 13:40:15.390: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/28/23 13:40:15.39
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 10/28/23 13:40:17.422
  Oct 28 13:40:21.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-684" for this suite. @ 10/28/23 13:40:21.516
• [66.294 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 10/28/23 13:40:21.526
  Oct 28 13:40:21.526: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename resourcequota @ 10/28/23 13:40:21.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:40:21.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:40:21.549
  STEP: Creating a ResourceQuota with terminating scope @ 10/28/23 13:40:21.552
  STEP: Ensuring ResourceQuota status is calculated @ 10/28/23 13:40:21.557
  STEP: Creating a ResourceQuota with not terminating scope @ 10/28/23 13:40:23.562
  STEP: Ensuring ResourceQuota status is calculated @ 10/28/23 13:40:23.567
  STEP: Creating a long running pod @ 10/28/23 13:40:25.573
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 10/28/23 13:40:25.589
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 10/28/23 13:40:27.594
  STEP: Deleting the pod @ 10/28/23 13:40:29.598
  STEP: Ensuring resource quota status released the pod usage @ 10/28/23 13:40:29.614
  STEP: Creating a terminating pod @ 10/28/23 13:40:31.619
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 10/28/23 13:40:31.633
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 10/28/23 13:40:33.639
  STEP: Deleting the pod @ 10/28/23 13:40:35.643
  STEP: Ensuring resource quota status released the pod usage @ 10/28/23 13:40:35.657
  Oct 28 13:40:37.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-248" for this suite. @ 10/28/23 13:40:37.667
• [16.147 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 10/28/23 13:40:37.674
  Oct 28 13:40:37.674: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename downward-api @ 10/28/23 13:40:37.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:40:37.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:40:37.694
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 13:40:37.697
  STEP: Saw pod success @ 10/28/23 13:40:41.726
  Oct 28 13:40:41.730: INFO: Trying to get logs from node ip-172-31-37-29 pod downwardapi-volume-298ec81c-13ed-44ea-af23-fdb6a1114a4d container client-container: <nil>
  STEP: delete the pod @ 10/28/23 13:40:41.745
  Oct 28 13:40:41.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5838" for this suite. @ 10/28/23 13:40:41.764
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 10/28/23 13:40:41.773
  Oct 28 13:40:41.773: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 13:40:41.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:40:41.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:40:41.791
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9817 @ 10/28/23 13:40:41.794
  STEP: changing the ExternalName service to type=NodePort @ 10/28/23 13:40:41.804
  STEP: creating replication controller externalname-service in namespace services-9817 @ 10/28/23 13:40:41.823
  I1028 13:40:41.836731      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9817, replica count: 2
  I1028 13:40:44.887352      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 28 13:40:44.887: INFO: Creating new exec pod
  Oct 28 13:40:47.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-9817 exec execpoddnzdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct 28 13:40:48.047: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct 28 13:40:48.047: INFO: stdout: "externalname-service-47wfv"
  Oct 28 13:40:48.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-9817 exec execpoddnzdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.196 80'
  Oct 28 13:40:48.199: INFO: stderr: "+ nc -v -t -w 2 10.152.183.196 80\nConnection to 10.152.183.196 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Oct 28 13:40:48.199: INFO: stdout: ""
  Oct 28 13:40:49.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-9817 exec execpoddnzdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.196 80'
  Oct 28 13:40:49.352: INFO: stderr: "+ nc -v -t -w 2 10.152.183.196 80\n+ echo hostName\nConnection to 10.152.183.196 80 port [tcp/http] succeeded!\n"
  Oct 28 13:40:49.352: INFO: stdout: "externalname-service-47wfv"
  Oct 28 13:40:49.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-9817 exec execpoddnzdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.226 32225'
  Oct 28 13:40:49.492: INFO: stderr: "+ nc -v -t -w 2 172.31.5.226 32225\n+ echo hostName\nConnection to 172.31.5.226 32225 port [tcp/*] succeeded!\n"
  Oct 28 13:40:49.492: INFO: stdout: "externalname-service-47wfv"
  Oct 28 13:40:49.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-9817 exec execpoddnzdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.37.29 32225'
  Oct 28 13:40:49.629: INFO: stderr: "+ nc -v -t -w 2 172.31.37.29 32225\n+ echo hostName\nConnection to 172.31.37.29 32225 port [tcp/*] succeeded!\n"
  Oct 28 13:40:49.629: INFO: stdout: "externalname-service-47wfv"
  Oct 28 13:40:49.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 28 13:40:49.633: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-9817" for this suite. @ 10/28/23 13:40:49.662
• [7.898 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 10/28/23 13:40:49.671
  Oct 28 13:40:49.671: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename field-validation @ 10/28/23 13:40:49.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:40:49.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:40:49.695
  Oct 28 13:40:49.699: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  W1028 13:40:52.255135      19 warnings.go:70] unknown field "alpha"
  W1028 13:40:52.255156      19 warnings.go:70] unknown field "beta"
  W1028 13:40:52.255162      19 warnings.go:70] unknown field "delta"
  W1028 13:40:52.255168      19 warnings.go:70] unknown field "epsilon"
  W1028 13:40:52.255175      19 warnings.go:70] unknown field "gamma"
  Oct 28 13:40:52.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7178" for this suite. @ 10/28/23 13:40:52.809
• [3.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 10/28/23 13:40:52.819
  Oct 28 13:40:52.819: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-probe @ 10/28/23 13:40:52.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:40:52.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:40:52.843
  STEP: Creating pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580 @ 10/28/23 13:40:52.846
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/28/23 13:40:54.867
  Oct 28 13:40:54.870: INFO: Initial restart count of pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd is 0
  Oct 28 13:40:54.876: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:40:56.881: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:40:58.887: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:00.891: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:02.896: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:04.902: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:06.906: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:08.910: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:10.919: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:12.922: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:14.928: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:16.932: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:18.938: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:20.944: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:22.949: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:24.954: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:26.958: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:28.964: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:30.970: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:32.974: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:34.979: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:36.984: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:38.990: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:40.996: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:43.001: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:45.005: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:47.010: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:49.015: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:51.022: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:53.025: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:55.030: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:57.034: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:59.039: INFO: Get pod test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd in namespace container-probe-1580
  Oct 28 13:41:59.039: INFO: Restart count of pod container-probe-1580/test-grpc-c3566709-aeff-4bcd-81f8-c8d22f3a13bd is now 1 (1m4.169277689s elapsed)
  Oct 28 13:41:59.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 13:41:59.044
  STEP: Destroying namespace "container-probe-1580" for this suite. @ 10/28/23 13:41:59.055
• [66.242 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 10/28/23 13:41:59.062
  Oct 28 13:41:59.062: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename svcaccounts @ 10/28/23 13:41:59.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:41:59.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:41:59.083
  STEP: Creating a pod to test service account token:  @ 10/28/23 13:41:59.093
  STEP: Saw pod success @ 10/28/23 13:42:03.117
  Oct 28 13:42:03.120: INFO: Trying to get logs from node ip-172-31-37-29 pod test-pod-8bde9931-0c6c-4913-a140-3b1ba29d0bac container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 13:42:03.128
  Oct 28 13:42:03.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6310" for this suite. @ 10/28/23 13:42:03.149
• [4.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 10/28/23 13:42:03.158
  Oct 28 13:42:03.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 13:42:03.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:42:03.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:42:03.179
  STEP: creating service endpoint-test2 in namespace services-5200 @ 10/28/23 13:42:03.185
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5200 to expose endpoints map[] @ 10/28/23 13:42:03.196
  Oct 28 13:42:03.210: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Oct 28 13:42:04.221: INFO: successfully validated that service endpoint-test2 in namespace services-5200 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5200 @ 10/28/23 13:42:04.221
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5200 to expose endpoints map[pod1:[80]] @ 10/28/23 13:42:06.241
  Oct 28 13:42:06.253: INFO: successfully validated that service endpoint-test2 in namespace services-5200 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 10/28/23 13:42:06.253
  Oct 28 13:42:06.253: INFO: Creating new exec pod
  Oct 28 13:42:09.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-5200 exec execpodzrw79 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Oct 28 13:42:09.417: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Oct 28 13:42:09.417: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 13:42:09.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-5200 exec execpodzrw79 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.97 80'
  Oct 28 13:42:09.563: INFO: stderr: "+ nc -v -t -w 2 10.152.183.97 80\n+ echo hostName\nConnection to 10.152.183.97 80 port [tcp/http] succeeded!\n"
  Oct 28 13:42:09.563: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5200 @ 10/28/23 13:42:09.563
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5200 to expose endpoints map[pod1:[80] pod2:[80]] @ 10/28/23 13:42:11.582
  Oct 28 13:42:11.597: INFO: successfully validated that service endpoint-test2 in namespace services-5200 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 10/28/23 13:42:11.597
  Oct 28 13:42:12.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-5200 exec execpodzrw79 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Oct 28 13:42:12.743: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Oct 28 13:42:12.743: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 13:42:12.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-5200 exec execpodzrw79 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.97 80'
  Oct 28 13:42:12.882: INFO: stderr: "+ nc -v -t -w 2 10.152.183.97 80\n+ echo hostName\nConnection to 10.152.183.97 80 port [tcp/http] succeeded!\n"
  Oct 28 13:42:12.882: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5200 @ 10/28/23 13:42:12.882
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5200 to expose endpoints map[pod2:[80]] @ 10/28/23 13:42:12.894
  Oct 28 13:42:13.923: INFO: successfully validated that service endpoint-test2 in namespace services-5200 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 10/28/23 13:42:13.923
  Oct 28 13:42:14.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-5200 exec execpodzrw79 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Oct 28 13:42:15.068: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Oct 28 13:42:15.068: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 13:42:15.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-5200 exec execpodzrw79 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.97 80'
  Oct 28 13:42:15.211: INFO: stderr: "+ nc -v -t -w 2 10.152.183.97 80\n+ echo hostName\nConnection to 10.152.183.97 80 port [tcp/http] succeeded!\n"
  Oct 28 13:42:15.211: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5200 @ 10/28/23 13:42:15.211
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5200 to expose endpoints map[] @ 10/28/23 13:42:15.231
  Oct 28 13:42:16.254: INFO: successfully validated that service endpoint-test2 in namespace services-5200 exposes endpoints map[]
  Oct 28 13:42:16.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5200" for this suite. @ 10/28/23 13:42:16.279
• [13.130 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 10/28/23 13:42:16.288
  Oct 28 13:42:16.288: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename gc @ 10/28/23 13:42:16.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:42:16.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:42:16.306
  STEP: create the deployment @ 10/28/23 13:42:16.31
  W1028 13:42:16.315290      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/28/23 13:42:16.315
  STEP: delete the deployment @ 10/28/23 13:42:16.431
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 10/28/23 13:42:16.439
  STEP: Gathering metrics @ 10/28/23 13:42:16.967
  W1028 13:42:16.975233      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 28 13:42:16.975: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 28 13:42:16.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9036" for this suite. @ 10/28/23 13:42:16.98
• [0.699 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 10/28/23 13:42:16.988
  Oct 28 13:42:16.988: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename field-validation @ 10/28/23 13:42:16.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:42:17.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:42:17.014
  Oct 28 13:42:17.020: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  W1028 13:42:19.571571      19 warnings.go:70] unknown field "alpha"
  W1028 13:42:19.571591      19 warnings.go:70] unknown field "beta"
  W1028 13:42:19.571599      19 warnings.go:70] unknown field "delta"
  W1028 13:42:19.571605      19 warnings.go:70] unknown field "epsilon"
  W1028 13:42:19.571610      19 warnings.go:70] unknown field "gamma"
  Oct 28 13:42:20.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1137" for this suite. @ 10/28/23 13:42:20.12
• [3.139 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 10/28/23 13:42:20.128
  Oct 28 13:42:20.128: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename secrets @ 10/28/23 13:42:20.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:42:20.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:42:20.152
  STEP: Creating projection with secret that has name secret-emptykey-test-4701793e-3616-4ad8-bdac-e1e7e08b2f78 @ 10/28/23 13:42:20.156
  Oct 28 13:42:20.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7681" for this suite. @ 10/28/23 13:42:20.163
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 10/28/23 13:42:20.172
  Oct 28 13:42:20.172: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 13:42:20.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:42:20.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:42:20.194
  STEP: Setting up server cert @ 10/28/23 13:42:20.215
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 13:42:20.492
  STEP: Deploying the webhook pod @ 10/28/23 13:42:20.502
  STEP: Wait for the deployment to be ready @ 10/28/23 13:42:20.513
  Oct 28 13:42:20.521: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 13:42:22.532
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 13:42:22.543
  Oct 28 13:42:23.544: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/28/23 13:42:23.55
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/28/23 13:42:23.566
  STEP: Creating a dummy validating-webhook-configuration object @ 10/28/23 13:42:23.582
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 10/28/23 13:42:23.591
  STEP: Creating a dummy mutating-webhook-configuration object @ 10/28/23 13:42:23.597
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 10/28/23 13:42:23.606
  Oct 28 13:42:23.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8434" for this suite. @ 10/28/23 13:42:23.686
  STEP: Destroying namespace "webhook-markers-9513" for this suite. @ 10/28/23 13:42:23.693
• [3.528 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 10/28/23 13:42:23.701
  Oct 28 13:42:23.701: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 13:42:23.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:42:23.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:42:23.719
  STEP: creating service in namespace services-7669 @ 10/28/23 13:42:23.722
  STEP: creating service affinity-clusterip-transition in namespace services-7669 @ 10/28/23 13:42:23.722
  STEP: creating replication controller affinity-clusterip-transition in namespace services-7669 @ 10/28/23 13:42:23.733
  I1028 13:42:23.740952      19 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-7669, replica count: 3
  I1028 13:42:26.792364      19 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 28 13:42:26.800: INFO: Creating new exec pod
  Oct 28 13:42:29.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-7669 exec execpod-affinitym56d6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Oct 28 13:42:29.964: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Oct 28 13:42:29.964: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 13:42:29.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-7669 exec execpod-affinitym56d6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.218 80'
  Oct 28 13:42:30.107: INFO: stderr: "+ nc -v -t -w 2 10.152.183.218 80\nConnection to 10.152.183.218 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Oct 28 13:42:30.107: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 13:42:30.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-7669 exec execpod-affinitym56d6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.218:80/ ; done'
  Oct 28 13:42:30.336: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n"
  Oct 28 13:42:30.336: INFO: stdout: "\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-5thqq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-9k94w\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-9k94w\naffinity-clusterip-transition-5thqq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-9k94w\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-5thqq\naffinity-clusterip-transition-5thqq\naffinity-clusterip-transition-9k94w\naffinity-clusterip-transition-9k94w"
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-5thqq
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-9k94w
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-9k94w
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-5thqq
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-9k94w
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-5thqq
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-5thqq
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-9k94w
  Oct 28 13:42:30.336: INFO: Received response from host: affinity-clusterip-transition-9k94w
  Oct 28 13:42:30.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-7669 exec execpod-affinitym56d6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.218:80/ ; done'
  Oct 28 13:42:30.582: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.218:80/\n"
  Oct 28 13:42:30.582: INFO: stdout: "\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq\naffinity-clusterip-transition-l48mq"
  Oct 28 13:42:30.582: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.582: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Received response from host: affinity-clusterip-transition-l48mq
  Oct 28 13:42:30.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 28 13:42:30.588: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7669, will wait for the garbage collector to delete the pods @ 10/28/23 13:42:30.6
  Oct 28 13:42:30.668: INFO: Deleting ReplicationController affinity-clusterip-transition took: 14.125819ms
  Oct 28 13:42:30.768: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.123341ms
  STEP: Destroying namespace "services-7669" for this suite. @ 10/28/23 13:42:33.99
• [10.297 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 10/28/23 13:42:33.999
  Oct 28 13:42:33.999: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename discovery @ 10/28/23 13:42:34
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:42:34.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:42:34.019
  STEP: Setting up server cert @ 10/28/23 13:42:34.023
  STEP: Requesting APIResourceList from "/api/v1" @ 10/28/23 13:42:34.651
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 10/28/23 13:42:34.653
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 10/28/23 13:42:34.655
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 10/28/23 13:42:34.656
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 10/28/23 13:42:34.657
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 10/28/23 13:42:34.659
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 10/28/23 13:42:34.66
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 10/28/23 13:42:34.661
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 10/28/23 13:42:34.662
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 10/28/23 13:42:34.663
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 10/28/23 13:42:34.665
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 10/28/23 13:42:34.666
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 10/28/23 13:42:34.667
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 10/28/23 13:42:34.668
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 10/28/23 13:42:34.67
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 10/28/23 13:42:34.671
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 10/28/23 13:42:34.672
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 10/28/23 13:42:34.673
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 10/28/23 13:42:34.674
  Oct 28 13:42:34.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5159" for this suite. @ 10/28/23 13:42:34.68
• [0.689 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 10/28/23 13:42:34.688
  Oct 28 13:42:34.688: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 13:42:34.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:42:34.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:42:34.707
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1176 @ 10/28/23 13:42:34.711
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/28/23 13:42:34.723
  STEP: creating service externalsvc in namespace services-1176 @ 10/28/23 13:42:34.723
  STEP: creating replication controller externalsvc in namespace services-1176 @ 10/28/23 13:42:34.741
  I1028 13:42:34.748640      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1176, replica count: 2
  I1028 13:42:37.801100      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 10/28/23 13:42:37.804
  Oct 28 13:42:37.820: INFO: Creating new exec pod
  Oct 28 13:42:39.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-1176 exec execpodx9hlp -- /bin/sh -x -c nslookup clusterip-service.services-1176.svc.cluster.local'
  Oct 28 13:42:39.995: INFO: stderr: "+ nslookup clusterip-service.services-1176.svc.cluster.local\n"
  Oct 28 13:42:39.995: INFO: stdout: "Server:\t\t10.152.183.20\nAddress:\t10.152.183.20#53\n\nclusterip-service.services-1176.svc.cluster.local\tcanonical name = externalsvc.services-1176.svc.cluster.local.\nName:\texternalsvc.services-1176.svc.cluster.local\nAddress: 10.152.183.63\n\n"
  Oct 28 13:42:39.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-1176, will wait for the garbage collector to delete the pods @ 10/28/23 13:42:39.999
  Oct 28 13:42:40.061: INFO: Deleting ReplicationController externalsvc took: 7.570248ms
  Oct 28 13:42:40.161: INFO: Terminating ReplicationController externalsvc pods took: 100.502994ms
  Oct 28 13:42:42.883: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-1176" for this suite. @ 10/28/23 13:42:42.901
• [8.222 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 10/28/23 13:42:42.91
  Oct 28 13:42:42.910: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename aggregator @ 10/28/23 13:42:42.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:42:42.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:42:42.927
  Oct 28 13:42:42.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Registering the sample API server. @ 10/28/23 13:42:42.932
  Oct 28 13:42:43.687: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Oct 28 13:42:43.715: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Oct 28 13:42:45.770: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:42:47.775: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:42:49.775: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:42:51.776: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:42:53.777: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:42:55.775: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:42:57.776: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:42:59.776: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:43:01.789: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:43:03.775: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:43:05.777: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 28, 13, 42, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Oct 28 13:43:07.901: INFO: Waited 114.155885ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 10/28/23 13:43:07.942
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 10/28/23 13:43:07.948
  STEP: List APIServices @ 10/28/23 13:43:07.956
  Oct 28 13:43:07.965: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 10/28/23 13:43:07.965
  Oct 28 13:43:07.983: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 10/28/23 13:43:07.983
  Oct 28 13:43:07.996: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.October, 28, 13, 43, 7, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 10/28/23 13:43:07.996
  Oct 28 13:43:08.002: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-10-28 13:43:07 +0000 UTC Passed all checks passed}
  Oct 28 13:43:08.002: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 28 13:43:08.002: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 10/28/23 13:43:08.002
  Oct 28 13:43:08.016: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-213463991" @ 10/28/23 13:43:08.016
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 10/28/23 13:43:08.027
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 10/28/23 13:43:08.036
  STEP: Patch APIService Status @ 10/28/23 13:43:08.04
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 10/28/23 13:43:08.049
  Oct 28 13:43:08.058: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-10-28 13:43:07 +0000 UTC Passed all checks passed}
  Oct 28 13:43:08.058: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Oct 28 13:43:08.058: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Oct 28 13:43:08.058: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 10/28/23 13:43:08.058
  STEP: Confirm that the generated APIService has been deleted @ 10/28/23 13:43:08.063
  Oct 28 13:43:08.063: INFO: Requesting list of APIServices to confirm quantity
  Oct 28 13:43:08.068: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Oct 28 13:43:08.068: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Oct 28 13:43:08.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-7271" for this suite. @ 10/28/23 13:43:08.283
• [25.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 10/28/23 13:43:08.292
  Oct 28 13:43:08.292: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/28/23 13:43:08.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:43:08.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:43:08.332
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 10/28/23 13:43:08.336
  Oct 28 13:43:08.336: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:43:10.036: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:43:15.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8341" for this suite. @ 10/28/23 13:43:15.748
• [7.467 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 10/28/23 13:43:15.759
  Oct 28 13:43:15.759: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 13:43:15.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:43:15.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:43:15.784
  STEP: Setting up server cert @ 10/28/23 13:43:15.812
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 13:43:16.029
  STEP: Deploying the webhook pod @ 10/28/23 13:43:16.039
  STEP: Wait for the deployment to be ready @ 10/28/23 13:43:16.052
  Oct 28 13:43:16.060: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 13:43:18.071
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 13:43:18.084
  Oct 28 13:43:19.084: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 10/28/23 13:43:19.092
  STEP: create a configmap that should be updated by the webhook @ 10/28/23 13:43:19.108
  Oct 28 13:43:19.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2134" for this suite. @ 10/28/23 13:43:19.173
  STEP: Destroying namespace "webhook-markers-9580" for this suite. @ 10/28/23 13:43:19.181
• [3.431 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 10/28/23 13:43:19.19
  Oct 28 13:43:19.190: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 13:43:19.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:43:19.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:43:19.211
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/28/23 13:43:19.214
  Oct 28 13:43:19.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-5998 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Oct 28 13:43:19.279: INFO: stderr: ""
  Oct 28 13:43:19.279: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 10/28/23 13:43:19.279
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/28/23 13:43:24.33
  Oct 28 13:43:24.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-5998 get pod e2e-test-httpd-pod -o json'
  Oct 28 13:43:24.393: INFO: stderr: ""
  Oct 28 13:43:24.393: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-10-28T13:43:19Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-5998\",\n        \"resourceVersion\": \"36412\",\n        \"uid\": \"f7bba4d2-c4a4-4ed2-bd28-193935db61ec\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-q8q6q\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-37-29\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-q8q6q\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-28T13:43:19Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-28T13:43:20Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-28T13:43:20Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-28T13:43:19Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://96e9728fc7f47d24638db20c0e5f932e53d2ea60af03513a0bcd743d56d70e11\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-10-28T13:43:19Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.37.29\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.136.196\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.136.196\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-10-28T13:43:19Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 10/28/23 13:43:24.394
  Oct 28 13:43:24.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-5998 replace -f -'
  Oct 28 13:43:24.593: INFO: stderr: ""
  Oct 28 13:43:24.593: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 10/28/23 13:43:24.593
  Oct 28 13:43:24.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-5998 delete pods e2e-test-httpd-pod'
  Oct 28 13:43:26.769: INFO: stderr: ""
  Oct 28 13:43:26.769: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Oct 28 13:43:26.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5998" for this suite. @ 10/28/23 13:43:26.774
• [7.592 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 10/28/23 13:43:26.784
  Oct 28 13:43:26.784: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename cronjob @ 10/28/23 13:43:26.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:43:26.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:43:26.807
  STEP: Creating a ReplaceConcurrent cronjob @ 10/28/23 13:43:26.81
  STEP: Ensuring a job is scheduled @ 10/28/23 13:43:26.815
  STEP: Ensuring exactly one is scheduled @ 10/28/23 13:44:00.821
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/28/23 13:44:00.824
  STEP: Ensuring the job is replaced with a new one @ 10/28/23 13:44:00.829
  STEP: Removing cronjob @ 10/28/23 13:45:00.835
  Oct 28 13:45:00.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6543" for this suite. @ 10/28/23 13:45:00.848
• [94.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 10/28/23 13:45:00.866
  Oct 28 13:45:00.866: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename webhook @ 10/28/23 13:45:00.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:45:00.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:45:00.894
  STEP: Setting up server cert @ 10/28/23 13:45:00.921
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/28/23 13:45:01.309
  STEP: Deploying the webhook pod @ 10/28/23 13:45:01.318
  STEP: Wait for the deployment to be ready @ 10/28/23 13:45:01.331
  Oct 28 13:45:01.339: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/28/23 13:45:03.351
  STEP: Verifying the service has paired with the endpoint @ 10/28/23 13:45:03.363
  Oct 28 13:45:04.363: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/28/23 13:45:04.453
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/28/23 13:45:04.51
  STEP: Deleting the collection of validation webhooks @ 10/28/23 13:45:04.55
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/28/23 13:45:04.61
  Oct 28 13:45:04.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2778" for this suite. @ 10/28/23 13:45:04.665
  STEP: Destroying namespace "webhook-markers-1605" for this suite. @ 10/28/23 13:45:04.673
• [3.819 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 10/28/23 13:45:04.689
  Oct 28 13:45:04.689: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename secrets @ 10/28/23 13:45:04.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:45:04.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:45:04.712
  STEP: creating secret secrets-2996/secret-test-4d83129d-4a60-4f9d-9dff-1178b5cb7a57 @ 10/28/23 13:45:04.715
  STEP: Creating a pod to test consume secrets @ 10/28/23 13:45:04.72
  STEP: Saw pod success @ 10/28/23 13:45:08.745
  Oct 28 13:45:08.748: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-configmaps-2d2d3469-0834-4e9a-9f86-58f9a8f36155 container env-test: <nil>
  STEP: delete the pod @ 10/28/23 13:45:08.776
  Oct 28 13:45:08.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2996" for this suite. @ 10/28/23 13:45:08.796
• [4.114 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 10/28/23 13:45:08.804
  Oct 28 13:45:08.804: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 13:45:08.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:45:08.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:45:08.824
  STEP: Creating projection with secret that has name projected-secret-test-map-65126451-3a2f-4f2b-bc4c-19bb2dfc7f1d @ 10/28/23 13:45:08.828
  STEP: Creating a pod to test consume secrets @ 10/28/23 13:45:08.832
  STEP: Saw pod success @ 10/28/23 13:45:12.859
  Oct 28 13:45:12.863: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-projected-secrets-34e886b1-916f-4672-b6cf-1cb158b1ac4f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/28/23 13:45:12.87
  Oct 28 13:45:12.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2852" for this suite. @ 10/28/23 13:45:12.888
• [4.091 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 10/28/23 13:45:12.895
  Oct 28 13:45:12.895: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename sched-preemption @ 10/28/23 13:45:12.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:45:12.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:45:12.919
  Oct 28 13:45:12.936: INFO: Waiting up to 1m0s for all nodes to be ready
  Oct 28 13:46:12.969: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/28/23 13:46:12.974
  Oct 28 13:46:12.974: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/28/23 13:46:12.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:46:12.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:46:12.996
  STEP: Finding an available node @ 10/28/23 13:46:13
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/28/23 13:46:13
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/28/23 13:46:15.024
  Oct 28 13:46:15.036: INFO: found a healthy node: ip-172-31-37-29
  Oct 28 13:46:21.110: INFO: pods created so far: [1 1 1]
  Oct 28 13:46:21.110: INFO: length of pods created so far: 3
  Oct 28 13:46:23.121: INFO: pods created so far: [2 2 1]
  Oct 28 13:46:30.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 28 13:46:30.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8311" for this suite. @ 10/28/23 13:46:30.209
  STEP: Destroying namespace "sched-preemption-3477" for this suite. @ 10/28/23 13:46:30.214
• [77.326 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 10/28/23 13:46:30.222
  Oct 28 13:46:30.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/28/23 13:46:30.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:46:30.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:46:30.243
  STEP: creating @ 10/28/23 13:46:30.247
  STEP: getting @ 10/28/23 13:46:30.267
  STEP: listing in namespace @ 10/28/23 13:46:30.27
  STEP: patching @ 10/28/23 13:46:30.274
  STEP: deleting @ 10/28/23 13:46:30.287
  Oct 28 13:46:30.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2169" for this suite. @ 10/28/23 13:46:30.302
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 10/28/23 13:46:30.31
  Oct 28 13:46:30.310: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 13:46:30.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:46:30.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:46:30.332
  STEP: Creating configMap with name projected-configmap-test-volume-map-1a95a4a5-ff77-4b3c-9031-6a76691b3ba1 @ 10/28/23 13:46:30.336
  STEP: Creating a pod to test consume configMaps @ 10/28/23 13:46:30.34
  STEP: Saw pod success @ 10/28/23 13:46:34.367
  Oct 28 13:46:34.371: INFO: Trying to get logs from node ip-172-31-37-29 pod pod-projected-configmaps-4f60f252-0496-40d0-ba72-f7a1fe8551ed container agnhost-container: <nil>
  STEP: delete the pod @ 10/28/23 13:46:34.379
  Oct 28 13:46:34.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4745" for this suite. @ 10/28/23 13:46:34.402
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 10/28/23 13:46:34.411
  Oct 28 13:46:34.411: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename events @ 10/28/23 13:46:34.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:46:34.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:46:34.432
  STEP: Create set of events @ 10/28/23 13:46:34.435
  STEP: get a list of Events with a label in the current namespace @ 10/28/23 13:46:34.453
  STEP: delete a list of events @ 10/28/23 13:46:34.457
  Oct 28 13:46:34.457: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/28/23 13:46:34.483
  Oct 28 13:46:34.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1669" for this suite. @ 10/28/23 13:46:34.49
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 10/28/23 13:46:34.499
  Oct 28 13:46:34.499: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/28/23 13:46:34.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:46:34.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:46:34.52
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 10/28/23 13:46:34.524
  Oct 28 13:46:34.524: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 10/28/23 13:46:39.927
  Oct 28 13:46:39.928: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:46:41.447: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  Oct 28 13:46:46.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5686" for this suite. @ 10/28/23 13:46:46.75
• [12.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 10/28/23 13:46:46.776
  Oct 28 13:46:46.776: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 13:46:46.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:46:46.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:46:46.806
  STEP: Creating the pod @ 10/28/23 13:46:46.81
  Oct 28 13:46:49.361: INFO: Successfully updated pod "annotationupdateb7aac56b-fe7a-4aaa-8016-6f756dead7b5"
  Oct 28 13:46:51.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6844" for this suite. @ 10/28/23 13:46:51.382
• [4.612 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 10/28/23 13:46:51.391
  Oct 28 13:46:51.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename resourcequota @ 10/28/23 13:46:51.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:46:51.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:46:51.412
  STEP: Creating resourceQuota "e2e-rq-status-b9r5r" @ 10/28/23 13:46:51.418
  Oct 28 13:46:51.426: INFO: Resource quota "e2e-rq-status-b9r5r" reports spec: hard cpu limit of 500m
  Oct 28 13:46:51.426: INFO: Resource quota "e2e-rq-status-b9r5r" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-b9r5r" /status @ 10/28/23 13:46:51.427
  STEP: Confirm /status for "e2e-rq-status-b9r5r" resourceQuota via watch @ 10/28/23 13:46:51.436
  Oct 28 13:46:51.437: INFO: observed resourceQuota "e2e-rq-status-b9r5r" in namespace "resourcequota-3237" with hard status: v1.ResourceList(nil)
  Oct 28 13:46:51.438: INFO: Found resourceQuota "e2e-rq-status-b9r5r" in namespace "resourcequota-3237" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Oct 28 13:46:51.438: INFO: ResourceQuota "e2e-rq-status-b9r5r" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 10/28/23 13:46:51.44
  Oct 28 13:46:51.445: INFO: Resource quota "e2e-rq-status-b9r5r" reports spec: hard cpu limit of 1
  Oct 28 13:46:51.445: INFO: Resource quota "e2e-rq-status-b9r5r" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-b9r5r" /status @ 10/28/23 13:46:51.445
  STEP: Confirm /status for "e2e-rq-status-b9r5r" resourceQuota via watch @ 10/28/23 13:46:51.454
  Oct 28 13:46:51.455: INFO: observed resourceQuota "e2e-rq-status-b9r5r" in namespace "resourcequota-3237" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Oct 28 13:46:51.455: INFO: Found resourceQuota "e2e-rq-status-b9r5r" in namespace "resourcequota-3237" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Oct 28 13:46:51.455: INFO: ResourceQuota "e2e-rq-status-b9r5r" /status was patched
  STEP: Get "e2e-rq-status-b9r5r" /status @ 10/28/23 13:46:51.455
  Oct 28 13:46:51.459: INFO: Resourcequota "e2e-rq-status-b9r5r" reports status: hard cpu of 1
  Oct 28 13:46:51.459: INFO: Resourcequota "e2e-rq-status-b9r5r" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-b9r5r" /status before checking Spec is unchanged @ 10/28/23 13:46:51.463
  Oct 28 13:46:51.467: INFO: Resourcequota "e2e-rq-status-b9r5r" reports status: hard cpu of 2
  Oct 28 13:46:51.467: INFO: Resourcequota "e2e-rq-status-b9r5r" reports status: hard memory of 2Gi
  Oct 28 13:46:51.468: INFO: Found resourceQuota "e2e-rq-status-b9r5r" in namespace "resourcequota-3237" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Oct 28 13:51:46.477: INFO: ResourceQuota "e2e-rq-status-b9r5r" Spec was unchanged and /status reset
  Oct 28 13:51:46.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3237" for this suite. @ 10/28/23 13:51:46.483
• [295.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 10/28/23 13:51:46.492
  Oct 28 13:51:46.492: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename controllerrevisions @ 10/28/23 13:51:46.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:51:46.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:51:46.523
  STEP: Creating DaemonSet "e2e-7vjkx-daemon-set" @ 10/28/23 13:51:46.547
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/28/23 13:51:46.554
  Oct 28 13:51:46.559: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:51:46.559: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:51:46.563: INFO: Number of nodes with available pods controlled by daemonset e2e-7vjkx-daemon-set: 0
  Oct 28 13:51:46.563: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 13:51:47.567: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:51:47.568: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:51:47.571: INFO: Number of nodes with available pods controlled by daemonset e2e-7vjkx-daemon-set: 0
  Oct 28 13:51:47.571: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  Oct 28 13:51:48.569: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:51:48.569: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 13:51:48.574: INFO: Number of nodes with available pods controlled by daemonset e2e-7vjkx-daemon-set: 3
  Oct 28 13:51:48.574: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-7vjkx-daemon-set
  STEP: Confirm DaemonSet "e2e-7vjkx-daemon-set" successfully created with "daemonset-name=e2e-7vjkx-daemon-set" label @ 10/28/23 13:51:48.577
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-7vjkx-daemon-set" @ 10/28/23 13:51:48.585
  Oct 28 13:51:48.589: INFO: Located ControllerRevision: "e2e-7vjkx-daemon-set-6c8bb9765"
  STEP: Patching ControllerRevision "e2e-7vjkx-daemon-set-6c8bb9765" @ 10/28/23 13:51:48.592
  Oct 28 13:51:48.599: INFO: e2e-7vjkx-daemon-set-6c8bb9765 has been patched
  STEP: Create a new ControllerRevision @ 10/28/23 13:51:48.599
  Oct 28 13:51:48.606: INFO: Created ControllerRevision: e2e-7vjkx-daemon-set-848d8cccbf
  STEP: Confirm that there are two ControllerRevisions @ 10/28/23 13:51:48.606
  Oct 28 13:51:48.606: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct 28 13:51:48.609: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-7vjkx-daemon-set-6c8bb9765" @ 10/28/23 13:51:48.609
  STEP: Confirm that there is only one ControllerRevision @ 10/28/23 13:51:48.615
  Oct 28 13:51:48.616: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct 28 13:51:48.618: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-7vjkx-daemon-set-848d8cccbf" @ 10/28/23 13:51:48.622
  Oct 28 13:51:48.631: INFO: e2e-7vjkx-daemon-set-848d8cccbf has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 10/28/23 13:51:48.631
  W1028 13:51:48.637893      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 10/28/23 13:51:48.638
  Oct 28 13:51:48.638: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct 28 13:51:49.642: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct 28 13:51:49.646: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-7vjkx-daemon-set-848d8cccbf=updated" @ 10/28/23 13:51:49.646
  STEP: Confirm that there is only one ControllerRevision @ 10/28/23 13:51:49.655
  Oct 28 13:51:49.655: INFO: Requesting list of ControllerRevisions to confirm quantity
  Oct 28 13:51:49.658: INFO: Found 1 ControllerRevisions
  Oct 28 13:51:49.662: INFO: ControllerRevision "e2e-7vjkx-daemon-set-767bf56fbd" has revision 3
  STEP: Deleting DaemonSet "e2e-7vjkx-daemon-set" @ 10/28/23 13:51:49.666
  STEP: deleting DaemonSet.extensions e2e-7vjkx-daemon-set in namespace controllerrevisions-4424, will wait for the garbage collector to delete the pods @ 10/28/23 13:51:49.666
  Oct 28 13:51:49.726: INFO: Deleting DaemonSet.extensions e2e-7vjkx-daemon-set took: 7.076305ms
  Oct 28 13:51:49.827: INFO: Terminating DaemonSet.extensions e2e-7vjkx-daemon-set pods took: 100.787421ms
  Oct 28 13:51:52.132: INFO: Number of nodes with available pods controlled by daemonset e2e-7vjkx-daemon-set: 0
  Oct 28 13:51:52.132: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-7vjkx-daemon-set
  Oct 28 13:51:52.136: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38188"},"items":null}

  Oct 28 13:51:52.138: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38188"},"items":null}

  Oct 28 13:51:52.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-4424" for this suite. @ 10/28/23 13:51:52.157
• [5.673 seconds]
------------------------------
S
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 10/28/23 13:51:52.166
  Oct 28 13:51:52.166: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 13:51:52.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:51:52.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:51:52.186
  Oct 28 13:51:52.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2866" for this suite. @ 10/28/23 13:51:52.198
• [0.041 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 10/28/23 13:51:52.208
  Oct 28 13:51:52.208: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-runtime @ 10/28/23 13:51:52.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:51:52.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:51:52.224
  STEP: create the container @ 10/28/23 13:51:52.228
  W1028 13:51:52.239196      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/28/23 13:51:52.239
  STEP: get the container status @ 10/28/23 13:51:55.261
  STEP: the container should be terminated @ 10/28/23 13:51:55.265
  STEP: the termination message should be set @ 10/28/23 13:51:55.266
  Oct 28 13:51:55.266: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 10/28/23 13:51:55.266
  Oct 28 13:51:55.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7488" for this suite. @ 10/28/23 13:51:55.287
• [3.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 10/28/23 13:51:55.296
  Oct 28 13:51:55.296: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename cronjob @ 10/28/23 13:51:55.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:51:55.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:51:55.316
  STEP: Creating a cronjob @ 10/28/23 13:51:55.319
  STEP: Ensuring more than one job is running at a time @ 10/28/23 13:51:55.326
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 10/28/23 13:53:01.329
  STEP: Removing cronjob @ 10/28/23 13:53:01.332
  Oct 28 13:53:01.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5780" for this suite. @ 10/28/23 13:53:01.346
• [66.058 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 10/28/23 13:53:01.356
  Oct 28 13:53:01.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename runtimeclass @ 10/28/23 13:53:01.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:53:01.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:53:01.385
  Oct 28 13:53:01.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1646" for this suite. @ 10/28/23 13:53:01.401
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 10/28/23 13:53:01.412
  Oct 28 13:53:01.412: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pods @ 10/28/23 13:53:01.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:53:01.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:53:01.431
  Oct 28 13:53:01.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: creating the pod @ 10/28/23 13:53:01.434
  STEP: submitting the pod to kubernetes @ 10/28/23 13:53:01.434
  Oct 28 13:53:03.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1786" for this suite. @ 10/28/23 13:53:03.486
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 10/28/23 13:53:03.495
  Oct 28 13:53:03.495: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename job @ 10/28/23 13:53:03.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:53:03.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:53:03.521
  STEP: Creating a job @ 10/28/23 13:53:03.524
  STEP: Ensuring job reaches completions @ 10/28/23 13:53:03.53
  Oct 28 13:53:13.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1307" for this suite. @ 10/28/23 13:53:13.541
• [10.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 10/28/23 13:53:13.55
  Oct 28 13:53:13.550: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename init-container @ 10/28/23 13:53:13.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:53:13.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:53:13.572
  STEP: creating the pod @ 10/28/23 13:53:13.575
  Oct 28 13:53:13.575: INFO: PodSpec: initContainers in spec.initContainers
  Oct 28 13:53:17.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3618" for this suite. @ 10/28/23 13:53:17.078
• [3.535 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 10/28/23 13:53:17.085
  Oct 28 13:53:17.085: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 13:53:17.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:53:17.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:53:17.102
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-355 @ 10/28/23 13:53:17.105
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/28/23 13:53:17.123
  STEP: creating service externalsvc in namespace services-355 @ 10/28/23 13:53:17.123
  STEP: creating replication controller externalsvc in namespace services-355 @ 10/28/23 13:53:17.145
  I1028 13:53:17.157755      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-355, replica count: 2
  I1028 13:53:20.209358      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 10/28/23 13:53:20.213
  Oct 28 13:53:20.235: INFO: Creating new exec pod
  Oct 28 13:53:22.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-355 exec execpodcq6sq -- /bin/sh -x -c nslookup nodeport-service.services-355.svc.cluster.local'
  Oct 28 13:53:22.428: INFO: stderr: "+ nslookup nodeport-service.services-355.svc.cluster.local\n"
  Oct 28 13:53:22.428: INFO: stdout: "Server:\t\t10.152.183.20\nAddress:\t10.152.183.20#53\n\nnodeport-service.services-355.svc.cluster.local\tcanonical name = externalsvc.services-355.svc.cluster.local.\nName:\texternalsvc.services-355.svc.cluster.local\nAddress: 10.152.183.143\n\n"
  Oct 28 13:53:22.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-355, will wait for the garbage collector to delete the pods @ 10/28/23 13:53:22.434
  Oct 28 13:53:22.496: INFO: Deleting ReplicationController externalsvc took: 6.990828ms
  Oct 28 13:53:22.596: INFO: Terminating ReplicationController externalsvc pods took: 100.319273ms
  Oct 28 13:53:25.015: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-355" for this suite. @ 10/28/23 13:53:25.028
• [7.953 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 10/28/23 13:53:25.038
  Oct 28 13:53:25.038: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename replication-controller @ 10/28/23 13:53:25.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:53:25.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:53:25.061
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 10/28/23 13:53:25.064
  STEP: When a replication controller with a matching selector is created @ 10/28/23 13:53:27.087
  STEP: Then the orphan pod is adopted @ 10/28/23 13:53:27.094
  Oct 28 13:53:28.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9885" for this suite. @ 10/28/23 13:53:28.112
• [3.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 10/28/23 13:53:28.133
  Oct 28 13:53:28.133: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename field-validation @ 10/28/23 13:53:28.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:53:28.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:53:28.154
  Oct 28 13:53:28.157: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  W1028 13:53:28.158700      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc005db75f0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W1028 13:53:30.720248      19 warnings.go:70] unknown field "alpha"
  W1028 13:53:30.720269      19 warnings.go:70] unknown field "beta"
  W1028 13:53:30.720275      19 warnings.go:70] unknown field "delta"
  W1028 13:53:30.720281      19 warnings.go:70] unknown field "epsilon"
  W1028 13:53:30.720286      19 warnings.go:70] unknown field "gamma"
  Oct 28 13:53:31.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9502" for this suite. @ 10/28/23 13:53:31.272
• [3.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 10/28/23 13:53:31.283
  Oct 28 13:53:31.283: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename cronjob @ 10/28/23 13:53:31.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:53:31.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:53:31.301
  STEP: Creating a ForbidConcurrent cronjob @ 10/28/23 13:53:31.305
  STEP: Ensuring a job is scheduled @ 10/28/23 13:53:31.312
  STEP: Ensuring exactly one is scheduled @ 10/28/23 13:54:01.318
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/28/23 13:54:01.321
  STEP: Ensuring no more jobs are scheduled @ 10/28/23 13:54:01.325
  STEP: Removing cronjob @ 10/28/23 13:59:01.334
  Oct 28 13:59:01.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5232" for this suite. @ 10/28/23 13:59:01.347
• [330.074 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 10/28/23 13:59:01.357
  Oct 28 13:59:01.357: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename resourcequota @ 10/28/23 13:59:01.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:59:01.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:59:01.382
  STEP: Creating a ResourceQuota @ 10/28/23 13:59:01.386
  STEP: Getting a ResourceQuota @ 10/28/23 13:59:01.391
  STEP: Updating a ResourceQuota @ 10/28/23 13:59:01.399
  STEP: Verifying a ResourceQuota was modified @ 10/28/23 13:59:01.404
  STEP: Deleting a ResourceQuota @ 10/28/23 13:59:01.41
  STEP: Verifying the deleted ResourceQuota @ 10/28/23 13:59:01.417
  Oct 28 13:59:01.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9175" for this suite. @ 10/28/23 13:59:01.423
• [0.073 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 10/28/23 13:59:01.431
  Oct 28 13:59:01.431: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 13:59:01.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:59:01.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:59:01.449
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 13:59:01.452
  STEP: Saw pod success @ 10/28/23 13:59:05.483
  Oct 28 13:59:05.486: INFO: Trying to get logs from node ip-172-31-20-72 pod downwardapi-volume-1cd8545c-6eb9-47aa-857e-081f25d34514 container client-container: <nil>
  STEP: delete the pod @ 10/28/23 13:59:05.505
  Oct 28 13:59:05.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4473" for this suite. @ 10/28/23 13:59:05.527
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 10/28/23 13:59:05.536
  Oct 28 13:59:05.536: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename replicaset @ 10/28/23 13:59:05.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:59:05.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:59:05.558
  STEP: Create a ReplicaSet @ 10/28/23 13:59:05.561
  STEP: Verify that the required pods have come up @ 10/28/23 13:59:05.567
  Oct 28 13:59:05.571: INFO: Pod name sample-pod: Found 0 pods out of 3
  Oct 28 13:59:10.576: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 10/28/23 13:59:10.576
  Oct 28 13:59:10.580: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 10/28/23 13:59:10.581
  STEP: DeleteCollection of the ReplicaSets @ 10/28/23 13:59:10.584
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 10/28/23 13:59:10.594
  Oct 28 13:59:10.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4970" for this suite. @ 10/28/23 13:59:10.603
• [5.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 10/28/23 13:59:10.617
  Oct 28 13:59:10.618: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename endpointslice @ 10/28/23 13:59:10.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:59:10.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:59:10.643
  STEP: referencing a single matching pod @ 10/28/23 13:59:15.733
  STEP: referencing matching pods with named port @ 10/28/23 13:59:20.741
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 10/28/23 13:59:25.748
  STEP: recreating EndpointSlices after they've been deleted @ 10/28/23 13:59:30.757
  Oct 28 13:59:30.780: INFO: EndpointSlice for Service endpointslice-4268/example-named-port not found
  Oct 28 13:59:40.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4268" for this suite. @ 10/28/23 13:59:40.792
• [30.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 10/28/23 13:59:40.803
  Oct 28 13:59:40.803: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename ingress @ 10/28/23 13:59:40.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:59:40.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:59:40.825
  STEP: getting /apis @ 10/28/23 13:59:40.828
  STEP: getting /apis/networking.k8s.io @ 10/28/23 13:59:40.832
  STEP: getting /apis/networking.k8s.iov1 @ 10/28/23 13:59:40.833
  STEP: creating @ 10/28/23 13:59:40.834
  STEP: getting @ 10/28/23 13:59:40.855
  STEP: listing @ 10/28/23 13:59:40.86
  STEP: watching @ 10/28/23 13:59:40.864
  Oct 28 13:59:40.865: INFO: starting watch
  STEP: cluster-wide listing @ 10/28/23 13:59:40.867
  STEP: cluster-wide watching @ 10/28/23 13:59:40.87
  Oct 28 13:59:40.871: INFO: starting watch
  STEP: patching @ 10/28/23 13:59:40.873
  STEP: updating @ 10/28/23 13:59:40.88
  Oct 28 13:59:40.890: INFO: waiting for watch events with expected annotations
  Oct 28 13:59:40.891: INFO: saw patched and updated annotations
  STEP: patching /status @ 10/28/23 13:59:40.891
  STEP: updating /status @ 10/28/23 13:59:41.015
  STEP: get /status @ 10/28/23 13:59:41.028
  STEP: deleting @ 10/28/23 13:59:41.037
  STEP: deleting a collection @ 10/28/23 13:59:41.052
  Oct 28 13:59:41.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3585" for this suite. @ 10/28/23 13:59:41.074
• [0.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 10/28/23 13:59:41.084
  Oct 28 13:59:41.084: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/28/23 13:59:41.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:59:41.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:59:41.101
  Oct 28 13:59:43.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 10/28/23 13:59:43.157
  STEP: Cleaning up the configmap @ 10/28/23 13:59:43.163
  STEP: Cleaning up the pod @ 10/28/23 13:59:43.171
  STEP: Destroying namespace "emptydir-wrapper-3924" for this suite. @ 10/28/23 13:59:43.183
• [2.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 10/28/23 13:59:43.19
  Oct 28 13:59:43.190: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename container-probe @ 10/28/23 13:59:43.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 13:59:43.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 13:59:43.21
  STEP: Creating pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152 @ 10/28/23 13:59:43.214
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/28/23 13:59:45.234
  Oct 28 13:59:45.238: INFO: Initial restart count of pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 is 0
  Oct 28 13:59:45.241: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 13:59:47.245: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 13:59:49.251: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 13:59:51.257: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 13:59:53.262: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 13:59:55.266: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 13:59:57.271: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 13:59:59.275: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:01.280: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:03.286: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:05.291: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:07.296: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:09.303: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:11.309: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:13.313: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:15.317: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:17.322: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:19.327: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:21.333: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:23.337: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:25.341: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:27.345: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:29.351: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:31.356: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:33.359: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:35.365: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:37.369: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:39.374: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:41.379: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:43.384: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:45.389: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:47.394: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:49.400: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:51.405: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:53.412: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:55.417: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:57.422: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:00:59.426: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:01.432: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:03.436: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:05.441: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:07.445: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:09.451: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:11.456: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:13.459: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:15.464: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:17.468: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:19.472: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:21.477: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:23.481: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:25.487: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:27.491: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:29.496: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:31.501: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:33.505: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:35.509: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:37.513: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:39.517: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:41.522: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:43.528: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:45.532: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:47.537: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:49.542: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:51.547: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:53.552: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:55.558: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:57.562: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:01:59.567: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:01.572: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:03.578: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:05.589: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:07.595: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:09.599: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:11.605: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:13.610: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:15.615: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:17.620: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:19.624: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:21.630: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:23.634: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:25.638: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:27.643: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:29.648: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:31.653: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:33.659: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:35.665: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:37.670: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:39.675: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:41.681: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:43.687: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:45.692: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:47.696: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:49.701: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:51.706: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:53.713: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:55.718: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:57.722: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:02:59.726: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:01.732: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:03.737: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:05.742: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:07.746: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:09.752: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:11.757: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:13.761: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:15.767: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:17.771: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:19.776: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:21.781: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:23.786: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:25.790: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:27.795: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:29.799: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:31.805: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:33.809: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:35.815: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:37.820: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:39.825: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:41.829: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:43.834: INFO: Get pod liveness-dbb67101-bf44-4c57-871c-b5076c843be7 in namespace container-probe-2152
  Oct 28 14:03:45.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 14:03:45.84
  STEP: Destroying namespace "container-probe-2152" for this suite. @ 10/28/23 14:03:45.853
• [242.670 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 10/28/23 14:03:45.862
  Oct 28 14:03:45.862: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename replication-controller @ 10/28/23 14:03:45.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:03:45.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:03:45.883
  STEP: creating a ReplicationController @ 10/28/23 14:03:45.891
  STEP: waiting for RC to be added @ 10/28/23 14:03:45.898
  STEP: waiting for available Replicas @ 10/28/23 14:03:45.898
  STEP: patching ReplicationController @ 10/28/23 14:03:47.019
  STEP: waiting for RC to be modified @ 10/28/23 14:03:47.028
  STEP: patching ReplicationController status @ 10/28/23 14:03:47.028
  STEP: waiting for RC to be modified @ 10/28/23 14:03:47.036
  STEP: waiting for available Replicas @ 10/28/23 14:03:47.036
  STEP: fetching ReplicationController status @ 10/28/23 14:03:47.042
  STEP: patching ReplicationController scale @ 10/28/23 14:03:47.047
  STEP: waiting for RC to be modified @ 10/28/23 14:03:47.054
  STEP: waiting for ReplicationController's scale to be the max amount @ 10/28/23 14:03:47.054
  STEP: fetching ReplicationController; ensuring that it's patched @ 10/28/23 14:03:48.169
  STEP: updating ReplicationController status @ 10/28/23 14:03:48.173
  STEP: waiting for RC to be modified @ 10/28/23 14:03:48.182
  STEP: listing all ReplicationControllers @ 10/28/23 14:03:48.182
  STEP: checking that ReplicationController has expected values @ 10/28/23 14:03:48.186
  STEP: deleting ReplicationControllers by collection @ 10/28/23 14:03:48.186
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 10/28/23 14:03:48.2
  Oct 28 14:03:48.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1028 14:03:48.260395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-675" for this suite. @ 10/28/23 14:03:48.263
• [2.410 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 10/28/23 14:03:48.273
  Oct 28 14:03:48.273: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename dns @ 10/28/23 14:03:48.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:03:48.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:03:48.294
  STEP: Creating a test headless service @ 10/28/23 14:03:48.297
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3979.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-3979.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 10/28/23 14:03:48.302
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3979.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3979.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 10/28/23 14:03:48.302
  STEP: creating a pod to probe DNS @ 10/28/23 14:03:48.302
  STEP: submitting the pod to kubernetes @ 10/28/23 14:03:48.302
  E1028 14:03:49.260769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:03:50.260866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/28/23 14:03:50.328
  STEP: looking for the results for each expected name from probers @ 10/28/23 14:03:50.332
  Oct 28 14:03:50.351: INFO: DNS probes using dns-3979/dns-test-df221c1c-38d0-49be-a91d-9fdb35811bbe succeeded

  Oct 28 14:03:50.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 14:03:50.355
  STEP: deleting the test headless service @ 10/28/23 14:03:50.368
  STEP: Destroying namespace "dns-3979" for this suite. @ 10/28/23 14:03:50.385
• [2.121 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 10/28/23 14:03:50.394
  Oct 28 14:03:50.394: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 14:03:50.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:03:50.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:03:50.414
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 14:03:50.417
  E1028 14:03:51.260950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:03:52.261173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:03:53.261469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:03:54.261940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/28/23 14:03:54.44
  Oct 28 14:03:54.444: INFO: Trying to get logs from node ip-172-31-37-29 pod downwardapi-volume-159d0dff-3444-4ca3-bbee-2f0afcf9203d container client-container: <nil>
  STEP: delete the pod @ 10/28/23 14:03:54.465
  Oct 28 14:03:54.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4667" for this suite. @ 10/28/23 14:03:54.484
• [4.097 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 10/28/23 14:03:54.491
  Oct 28 14:03:54.491: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename namespaces @ 10/28/23 14:03:54.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:03:54.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:03:54.515
  STEP: Read namespace status @ 10/28/23 14:03:54.518
  Oct 28 14:03:54.521: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 10/28/23 14:03:54.522
  Oct 28 14:03:54.528: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 10/28/23 14:03:54.528
  Oct 28 14:03:54.537: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Oct 28 14:03:54.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9038" for this suite. @ 10/28/23 14:03:54.541
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 10/28/23 14:03:54.551
  Oct 28 14:03:54.551: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename ingressclass @ 10/28/23 14:03:54.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:03:54.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:03:54.569
  STEP: getting /apis @ 10/28/23 14:03:54.573
  STEP: getting /apis/networking.k8s.io @ 10/28/23 14:03:54.579
  STEP: getting /apis/networking.k8s.iov1 @ 10/28/23 14:03:54.581
  STEP: creating @ 10/28/23 14:03:54.582
  STEP: getting @ 10/28/23 14:03:54.598
  STEP: listing @ 10/28/23 14:03:54.601
  STEP: watching @ 10/28/23 14:03:54.604
  Oct 28 14:03:54.604: INFO: starting watch
  STEP: patching @ 10/28/23 14:03:54.606
  STEP: updating @ 10/28/23 14:03:54.612
  Oct 28 14:03:54.617: INFO: waiting for watch events with expected annotations
  Oct 28 14:03:54.617: INFO: saw patched and updated annotations
  STEP: deleting @ 10/28/23 14:03:54.617
  STEP: deleting a collection @ 10/28/23 14:03:54.629
  Oct 28 14:03:54.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8971" for this suite. @ 10/28/23 14:03:54.651
• [0.107 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 10/28/23 14:03:54.659
  Oct 28 14:03:54.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename disruption @ 10/28/23 14:03:54.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:03:54.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:03:54.677
  STEP: Creating a kubernetes client @ 10/28/23 14:03:54.681
  Oct 28 14:03:54.681: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename disruption-2 @ 10/28/23 14:03:54.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:03:54.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:03:54.702
  STEP: Waiting for the pdb to be processed @ 10/28/23 14:03:54.71
  E1028 14:03:55.261985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:03:56.262084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 10/28/23 14:03:56.724
  STEP: Waiting for the pdb to be processed @ 10/28/23 14:03:56.737
  STEP: listing a collection of PDBs across all namespaces @ 10/28/23 14:03:56.741
  STEP: listing a collection of PDBs in namespace disruption-2512 @ 10/28/23 14:03:56.746
  STEP: deleting a collection of PDBs @ 10/28/23 14:03:56.75
  STEP: Waiting for the PDB collection to be deleted @ 10/28/23 14:03:56.763
  Oct 28 14:03:56.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 28 14:03:56.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-2623" for this suite. @ 10/28/23 14:03:56.774
  STEP: Destroying namespace "disruption-2512" for this suite. @ 10/28/23 14:03:56.78
• [2.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 10/28/23 14:03:56.792
  Oct 28 14:03:56.792: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 14:03:56.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:03:56.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:03:56.813
  STEP: Creating a pod to test downward API volume plugin @ 10/28/23 14:03:56.816
  E1028 14:03:57.262176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:03:58.262260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:03:59.262928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:00.263033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/28/23 14:04:00.838
  Oct 28 14:04:00.843: INFO: Trying to get logs from node ip-172-31-37-29 pod downwardapi-volume-4f5e0f5f-5158-4695-b0a1-ac89db17cc5e container client-container: <nil>
  STEP: delete the pod @ 10/28/23 14:04:00.849
  Oct 28 14:04:00.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9856" for this suite. @ 10/28/23 14:04:00.868
• [4.083 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 10/28/23 14:04:00.875
  Oct 28 14:04:00.875: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/28/23 14:04:00.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:04:00.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:04:00.895
  STEP: Creating two CSIDrivers @ 10/28/23 14:04:00.898
  STEP: Getting "inline-driver-1a63eaec-3f49-49a6-ac40-93fea27dbcca" & "inline-driver-110633d1-1190-4e46-be6e-39772176fa52" @ 10/28/23 14:04:00.92
  STEP: Patching the CSIDriver "inline-driver-110633d1-1190-4e46-be6e-39772176fa52" @ 10/28/23 14:04:00.927
  STEP: Updating the CSIDriver "inline-driver-110633d1-1190-4e46-be6e-39772176fa52" @ 10/28/23 14:04:00.937
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9032" @ 10/28/23 14:04:00.944
  STEP: Deleting CSIDriver "inline-driver-1a63eaec-3f49-49a6-ac40-93fea27dbcca" @ 10/28/23 14:04:00.948
  STEP: Confirm deletion of CSIDriver "inline-driver-1a63eaec-3f49-49a6-ac40-93fea27dbcca" @ 10/28/23 14:04:00.954
  STEP: Deleting CSIDriver "inline-driver-110633d1-1190-4e46-be6e-39772176fa52" via DeleteCollection @ 10/28/23 14:04:00.957
  STEP: Confirm deletion of CSIDriver "inline-driver-110633d1-1190-4e46-be6e-39772176fa52" @ 10/28/23 14:04:00.967
  Oct 28 14:04:00.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9032" for this suite. @ 10/28/23 14:04:00.975
• [0.106 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 10/28/23 14:04:00.981
  Oct 28 14:04:00.981: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 14:04:00.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:04:00.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:04:01
  STEP: creating service in namespace services-4549 @ 10/28/23 14:04:01.003
  STEP: creating service affinity-nodeport-transition in namespace services-4549 @ 10/28/23 14:04:01.003
  STEP: creating replication controller affinity-nodeport-transition in namespace services-4549 @ 10/28/23 14:04:01.023
  I1028 14:04:01.043266      19 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-4549, replica count: 3
  E1028 14:04:01.263672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:02.263756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:03.263880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1028 14:04:04.093536      19 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 28 14:04:04.106: INFO: Creating new exec pod
  E1028 14:04:04.265448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:05.265441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:06.266187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:04:07.128: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-4549 exec execpod-affinityhkhms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E1028 14:04:07.267208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:04:07.274: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Oct 28 14:04:07.274: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 14:04:07.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-4549 exec execpod-affinityhkhms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.28 80'
  Oct 28 14:04:07.416: INFO: stderr: "+ nc -v -t -w 2 10.152.183.28 80\n+ echo hostName\nConnection to 10.152.183.28 80 port [tcp/http] succeeded!\n"
  Oct 28 14:04:07.416: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 14:04:07.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-4549 exec execpod-affinityhkhms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.72 30295'
  Oct 28 14:04:07.552: INFO: stderr: "+ nc -v -t -w 2 172.31.20.72 30295\n+ echo hostName\nConnection to 172.31.20.72 30295 port [tcp/*] succeeded!\n"
  Oct 28 14:04:07.552: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 14:04:07.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-4549 exec execpod-affinityhkhms -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.226 30295'
  Oct 28 14:04:07.700: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.5.226 30295\nConnection to 172.31.5.226 30295 port [tcp/*] succeeded!\n"
  Oct 28 14:04:07.700: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Oct 28 14:04:07.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-4549 exec execpod-affinityhkhms -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.20.72:30295/ ; done'
  Oct 28 14:04:07.956: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n"
  Oct 28 14:04:07.956: INFO: stdout: "\naffinity-nodeport-transition-p82d8\naffinity-nodeport-transition-p82d8\naffinity-nodeport-transition-p82d8\naffinity-nodeport-transition-p82d8\naffinity-nodeport-transition-p82d8\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-p82d8\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-p82d8\naffinity-nodeport-transition-p82d8\naffinity-nodeport-transition-6725x\naffinity-nodeport-transition-6725x\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-p82d8\naffinity-nodeport-transition-47mlv"
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-p82d8
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-p82d8
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-p82d8
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-p82d8
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-p82d8
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-p82d8
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-p82d8
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-p82d8
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-6725x
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-6725x
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-p82d8
  Oct 28 14:04:07.956: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:07.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-4549 exec execpod-affinityhkhms -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.20.72:30295/ ; done'
  Oct 28 14:04:08.209: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.72:30295/\n"
  Oct 28 14:04:08.209: INFO: stdout: "\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv\naffinity-nodeport-transition-47mlv"
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Received response from host: affinity-nodeport-transition-47mlv
  Oct 28 14:04:08.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 28 14:04:08.214: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4549, will wait for the garbage collector to delete the pods @ 10/28/23 14:04:08.227
  E1028 14:04:08.268136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:04:08.290: INFO: Deleting ReplicationController affinity-nodeport-transition took: 9.298768ms
  Oct 28 14:04:08.391: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.349377ms
  E1028 14:04:09.268871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:10.269136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:11.270051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-4549" for this suite. @ 10/28/23 14:04:11.618
• [10.644 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 10/28/23 14:04:11.625
  Oct 28 14:04:11.625: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename job @ 10/28/23 14:04:11.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:04:11.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:04:11.647
  STEP: Creating a job @ 10/28/23 14:04:11.65
  STEP: Ensuring active pods == parallelism @ 10/28/23 14:04:11.655
  E1028 14:04:12.270153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:13.270264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 10/28/23 14:04:13.659
  STEP: deleting Job.batch foo in namespace job-9292, will wait for the garbage collector to delete the pods @ 10/28/23 14:04:13.659
  Oct 28 14:04:13.720: INFO: Deleting Job.batch foo took: 7.475488ms
  Oct 28 14:04:13.820: INFO: Terminating Job.batch foo pods took: 100.36672ms
  E1028 14:04:14.270891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:15.271522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:16.271865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:17.272141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:18.272416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:19.272755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:20.272848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:21.273085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:22.273304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:23.273547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:24.274193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:25.274472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:26.274561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:27.274825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:28.275092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:29.275385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:30.275626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:31.275697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:32.275912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:33.276064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:34.276652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:35.276875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:36.277156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:37.277515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:38.277669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:39.278064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:40.278236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:41.278557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:42.278752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:43.278838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:44.279408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:45.280127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 10/28/23 14:04:45.321
  Oct 28 14:04:45.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9292" for this suite. @ 10/28/23 14:04:45.33
• [33.713 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 10/28/23 14:04:45.339
  Oct 28 14:04:45.339: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename daemonsets @ 10/28/23 14:04:45.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:04:45.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:04:45.368
  STEP: Creating simple DaemonSet "daemon-set" @ 10/28/23 14:04:45.397
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/28/23 14:04:45.404
  Oct 28 14:04:45.411: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:45.411: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:45.415: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 14:04:45.415: INFO: Node ip-172-31-20-72 is running 0 daemon pod, expected 1
  E1028 14:04:46.280451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:04:46.419: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:46.420: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:46.424: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Oct 28 14:04:46.424: INFO: Node ip-172-31-37-29 is running 0 daemon pod, expected 1
  E1028 14:04:47.280420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:04:47.420: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:47.420: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:47.424: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 28 14:04:47.424: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 10/28/23 14:04:47.427
  Oct 28 14:04:47.444: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:47.444: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:47.447: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 28 14:04:47.447: INFO: Node ip-172-31-37-29 is running 0 daemon pod, expected 1
  E1028 14:04:48.280521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:04:48.453: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:48.453: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:48.457: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 28 14:04:48.457: INFO: Node ip-172-31-37-29 is running 0 daemon pod, expected 1
  E1028 14:04:49.280623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:04:49.453: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:49.453: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:49.457: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 28 14:04:49.457: INFO: Node ip-172-31-37-29 is running 0 daemon pod, expected 1
  E1028 14:04:50.281036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:04:50.452: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:50.452: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:50.457: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Oct 28 14:04:50.457: INFO: Node ip-172-31-37-29 is running 0 daemon pod, expected 1
  E1028 14:04:51.282010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:04:51.452: INFO: DaemonSet pods can't tolerate node ip-172-31-15-112 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:51.453: INFO: DaemonSet pods can't tolerate node ip-172-31-77-5 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Oct 28 14:04:51.457: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Oct 28 14:04:51.457: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/28/23 14:04:51.461
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3126, will wait for the garbage collector to delete the pods @ 10/28/23 14:04:51.461
  Oct 28 14:04:51.523: INFO: Deleting DaemonSet.extensions daemon-set took: 8.922366ms
  Oct 28 14:04:51.623: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.450058ms
  E1028 14:04:52.282407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:53.283149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:54.284122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:04:54.328: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Oct 28 14:04:54.328: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Oct 28 14:04:54.331: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41280"},"items":null}

  Oct 28 14:04:54.335: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41280"},"items":null}

  Oct 28 14:04:54.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3126" for this suite. @ 10/28/23 14:04:54.353
• [9.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 10/28/23 14:04:54.361
  Oct 28 14:04:54.361: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename pods @ 10/28/23 14:04:54.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:04:54.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:04:54.379
  STEP: creating the pod @ 10/28/23 14:04:54.386
  STEP: submitting the pod to kubernetes @ 10/28/23 14:04:54.386
  W1028 14:04:54.395552      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1028 14:04:55.284199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:56.284410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 10/28/23 14:04:56.409
  STEP: updating the pod @ 10/28/23 14:04:56.413
  Oct 28 14:04:56.925: INFO: Successfully updated pod "pod-update-activedeadlineseconds-899f930a-fc29-4089-a073-f0f1103a4eca"
  E1028 14:04:57.285042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:58.285326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:04:59.285419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:00.285451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:00.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2273" for this suite. @ 10/28/23 14:05:00.943
• [6.590 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 10/28/23 14:05:00.953
  Oct 28 14:05:00.953: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename deployment @ 10/28/23 14:05:00.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:05:00.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:05:00.972
  STEP: creating a Deployment @ 10/28/23 14:05:00.979
  STEP: waiting for Deployment to be created @ 10/28/23 14:05:00.986
  STEP: waiting for all Replicas to be Ready @ 10/28/23 14:05:00.987
  Oct 28 14:05:00.989: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 28 14:05:00.989: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 28 14:05:01.006: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 28 14:05:01.006: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 28 14:05:01.023: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 28 14:05:01.023: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 28 14:05:01.050: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Oct 28 14:05:01.050: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1028 14:05:01.285531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:02.241: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Oct 28 14:05:02.241: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E1028 14:05:02.286378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:02.397: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 10/28/23 14:05:02.397
  Oct 28 14:05:02.409: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 10/28/23 14:05:02.409
  Oct 28 14:05:02.411: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0
  Oct 28 14:05:02.411: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0
  Oct 28 14:05:02.412: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0
  Oct 28 14:05:02.412: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0
  Oct 28 14:05:02.412: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0
  Oct 28 14:05:02.412: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0
  Oct 28 14:05:02.412: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0
  Oct 28 14:05:02.412: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 0
  Oct 28 14:05:02.412: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1
  Oct 28 14:05:02.412: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1
  Oct 28 14:05:02.413: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2
  Oct 28 14:05:02.413: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2
  Oct 28 14:05:02.413: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2
  Oct 28 14:05:02.413: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2
  Oct 28 14:05:02.423: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2
  Oct 28 14:05:02.423: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2
  Oct 28 14:05:02.438: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2
  Oct 28 14:05:02.438: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2
  Oct 28 14:05:02.457: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1
  Oct 28 14:05:02.457: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1
  Oct 28 14:05:02.483: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1
  Oct 28 14:05:02.483: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1
  Oct 28 14:05:03.256: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2
  Oct 28 14:05:03.256: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2
  Oct 28 14:05:03.286: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1
  STEP: listing Deployments @ 10/28/23 14:05:03.286
  E1028 14:05:03.286555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:03.292: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 10/28/23 14:05:03.292
  Oct 28 14:05:03.307: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 10/28/23 14:05:03.307
  Oct 28 14:05:03.320: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 28 14:05:03.320: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 28 14:05:03.567: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 28 14:05:03.640: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 28 14:05:03.667: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Oct 28 14:05:04.270: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1028 14:05:04.286822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:04.314: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1028 14:05:05.286876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:05.361: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 10/28/23 14:05:05.407
  STEP: fetching the DeploymentStatus @ 10/28/23 14:05:05.418
  Oct 28 14:05:05.425: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1
  Oct 28 14:05:05.425: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1
  Oct 28 14:05:05.425: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1
  Oct 28 14:05:05.425: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1
  Oct 28 14:05:05.425: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 1
  Oct 28 14:05:05.425: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2
  Oct 28 14:05:05.425: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 2
  Oct 28 14:05:05.426: INFO: observed Deployment test-deployment in namespace deployment-3093 with ReadyReplicas 3
  STEP: deleting the Deployment @ 10/28/23 14:05:05.426
  Oct 28 14:05:05.437: INFO: observed event type MODIFIED
  Oct 28 14:05:05.437: INFO: observed event type MODIFIED
  Oct 28 14:05:05.437: INFO: observed event type MODIFIED
  Oct 28 14:05:05.437: INFO: observed event type MODIFIED
  Oct 28 14:05:05.437: INFO: observed event type MODIFIED
  Oct 28 14:05:05.437: INFO: observed event type MODIFIED
  Oct 28 14:05:05.438: INFO: observed event type MODIFIED
  Oct 28 14:05:05.438: INFO: observed event type MODIFIED
  Oct 28 14:05:05.438: INFO: observed event type MODIFIED
  Oct 28 14:05:05.438: INFO: observed event type MODIFIED
  Oct 28 14:05:05.438: INFO: observed event type MODIFIED
  Oct 28 14:05:05.442: INFO: Log out all the ReplicaSets if there is no deployment created
  Oct 28 14:05:05.449: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3093",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5add1736-f0a0-49a5-8208-8a143181d1fe",
      ResourceVersion: (string) (len=5) "41436",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63834098700,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "27e42126-c87b-4a91-a028-58a5450876a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834098703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 37 65 34  32 31 32 36 2d 63 38 37  |":\"27e42126-c87|
              00000130  62 2d 34 61 39 31 2d 61  30 32 38 2d 35 38 61 35  |b-4a91-a028-58a5|
              00000140  34 35 30 38 37 36 61 35  5c 22 7d 22 3a 7b 7d 7d  |450876a5\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63834098703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Oct 28 14:05:05.461: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3093" for this suite. @ 10/28/23 14:05:05.467
• [4.521 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 10/28/23 14:05:05.474
  Oct 28 14:05:05.474: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 14:05:05.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:05:05.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:05:05.495
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8684 @ 10/28/23 14:05:05.498
  STEP: changing the ExternalName service to type=ClusterIP @ 10/28/23 14:05:05.504
  STEP: creating replication controller externalname-service in namespace services-8684 @ 10/28/23 14:05:05.52
  I1028 14:05:05.527564      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-8684, replica count: 2
  E1028 14:05:06.287367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:07.288356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:08.288785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1028 14:05:08.579047      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Oct 28 14:05:08.579: INFO: Creating new exec pod
  E1028 14:05:09.288828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:10.288911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:11.289470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:11.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-8684 exec execpod7jh2v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct 28 14:05:11.736: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct 28 14:05:11.736: INFO: stdout: ""
  E1028 14:05:12.290016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:12.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-8684 exec execpod7jh2v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct 28 14:05:12.873: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct 28 14:05:12.873: INFO: stdout: ""
  E1028 14:05:13.290108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:13.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-8684 exec execpod7jh2v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Oct 28 14:05:13.879: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Oct 28 14:05:13.879: INFO: stdout: "externalname-service-xtjnj"
  Oct 28 14:05:13.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-8684 exec execpod7jh2v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.73 80'
  Oct 28 14:05:14.052: INFO: stderr: "+ nc -v -t -w 2 10.152.183.73 80\n+ echo hostName\nConnection to 10.152.183.73 80 port [tcp/http] succeeded!\n"
  Oct 28 14:05:14.052: INFO: stdout: ""
  E1028 14:05:14.290275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:15.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=services-8684 exec execpod7jh2v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.73 80'
  Oct 28 14:05:15.191: INFO: stderr: "+ nc -v -t -w 2 10.152.183.73 80\n+ echo hostName\nConnection to 10.152.183.73 80 port [tcp/http] succeeded!\n"
  Oct 28 14:05:15.191: INFO: stdout: "externalname-service-xtjnj"
  Oct 28 14:05:15.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Oct 28 14:05:15.195: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-8684" for this suite. @ 10/28/23 14:05:15.219
• [9.751 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 10/28/23 14:05:15.226
  Oct 28 14:05:15.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename gc @ 10/28/23 14:05:15.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:05:15.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:05:15.248
  STEP: create the rc @ 10/28/23 14:05:15.255
  W1028 14:05:15.262072      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1028 14:05:15.291283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:16.300765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:17.301501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:18.301685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:19.302289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:20.302393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/28/23 14:05:21.266
  STEP: wait for the rc to be deleted @ 10/28/23 14:05:21.281
  E1028 14:05:21.302984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:22.319262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:22.334: INFO: 80 pods remaining
  Oct 28 14:05:22.334: INFO: 80 pods has nil DeletionTimestamp
  Oct 28 14:05:22.334: INFO: 
  Oct 28 14:05:23.295: INFO: 70 pods remaining
  Oct 28 14:05:23.296: INFO: 70 pods has nil DeletionTimestamp
  Oct 28 14:05:23.296: INFO: 
  E1028 14:05:23.320172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:24.333740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:24.374: INFO: 59 pods remaining
  Oct 28 14:05:24.374: INFO: 59 pods has nil DeletionTimestamp
  Oct 28 14:05:24.374: INFO: 
  Oct 28 14:05:25.301: INFO: 40 pods remaining
  Oct 28 14:05:25.301: INFO: 40 pods has nil DeletionTimestamp
  Oct 28 14:05:25.301: INFO: 
  E1028 14:05:25.335010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:26.295: INFO: 30 pods remaining
  Oct 28 14:05:26.295: INFO: 30 pods has nil DeletionTimestamp
  Oct 28 14:05:26.295: INFO: 
  E1028 14:05:26.341210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:27.301: INFO: 20 pods remaining
  Oct 28 14:05:27.302: INFO: 20 pods has nil DeletionTimestamp
  Oct 28 14:05:27.302: INFO: 
  E1028 14:05:27.341680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/28/23 14:05:28.297
  W1028 14:05:28.315821      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Oct 28 14:05:28.315: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Oct 28 14:05:28.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4640" for this suite. @ 10/28/23 14:05:28.334
  E1028 14:05:28.342815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [13.122 seconds]
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 10/28/23 14:05:28.348
  Oct 28 14:05:28.348: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename dns @ 10/28/23 14:05:28.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:05:28.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:05:28.408
  STEP: Creating a test headless service @ 10/28/23 14:05:28.412
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8220.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8220.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8220.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8220.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8220.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8220.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8220.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8220.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8220.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8220.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8220.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8220.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 80.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.80_udp@PTR;check="$$(dig +tcp +noall +answer +search 80.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.80_tcp@PTR;sleep 1; done
   @ 10/28/23 14:05:28.437
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8220.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8220.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8220.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8220.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8220.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8220.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8220.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8220.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8220.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8220.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8220.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8220.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 80.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.80_udp@PTR;check="$$(dig +tcp +noall +answer +search 80.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.80_tcp@PTR;sleep 1; done
   @ 10/28/23 14:05:28.437
  STEP: creating a pod to probe DNS @ 10/28/23 14:05:28.437
  STEP: submitting the pod to kubernetes @ 10/28/23 14:05:28.437
  E1028 14:05:29.346580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:30.347614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:31.347777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:32.352245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:33.353005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:34.353479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/28/23 14:05:34.512
  STEP: looking for the results for each expected name from probers @ 10/28/23 14:05:34.515
  Oct 28 14:05:34.522: INFO: Unable to read wheezy_udp@dns-test-service.dns-8220.svc.cluster.local from pod dns-8220/dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833: the server could not find the requested resource (get pods dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833)
  Oct 28 14:05:34.528: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8220.svc.cluster.local from pod dns-8220/dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833: the server could not find the requested resource (get pods dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833)
  Oct 28 14:05:34.534: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8220.svc.cluster.local from pod dns-8220/dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833: the server could not find the requested resource (get pods dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833)
  Oct 28 14:05:34.538: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8220.svc.cluster.local from pod dns-8220/dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833: the server could not find the requested resource (get pods dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833)
  Oct 28 14:05:34.562: INFO: Unable to read jessie_udp@dns-test-service.dns-8220.svc.cluster.local from pod dns-8220/dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833: the server could not find the requested resource (get pods dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833)
  Oct 28 14:05:34.566: INFO: Unable to read jessie_tcp@dns-test-service.dns-8220.svc.cluster.local from pod dns-8220/dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833: the server could not find the requested resource (get pods dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833)
  Oct 28 14:05:34.573: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8220.svc.cluster.local from pod dns-8220/dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833: the server could not find the requested resource (get pods dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833)
  Oct 28 14:05:34.577: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8220.svc.cluster.local from pod dns-8220/dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833: the server could not find the requested resource (get pods dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833)
  Oct 28 14:05:34.594: INFO: Lookups using dns-8220/dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833 failed for: [wheezy_udp@dns-test-service.dns-8220.svc.cluster.local wheezy_tcp@dns-test-service.dns-8220.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8220.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8220.svc.cluster.local jessie_udp@dns-test-service.dns-8220.svc.cluster.local jessie_tcp@dns-test-service.dns-8220.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8220.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8220.svc.cluster.local]

  Oct 28 14:05:34.610: INFO: Pod client logs for webserver: 
  Oct 28 14:05:34.620: INFO: Pod client logs for querier: 
  Oct 28 14:05:34.628: INFO: Pod client logs for jessie-querier: 
  E1028 14:05:35.353569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:36.353673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:37.353782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:38.353865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:39.354857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:39.696: INFO: DNS probes using dns-8220/dns-test-18ef05bc-f83b-47b0-9104-9d5f66fd0833 succeeded

  Oct 28 14:05:39.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 10/28/23 14:05:39.701
  STEP: deleting the test service @ 10/28/23 14:05:39.717
  STEP: deleting the test headless service @ 10/28/23 14:05:39.744
  STEP: Destroying namespace "dns-8220" for this suite. @ 10/28/23 14:05:39.758
• [11.420 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 10/28/23 14:05:39.772
  Oct 28 14:05:39.772: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename kubectl @ 10/28/23 14:05:39.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:05:39.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:05:39.795
  STEP: creating all guestbook components @ 10/28/23 14:05:39.798
  Oct 28 14:05:39.798: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Oct 28 14:05:39.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3831 create -f -'
  Oct 28 14:05:39.998: INFO: stderr: ""
  Oct 28 14:05:39.998: INFO: stdout: "service/agnhost-replica created\n"
  Oct 28 14:05:39.999: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Oct 28 14:05:39.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3831 create -f -'
  Oct 28 14:05:40.208: INFO: stderr: ""
  Oct 28 14:05:40.208: INFO: stdout: "service/agnhost-primary created\n"
  Oct 28 14:05:40.208: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Oct 28 14:05:40.208: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3831 create -f -'
  E1028 14:05:40.355896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:40.413: INFO: stderr: ""
  Oct 28 14:05:40.413: INFO: stdout: "service/frontend created\n"
  Oct 28 14:05:40.413: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Oct 28 14:05:40.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3831 create -f -'
  Oct 28 14:05:40.581: INFO: stderr: ""
  Oct 28 14:05:40.581: INFO: stdout: "deployment.apps/frontend created\n"
  Oct 28 14:05:40.581: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Oct 28 14:05:40.581: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3831 create -f -'
  Oct 28 14:05:40.768: INFO: stderr: ""
  Oct 28 14:05:40.768: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Oct 28 14:05:40.768: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Oct 28 14:05:40.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3831 create -f -'
  Oct 28 14:05:40.952: INFO: stderr: ""
  Oct 28 14:05:40.952: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 10/28/23 14:05:40.952
  Oct 28 14:05:40.952: INFO: Waiting for all frontend pods to be Running.
  E1028 14:05:41.356005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:42.356136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:43.356319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:44.357107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:45.357212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:46.003: INFO: Waiting for frontend to serve content.
  Oct 28 14:05:46.017: INFO: Trying to add a new entry to the guestbook.
  Oct 28 14:05:46.030: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 10/28/23 14:05:46.038
  Oct 28 14:05:46.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3831 delete --grace-period=0 --force -f -'
  Oct 28 14:05:46.119: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 28 14:05:46.119: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 10/28/23 14:05:46.119
  Oct 28 14:05:46.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3831 delete --grace-period=0 --force -f -'
  Oct 28 14:05:46.211: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 28 14:05:46.211: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/28/23 14:05:46.211
  Oct 28 14:05:46.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3831 delete --grace-period=0 --force -f -'
  Oct 28 14:05:46.287: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 28 14:05:46.287: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/28/23 14:05:46.287
  Oct 28 14:05:46.287: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3831 delete --grace-period=0 --force -f -'
  E1028 14:05:46.358295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:46.369: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 28 14:05:46.370: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/28/23 14:05:46.37
  Oct 28 14:05:46.370: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3831 delete --grace-period=0 --force -f -'
  Oct 28 14:05:46.459: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 28 14:05:46.459: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/28/23 14:05:46.459
  Oct 28 14:05:46.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3101647964 --namespace=kubectl-3831 delete --grace-period=0 --force -f -'
  Oct 28 14:05:46.549: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Oct 28 14:05:46.549: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Oct 28 14:05:46.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3831" for this suite. @ 10/28/23 14:05:46.554
• [6.796 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 10/28/23 14:05:46.569
  Oct 28 14:05:46.569: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename endpointslicemirroring @ 10/28/23 14:05:46.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:05:46.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:05:46.585
  STEP: mirroring a new custom Endpoint @ 10/28/23 14:05:46.599
  Oct 28 14:05:46.610: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E1028 14:05:47.358313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:48.358394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 10/28/23 14:05:48.615
  STEP: mirroring deletion of a custom Endpoint @ 10/28/23 14:05:48.634
  Oct 28 14:05:48.644: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E1028 14:05:49.359037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:50.359233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:50.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-9614" for this suite. @ 10/28/23 14:05:50.653
• [4.092 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 10/28/23 14:05:50.669
  Oct 28 14:05:50.669: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename replicaset @ 10/28/23 14:05:50.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:05:50.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:05:50.7
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 10/28/23 14:05:50.703
  E1028 14:05:51.360037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:52.360559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 10/28/23 14:05:52.727
  STEP: Then the orphan pod is adopted @ 10/28/23 14:05:52.733
  E1028 14:05:53.361604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 10/28/23 14:05:53.744
  Oct 28 14:05:53.749: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/28/23 14:05:53.76
  E1028 14:05:54.361720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:54.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6838" for this suite. @ 10/28/23 14:05:54.775
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 10/28/23 14:05:54.782
  Oct 28 14:05:54.782: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename projected @ 10/28/23 14:05:54.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:05:54.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:05:54.802
  STEP: Creating the pod @ 10/28/23 14:05:54.805
  E1028 14:05:55.362563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:56.364599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:05:57.363: INFO: Successfully updated pod "labelsupdatee7da317b-817b-4a8a-b1be-fade4039d132"
  E1028 14:05:57.365097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:58.365513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:05:59.365660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:06:00.365770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1028 14:06:01.366500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Oct 28 14:06:01.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6750" for this suite. @ 10/28/23 14:06:01.398
• [6.623 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 10/28/23 14:06:01.408
  Oct 28 14:06:01.408: INFO: >>> kubeConfig: /tmp/kubeconfig-3101647964
  STEP: Building a namespace api object, basename services @ 10/28/23 14:06:01.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/28/23 14:06:01.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/28/23 14:06:01.428
  STEP: creating a collection of services @ 10/28/23 14:06:01.432
  Oct 28 14:06:01.432: INFO: Creating e2e-svc-a-ssznn
  Oct 28 14:06:01.441: INFO: Creating e2e-svc-b-hb6ds
  Oct 28 14:06:01.453: INFO: Creating e2e-svc-c-jvpxx
  STEP: deleting service collection @ 10/28/23 14:06:01.468
  Oct 28 14:06:01.501: INFO: Collection of services has been deleted
  Oct 28 14:06:01.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7910" for this suite. @ 10/28/23 14:06:01.505
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Oct 28 14:06:01.514: INFO: Running AfterSuite actions on node 1
  Oct 28 14:06:01.514: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.050 seconds]
------------------------------

Ran 380 of 7387 Specs in 6196.982 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h43m17.599497924s
Test Suite Passed
