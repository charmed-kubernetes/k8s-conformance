  I1125 12:13:04.343990      17 e2e.go:117] Starting e2e run "c2f612a6-5592-45cc-881a-0621349258be" on Ginkgo node 1
  Nov 25 12:13:04.375: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1700914384 - will randomize all specs

Will run 380 of 7389 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Nov 25 12:13:04.583: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:13:04.584: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Nov 25 12:13:04.640: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Nov 25 12:13:04.646: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Nov 25 12:13:04.646: INFO: e2e test version: v1.28.4
  Nov 25 12:13:04.649: INFO: kube-apiserver version: v1.28.4
  Nov 25 12:13:04.649: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:13:04.658: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 11/25/23 12:13:05.112
  Nov 25 12:13:05.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 12:13:05.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:13:05.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:13:05.149
  STEP: Setting up server cert @ 11/25/23 12:13:05.174
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 12:13:05.522
  STEP: Deploying the webhook pod @ 11/25/23 12:13:05.532
  STEP: Wait for the deployment to be ready @ 11/25/23 12:13:05.544
  Nov 25 12:13:05.552: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Nov 25 12:13:07.566: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 25, 12, 13, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 13, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 13, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 13, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 11/25/23 12:13:09.571
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 12:13:09.582
  Nov 25 12:13:10.582: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 11/25/23 12:13:10.59
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 11/25/23 12:13:10.592
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 11/25/23 12:13:10.592
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 11/25/23 12:13:10.592
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 11/25/23 12:13:10.594
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/25/23 12:13:10.594
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/25/23 12:13:10.595
  Nov 25 12:13:10.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6908" for this suite. @ 11/25/23 12:13:10.644
  STEP: Destroying namespace "webhook-markers-4305" for this suite. @ 11/25/23 12:13:10.653
• [5.548 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 11/25/23 12:13:10.66
  Nov 25 12:13:10.660: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename job @ 11/25/23 12:13:10.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:13:10.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:13:10.683
  STEP: Creating a job @ 11/25/23 12:13:10.688
  STEP: Ensuring active pods == parallelism @ 11/25/23 12:13:10.696
  STEP: Orphaning one of the Job's Pods @ 11/25/23 12:13:12.701
  Nov 25 12:13:13.219: INFO: Successfully updated pod "adopt-release-8dwsq"
  STEP: Checking that the Job readopts the Pod @ 11/25/23 12:13:13.219
  STEP: Removing the labels from the Job's Pod @ 11/25/23 12:13:15.228
  Nov 25 12:13:15.745: INFO: Successfully updated pod "adopt-release-8dwsq"
  STEP: Checking that the Job releases the Pod @ 11/25/23 12:13:15.745
  Nov 25 12:13:17.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4017" for this suite. @ 11/25/23 12:13:17.76
• [7.107 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 11/25/23 12:13:17.768
  Nov 25 12:13:17.768: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pod-network-test @ 11/25/23 12:13:17.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:13:17.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:13:17.792
  STEP: Performing setup for networking test in namespace pod-network-test-1052 @ 11/25/23 12:13:17.796
  STEP: creating a selector @ 11/25/23 12:13:17.796
  STEP: Creating the service pods in kubernetes @ 11/25/23 12:13:17.796
  Nov 25 12:13:17.796: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 11/25/23 12:13:49.935
  Nov 25 12:13:51.961: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov 25 12:13:51.961: INFO: Breadth first check of 192.168.72.135 on host 172.31.22.130...
  Nov 25 12:13:51.965: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.196.6:9080/dial?request=hostname&protocol=udp&host=192.168.72.135&port=8081&tries=1'] Namespace:pod-network-test-1052 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:13:51.965: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:13:51.965: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:13:51.965: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1052/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.196.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.72.135%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 25 12:13:52.067: INFO: Waiting for responses: map[]
  Nov 25 12:13:52.067: INFO: reached 192.168.72.135 after 0/1 tries
  Nov 25 12:13:52.067: INFO: Breadth first check of 192.168.8.3 on host 172.31.4.198...
  Nov 25 12:13:52.071: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.196.6:9080/dial?request=hostname&protocol=udp&host=192.168.8.3&port=8081&tries=1'] Namespace:pod-network-test-1052 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:13:52.071: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:13:52.071: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:13:52.072: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1052/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.196.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.8.3%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 25 12:13:52.146: INFO: Waiting for responses: map[]
  Nov 25 12:13:52.146: INFO: reached 192.168.8.3 after 0/1 tries
  Nov 25 12:13:52.146: INFO: Breadth first check of 192.168.196.5 on host 172.31.85.186...
  Nov 25 12:13:52.149: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.196.6:9080/dial?request=hostname&protocol=udp&host=192.168.196.5&port=8081&tries=1'] Namespace:pod-network-test-1052 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:13:52.149: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:13:52.150: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:13:52.150: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1052/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.196.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.196.5%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 25 12:13:52.225: INFO: Waiting for responses: map[]
  Nov 25 12:13:52.225: INFO: reached 192.168.196.5 after 0/1 tries
  Nov 25 12:13:52.225: INFO: Going to retry 0 out of 3 pods....
  Nov 25 12:13:52.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1052" for this suite. @ 11/25/23 12:13:52.229
• [34.469 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 11/25/23 12:13:52.237
  Nov 25 12:13:52.237: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubelet-test @ 11/25/23 12:13:52.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:13:52.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:13:52.263
  Nov 25 12:13:52.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5702" for this suite. @ 11/25/23 12:13:52.291
• [0.062 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 11/25/23 12:13:52.3
  Nov 25 12:13:52.300: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename resourcequota @ 11/25/23 12:13:52.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:13:52.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:13:52.323
  STEP: Counting existing ResourceQuota @ 11/25/23 12:13:52.327
  STEP: Creating a ResourceQuota @ 11/25/23 12:13:57.332
  STEP: Ensuring resource quota status is calculated @ 11/25/23 12:13:57.338
  STEP: Creating a ReplicationController @ 11/25/23 12:13:59.344
  STEP: Ensuring resource quota status captures replication controller creation @ 11/25/23 12:13:59.37
  STEP: Deleting a ReplicationController @ 11/25/23 12:14:01.376
  STEP: Ensuring resource quota status released usage @ 11/25/23 12:14:01.384
  Nov 25 12:14:03.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9494" for this suite. @ 11/25/23 12:14:03.393
• [11.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 11/25/23 12:14:03.403
  Nov 25 12:14:03.403: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename gc @ 11/25/23 12:14:03.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:14:03.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:14:03.426
  STEP: create the rc @ 11/25/23 12:14:03.43
  W1125 12:14:03.435728      17 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 11/25/23 12:14:08.444
  STEP: wait for all pods to be garbage collected @ 11/25/23 12:14:08.451
  STEP: Gathering metrics @ 11/25/23 12:14:13.46
  W1125 12:14:13.468942      17 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 25 12:14:13.469: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 25 12:14:13.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8425" for this suite. @ 11/25/23 12:14:13.475
• [10.079 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 11/25/23 12:14:13.483
  Nov 25 12:14:13.483: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pods @ 11/25/23 12:14:13.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:14:13.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:14:13.512
  STEP: Saw pod success @ 11/25/23 12:14:19.583
  Nov 25 12:14:19.587: INFO: Trying to get logs from node ip-172-31-4-198 pod client-envvars-0bc36ae8-90ed-458b-a81c-d57a14e86afe container env3cont: <nil>
  STEP: delete the pod @ 11/25/23 12:14:19.608
  Nov 25 12:14:19.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1538" for this suite. @ 11/25/23 12:14:19.632
• [6.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 11/25/23 12:14:19.64
  Nov 25 12:14:19.640: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename field-validation @ 11/25/23 12:14:19.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:14:19.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:14:19.662
  Nov 25 12:14:19.666: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  W1125 12:14:22.230587      17 warnings.go:70] unknown field "alpha"
  W1125 12:14:22.230608      17 warnings.go:70] unknown field "beta"
  W1125 12:14:22.230615      17 warnings.go:70] unknown field "delta"
  W1125 12:14:22.230621      17 warnings.go:70] unknown field "epsilon"
  W1125 12:14:22.230627      17 warnings.go:70] unknown field "gamma"
  Nov 25 12:14:22.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7097" for this suite. @ 11/25/23 12:14:22.782
• [3.149 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 11/25/23 12:14:22.79
  Nov 25 12:14:22.790: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl-logs @ 11/25/23 12:14:22.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:14:22.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:14:22.812
  STEP: creating an pod @ 11/25/23 12:14:22.816
  Nov 25 12:14:22.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-logs-2784 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Nov 25 12:14:22.888: INFO: stderr: ""
  Nov 25 12:14:22.888: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 11/25/23 12:14:22.888
  Nov 25 12:14:22.888: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Nov 25 12:14:24.898: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 11/25/23 12:14:24.898
  Nov 25 12:14:24.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-logs-2784 logs logs-generator logs-generator'
  Nov 25 12:14:24.976: INFO: stderr: ""
  Nov 25 12:14:24.976: INFO: stdout: "I1125 12:14:23.680462       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/hdrx 481\nI1125 12:14:23.880752       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/qnx 521\nI1125 12:14:24.081044       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/wjd 281\nI1125 12:14:24.281336       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/rms4 349\nI1125 12:14:24.480573       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/454d 331\nI1125 12:14:24.680871       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/dthx 376\nI1125 12:14:24.881162       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/ncz 475\n"
  STEP: limiting log lines @ 11/25/23 12:14:24.976
  Nov 25 12:14:24.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-logs-2784 logs logs-generator logs-generator --tail=1'
  Nov 25 12:14:25.044: INFO: stderr: ""
  Nov 25 12:14:25.044: INFO: stdout: "I1125 12:14:24.881162       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/ncz 475\n"
  Nov 25 12:14:25.044: INFO: got output "I1125 12:14:24.881162       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/ncz 475\n"
  STEP: limiting log bytes @ 11/25/23 12:14:25.044
  Nov 25 12:14:25.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-logs-2784 logs logs-generator logs-generator --limit-bytes=1'
  Nov 25 12:14:25.110: INFO: stderr: ""
  Nov 25 12:14:25.110: INFO: stdout: "I"
  Nov 25 12:14:25.110: INFO: got output "I"
  STEP: exposing timestamps @ 11/25/23 12:14:25.11
  Nov 25 12:14:25.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-logs-2784 logs logs-generator logs-generator --tail=1 --timestamps'
  Nov 25 12:14:25.178: INFO: stderr: ""
  Nov 25 12:14:25.178: INFO: stdout: "2023-11-25T12:14:25.081560434Z I1125 12:14:25.081463       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/p6x 345\n"
  Nov 25 12:14:25.178: INFO: got output "2023-11-25T12:14:25.081560434Z I1125 12:14:25.081463       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/p6x 345\n"
  STEP: restricting to a time range @ 11/25/23 12:14:25.178
  Nov 25 12:14:27.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-logs-2784 logs logs-generator logs-generator --since=1s'
  Nov 25 12:14:27.744: INFO: stderr: ""
  Nov 25 12:14:27.744: INFO: stdout: "I1125 12:14:26.880934       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/h2q6 309\nI1125 12:14:27.081226       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/hnpm 568\nI1125 12:14:27.280460       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/2gv 413\nI1125 12:14:27.480756       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/tqh 597\nI1125 12:14:27.681054       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/64rl 336\n"
  Nov 25 12:14:27.744: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-logs-2784 logs logs-generator logs-generator --since=24h'
  Nov 25 12:14:27.822: INFO: stderr: ""
  Nov 25 12:14:27.822: INFO: stdout: "I1125 12:14:23.680462       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/hdrx 481\nI1125 12:14:23.880752       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/qnx 521\nI1125 12:14:24.081044       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/wjd 281\nI1125 12:14:24.281336       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/rms4 349\nI1125 12:14:24.480573       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/454d 331\nI1125 12:14:24.680871       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/dthx 376\nI1125 12:14:24.881162       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/ncz 475\nI1125 12:14:25.081463       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/p6x 345\nI1125 12:14:25.280757       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/b5p 400\nI1125 12:14:25.481050       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/5bmg 319\nI1125 12:14:25.681345       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/6rq8 325\nI1125 12:14:25.880527       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/zbzw 449\nI1125 12:14:26.080818       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/kgkx 461\nI1125 12:14:26.281114       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/q5mn 231\nI1125 12:14:26.481407       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/mgfx 543\nI1125 12:14:26.680634       1 logs_generator.go:76] 15 GET /api/v1/namespaces/default/pods/txg4 380\nI1125 12:14:26.880934       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/h2q6 309\nI1125 12:14:27.081226       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/hnpm 568\nI1125 12:14:27.280460       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/2gv 413\nI1125 12:14:27.480756       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/tqh 597\nI1125 12:14:27.681054       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/64rl 336\n"
  Nov 25 12:14:27.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-logs-2784 delete pod logs-generator'
  Nov 25 12:14:28.614: INFO: stderr: ""
  Nov 25 12:14:28.614: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Nov 25 12:14:28.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2784" for this suite. @ 11/25/23 12:14:28.619
• [5.838 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 11/25/23 12:14:28.628
  Nov 25 12:14:28.628: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/25/23 12:14:28.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:14:28.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:14:28.65
  STEP: Creating two CSIDrivers @ 11/25/23 12:14:28.654
  STEP: Getting "inline-driver-8038545d-3786-4890-b036-ea620a7fefcd" & "inline-driver-270ecd92-2512-41fc-88db-406b5a3d5f41" @ 11/25/23 12:14:28.672
  STEP: Patching the CSIDriver "inline-driver-270ecd92-2512-41fc-88db-406b5a3d5f41" @ 11/25/23 12:14:28.679
  STEP: Updating the CSIDriver "inline-driver-270ecd92-2512-41fc-88db-406b5a3d5f41" @ 11/25/23 12:14:28.687
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-8100" @ 11/25/23 12:14:28.696
  STEP: Deleting CSIDriver "inline-driver-8038545d-3786-4890-b036-ea620a7fefcd" @ 11/25/23 12:14:28.7
  STEP: Confirm deletion of CSIDriver "inline-driver-8038545d-3786-4890-b036-ea620a7fefcd" @ 11/25/23 12:14:28.706
  STEP: Deleting CSIDriver "inline-driver-270ecd92-2512-41fc-88db-406b5a3d5f41" via DeleteCollection @ 11/25/23 12:14:28.71
  STEP: Confirm deletion of CSIDriver "inline-driver-270ecd92-2512-41fc-88db-406b5a3d5f41" @ 11/25/23 12:14:28.719
  Nov 25 12:14:28.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8100" for this suite. @ 11/25/23 12:14:28.727
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 11/25/23 12:14:28.735
  Nov 25 12:14:28.735: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename deployment @ 11/25/23 12:14:28.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:14:28.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:14:28.76
  Nov 25 12:14:28.776: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Nov 25 12:14:33.783: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/25/23 12:14:33.783
  Nov 25 12:14:33.783: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 11/25/23 12:14:33.796
  Nov 25 12:14:33.807: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7125",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9614ac70-e99e-4cb9-be65-627643791127",
      ResourceVersion: (string) (len=4) "2969",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836511273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836511273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 25 12:14:33.812: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Nov 25 12:14:33.812: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Nov 25 12:14:33.813: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7125",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa4a6f4a-fdcd-411f-8345-e3a3da826cba",
      ResourceVersion: (string) (len=4) "2970",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836511268,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "9614ac70-e99e-4cb9-be65-627643791127",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836511268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836511273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 39 36 31 34 61 63 37  |"uid\":\"9614ac7|
              00000040  30 2d 65 39 39 65 2d 34  63 62 39 2d 62 65 36 35  |0-e99e-4cb9-be65|
              00000050  2d 36 32 37 36 34 33 37  39 31 31 32 37 5c 22 7d  |-627643791127\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836511273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 25 12:14:33.820: INFO: Pod "test-cleanup-controller-tngdb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-tngdb",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-7125",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1fa6e6e5-a934-4ef4-9e93-e25b15a88f1b",
      ResourceVersion: (string) (len=4) "2957",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836511268,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "fa4a6f4a-fdcd-411f-8345-e3a3da826cba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836511268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  66 61 34 61 36 66 34 61  |uid\":\"fa4a6f4a|
              00000080  2d 66 64 63 64 2d 34 31  31 66 2d 38 33 34 35 2d  |-fdcd-411f-8345-|
              00000090  65 33 61 33 64 61 38 32  36 63 62 61 5c 22 7d 22  |e3a3da826cba\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836511273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 36 2e 31 30 5c 22  |192.168.196.10\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8f829",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8f829",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836511268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836511273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836511273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836511268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.196.10",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.196.10"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836511268,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836511273,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4564287e4a7b0dd42bfbc4b0901faa0c8411feffbedec9221e5f0a4d50af0655",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 12:14:33.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7125" for this suite. @ 11/25/23 12:14:33.838
• [5.114 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 11/25/23 12:14:33.849
  Nov 25 12:14:33.849: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename watch @ 11/25/23 12:14:33.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:14:33.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:14:33.874
  STEP: creating a watch on configmaps with a certain label @ 11/25/23 12:14:33.877
  STEP: creating a new configmap @ 11/25/23 12:14:33.879
  STEP: modifying the configmap once @ 11/25/23 12:14:33.884
  STEP: changing the label value of the configmap @ 11/25/23 12:14:33.902
  STEP: Expecting to observe a delete notification for the watched object @ 11/25/23 12:14:33.912
  Nov 25 12:14:33.912: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8014  a58de3cf-9db3-4fd8-b3c4-c44c16226e5d 2988 0 2023-11-25 12:14:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-25 12:14:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 12:14:33.912: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8014  a58de3cf-9db3-4fd8-b3c4-c44c16226e5d 2990 0 2023-11-25 12:14:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-25 12:14:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 12:14:33.912: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8014  a58de3cf-9db3-4fd8-b3c4-c44c16226e5d 2993 0 2023-11-25 12:14:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-25 12:14:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 11/25/23 12:14:33.912
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 11/25/23 12:14:33.921
  STEP: changing the label value of the configmap back @ 11/25/23 12:14:43.925
  STEP: modifying the configmap a third time @ 11/25/23 12:14:43.935
  STEP: deleting the configmap @ 11/25/23 12:14:43.945
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 11/25/23 12:14:43.951
  Nov 25 12:14:43.951: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8014  a58de3cf-9db3-4fd8-b3c4-c44c16226e5d 3047 0 2023-11-25 12:14:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-25 12:14:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 12:14:43.952: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8014  a58de3cf-9db3-4fd8-b3c4-c44c16226e5d 3048 0 2023-11-25 12:14:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-25 12:14:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 12:14:43.952: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8014  a58de3cf-9db3-4fd8-b3c4-c44c16226e5d 3049 0 2023-11-25 12:14:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-25 12:14:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 12:14:43.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8014" for this suite. @ 11/25/23 12:14:43.957
• [10.114 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 11/25/23 12:14:43.964
  Nov 25 12:14:43.964: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename disruption @ 11/25/23 12:14:43.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:14:43.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:14:43.986
  STEP: Creating a kubernetes client @ 11/25/23 12:14:44.03
  Nov 25 12:14:44.030: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename disruption-2 @ 11/25/23 12:14:44.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:14:44.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:14:44.05
  STEP: Waiting for the pdb to be processed @ 11/25/23 12:14:44.06
  STEP: Waiting for the pdb to be processed @ 11/25/23 12:14:46.073
  STEP: Waiting for the pdb to be processed @ 11/25/23 12:14:48.089
  STEP: listing a collection of PDBs across all namespaces @ 11/25/23 12:14:50.099
  STEP: listing a collection of PDBs in namespace disruption-9602 @ 11/25/23 12:14:50.104
  STEP: deleting a collection of PDBs @ 11/25/23 12:14:50.108
  STEP: Waiting for the PDB collection to be deleted @ 11/25/23 12:14:50.121
  Nov 25 12:14:50.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 25 12:14:50.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-2516" for this suite. @ 11/25/23 12:14:50.134
  STEP: Destroying namespace "disruption-9602" for this suite. @ 11/25/23 12:14:50.142
• [6.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 11/25/23 12:14:50.151
  Nov 25 12:14:50.151: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename svcaccounts @ 11/25/23 12:14:50.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:14:50.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:14:50.176
  STEP: Creating ServiceAccount "e2e-sa-xqj8v"  @ 11/25/23 12:14:50.179
  Nov 25 12:14:50.184: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-xqj8v"  @ 11/25/23 12:14:50.184
  Nov 25 12:14:50.198: INFO: AutomountServiceAccountToken: true
  Nov 25 12:14:50.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4067" for this suite. @ 11/25/23 12:14:50.202
• [0.060 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 11/25/23 12:14:50.211
  Nov 25 12:14:50.211: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename discovery @ 11/25/23 12:14:50.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:14:50.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:14:50.233
  STEP: Setting up server cert @ 11/25/23 12:14:50.239
  Nov 25 12:14:50.693: INFO: Checking APIGroup: apiregistration.k8s.io
  Nov 25 12:14:50.695: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Nov 25 12:14:50.695: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Nov 25 12:14:50.695: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Nov 25 12:14:50.695: INFO: Checking APIGroup: apps
  Nov 25 12:14:50.696: INFO: PreferredVersion.GroupVersion: apps/v1
  Nov 25 12:14:50.696: INFO: Versions found [{apps/v1 v1}]
  Nov 25 12:14:50.696: INFO: apps/v1 matches apps/v1
  Nov 25 12:14:50.696: INFO: Checking APIGroup: events.k8s.io
  Nov 25 12:14:50.698: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Nov 25 12:14:50.698: INFO: Versions found [{events.k8s.io/v1 v1}]
  Nov 25 12:14:50.698: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Nov 25 12:14:50.698: INFO: Checking APIGroup: authentication.k8s.io
  Nov 25 12:14:50.699: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Nov 25 12:14:50.699: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Nov 25 12:14:50.699: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Nov 25 12:14:50.699: INFO: Checking APIGroup: authorization.k8s.io
  Nov 25 12:14:50.700: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Nov 25 12:14:50.700: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Nov 25 12:14:50.700: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Nov 25 12:14:50.700: INFO: Checking APIGroup: autoscaling
  Nov 25 12:14:50.702: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Nov 25 12:14:50.702: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Nov 25 12:14:50.702: INFO: autoscaling/v2 matches autoscaling/v2
  Nov 25 12:14:50.702: INFO: Checking APIGroup: batch
  Nov 25 12:14:50.703: INFO: PreferredVersion.GroupVersion: batch/v1
  Nov 25 12:14:50.703: INFO: Versions found [{batch/v1 v1}]
  Nov 25 12:14:50.703: INFO: batch/v1 matches batch/v1
  Nov 25 12:14:50.703: INFO: Checking APIGroup: certificates.k8s.io
  Nov 25 12:14:50.704: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Nov 25 12:14:50.704: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Nov 25 12:14:50.704: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Nov 25 12:14:50.705: INFO: Checking APIGroup: networking.k8s.io
  Nov 25 12:14:50.706: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Nov 25 12:14:50.706: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Nov 25 12:14:50.706: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Nov 25 12:14:50.706: INFO: Checking APIGroup: policy
  Nov 25 12:14:50.707: INFO: PreferredVersion.GroupVersion: policy/v1
  Nov 25 12:14:50.707: INFO: Versions found [{policy/v1 v1}]
  Nov 25 12:14:50.707: INFO: policy/v1 matches policy/v1
  Nov 25 12:14:50.707: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Nov 25 12:14:50.709: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Nov 25 12:14:50.709: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Nov 25 12:14:50.709: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Nov 25 12:14:50.709: INFO: Checking APIGroup: storage.k8s.io
  Nov 25 12:14:50.710: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Nov 25 12:14:50.710: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Nov 25 12:14:50.711: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Nov 25 12:14:50.711: INFO: Checking APIGroup: admissionregistration.k8s.io
  Nov 25 12:14:50.712: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Nov 25 12:14:50.712: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Nov 25 12:14:50.712: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Nov 25 12:14:50.712: INFO: Checking APIGroup: apiextensions.k8s.io
  Nov 25 12:14:50.713: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Nov 25 12:14:50.713: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Nov 25 12:14:50.713: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Nov 25 12:14:50.714: INFO: Checking APIGroup: scheduling.k8s.io
  Nov 25 12:14:50.715: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Nov 25 12:14:50.715: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Nov 25 12:14:50.715: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Nov 25 12:14:50.715: INFO: Checking APIGroup: coordination.k8s.io
  Nov 25 12:14:50.716: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Nov 25 12:14:50.716: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Nov 25 12:14:50.716: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Nov 25 12:14:50.716: INFO: Checking APIGroup: node.k8s.io
  Nov 25 12:14:50.718: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Nov 25 12:14:50.718: INFO: Versions found [{node.k8s.io/v1 v1}]
  Nov 25 12:14:50.718: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Nov 25 12:14:50.718: INFO: Checking APIGroup: discovery.k8s.io
  Nov 25 12:14:50.719: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Nov 25 12:14:50.719: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Nov 25 12:14:50.719: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Nov 25 12:14:50.719: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Nov 25 12:14:50.721: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Nov 25 12:14:50.721: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Nov 25 12:14:50.721: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Nov 25 12:14:50.721: INFO: Checking APIGroup: metrics.k8s.io
  Nov 25 12:14:50.722: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Nov 25 12:14:50.722: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Nov 25 12:14:50.722: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Nov 25 12:14:50.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-364" for this suite. @ 11/25/23 12:14:50.726
• [0.529 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 11/25/23 12:14:50.741
  Nov 25 12:14:50.741: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename field-validation @ 11/25/23 12:14:50.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:14:50.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:14:50.765
  Nov 25 12:14:50.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:14:53.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8902" for this suite. @ 11/25/23 12:14:53.878
• [3.147 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:320
  STEP: Creating a kubernetes client @ 11/25/23 12:14:53.888
  Nov 25 12:14:53.888: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename statefulset @ 11/25/23 12:14:53.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:14:53.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:14:53.915
  STEP: Creating service test in namespace statefulset-2472 @ 11/25/23 12:14:53.918
  STEP: Creating a new StatefulSet @ 11/25/23 12:14:53.925
  Nov 25 12:14:53.937: INFO: Found 0 stateful pods, waiting for 3
  Nov 25 12:15:03.946: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 25 12:15:03.946: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 25 12:15:03.946: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  Nov 25 12:15:13.945: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 25 12:15:13.945: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 25 12:15:13.945: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Nov 25 12:15:13.958: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-2472 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 25 12:15:14.113: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 25 12:15:14.113: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 25 12:15:14.113: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/25/23 12:15:24.134
  Nov 25 12:15:24.156: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 11/25/23 12:15:24.156
  STEP: Updating Pods in reverse ordinal order @ 11/25/23 12:15:34.174
  Nov 25 12:15:34.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-2472 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 25 12:15:34.322: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 25 12:15:34.322: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 25 12:15:34.322: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 11/25/23 12:15:54.351
  Nov 25 12:15:54.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-2472 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 25 12:15:54.496: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 25 12:15:54.496: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 25 12:15:54.496: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 25 12:16:04.532: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 11/25/23 12:16:14.552
  Nov 25 12:16:14.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-2472 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 25 12:16:14.698: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 25 12:16:14.698: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 25 12:16:14.698: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 25 12:16:34.723: INFO: Deleting all statefulset in ns statefulset-2472
  Nov 25 12:16:34.727: INFO: Scaling statefulset ss2 to 0
  Nov 25 12:16:44.750: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 25 12:16:44.754: INFO: Deleting statefulset ss2
  Nov 25 12:16:44.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2472" for this suite. @ 11/25/23 12:16:44.773
• [110.892 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 11/25/23 12:16:44.781
  Nov 25 12:16:44.781: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 12:16:44.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:16:44.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:16:44.813
  STEP: Setting up server cert @ 11/25/23 12:16:44.843
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 12:16:45.081
  STEP: Deploying the webhook pod @ 11/25/23 12:16:45.092
  STEP: Wait for the deployment to be ready @ 11/25/23 12:16:45.108
  Nov 25 12:16:45.118: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/25/23 12:16:47.13
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 12:16:47.141
  Nov 25 12:16:48.142: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 11/25/23 12:16:48.152
  STEP: create a configmap that should be updated by the webhook @ 11/25/23 12:16:48.172
  Nov 25 12:16:48.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6666" for this suite. @ 11/25/23 12:16:48.244
  STEP: Destroying namespace "webhook-markers-3863" for this suite. @ 11/25/23 12:16:48.258
• [3.484 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 11/25/23 12:16:48.271
  Nov 25 12:16:48.271: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 12:16:48.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:16:48.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:16:48.298
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 12:16:48.303
  STEP: Saw pod success @ 11/25/23 12:16:52.33
  Nov 25 12:16:52.337: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-79147116-36ac-4d9b-8b72-ec4dea1cc3f4 container client-container: <nil>
  STEP: delete the pod @ 11/25/23 12:16:52.356
  Nov 25 12:16:52.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7799" for this suite. @ 11/25/23 12:16:52.408
• [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 11/25/23 12:16:52.419
  Nov 25 12:16:52.419: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-runtime @ 11/25/23 12:16:52.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:16:52.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:16:52.448
  STEP: create the container @ 11/25/23 12:16:52.454
  W1125 12:16:52.465329      17 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/25/23 12:16:52.465
  STEP: get the container status @ 11/25/23 12:16:55.485
  STEP: the container should be terminated @ 11/25/23 12:16:55.489
  STEP: the termination message should be set @ 11/25/23 12:16:55.489
  Nov 25 12:16:55.489: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/25/23 12:16:55.489
  Nov 25 12:16:55.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5500" for this suite. @ 11/25/23 12:16:55.515
• [3.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 11/25/23 12:16:55.524
  Nov 25 12:16:55.524: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename runtimeclass @ 11/25/23 12:16:55.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:16:55.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:16:55.551
  Nov 25 12:16:55.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1504" for this suite. @ 11/25/23 12:16:55.569
• [0.055 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 11/25/23 12:16:55.579
  Nov 25 12:16:55.579: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 12:16:55.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:16:55.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:16:55.608
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 12:16:55.612
  STEP: Saw pod success @ 11/25/23 12:16:59.636
  Nov 25 12:16:59.640: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-5784973b-e9fb-41d2-81d1-7bc5b3eb4418 container client-container: <nil>
  STEP: delete the pod @ 11/25/23 12:16:59.647
  Nov 25 12:16:59.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9438" for this suite. @ 11/25/23 12:16:59.669
• [4.096 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 11/25/23 12:16:59.676
  Nov 25 12:16:59.676: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 12:16:59.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:16:59.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:16:59.699
  STEP: Creating configMap with name configmap-test-volume-e85074d9-75be-431a-ac22-d431d536aeed @ 11/25/23 12:16:59.703
  STEP: Creating a pod to test consume configMaps @ 11/25/23 12:16:59.707
  STEP: Saw pod success @ 11/25/23 12:17:03.732
  Nov 25 12:17:03.736: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-configmaps-1fe6dffd-1711-47bf-aa53-ced607ae64d3 container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 12:17:03.744
  Nov 25 12:17:03.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1134" for this suite. @ 11/25/23 12:17:03.767
• [4.099 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 11/25/23 12:17:03.776
  Nov 25 12:17:03.776: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename resourcequota @ 11/25/23 12:17:03.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:17:03.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:17:03.797
  STEP: Counting existing ResourceQuota @ 11/25/23 12:17:03.801
  STEP: Creating a ResourceQuota @ 11/25/23 12:17:08.805
  STEP: Ensuring resource quota status is calculated @ 11/25/23 12:17:08.812
  STEP: Creating a Pod that fits quota @ 11/25/23 12:17:10.817
  STEP: Ensuring ResourceQuota status captures the pod usage @ 11/25/23 12:17:10.838
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 11/25/23 12:17:12.843
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 11/25/23 12:17:12.847
  STEP: Ensuring a pod cannot update its resource requirements @ 11/25/23 12:17:12.853
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 11/25/23 12:17:12.862
  STEP: Deleting the pod @ 11/25/23 12:17:14.866
  STEP: Ensuring resource quota status released the pod usage @ 11/25/23 12:17:14.883
  Nov 25 12:17:16.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6281" for this suite. @ 11/25/23 12:17:16.893
• [13.125 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 11/25/23 12:17:16.901
  Nov 25 12:17:16.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-runtime @ 11/25/23 12:17:16.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:17:16.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:17:16.923
  STEP: create the container @ 11/25/23 12:17:16.928
  W1125 12:17:16.937343      17 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/25/23 12:17:16.937
  STEP: get the container status @ 11/25/23 12:17:19.956
  STEP: the container should be terminated @ 11/25/23 12:17:19.96
  STEP: the termination message should be set @ 11/25/23 12:17:19.96
  Nov 25 12:17:19.960: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 11/25/23 12:17:19.96
  Nov 25 12:17:19.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4892" for this suite. @ 11/25/23 12:17:19.982
• [3.089 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 11/25/23 12:17:19.99
  Nov 25 12:17:19.990: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/25/23 12:17:19.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:17:20.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:17:20.014
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 11/25/23 12:17:20.017
  Nov 25 12:17:20.018: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 11/25/23 12:17:25.407
  Nov 25 12:17:25.407: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:17:26.855: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:17:32.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9066" for this suite. @ 11/25/23 12:17:32.298
• [12.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 11/25/23 12:17:32.306
  Nov 25 12:17:32.306: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename job @ 11/25/23 12:17:32.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:17:32.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:17:32.327
  STEP: Creating a suspended job @ 11/25/23 12:17:32.333
  STEP: Patching the Job @ 11/25/23 12:17:32.338
  STEP: Watching for Job to be patched @ 11/25/23 12:17:32.355
  Nov 25 12:17:32.356: INFO: Event ADDED observed for Job e2e-k7jd5 in namespace job-7392 with labels: map[e2e-job-label:e2e-k7jd5] and annotations: map[]
  Nov 25 12:17:32.356: INFO: Event MODIFIED observed for Job e2e-k7jd5 in namespace job-7392 with labels: map[e2e-job-label:e2e-k7jd5] and annotations: map[]
  Nov 25 12:17:32.356: INFO: Event MODIFIED found for Job e2e-k7jd5 in namespace job-7392 with labels: map[e2e-job-label:e2e-k7jd5 e2e-k7jd5:patched] and annotations: map[]
  STEP: Updating the job @ 11/25/23 12:17:32.357
  STEP: Watching for Job to be updated @ 11/25/23 12:17:32.365
  Nov 25 12:17:32.367: INFO: Event MODIFIED found for Job e2e-k7jd5 in namespace job-7392 with labels: map[e2e-job-label:e2e-k7jd5 e2e-k7jd5:patched] and annotations: map[updated:true]
  Nov 25 12:17:32.367: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 11/25/23 12:17:32.367
  Nov 25 12:17:32.370: INFO: Job: e2e-k7jd5 as labels: map[e2e-job-label:e2e-k7jd5 e2e-k7jd5:patched]
  STEP: Waiting for job to complete @ 11/25/23 12:17:32.37
  STEP: Delete a job collection with a labelselector @ 11/25/23 12:17:40.374
  STEP: Watching for Job to be deleted @ 11/25/23 12:17:40.382
  Nov 25 12:17:40.384: INFO: Event MODIFIED observed for Job e2e-k7jd5 in namespace job-7392 with labels: map[e2e-job-label:e2e-k7jd5 e2e-k7jd5:patched] and annotations: map[updated:true]
  Nov 25 12:17:40.384: INFO: Event MODIFIED observed for Job e2e-k7jd5 in namespace job-7392 with labels: map[e2e-job-label:e2e-k7jd5 e2e-k7jd5:patched] and annotations: map[updated:true]
  Nov 25 12:17:40.384: INFO: Event MODIFIED observed for Job e2e-k7jd5 in namespace job-7392 with labels: map[e2e-job-label:e2e-k7jd5 e2e-k7jd5:patched] and annotations: map[updated:true]
  Nov 25 12:17:40.384: INFO: Event MODIFIED observed for Job e2e-k7jd5 in namespace job-7392 with labels: map[e2e-job-label:e2e-k7jd5 e2e-k7jd5:patched] and annotations: map[updated:true]
  Nov 25 12:17:40.384: INFO: Event MODIFIED observed for Job e2e-k7jd5 in namespace job-7392 with labels: map[e2e-job-label:e2e-k7jd5 e2e-k7jd5:patched] and annotations: map[updated:true]
  Nov 25 12:17:40.385: INFO: Event DELETED found for Job e2e-k7jd5 in namespace job-7392 with labels: map[e2e-job-label:e2e-k7jd5 e2e-k7jd5:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 11/25/23 12:17:40.385
  Nov 25 12:17:40.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7392" for this suite. @ 11/25/23 12:17:40.402
• [8.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 11/25/23 12:17:40.412
  Nov 25 12:17:40.412: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 12:17:40.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:17:40.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:17:40.429
  STEP: Setting up server cert @ 11/25/23 12:17:40.455
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 12:17:40.778
  STEP: Deploying the webhook pod @ 11/25/23 12:17:40.785
  STEP: Wait for the deployment to be ready @ 11/25/23 12:17:40.799
  Nov 25 12:17:40.806: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/25/23 12:17:42.815
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 12:17:42.827
  Nov 25 12:17:43.827: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 11/25/23 12:17:43.834
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/25/23 12:17:43.834
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 11/25/23 12:17:43.849
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 11/25/23 12:17:44.863
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/25/23 12:17:44.863
  STEP: Having no error when timeout is longer than webhook latency @ 11/25/23 12:17:45.889
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/25/23 12:17:45.889
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 11/25/23 12:17:50.935
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/25/23 12:17:50.935
  Nov 25 12:17:55.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-241" for this suite. @ 11/25/23 12:17:56.047
  STEP: Destroying namespace "webhook-markers-297" for this suite. @ 11/25/23 12:17:56.054
• [15.652 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 11/25/23 12:17:56.066
  Nov 25 12:17:56.066: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename podtemplate @ 11/25/23 12:17:56.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:17:56.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:17:56.101
  STEP: Create set of pod templates @ 11/25/23 12:17:56.104
  Nov 25 12:17:56.110: INFO: created test-podtemplate-1
  Nov 25 12:17:56.115: INFO: created test-podtemplate-2
  Nov 25 12:17:56.120: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 11/25/23 12:17:56.12
  STEP: delete collection of pod templates @ 11/25/23 12:17:56.124
  Nov 25 12:17:56.124: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 11/25/23 12:17:56.141
  Nov 25 12:17:56.141: INFO: requesting list of pod templates to confirm quantity
  Nov 25 12:17:56.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9975" for this suite. @ 11/25/23 12:17:56.15
• [0.092 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 11/25/23 12:17:56.158
  Nov 25 12:17:56.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/25/23 12:17:56.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:17:56.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:17:56.18
  STEP: create the container to handle the HTTPGet hook request. @ 11/25/23 12:17:56.189
  STEP: create the pod with lifecycle hook @ 11/25/23 12:17:58.213
  STEP: delete the pod with lifecycle hook @ 11/25/23 12:18:00.228
  STEP: check prestop hook @ 11/25/23 12:18:04.245
  Nov 25 12:18:04.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9383" for this suite. @ 11/25/23 12:18:04.263
• [8.112 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 11/25/23 12:18:04.27
  Nov 25 12:18:04.270: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename dns @ 11/25/23 12:18:04.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:18:04.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:18:04.289
  STEP: Creating a test headless service @ 11/25/23 12:18:04.291
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6618.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-6618.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 11/25/23 12:18:04.296
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6618.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6618.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 11/25/23 12:18:04.296
  STEP: creating a pod to probe DNS @ 11/25/23 12:18:04.296
  STEP: submitting the pod to kubernetes @ 11/25/23 12:18:04.296
  STEP: retrieving the pod @ 11/25/23 12:18:14.336
  STEP: looking for the results for each expected name from probers @ 11/25/23 12:18:14.339
  Nov 25 12:18:14.352: INFO: DNS probes using dns-6618/dns-test-5e002459-b7cf-4a93-b260-26bf624aeac5 succeeded

  Nov 25 12:18:14.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 12:18:14.355
  STEP: deleting the test headless service @ 11/25/23 12:18:14.369
  STEP: Destroying namespace "dns-6618" for this suite. @ 11/25/23 12:18:14.382
• [10.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 11/25/23 12:18:14.391
  Nov 25 12:18:14.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename hostport @ 11/25/23 12:18:14.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:18:14.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:18:14.414
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 11/25/23 12:18:14.421
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.4.198 on the node which pod1 resides and expect scheduled @ 11/25/23 12:18:18.44
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.4.198 but use UDP protocol on the node which pod2 resides @ 11/25/23 12:18:24.463
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 11/25/23 12:18:28.493
  Nov 25 12:18:28.493: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.4.198 http://127.0.0.1:54323/hostname] Namespace:hostport-309 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:18:28.493: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:18:28.493: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:18:28.493: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-309/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.4.198+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.4.198, port: 54323 @ 11/25/23 12:18:28.575
  Nov 25 12:18:28.576: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.4.198:54323/hostname] Namespace:hostport-309 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:18:28.576: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:18:28.576: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:18:28.576: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-309/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.4.198%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.4.198, port: 54323 UDP @ 11/25/23 12:18:28.655
  Nov 25 12:18:28.656: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.4.198 54323] Namespace:hostport-309 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:18:28.656: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:18:28.656: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:18:28.656: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-309/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.4.198+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Nov 25 12:18:33.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-309" for this suite. @ 11/25/23 12:18:33.74
• [19.357 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 11/25/23 12:18:33.748
  Nov 25 12:18:33.748: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/25/23 12:18:33.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:18:33.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:18:33.768
  Nov 25 12:18:33.788: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 11/25/23 12:18:35.192
  Nov 25 12:18:35.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-5751 --namespace=crd-publish-openapi-5751 create -f -'
  Nov 25 12:18:35.604: INFO: stderr: ""
  Nov 25 12:18:35.604: INFO: stdout: "e2e-test-crd-publish-openapi-255-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Nov 25 12:18:35.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-5751 --namespace=crd-publish-openapi-5751 delete e2e-test-crd-publish-openapi-255-crds test-foo'
  Nov 25 12:18:35.695: INFO: stderr: ""
  Nov 25 12:18:35.695: INFO: stdout: "e2e-test-crd-publish-openapi-255-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Nov 25 12:18:35.695: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-5751 --namespace=crd-publish-openapi-5751 apply -f -'
  Nov 25 12:18:36.142: INFO: stderr: ""
  Nov 25 12:18:36.142: INFO: stdout: "e2e-test-crd-publish-openapi-255-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Nov 25 12:18:36.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-5751 --namespace=crd-publish-openapi-5751 delete e2e-test-crd-publish-openapi-255-crds test-foo'
  Nov 25 12:18:36.209: INFO: stderr: ""
  Nov 25 12:18:36.209: INFO: stdout: "e2e-test-crd-publish-openapi-255-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 11/25/23 12:18:36.209
  Nov 25 12:18:36.209: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-5751 --namespace=crd-publish-openapi-5751 create -f -'
  Nov 25 12:18:36.454: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 11/25/23 12:18:36.454
  Nov 25 12:18:36.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-5751 --namespace=crd-publish-openapi-5751 create -f -'
  Nov 25 12:18:36.703: INFO: rc: 1
  Nov 25 12:18:36.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-5751 --namespace=crd-publish-openapi-5751 apply -f -'
  Nov 25 12:18:36.959: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 11/25/23 12:18:36.959
  Nov 25 12:18:36.959: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-5751 --namespace=crd-publish-openapi-5751 create -f -'
  Nov 25 12:18:37.235: INFO: rc: 1
  Nov 25 12:18:37.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-5751 --namespace=crd-publish-openapi-5751 apply -f -'
  Nov 25 12:18:37.483: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 11/25/23 12:18:37.483
  Nov 25 12:18:37.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-5751 explain e2e-test-crd-publish-openapi-255-crds'
  Nov 25 12:18:37.720: INFO: stderr: ""
  Nov 25 12:18:37.720: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-255-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 11/25/23 12:18:37.72
  Nov 25 12:18:37.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-5751 explain e2e-test-crd-publish-openapi-255-crds.metadata'
  Nov 25 12:18:37.987: INFO: stderr: ""
  Nov 25 12:18:37.987: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-255-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Nov 25 12:18:37.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-5751 explain e2e-test-crd-publish-openapi-255-crds.spec'
  Nov 25 12:18:38.223: INFO: stderr: ""
  Nov 25 12:18:38.223: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-255-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Nov 25 12:18:38.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-5751 explain e2e-test-crd-publish-openapi-255-crds.spec.bars'
  Nov 25 12:18:38.472: INFO: stderr: ""
  Nov 25 12:18:38.472: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-255-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 11/25/23 12:18:38.473
  Nov 25 12:18:38.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-5751 explain e2e-test-crd-publish-openapi-255-crds.spec.bars2'
  Nov 25 12:18:38.607: INFO: rc: 1
  Nov 25 12:18:39.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5751" for this suite. @ 11/25/23 12:18:39.925
• [6.184 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 11/25/23 12:18:39.933
  Nov 25 12:18:39.933: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 12:18:39.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:18:39.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:18:39.953
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 12:18:39.957
  STEP: Saw pod success @ 11/25/23 12:18:43.981
  Nov 25 12:18:43.986: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-2858e7bb-ffb4-4db8-91ea-8bf58ddf46f5 container client-container: <nil>
  STEP: delete the pod @ 11/25/23 12:18:44.001
  Nov 25 12:18:44.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6593" for this suite. @ 11/25/23 12:18:44.022
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 11/25/23 12:18:44.033
  Nov 25 12:18:44.033: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename sched-pred @ 11/25/23 12:18:44.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:18:44.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:18:44.062
  Nov 25 12:18:44.066: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov 25 12:18:44.075: INFO: Waiting for terminating namespaces to be deleted...
  Nov 25 12:18:44.079: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-22-130 before test
  Nov 25 12:18:44.085: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-s48l6 from ingress-nginx-kubernetes-worker started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 12:18:44.085: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov 25 12:18:44.085: INFO: nginx-ingress-controller-kubernetes-worker-h97gq from ingress-nginx-kubernetes-worker started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 12:18:44.085: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 25 12:18:44.085: INFO: calico-node-kk5hk from kube-system started at 2023-11-25 12:05:43 +0000 UTC (1 container statuses recorded)
  Nov 25 12:18:44.085: INFO: 	Container calico-node ready: true, restart count 0
  Nov 25 12:18:44.085: INFO: coredns-59cfb5bf46-hqlmw from kube-system started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 12:18:44.085: INFO: 	Container coredns ready: true, restart count 0
  Nov 25 12:18:44.085: INFO: kube-state-metrics-78c475f58b-stptt from kube-system started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 12:18:44.085: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov 25 12:18:44.085: INFO: metrics-server-v0.6.3-69d7fbfdf8-frwh6 from kube-system started at 2023-11-25 12:06:05 +0000 UTC (2 container statuses recorded)
  Nov 25 12:18:44.085: INFO: 	Container metrics-server ready: true, restart count 0
  Nov 25 12:18:44.085: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov 25 12:18:44.085: INFO: dashboard-metrics-scraper-5dd7cb5fc-lh87v from kubernetes-dashboard started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 12:18:44.085: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov 25 12:18:44.086: INFO: kubernetes-dashboard-7b899cb9d9-77vb9 from kubernetes-dashboard started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 12:18:44.086: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov 25 12:18:44.086: INFO: sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-7nrjs from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 12:18:44.086: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 12:18:44.086: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 25 12:18:44.086: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-4-198 before test
  Nov 25 12:18:44.092: INFO: nginx-ingress-controller-kubernetes-worker-zt7jm from ingress-nginx-kubernetes-worker started at 2023-11-25 12:06:22 +0000 UTC (1 container statuses recorded)
  Nov 25 12:18:44.092: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 25 12:18:44.092: INFO: calico-node-hl85s from kube-system started at 2023-11-25 12:05:44 +0000 UTC (1 container statuses recorded)
  Nov 25 12:18:44.092: INFO: 	Container calico-node ready: true, restart count 0
  Nov 25 12:18:44.092: INFO: sonobuoy-e2e-job-ecda927ab6f44d27 from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 12:18:44.092: INFO: 	Container e2e ready: true, restart count 0
  Nov 25 12:18:44.092: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 12:18:44.092: INFO: sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-jpcgl from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 12:18:44.092: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 12:18:44.092: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 25 12:18:44.092: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-85-186 before test
  Nov 25 12:18:44.099: INFO: nginx-ingress-controller-kubernetes-worker-psps2 from ingress-nginx-kubernetes-worker started at 2023-11-25 12:06:06 +0000 UTC (1 container statuses recorded)
  Nov 25 12:18:44.099: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 25 12:18:44.099: INFO: calico-node-k8nh6 from kube-system started at 2023-11-25 12:05:46 +0000 UTC (1 container statuses recorded)
  Nov 25 12:18:44.099: INFO: 	Container calico-node ready: true, restart count 0
  Nov 25 12:18:44.099: INFO: sonobuoy from sonobuoy started at 2023-11-25 12:12:47 +0000 UTC (1 container statuses recorded)
  Nov 25 12:18:44.099: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov 25 12:18:44.099: INFO: sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-bwfff from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 12:18:44.099: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 12:18:44.099: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/25/23 12:18:44.099
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/25/23 12:18:46.123
  STEP: Trying to apply a random label on the found node. @ 11/25/23 12:18:46.141
  STEP: verifying the node has the label kubernetes.io/e2e-a3f5420d-8602-436d-8263-ec97dd9dc724 95 @ 11/25/23 12:18:46.153
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 11/25/23 12:18:46.159
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.85.186 on the node which pod4 resides and expect not scheduled @ 11/25/23 12:18:48.175
  STEP: removing the label kubernetes.io/e2e-a3f5420d-8602-436d-8263-ec97dd9dc724 off the node ip-172-31-85-186 @ 11/25/23 12:23:48.185
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-a3f5420d-8602-436d-8263-ec97dd9dc724 @ 11/25/23 12:23:48.199
  Nov 25 12:23:48.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7522" for this suite. @ 11/25/23 12:23:48.208
• [304.183 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 11/25/23 12:23:48.216
  Nov 25 12:23:48.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename sched-preemption @ 11/25/23 12:23:48.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:23:48.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:23:48.237
  Nov 25 12:23:48.255: INFO: Waiting up to 1m0s for all nodes to be ready
  Nov 25 12:24:48.280: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/25/23 12:24:48.284
  Nov 25 12:24:48.284: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/25/23 12:24:48.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:24:48.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:24:48.306
  STEP: Finding an available node @ 11/25/23 12:24:48.31
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/25/23 12:24:48.31
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/25/23 12:24:50.335
  Nov 25 12:24:50.348: INFO: found a healthy node: ip-172-31-85-186
  Nov 25 12:24:56.431: INFO: pods created so far: [1 1 1]
  Nov 25 12:24:56.431: INFO: length of pods created so far: 3
  Nov 25 12:24:58.444: INFO: pods created so far: [2 2 1]
  Nov 25 12:25:05.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 25 12:25:05.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2889" for this suite. @ 11/25/23 12:25:05.53
  STEP: Destroying namespace "sched-preemption-305" for this suite. @ 11/25/23 12:25:05.537
• [77.330 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 11/25/23 12:25:05.547
  Nov 25 12:25:05.547: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 12:25:05.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:25:05.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:25:05.57
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/25/23 12:25:05.574
  STEP: Saw pod success @ 11/25/23 12:25:09.603
  Nov 25 12:25:09.610: INFO: Trying to get logs from node ip-172-31-4-198 pod pod-8f01d047-59b5-4660-9d03-e4fa8ac60352 container test-container: <nil>
  STEP: delete the pod @ 11/25/23 12:25:09.638
  Nov 25 12:25:09.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4953" for this suite. @ 11/25/23 12:25:09.664
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 11/25/23 12:25:09.674
  Nov 25 12:25:09.674: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename namespaces @ 11/25/23 12:25:09.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:25:09.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:25:09.692
  STEP: creating a Namespace @ 11/25/23 12:25:09.696
  STEP: patching the Namespace @ 11/25/23 12:25:09.713
  STEP: get the Namespace and ensuring it has the label @ 11/25/23 12:25:09.72
  Nov 25 12:25:09.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2056" for this suite. @ 11/25/23 12:25:09.728
  STEP: Destroying namespace "nspatchtest-780d2396-1d33-45ef-bcb0-5172c901fe3c-4702" for this suite. @ 11/25/23 12:25:09.735
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 11/25/23 12:25:09.744
  Nov 25 12:25:09.744: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 12:25:09.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:25:09.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:25:09.765
  STEP: validating cluster-info @ 11/25/23 12:25:09.769
  Nov 25 12:25:09.769: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5809 cluster-info'
  Nov 25 12:25:09.830: INFO: stderr: ""
  Nov 25 12:25:09.830: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Nov 25 12:25:09.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5809" for this suite. @ 11/25/23 12:25:09.834
• [0.097 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 11/25/23 12:25:09.842
  Nov 25 12:25:09.842: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 12:25:09.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:25:09.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:25:09.865
  STEP: Creating configMap with name configmap-test-volume-5664c06a-562b-4cb3-8005-d22d2bf3500f @ 11/25/23 12:25:09.869
  STEP: Creating a pod to test consume configMaps @ 11/25/23 12:25:09.875
  STEP: Saw pod success @ 11/25/23 12:25:13.899
  Nov 25 12:25:13.903: INFO: Trying to get logs from node ip-172-31-4-198 pod pod-configmaps-4bd428d4-7952-4f77-b03e-55466e29d4cc container configmap-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 12:25:13.91
  Nov 25 12:25:13.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9099" for this suite. @ 11/25/23 12:25:13.931
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:331
  STEP: Creating a kubernetes client @ 11/25/23 12:25:13.943
  Nov 25 12:25:13.943: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename statefulset @ 11/25/23 12:25:13.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:25:13.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:25:13.966
  STEP: Creating service test in namespace statefulset-6270 @ 11/25/23 12:25:13.97
  STEP: Creating a new StatefulSet @ 11/25/23 12:25:13.976
  Nov 25 12:25:13.991: INFO: Found 0 stateful pods, waiting for 3
  Nov 25 12:25:23.999: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 25 12:25:23.999: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 25 12:25:23.999: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/25/23 12:25:24.011
  Nov 25 12:25:24.033: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 11/25/23 12:25:24.033
  STEP: Not applying an update when the partition is greater than the number of replicas @ 11/25/23 12:25:34.053
  STEP: Performing a canary update @ 11/25/23 12:25:34.053
  Nov 25 12:25:34.075: INFO: Updating stateful set ss2
  Nov 25 12:25:34.083: INFO: Waiting for Pod statefulset-6270/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 11/25/23 12:25:44.094
  Nov 25 12:25:44.133: INFO: Found 1 stateful pods, waiting for 3
  Nov 25 12:25:54.142: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 25 12:25:54.142: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 25 12:25:54.142: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 11/25/23 12:25:54.149
  Nov 25 12:25:54.171: INFO: Updating stateful set ss2
  Nov 25 12:25:54.180: INFO: Waiting for Pod statefulset-6270/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Nov 25 12:26:04.215: INFO: Updating stateful set ss2
  Nov 25 12:26:04.225: INFO: Waiting for StatefulSet statefulset-6270/ss2 to complete update
  Nov 25 12:26:04.225: INFO: Waiting for Pod statefulset-6270/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Nov 25 12:26:14.240: INFO: Deleting all statefulset in ns statefulset-6270
  Nov 25 12:26:14.243: INFO: Scaling statefulset ss2 to 0
  Nov 25 12:26:24.270: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 25 12:26:24.275: INFO: Deleting statefulset ss2
  Nov 25 12:26:24.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6270" for this suite. @ 11/25/23 12:26:24.303
• [70.368 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 11/25/23 12:26:24.311
  Nov 25 12:26:24.311: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/25/23 12:26:24.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:26:24.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:26:24.335
  STEP: fetching the /apis discovery document @ 11/25/23 12:26:24.34
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 11/25/23 12:26:24.341
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 11/25/23 12:26:24.341
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 11/25/23 12:26:24.341
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 11/25/23 12:26:24.343
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 11/25/23 12:26:24.343
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 11/25/23 12:26:24.345
  Nov 25 12:26:24.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8204" for this suite. @ 11/25/23 12:26:24.35
• [0.049 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 11/25/23 12:26:24.361
  Nov 25 12:26:24.361: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/25/23 12:26:24.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:26:24.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:26:24.394
  Nov 25 12:26:24.409: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/25/23 12:26:25.692
  Nov 25 12:26:25.692: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-3995 --namespace=crd-publish-openapi-3995 create -f -'
  Nov 25 12:26:26.041: INFO: stderr: ""
  Nov 25 12:26:26.041: INFO: stdout: "e2e-test-crd-publish-openapi-3659-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Nov 25 12:26:26.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-3995 --namespace=crd-publish-openapi-3995 delete e2e-test-crd-publish-openapi-3659-crds test-cr'
  Nov 25 12:26:26.116: INFO: stderr: ""
  Nov 25 12:26:26.116: INFO: stdout: "e2e-test-crd-publish-openapi-3659-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Nov 25 12:26:26.116: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-3995 --namespace=crd-publish-openapi-3995 apply -f -'
  Nov 25 12:26:26.553: INFO: stderr: ""
  Nov 25 12:26:26.553: INFO: stdout: "e2e-test-crd-publish-openapi-3659-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Nov 25 12:26:26.553: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-3995 --namespace=crd-publish-openapi-3995 delete e2e-test-crd-publish-openapi-3659-crds test-cr'
  Nov 25 12:26:26.616: INFO: stderr: ""
  Nov 25 12:26:26.616: INFO: stdout: "e2e-test-crd-publish-openapi-3659-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/25/23 12:26:26.616
  Nov 25 12:26:26.617: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-3995 explain e2e-test-crd-publish-openapi-3659-crds'
  Nov 25 12:26:26.743: INFO: stderr: ""
  Nov 25 12:26:26.743: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-3659-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Nov 25 12:26:28.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3995" for this suite. @ 11/25/23 12:26:28.118
• [3.765 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 11/25/23 12:26:28.127
  Nov 25 12:26:28.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename replicaset @ 11/25/23 12:26:28.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:26:28.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:26:28.144
  STEP: Create a ReplicaSet @ 11/25/23 12:26:28.147
  STEP: Verify that the required pods have come up @ 11/25/23 12:26:28.152
  Nov 25 12:26:28.154: INFO: Pod name sample-pod: Found 0 pods out of 3
  Nov 25 12:26:33.160: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 11/25/23 12:26:33.16
  Nov 25 12:26:33.164: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 11/25/23 12:26:33.164
  STEP: DeleteCollection of the ReplicaSets @ 11/25/23 12:26:33.167
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 11/25/23 12:26:33.176
  Nov 25 12:26:33.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8742" for this suite. @ 11/25/23 12:26:33.191
• [5.083 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 11/25/23 12:26:33.21
  Nov 25 12:26:33.210: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename security-context-test @ 11/25/23 12:26:33.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:26:33.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:26:33.229
  Nov 25 12:26:37.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-941" for this suite. @ 11/25/23 12:26:37.279
• [4.074 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 11/25/23 12:26:37.285
  Nov 25 12:26:37.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename subpath @ 11/25/23 12:26:37.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:26:37.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:26:37.307
  STEP: Setting up data @ 11/25/23 12:26:37.311
  STEP: Creating pod pod-subpath-test-secret-8gcd @ 11/25/23 12:26:37.319
  STEP: Creating a pod to test atomic-volume-subpath @ 11/25/23 12:26:37.319
  STEP: Saw pod success @ 11/25/23 12:27:01.415
  Nov 25 12:27:01.423: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-subpath-test-secret-8gcd container test-container-subpath-secret-8gcd: <nil>
  STEP: delete the pod @ 11/25/23 12:27:01.433
  STEP: Deleting pod pod-subpath-test-secret-8gcd @ 11/25/23 12:27:01.454
  Nov 25 12:27:01.454: INFO: Deleting pod "pod-subpath-test-secret-8gcd" in namespace "subpath-111"
  Nov 25 12:27:01.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-111" for this suite. @ 11/25/23 12:27:01.462
• [24.186 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 11/25/23 12:27:01.472
  Nov 25 12:27:01.472: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename job @ 11/25/23 12:27:01.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:27:01.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:27:01.496
  STEP: Creating a job @ 11/25/23 12:27:01.543
  STEP: Ensuring job reaches completions @ 11/25/23 12:27:01.552
  Nov 25 12:27:11.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-323" for this suite. @ 11/25/23 12:27:11.56
• [10.095 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 11/25/23 12:27:11.567
  Nov 25 12:27:11.567: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 12:27:11.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:27:11.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:27:11.588
  STEP: Creating configMap with name projected-configmap-test-volume-map-a9a51e32-1c6c-40b5-995d-2d1bff4e5195 @ 11/25/23 12:27:11.591
  STEP: Creating a pod to test consume configMaps @ 11/25/23 12:27:11.595
  STEP: Saw pod success @ 11/25/23 12:27:15.621
  Nov 25 12:27:15.624: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-projected-configmaps-0d117687-c953-45fd-a990-ea3925325780 container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 12:27:15.631
  Nov 25 12:27:15.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-838" for this suite. @ 11/25/23 12:27:15.651
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 11/25/23 12:27:15.659
  Nov 25 12:27:15.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pods @ 11/25/23 12:27:15.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:27:15.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:27:15.679
  STEP: Create set of pods @ 11/25/23 12:27:15.682
  Nov 25 12:27:15.690: INFO: created test-pod-1
  Nov 25 12:27:15.698: INFO: created test-pod-2
  Nov 25 12:27:15.706: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 11/25/23 12:27:15.706
  STEP: waiting for all pods to be deleted @ 11/25/23 12:27:17.764
  Nov 25 12:27:17.769: INFO: Pod quantity 3 is different from expected quantity 0
  Nov 25 12:27:18.773: INFO: Pod quantity 3 is different from expected quantity 0
  Nov 25 12:27:19.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7410" for this suite. @ 11/25/23 12:27:19.777
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 11/25/23 12:27:19.787
  Nov 25 12:27:19.787: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename disruption @ 11/25/23 12:27:19.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:27:19.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:27:19.808
  STEP: Waiting for the pdb to be processed @ 11/25/23 12:27:19.817
  STEP: Updating PodDisruptionBudget status @ 11/25/23 12:27:21.824
  STEP: Waiting for all pods to be running @ 11/25/23 12:27:21.834
  Nov 25 12:27:21.838: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 11/25/23 12:27:23.843
  STEP: Waiting for the pdb to be processed @ 11/25/23 12:27:23.857
  STEP: Patching PodDisruptionBudget status @ 11/25/23 12:27:23.864
  STEP: Waiting for the pdb to be processed @ 11/25/23 12:27:23.873
  Nov 25 12:27:23.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-767" for this suite. @ 11/25/23 12:27:23.881
• [4.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 11/25/23 12:27:23.89
  Nov 25 12:27:23.890: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename resourcequota @ 11/25/23 12:27:23.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:27:23.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:27:23.911
  STEP: Counting existing ResourceQuota @ 11/25/23 12:27:40.918
  STEP: Creating a ResourceQuota @ 11/25/23 12:27:45.922
  STEP: Ensuring resource quota status is calculated @ 11/25/23 12:27:45.927
  STEP: Creating a ConfigMap @ 11/25/23 12:27:47.931
  STEP: Ensuring resource quota status captures configMap creation @ 11/25/23 12:27:47.943
  STEP: Deleting a ConfigMap @ 11/25/23 12:27:49.947
  STEP: Ensuring resource quota status released usage @ 11/25/23 12:27:49.954
  Nov 25 12:27:51.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5642" for this suite. @ 11/25/23 12:27:51.961
• [28.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 11/25/23 12:27:51.971
  Nov 25 12:27:51.971: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 12:27:51.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:27:51.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:27:51.993
  Nov 25 12:27:52.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4521" for this suite. @ 11/25/23 12:27:52.04
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 11/25/23 12:27:52.049
  Nov 25 12:27:52.049: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 12:27:52.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:27:52.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:27:52.065
  STEP: Setting up server cert @ 11/25/23 12:27:52.09
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 12:27:52.486
  STEP: Deploying the webhook pod @ 11/25/23 12:27:52.496
  STEP: Wait for the deployment to be ready @ 11/25/23 12:27:52.509
  Nov 25 12:27:52.516: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/25/23 12:27:54.527
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 12:27:54.536
  Nov 25 12:27:55.536: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 11/25/23 12:27:55.544
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 11/25/23 12:27:55.564
  STEP: Creating a configMap that should not be mutated @ 11/25/23 12:27:55.571
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 11/25/23 12:27:55.581
  STEP: Creating a configMap that should be mutated @ 11/25/23 12:27:55.589
  Nov 25 12:27:55.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5618" for this suite. @ 11/25/23 12:27:55.656
  STEP: Destroying namespace "webhook-markers-2291" for this suite. @ 11/25/23 12:27:55.666
• [3.624 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 11/25/23 12:27:55.673
  Nov 25 12:27:55.673: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename podtemplate @ 11/25/23 12:27:55.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:27:55.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:27:55.693
  Nov 25 12:27:55.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8438" for this suite. @ 11/25/23 12:27:55.725
• [0.057 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 11/25/23 12:27:55.731
  Nov 25 12:27:55.731: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubelet-test @ 11/25/23 12:27:55.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:27:55.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:27:55.751
  Nov 25 12:27:59.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7006" for this suite. @ 11/25/23 12:27:59.776
• [4.051 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 11/25/23 12:27:59.783
  Nov 25 12:27:59.783: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 12:27:59.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:27:59.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:27:59.798
  STEP: Creating configMap configmap-8949/configmap-test-c136d094-eb3a-4d19-b0b6-f00cebb706f7 @ 11/25/23 12:27:59.801
  STEP: Creating a pod to test consume configMaps @ 11/25/23 12:27:59.805
  STEP: Saw pod success @ 11/25/23 12:28:03.825
  Nov 25 12:28:03.828: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-configmaps-dbca496a-1360-4c69-b9aa-0c8cf45a8086 container env-test: <nil>
  STEP: delete the pod @ 11/25/23 12:28:03.835
  Nov 25 12:28:03.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8949" for this suite. @ 11/25/23 12:28:03.854
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 11/25/23 12:28:03.862
  Nov 25 12:28:03.862: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 12:28:03.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:28:03.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:28:03.885
  STEP: Creating configMap with name configmap-test-upd-3c98dbea-add9-47ae-9621-9ee4ea459ced @ 11/25/23 12:28:03.891
  STEP: Creating the pod @ 11/25/23 12:28:03.895
  STEP: Waiting for pod with text data @ 11/25/23 12:28:05.915
  STEP: Waiting for pod with binary data @ 11/25/23 12:28:05.921
  Nov 25 12:28:05.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9404" for this suite. @ 11/25/23 12:28:05.931
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 11/25/23 12:28:05.937
  Nov 25 12:28:05.938: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename secrets @ 11/25/23 12:28:05.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:28:05.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:28:05.954
  Nov 25 12:28:05.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9540" for this suite. @ 11/25/23 12:28:06
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 11/25/23 12:28:06.008
  Nov 25 12:28:06.008: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename crd-webhook @ 11/25/23 12:28:06.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:28:06.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:28:06.038
  STEP: Setting up server cert @ 11/25/23 12:28:06.041
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/25/23 12:28:06.535
  STEP: Deploying the custom resource conversion webhook pod @ 11/25/23 12:28:06.541
  STEP: Wait for the deployment to be ready @ 11/25/23 12:28:06.554
  Nov 25 12:28:06.563: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/25/23 12:28:08.574
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 12:28:08.583
  Nov 25 12:28:09.584: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Nov 25 12:28:09.590: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Creating a v1 custom resource @ 11/25/23 12:28:12.156
  STEP: Create a v2 custom resource @ 11/25/23 12:28:12.172
  STEP: List CRs in v1 @ 11/25/23 12:28:12.217
  STEP: List CRs in v2 @ 11/25/23 12:28:12.222
  Nov 25 12:28:12.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3198" for this suite. @ 11/25/23 12:28:12.792
• [6.791 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 11/25/23 12:28:12.8
  Nov 25 12:28:12.800: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename secrets @ 11/25/23 12:28:12.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:28:12.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:28:12.827
  STEP: Creating secret with name secret-test-eddf08af-7b08-48b1-9d1a-4e2a7569b890 @ 11/25/23 12:28:12.83
  STEP: Creating a pod to test consume secrets @ 11/25/23 12:28:12.838
  STEP: Saw pod success @ 11/25/23 12:28:16.863
  Nov 25 12:28:16.866: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-secrets-5676c4e1-ec40-433d-8afd-85ff65f79c4e container secret-env-test: <nil>
  STEP: delete the pod @ 11/25/23 12:28:16.872
  Nov 25 12:28:16.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7518" for this suite. @ 11/25/23 12:28:16.891
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 11/25/23 12:28:16.897
  Nov 25 12:28:16.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename secrets @ 11/25/23 12:28:16.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:28:16.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:28:16.913
  STEP: Creating secret with name secret-test-67bc5ccf-b5fe-4968-a18d-cc4902d1ba38 @ 11/25/23 12:28:16.917
  STEP: Creating a pod to test consume secrets @ 11/25/23 12:28:16.921
  STEP: Saw pod success @ 11/25/23 12:28:20.942
  Nov 25 12:28:20.945: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-secrets-67f62a41-6a89-40bd-80e9-24e2155cacc2 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 12:28:20.951
  Nov 25 12:28:20.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8411" for this suite. @ 11/25/23 12:28:20.97
• [4.079 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 11/25/23 12:28:20.977
  Nov 25 12:28:20.977: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename replication-controller @ 11/25/23 12:28:20.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:28:20.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:28:20.995
  STEP: Given a ReplicationController is created @ 11/25/23 12:28:20.998
  STEP: When the matched label of one of its pods change @ 11/25/23 12:28:21.005
  Nov 25 12:28:21.008: INFO: Pod name pod-release: Found 0 pods out of 1
  Nov 25 12:28:26.012: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/25/23 12:28:26.037
  Nov 25 12:28:27.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7280" for this suite. @ 11/25/23 12:28:27.048
• [6.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 11/25/23 12:28:27.058
  Nov 25 12:28:27.058: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 12:28:27.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:28:27.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:28:27.076
  STEP: Creating configMap that has name configmap-test-emptyKey-0f938d84-b293-4245-b7cc-59de508663c7 @ 11/25/23 12:28:27.079
  Nov 25 12:28:27.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8691" for this suite. @ 11/25/23 12:28:27.084
• [0.032 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 11/25/23 12:28:27.09
  Nov 25 12:28:27.090: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 12:28:27.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:28:27.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:28:27.104
  STEP: Setting up server cert @ 11/25/23 12:28:27.127
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 12:28:27.368
  STEP: Deploying the webhook pod @ 11/25/23 12:28:27.376
  STEP: Wait for the deployment to be ready @ 11/25/23 12:28:27.386
  Nov 25 12:28:27.394: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/25/23 12:28:29.405
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 12:28:29.417
  Nov 25 12:28:30.418: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/25/23 12:28:30.425
  STEP: create a pod @ 11/25/23 12:28:30.439
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 11/25/23 12:28:32.455
  Nov 25 12:28:32.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=webhook-9465 attach --namespace=webhook-9465 to-be-attached-pod -i -c=container1'
  Nov 25 12:28:32.649: INFO: rc: 1
  Nov 25 12:28:32.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9465" for this suite. @ 11/25/23 12:28:32.713
  STEP: Destroying namespace "webhook-markers-5722" for this suite. @ 11/25/23 12:28:32.724
• [5.640 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 11/25/23 12:28:32.732
  Nov 25 12:28:32.732: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 12:28:32.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:28:32.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:28:32.755
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-4886 @ 11/25/23 12:28:32.758
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/25/23 12:28:32.771
  STEP: creating service externalsvc in namespace services-4886 @ 11/25/23 12:28:32.771
  STEP: creating replication controller externalsvc in namespace services-4886 @ 11/25/23 12:28:32.783
  I1125 12:28:32.790446      17 runners.go:197] Created replication controller with name: externalsvc, namespace: services-4886, replica count: 2
  I1125 12:28:35.841568      17 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 11/25/23 12:28:35.845
  Nov 25 12:28:35.861: INFO: Creating new exec pod
  Nov 25 12:28:37.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-4886 exec execpodffhhc -- /bin/sh -x -c nslookup nodeport-service.services-4886.svc.cluster.local'
  Nov 25 12:28:38.066: INFO: stderr: "+ nslookup nodeport-service.services-4886.svc.cluster.local\n"
  Nov 25 12:28:38.066: INFO: stdout: "Server:\t\t10.152.183.212\nAddress:\t10.152.183.212#53\n\nnodeport-service.services-4886.svc.cluster.local\tcanonical name = externalsvc.services-4886.svc.cluster.local.\nName:\texternalsvc.services-4886.svc.cluster.local\nAddress: 10.152.183.220\n\n"
  Nov 25 12:28:38.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-4886, will wait for the garbage collector to delete the pods @ 11/25/23 12:28:38.071
  Nov 25 12:28:38.131: INFO: Deleting ReplicationController externalsvc took: 5.654268ms
  Nov 25 12:28:38.231: INFO: Terminating ReplicationController externalsvc pods took: 100.479841ms
  Nov 25 12:28:41.553: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-4886" for this suite. @ 11/25/23 12:28:41.565
• [8.840 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 11/25/23 12:28:41.573
  Nov 25 12:28:41.573: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubelet-test @ 11/25/23 12:28:41.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:28:41.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:28:41.591
  Nov 25 12:28:43.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8672" for this suite. @ 11/25/23 12:28:43.62
• [2.053 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 11/25/23 12:28:43.627
  Nov 25 12:28:43.627: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 12:28:43.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:28:43.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:28:43.645
  STEP: Setting up server cert @ 11/25/23 12:28:43.669
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 12:28:44.238
  STEP: Deploying the webhook pod @ 11/25/23 12:28:44.243
  STEP: Wait for the deployment to be ready @ 11/25/23 12:28:44.255
  Nov 25 12:28:44.264: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/25/23 12:28:46.275
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 12:28:46.285
  Nov 25 12:28:47.285: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 25 12:28:47.292: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6647-crds.webhook.example.com via the AdmissionRegistration API @ 11/25/23 12:28:47.802
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/25/23 12:28:47.817
  Nov 25 12:28:49.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6291" for this suite. @ 11/25/23 12:28:50.425
  STEP: Destroying namespace "webhook-markers-7397" for this suite. @ 11/25/23 12:28:50.433
• [6.815 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 11/25/23 12:28:50.443
  Nov 25 12:28:50.443: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/25/23 12:28:50.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:28:50.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:28:50.469
  STEP: create the container to handle the HTTPGet hook request. @ 11/25/23 12:28:50.476
  STEP: create the pod with lifecycle hook @ 11/25/23 12:28:52.497
  STEP: check poststart hook @ 11/25/23 12:28:54.514
  STEP: delete the pod with lifecycle hook @ 11/25/23 12:28:54.532
  Nov 25 12:28:58.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3929" for this suite. @ 11/25/23 12:28:58.555
• [8.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 11/25/23 12:28:58.566
  Nov 25 12:28:58.566: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename limitrange @ 11/25/23 12:28:58.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:28:58.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:28:58.585
  STEP: Creating a LimitRange @ 11/25/23 12:28:58.588
  STEP: Setting up watch @ 11/25/23 12:28:58.588
  STEP: Submitting a LimitRange @ 11/25/23 12:28:58.691
  STEP: Verifying LimitRange creation was observed @ 11/25/23 12:28:58.697
  STEP: Fetching the LimitRange to ensure it has proper values @ 11/25/23 12:28:58.697
  Nov 25 12:28:58.699: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Nov 25 12:28:58.699: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 11/25/23 12:28:58.7
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 11/25/23 12:28:58.704
  Nov 25 12:28:58.708: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Nov 25 12:28:58.708: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 11/25/23 12:28:58.708
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 11/25/23 12:28:58.715
  Nov 25 12:28:58.720: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Nov 25 12:28:58.720: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 11/25/23 12:28:58.72
  STEP: Failing to create a Pod with more than max resources @ 11/25/23 12:28:58.722
  STEP: Updating a LimitRange @ 11/25/23 12:28:58.726
  STEP: Verifying LimitRange updating is effective @ 11/25/23 12:28:58.733
  STEP: Creating a Pod with less than former min resources @ 11/25/23 12:29:00.737
  STEP: Failing to create a Pod with more than max resources @ 11/25/23 12:29:00.744
  STEP: Deleting a LimitRange @ 11/25/23 12:29:00.747
  STEP: Verifying the LimitRange was deleted @ 11/25/23 12:29:00.756
  Nov 25 12:29:05.760: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 11/25/23 12:29:05.76
  Nov 25 12:29:05.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7076" for this suite. @ 11/25/23 12:29:05.774
• [7.217 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 11/25/23 12:29:05.784
  Nov 25 12:29:05.785: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 12:29:05.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:29:05.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:29:05.803
  STEP: Creating projection with secret that has name projected-secret-test-map-1c31a305-5c40-43ac-a4a4-4041ec25ec9c @ 11/25/23 12:29:05.806
  STEP: Creating a pod to test consume secrets @ 11/25/23 12:29:05.811
  STEP: Saw pod success @ 11/25/23 12:29:09.83
  Nov 25 12:29:09.834: INFO: Trying to get logs from node ip-172-31-4-198 pod pod-projected-secrets-a54bf5aa-f62f-499c-a4c8-66d6ea25642c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 12:29:09.847
  Nov 25 12:29:09.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4985" for this suite. @ 11/25/23 12:29:09.869
• [4.092 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 11/25/23 12:29:09.877
  Nov 25 12:29:09.877: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 12:29:09.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:29:09.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:29:09.898
  STEP: Setting up server cert @ 11/25/23 12:29:09.925
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 12:29:10.454
  STEP: Deploying the webhook pod @ 11/25/23 12:29:10.464
  STEP: Wait for the deployment to be ready @ 11/25/23 12:29:10.476
  Nov 25 12:29:10.483: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/25/23 12:29:12.492
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 12:29:12.502
  Nov 25 12:29:13.503: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 25 12:29:13.509: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5862-crds.webhook.example.com via the AdmissionRegistration API @ 11/25/23 12:29:14.022
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/25/23 12:29:14.038
  Nov 25 12:29:16.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5625" for this suite. @ 11/25/23 12:29:16.709
  STEP: Destroying namespace "webhook-markers-5819" for this suite. @ 11/25/23 12:29:16.717
• [6.845 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 11/25/23 12:29:16.727
  Nov 25 12:29:16.727: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 12:29:16.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:29:16.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:29:16.746
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/25/23 12:29:16.751
  STEP: Saw pod success @ 11/25/23 12:29:20.782
  Nov 25 12:29:20.784: INFO: Trying to get logs from node ip-172-31-4-198 pod pod-d4dd59dd-6243-4511-8f14-207055821da9 container test-container: <nil>
  STEP: delete the pod @ 11/25/23 12:29:20.791
  Nov 25 12:29:20.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1129" for this suite. @ 11/25/23 12:29:20.811
• [4.090 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 11/25/23 12:29:20.817
  Nov 25 12:29:20.817: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pods @ 11/25/23 12:29:20.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:29:20.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:29:20.836
  STEP: creating pod @ 11/25/23 12:29:20.838
  Nov 25 12:29:22.863: INFO: Pod pod-hostip-c4ae49f0-bd7c-4023-8e4d-1e11ee3ef7b2 has hostIP: 172.31.85.186
  Nov 25 12:29:22.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8500" for this suite. @ 11/25/23 12:29:22.866
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 11/25/23 12:29:22.874
  Nov 25 12:29:22.874: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename secrets @ 11/25/23 12:29:22.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:29:22.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:29:22.891
  STEP: Creating secret with name secret-test-map-2bb9a863-5ded-4e2a-8505-273ace61d056 @ 11/25/23 12:29:22.894
  STEP: Creating a pod to test consume secrets @ 11/25/23 12:29:22.902
  STEP: Saw pod success @ 11/25/23 12:29:26.927
  Nov 25 12:29:26.930: INFO: Trying to get logs from node ip-172-31-4-198 pod pod-secrets-2e0d7175-a4d4-4ade-8586-2eb723b17c2a container secret-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 12:29:26.936
  Nov 25 12:29:26.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7394" for this suite. @ 11/25/23 12:29:26.956
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 11/25/23 12:29:26.963
  Nov 25 12:29:26.963: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename dns @ 11/25/23 12:29:26.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:29:26.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:29:26.982
  STEP: Creating a test headless service @ 11/25/23 12:29:26.985
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7237.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-7237.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7237.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-7237.svc.cluster.local;sleep 1; done
   @ 11/25/23 12:29:26.99
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7237.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7237.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7237.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7237.svc.cluster.local;sleep 1; done
   @ 11/25/23 12:29:26.99
  STEP: creating a pod to probe DNS @ 11/25/23 12:29:26.99
  STEP: submitting the pod to kubernetes @ 11/25/23 12:29:26.99
  STEP: retrieving the pod @ 11/25/23 12:29:29.01
  STEP: looking for the results for each expected name from probers @ 11/25/23 12:29:29.015
  Nov 25 12:29:29.019: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local from pod dns-7237/dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e: the server could not find the requested resource (get pods dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e)
  Nov 25 12:29:29.025: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local from pod dns-7237/dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e: the server could not find the requested resource (get pods dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e)
  Nov 25 12:29:29.028: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7237.svc.cluster.local from pod dns-7237/dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e: the server could not find the requested resource (get pods dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e)
  Nov 25 12:29:29.034: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7237.svc.cluster.local from pod dns-7237/dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e: the server could not find the requested resource (get pods dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e)
  Nov 25 12:29:29.039: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local from pod dns-7237/dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e: the server could not find the requested resource (get pods dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e)
  Nov 25 12:29:29.042: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local from pod dns-7237/dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e: the server could not find the requested resource (get pods dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e)
  Nov 25 12:29:29.045: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7237.svc.cluster.local from pod dns-7237/dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e: the server could not find the requested resource (get pods dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e)
  Nov 25 12:29:29.049: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7237.svc.cluster.local from pod dns-7237/dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e: the server could not find the requested resource (get pods dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e)
  Nov 25 12:29:29.049: INFO: Lookups using dns-7237/dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7237.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7237.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7237.svc.cluster.local jessie_udp@dns-test-service-2.dns-7237.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7237.svc.cluster.local]

  Nov 25 12:29:29.055: INFO: Pod client logs for webserver: 
  Nov 25 12:29:29.061: INFO: Pod client logs for querier: 
  Nov 25 12:29:29.067: INFO: Pod client logs for jessie-querier: 
  Nov 25 12:29:34.095: INFO: DNS probes using dns-7237/dns-test-fdf28bca-cac6-4cda-8c4c-d12be5707d0e succeeded

  Nov 25 12:29:34.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 12:29:34.099
  STEP: deleting the test headless service @ 11/25/23 12:29:34.12
  STEP: Destroying namespace "dns-7237" for this suite. @ 11/25/23 12:29:34.138
• [7.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 11/25/23 12:29:34.149
  Nov 25 12:29:34.149: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 12:29:34.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:29:34.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:29:34.167
  STEP: Setting up server cert @ 11/25/23 12:29:34.191
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 12:29:34.672
  STEP: Deploying the webhook pod @ 11/25/23 12:29:34.679
  STEP: Wait for the deployment to be ready @ 11/25/23 12:29:34.691
  Nov 25 12:29:34.711: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/25/23 12:29:36.72
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 12:29:36.735
  Nov 25 12:29:37.735: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/25/23 12:29:37.805
  STEP: Creating a configMap that should be mutated @ 11/25/23 12:29:37.818
  STEP: Deleting the collection of validation webhooks @ 11/25/23 12:29:37.844
  STEP: Creating a configMap that should not be mutated @ 11/25/23 12:29:37.892
  Nov 25 12:29:37.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7639" for this suite. @ 11/25/23 12:29:37.948
  STEP: Destroying namespace "webhook-markers-1661" for this suite. @ 11/25/23 12:29:37.956
• [3.813 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 11/25/23 12:29:37.963
  Nov 25 12:29:37.963: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename runtimeclass @ 11/25/23 12:29:37.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:29:37.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:29:37.986
  STEP: getting /apis @ 11/25/23 12:29:37.989
  STEP: getting /apis/node.k8s.io @ 11/25/23 12:29:37.992
  STEP: getting /apis/node.k8s.io/v1 @ 11/25/23 12:29:37.993
  STEP: creating @ 11/25/23 12:29:37.994
  STEP: watching @ 11/25/23 12:29:38.011
  Nov 25 12:29:38.011: INFO: starting watch
  STEP: getting @ 11/25/23 12:29:38.016
  STEP: listing @ 11/25/23 12:29:38.018
  STEP: patching @ 11/25/23 12:29:38.021
  STEP: updating @ 11/25/23 12:29:38.025
  Nov 25 12:29:38.030: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 11/25/23 12:29:38.03
  STEP: deleting a collection @ 11/25/23 12:29:38.041
  Nov 25 12:29:38.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9240" for this suite. @ 11/25/23 12:29:38.058
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 11/25/23 12:29:38.068
  Nov 25 12:29:38.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 12:29:38.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:29:38.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:29:38.083
  STEP: Creating projection with secret that has name projected-secret-test-a15780a1-0c1e-4e22-bf3d-780309f2efbb @ 11/25/23 12:29:38.086
  STEP: Creating a pod to test consume secrets @ 11/25/23 12:29:38.091
  STEP: Saw pod success @ 11/25/23 12:29:42.112
  Nov 25 12:29:42.115: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-projected-secrets-05ddf249-7c8f-4046-a2f2-1ea1d164f712 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 12:29:42.121
  Nov 25 12:29:42.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-50" for this suite. @ 11/25/23 12:29:42.143
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 11/25/23 12:29:42.15
  Nov 25 12:29:42.150: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename watch @ 11/25/23 12:29:42.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:29:42.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:29:42.172
  STEP: creating a new configmap @ 11/25/23 12:29:42.174
  STEP: modifying the configmap once @ 11/25/23 12:29:42.179
  STEP: modifying the configmap a second time @ 11/25/23 12:29:42.187
  STEP: deleting the configmap @ 11/25/23 12:29:42.194
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 11/25/23 12:29:42.2
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 11/25/23 12:29:42.201
  Nov 25 12:29:42.201: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9941  1d26fe3b-6300-4543-9753-9f572cd4f2bd 8824 0 2023-11-25 12:29:42 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-11-25 12:29:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 12:29:42.201: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9941  1d26fe3b-6300-4543-9753-9f572cd4f2bd 8825 0 2023-11-25 12:29:42 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-11-25 12:29:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 12:29:42.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9941" for this suite. @ 11/25/23 12:29:42.205
• [0.061 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 11/25/23 12:29:42.211
  Nov 25 12:29:42.211: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 12:29:42.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:29:42.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:29:42.23
  Nov 25 12:29:42.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2215" for this suite. @ 11/25/23 12:29:42.239
• [0.034 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 11/25/23 12:29:42.246
  Nov 25 12:29:42.246: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename events @ 11/25/23 12:29:42.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:29:42.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:29:42.264
  STEP: creating a test event @ 11/25/23 12:29:42.267
  STEP: listing events in all namespaces @ 11/25/23 12:29:42.277
  STEP: listing events in test namespace @ 11/25/23 12:29:42.284
  STEP: listing events with field selection filtering on source @ 11/25/23 12:29:42.287
  STEP: listing events with field selection filtering on reportingController @ 11/25/23 12:29:42.29
  STEP: getting the test event @ 11/25/23 12:29:42.293
  STEP: patching the test event @ 11/25/23 12:29:42.295
  STEP: getting the test event @ 11/25/23 12:29:42.304
  STEP: updating the test event @ 11/25/23 12:29:42.307
  STEP: getting the test event @ 11/25/23 12:29:42.313
  STEP: deleting the test event @ 11/25/23 12:29:42.315
  STEP: listing events in all namespaces @ 11/25/23 12:29:42.322
  STEP: listing events in test namespace @ 11/25/23 12:29:42.33
  Nov 25 12:29:42.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2" for this suite. @ 11/25/23 12:29:42.337
• [0.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 11/25/23 12:29:42.343
  Nov 25 12:29:42.343: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename replicaset @ 11/25/23 12:29:42.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:29:42.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:29:42.36
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 11/25/23 12:29:42.363
  STEP: When a replicaset with a matching selector is created @ 11/25/23 12:29:44.384
  STEP: Then the orphan pod is adopted @ 11/25/23 12:29:44.391
  STEP: When the matched label of one of its pods change @ 11/25/23 12:29:45.402
  Nov 25 12:29:45.406: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/25/23 12:29:45.419
  Nov 25 12:29:46.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1571" for this suite. @ 11/25/23 12:29:46.432
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 11/25/23 12:29:46.442
  Nov 25 12:29:46.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename var-expansion @ 11/25/23 12:29:46.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:29:46.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:29:46.482
  STEP: creating the pod @ 11/25/23 12:29:46.486
  STEP: waiting for pod running @ 11/25/23 12:29:46.497
  STEP: creating a file in subpath @ 11/25/23 12:29:48.505
  Nov 25 12:29:48.509: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-7979 PodName:var-expansion-bcf82709-d457-4c86-85ab-edeb2c4fae19 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:29:48.509: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:29:48.509: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:29:48.510: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-7979/pods/var-expansion-bcf82709-d457-4c86-85ab-edeb2c4fae19/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 11/25/23 12:29:48.584
  Nov 25 12:29:48.588: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-7979 PodName:var-expansion-bcf82709-d457-4c86-85ab-edeb2c4fae19 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:29:48.588: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:29:48.589: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:29:48.589: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-7979/pods/var-expansion-bcf82709-d457-4c86-85ab-edeb2c4fae19/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 11/25/23 12:29:48.669
  Nov 25 12:29:49.183: INFO: Successfully updated pod "var-expansion-bcf82709-d457-4c86-85ab-edeb2c4fae19"
  STEP: waiting for annotated pod running @ 11/25/23 12:29:49.184
  STEP: deleting the pod gracefully @ 11/25/23 12:29:49.189
  Nov 25 12:29:49.189: INFO: Deleting pod "var-expansion-bcf82709-d457-4c86-85ab-edeb2c4fae19" in namespace "var-expansion-7979"
  Nov 25 12:29:49.198: INFO: Wait up to 5m0s for pod "var-expansion-bcf82709-d457-4c86-85ab-edeb2c4fae19" to be fully deleted
  Nov 25 12:30:21.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7979" for this suite. @ 11/25/23 12:30:21.277
• [34.841 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 11/25/23 12:30:21.286
  Nov 25 12:30:21.286: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename field-validation @ 11/25/23 12:30:21.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:30:21.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:30:21.306
  Nov 25 12:30:21.309: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  W1125 12:30:21.310102      17 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0012f21b0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W1125 12:30:23.862196      17 warnings.go:70] unknown field "alpha"
  W1125 12:30:23.862219      17 warnings.go:70] unknown field "beta"
  W1125 12:30:23.862230      17 warnings.go:70] unknown field "delta"
  W1125 12:30:23.862235      17 warnings.go:70] unknown field "epsilon"
  W1125 12:30:23.862241      17 warnings.go:70] unknown field "gamma"
  Nov 25 12:30:24.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3814" for this suite. @ 11/25/23 12:30:24.403
• [3.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 11/25/23 12:30:24.411
  Nov 25 12:30:24.411: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 12:30:24.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:30:24.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:30:24.434
  STEP: creating all guestbook components @ 11/25/23 12:30:24.436
  Nov 25 12:30:24.437: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Nov 25 12:30:24.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-4689 create -f -'
  Nov 25 12:30:24.935: INFO: stderr: ""
  Nov 25 12:30:24.935: INFO: stdout: "service/agnhost-replica created\n"
  Nov 25 12:30:24.935: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Nov 25 12:30:24.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-4689 create -f -'
  Nov 25 12:30:25.161: INFO: stderr: ""
  Nov 25 12:30:25.161: INFO: stdout: "service/agnhost-primary created\n"
  Nov 25 12:30:25.161: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Nov 25 12:30:25.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-4689 create -f -'
  Nov 25 12:30:25.638: INFO: stderr: ""
  Nov 25 12:30:25.638: INFO: stdout: "service/frontend created\n"
  Nov 25 12:30:25.639: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Nov 25 12:30:25.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-4689 create -f -'
  Nov 25 12:30:25.820: INFO: stderr: ""
  Nov 25 12:30:25.820: INFO: stdout: "deployment.apps/frontend created\n"
  Nov 25 12:30:25.820: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Nov 25 12:30:25.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-4689 create -f -'
  Nov 25 12:30:25.996: INFO: stderr: ""
  Nov 25 12:30:25.996: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Nov 25 12:30:25.996: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Nov 25 12:30:25.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-4689 create -f -'
  Nov 25 12:30:26.162: INFO: stderr: ""
  Nov 25 12:30:26.162: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 11/25/23 12:30:26.162
  Nov 25 12:30:26.162: INFO: Waiting for all frontend pods to be Running.
  Nov 25 12:30:31.213: INFO: Waiting for frontend to serve content.
  Nov 25 12:30:31.223: INFO: Trying to add a new entry to the guestbook.
  Nov 25 12:30:31.233: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 11/25/23 12:30:31.242
  Nov 25 12:30:31.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-4689 delete --grace-period=0 --force -f -'
  Nov 25 12:30:31.333: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 25 12:30:31.333: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 11/25/23 12:30:31.333
  Nov 25 12:30:31.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-4689 delete --grace-period=0 --force -f -'
  Nov 25 12:30:31.417: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 25 12:30:31.417: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/25/23 12:30:31.417
  Nov 25 12:30:31.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-4689 delete --grace-period=0 --force -f -'
  Nov 25 12:30:31.491: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 25 12:30:31.491: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/25/23 12:30:31.491
  Nov 25 12:30:31.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-4689 delete --grace-period=0 --force -f -'
  Nov 25 12:30:31.559: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 25 12:30:31.559: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/25/23 12:30:31.559
  Nov 25 12:30:31.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-4689 delete --grace-period=0 --force -f -'
  Nov 25 12:30:31.649: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 25 12:30:31.650: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/25/23 12:30:31.65
  Nov 25 12:30:31.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-4689 delete --grace-period=0 --force -f -'
  Nov 25 12:30:31.755: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 25 12:30:31.755: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Nov 25 12:30:31.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4689" for this suite. @ 11/25/23 12:30:31.764
• [7.364 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 11/25/23 12:30:31.781
  Nov 25 12:30:31.781: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename replication-controller @ 11/25/23 12:30:31.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:30:31.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:30:31.816
  STEP: Creating replication controller my-hostname-basic-ccde1e56-de9d-4311-b1ae-f1b140532948 @ 11/25/23 12:30:31.82
  Nov 25 12:30:31.841: INFO: Pod name my-hostname-basic-ccde1e56-de9d-4311-b1ae-f1b140532948: Found 0 pods out of 1
  Nov 25 12:30:36.846: INFO: Pod name my-hostname-basic-ccde1e56-de9d-4311-b1ae-f1b140532948: Found 1 pods out of 1
  Nov 25 12:30:36.846: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-ccde1e56-de9d-4311-b1ae-f1b140532948" are running
  Nov 25 12:30:36.851: INFO: Pod "my-hostname-basic-ccde1e56-de9d-4311-b1ae-f1b140532948-9trmk" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-25 12:30:31 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-25 12:30:33 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-25 12:30:33 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-25 12:30:31 +0000 UTC Reason: Message:}])
  Nov 25 12:30:36.851: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/25/23 12:30:36.851
  Nov 25 12:30:36.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-377" for this suite. @ 11/25/23 12:30:36.866
• [5.093 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 11/25/23 12:30:36.876
  Nov 25 12:30:36.876: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename dns @ 11/25/23 12:30:36.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:30:36.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:30:36.893
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 11/25/23 12:30:36.896
  Nov 25 12:30:36.904: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7428  65e5ffd1-e1c7-4424-b178-06fc87c35a47 9364 0 2023-11-25 12:30:36 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-11-25 12:30:36 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pnbc5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pnbc5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 11/25/23 12:30:38.912
  Nov 25 12:30:38.912: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7428 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:30:38.912: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:30:38.912: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:30:38.912: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-7428/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 11/25/23 12:30:39.004
  Nov 25 12:30:39.004: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7428 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:30:39.004: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:30:39.005: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:30:39.005: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-7428/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 25 12:30:39.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 25 12:30:39.106: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-7428" for this suite. @ 11/25/23 12:30:39.118
• [2.252 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 11/25/23 12:30:39.128
  Nov 25 12:30:39.128: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename replication-controller @ 11/25/23 12:30:39.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:30:39.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:30:39.145
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 11/25/23 12:30:39.148
  STEP: When a replication controller with a matching selector is created @ 11/25/23 12:30:41.167
  STEP: Then the orphan pod is adopted @ 11/25/23 12:30:41.173
  Nov 25 12:30:42.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8098" for this suite. @ 11/25/23 12:30:42.183
• [3.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 11/25/23 12:30:42.19
  Nov 25 12:30:42.190: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 12:30:42.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:30:42.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:30:42.213
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 12:30:42.215
  STEP: Saw pod success @ 11/25/23 12:30:46.235
  Nov 25 12:30:46.239: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-079f71c0-120d-4c65-b001-bfd01c7ff299 container client-container: <nil>
  STEP: delete the pod @ 11/25/23 12:30:46.245
  Nov 25 12:30:46.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5039" for this suite. @ 11/25/23 12:30:46.272
• [4.088 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 11/25/23 12:30:46.278
  Nov 25 12:30:46.278: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 12:30:46.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:30:46.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:30:46.301
  STEP: creating service in namespace services-167 @ 11/25/23 12:30:46.304
  STEP: creating service affinity-nodeport-transition in namespace services-167 @ 11/25/23 12:30:46.304
  STEP: creating replication controller affinity-nodeport-transition in namespace services-167 @ 11/25/23 12:30:46.32
  I1125 12:30:46.336930      17 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-167, replica count: 3
  I1125 12:30:49.388228      17 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 25 12:30:49.398: INFO: Creating new exec pod
  Nov 25 12:30:52.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-167 exec execpod-affinity75gqw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Nov 25 12:30:52.565: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Nov 25 12:30:52.565: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 12:30:52.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-167 exec execpod-affinity75gqw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.87 80'
  Nov 25 12:30:52.708: INFO: stderr: "+ nc -v -t -w 2 10.152.183.87 80\nConnection to 10.152.183.87 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Nov 25 12:30:52.708: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 12:30:52.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-167 exec execpod-affinity75gqw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.85.186 30504'
  Nov 25 12:30:52.852: INFO: stderr: "+ nc -v -t -w 2 172.31.85.186 30504\nConnection to 172.31.85.186 30504 port [tcp/*] succeeded!\n+ echo hostName\n"
  Nov 25 12:30:52.852: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 12:30:52.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-167 exec execpod-affinity75gqw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.4.198 30504'
  Nov 25 12:30:52.980: INFO: stderr: "+ nc -v -t -w 2 172.31.4.198 30504\n+ echo hostName\nConnection to 172.31.4.198 30504 port [tcp/*] succeeded!\n"
  Nov 25 12:30:52.980: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 12:30:52.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-167 exec execpod-affinity75gqw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.130:30504/ ; done'
  Nov 25 12:30:53.209: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n"
  Nov 25 12:30:53.209: INFO: stdout: "\naffinity-nodeport-transition-6sd9z\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-qvd8j\naffinity-nodeport-transition-qvd8j\naffinity-nodeport-transition-qvd8j\naffinity-nodeport-transition-6sd9z\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-6sd9z\naffinity-nodeport-transition-qvd8j\naffinity-nodeport-transition-6sd9z\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-qvd8j\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l"
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-6sd9z
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-qvd8j
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-qvd8j
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-qvd8j
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-6sd9z
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-6sd9z
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-qvd8j
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-6sd9z
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-qvd8j
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.209: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.225: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-167 exec execpod-affinity75gqw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.130:30504/ ; done'
  Nov 25 12:30:53.428: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:30504/\n"
  Nov 25 12:30:53.428: INFO: stdout: "\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l\naffinity-nodeport-transition-dh99l"
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Received response from host: affinity-nodeport-transition-dh99l
  Nov 25 12:30:53.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 25 12:30:53.433: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-167, will wait for the garbage collector to delete the pods @ 11/25/23 12:30:53.446
  Nov 25 12:30:53.507: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.768885ms
  Nov 25 12:30:53.608: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.467719ms
  STEP: Destroying namespace "services-167" for this suite. @ 11/25/23 12:30:56.93
• [10.660 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 11/25/23 12:30:56.938
  Nov 25 12:30:56.938: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename security-context-test @ 11/25/23 12:30:56.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:30:56.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:30:56.96
  Nov 25 12:31:00.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3093" for this suite. @ 11/25/23 12:31:00.986
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 11/25/23 12:31:00.996
  Nov 25 12:31:00.996: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename daemonsets @ 11/25/23 12:31:00.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:31:01.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:31:01.014
  STEP: Creating simple DaemonSet "daemon-set" @ 11/25/23 12:31:01.044
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/25/23 12:31:01.049
  Nov 25 12:31:01.053: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:31:01.053: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:31:01.057: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 12:31:01.057: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  Nov 25 12:31:02.060: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:31:02.060: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:31:02.068: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 12:31:02.068: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  Nov 25 12:31:03.062: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:31:03.062: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:31:03.065: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 25 12:31:03.065: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 11/25/23 12:31:03.068
  Nov 25 12:31:03.072: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 11/25/23 12:31:03.072
  Nov 25 12:31:03.080: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 11/25/23 12:31:03.081
  Nov 25 12:31:03.082: INFO: Observed &DaemonSet event: ADDED
  Nov 25 12:31:03.083: INFO: Observed &DaemonSet event: MODIFIED
  Nov 25 12:31:03.083: INFO: Observed &DaemonSet event: MODIFIED
  Nov 25 12:31:03.083: INFO: Observed &DaemonSet event: MODIFIED
  Nov 25 12:31:03.083: INFO: Observed &DaemonSet event: MODIFIED
  Nov 25 12:31:03.084: INFO: Found daemon set daemon-set in namespace daemonsets-7386 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov 25 12:31:03.084: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 11/25/23 12:31:03.084
  STEP: watching for the daemon set status to be patched @ 11/25/23 12:31:03.095
  Nov 25 12:31:03.096: INFO: Observed &DaemonSet event: ADDED
  Nov 25 12:31:03.097: INFO: Observed &DaemonSet event: MODIFIED
  Nov 25 12:31:03.097: INFO: Observed &DaemonSet event: MODIFIED
  Nov 25 12:31:03.097: INFO: Observed &DaemonSet event: MODIFIED
  Nov 25 12:31:03.098: INFO: Observed &DaemonSet event: MODIFIED
  Nov 25 12:31:03.098: INFO: Observed daemon set daemon-set in namespace daemonsets-7386 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov 25 12:31:03.098: INFO: Observed &DaemonSet event: MODIFIED
  Nov 25 12:31:03.098: INFO: Found daemon set daemon-set in namespace daemonsets-7386 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Nov 25 12:31:03.098: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 11/25/23 12:31:03.102
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7386, will wait for the garbage collector to delete the pods @ 11/25/23 12:31:03.102
  Nov 25 12:31:03.165: INFO: Deleting DaemonSet.extensions daemon-set took: 10.065ms
  Nov 25 12:31:03.266: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.472588ms
  Nov 25 12:31:05.869: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 12:31:05.869: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 25 12:31:05.872: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"9827"},"items":null}

  Nov 25 12:31:05.875: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"9827"},"items":null}

  Nov 25 12:31:05.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7386" for this suite. @ 11/25/23 12:31:05.889
• [4.899 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 11/25/23 12:31:05.896
  Nov 25 12:31:05.896: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-runtime @ 11/25/23 12:31:05.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:31:05.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:31:05.916
  STEP: create the container @ 11/25/23 12:31:05.919
  W1125 12:31:05.929615      17 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/25/23 12:31:05.929
  STEP: get the container status @ 11/25/23 12:31:08.942
  STEP: the container should be terminated @ 11/25/23 12:31:08.946
  STEP: the termination message should be set @ 11/25/23 12:31:08.946
  Nov 25 12:31:08.946: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 11/25/23 12:31:08.946
  Nov 25 12:31:08.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7267" for this suite. @ 11/25/23 12:31:08.964
• [3.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 11/25/23 12:31:08.976
  Nov 25 12:31:08.976: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename disruption @ 11/25/23 12:31:08.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:31:08.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:31:08.997
  STEP: creating the pdb @ 11/25/23 12:31:09
  STEP: Waiting for the pdb to be processed @ 11/25/23 12:31:09.005
  STEP: updating the pdb @ 11/25/23 12:31:11.015
  STEP: Waiting for the pdb to be processed @ 11/25/23 12:31:11.023
  STEP: patching the pdb @ 11/25/23 12:31:13.034
  STEP: Waiting for the pdb to be processed @ 11/25/23 12:31:13.043
  STEP: Waiting for the pdb to be deleted @ 11/25/23 12:31:15.059
  Nov 25 12:31:15.062: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6224" for this suite. @ 11/25/23 12:31:15.066
• [6.096 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 11/25/23 12:31:15.074
  Nov 25 12:31:15.074: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename sysctl @ 11/25/23 12:31:15.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:31:15.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:31:15.097
  STEP: Creating a pod with one valid and two invalid sysctls @ 11/25/23 12:31:15.1
  Nov 25 12:31:15.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-450" for this suite. @ 11/25/23 12:31:15.11
• [0.045 seconds]
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 11/25/23 12:31:15.119
  Nov 25 12:31:15.119: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename crd-webhook @ 11/25/23 12:31:15.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:31:15.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:31:15.144
  STEP: Setting up server cert @ 11/25/23 12:31:15.148
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/25/23 12:31:15.414
  STEP: Deploying the custom resource conversion webhook pod @ 11/25/23 12:31:15.422
  STEP: Wait for the deployment to be ready @ 11/25/23 12:31:15.434
  Nov 25 12:31:15.444: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/25/23 12:31:17.455
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 12:31:17.463
  Nov 25 12:31:18.463: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Nov 25 12:31:18.470: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Creating a v1 custom resource @ 11/25/23 12:31:21.044
  STEP: v2 custom resource should be converted @ 11/25/23 12:31:21.048
  Nov 25 12:31:21.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6647" for this suite. @ 11/25/23 12:31:21.614
• [6.509 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 11/25/23 12:31:21.628
  Nov 25 12:31:21.628: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 12:31:21.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:31:21.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:31:21.649
  STEP: Creating a pod to test downward api env vars @ 11/25/23 12:31:21.651
  STEP: Saw pod success @ 11/25/23 12:31:25.674
  Nov 25 12:31:25.677: INFO: Trying to get logs from node ip-172-31-85-186 pod downward-api-da23b4dd-e9af-46bb-9120-e6632c58358b container dapi-container: <nil>
  STEP: delete the pod @ 11/25/23 12:31:25.683
  Nov 25 12:31:25.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9568" for this suite. @ 11/25/23 12:31:25.703
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 11/25/23 12:31:25.719
  Nov 25 12:31:25.719: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 12:31:25.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:31:25.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:31:25.741
  Nov 25 12:31:25.744: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-7689 create -f -'
  Nov 25 12:31:25.939: INFO: stderr: ""
  Nov 25 12:31:25.939: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Nov 25 12:31:25.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-7689 create -f -'
  Nov 25 12:31:26.137: INFO: stderr: ""
  Nov 25 12:31:26.137: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/25/23 12:31:26.137
  Nov 25 12:31:27.142: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 25 12:31:27.142: INFO: Found 1 / 1
  Nov 25 12:31:27.142: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Nov 25 12:31:27.145: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 25 12:31:27.145: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov 25 12:31:27.145: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-7689 describe pod agnhost-primary-lvp9x'
  Nov 25 12:31:27.235: INFO: stderr: ""
  Nov 25 12:31:27.235: INFO: stdout: "Name:             agnhost-primary-lvp9x\nNamespace:        kubectl-7689\nPriority:         0\nService Account:  default\nNode:             ip-172-31-85-186/172.31.85.186\nStart Time:       Sat, 25 Nov 2023 12:31:25 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.196.17\nIPs:\n  IP:           192.168.196.17\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://6d2521de3c487493e32d187d23812491d7e6cd18bfb444ddd3538a65812ebca3\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 25 Nov 2023 12:31:26 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-xc6jj (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-xc6jj:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-7689/agnhost-primary-lvp9x to ip-172-31-85-186\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Nov 25 12:31:27.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-7689 describe rc agnhost-primary'
  Nov 25 12:31:27.307: INFO: stderr: ""
  Nov 25 12:31:27.307: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7689\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-lvp9x\n"
  Nov 25 12:31:27.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-7689 describe service agnhost-primary'
  Nov 25 12:31:27.376: INFO: stderr: ""
  Nov 25 12:31:27.376: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-7689\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.131\nIPs:               10.152.183.131\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.196.17:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Nov 25 12:31:27.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-7689 describe node ip-172-31-22-130'
  Nov 25 12:31:27.476: INFO: stderr: ""
  Nov 25 12:31:27.476: INFO: stdout: "Name:               ip-172-31-22-130\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-22-130\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 25 Nov 2023 12:05:42 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-22-130\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 25 Nov 2023 12:31:17 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 25 Nov 2023 12:06:33 +0000   Sat, 25 Nov 2023 12:06:33 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 25 Nov 2023 12:29:05 +0000   Sat, 25 Nov 2023 12:05:42 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 25 Nov 2023 12:29:05 +0000   Sat, 25 Nov 2023 12:05:42 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 25 Nov 2023 12:29:05 +0000   Sat, 25 Nov 2023 12:05:42 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 25 Nov 2023 12:29:05 +0000   Sat, 25 Nov 2023 12:07:29 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.22.130\n  Hostname:    ip-172-31-22-130\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7906980Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7804580Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec26ff267f9e88de537999f51ee7b592\n  System UUID:                     ec26ff26-7f9e-88de-5379-99f51ee7b592\n  Boot ID:                         4a1309b2-af80-44f5-a2fa-0ec5dfdbabaf\n  Kernel Version:                  6.2.0-1016-aws\n  OS Image:                        Ubuntu 22.04.3 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.28.4\n  Kube-Proxy Version:              v1.28.4\nNon-terminated Pods:               (9 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  default-http-backend-kubernetes-worker-5c79cc75ff-s48l6    10m (0%)      10m (0%)    20Mi (0%)        20Mi (0%)      25m\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-h97gq           0 (0%)        0 (0%)      0 (0%)           0 (0%)         25m\n  kube-system                      calico-node-kk5hk                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         25m\n  kube-system                      coredns-59cfb5bf46-hqlmw                                   100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     26m\n  kube-system                      kube-state-metrics-78c475f58b-stptt                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         26m\n  kube-system                      metrics-server-v0.6.3-69d7fbfdf8-frwh6                     5m (0%)       100m (5%)   50Mi (0%)        300Mi (3%)     26m\n  kubernetes-dashboard             dashboard-metrics-scraper-5dd7cb5fc-lh87v                  0 (0%)        0 (0%)      0 (0%)           0 (0%)         26m\n  kubernetes-dashboard             kubernetes-dashboard-7b899cb9d9-77vb9                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         26m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-7nrjs    0 (0%)        0 (0%)      0 (0%)           0 (0%)         18m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                365m (18%)  110m (5%)\n  memory             140Mi (1%)  490Mi (6%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 25m                kube-proxy       \n  Normal   Starting                 23m                kube-proxy       \n  Normal   Starting                 25m                kube-proxy       \n  Normal   Starting                 25m                kube-proxy       \n  Normal   Starting                 25m                kube-proxy       \n  Normal   Starting                 25m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      25m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  25m (x2 over 25m)  kubelet          Node ip-172-31-22-130 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    25m (x2 over 25m)  kubelet          Node ip-172-31-22-130 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     25m (x2 over 25m)  kubelet          Node ip-172-31-22-130 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  25m                kubelet          Updated Node Allocatable limit across pods\n  Normal   RegisteredNode           25m                node-controller  Node ip-172-31-22-130 event: Registered Node ip-172-31-22-130 in Controller\n  Normal   Starting                 25m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  25m                kubelet          Node ip-172-31-22-130 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    25m                kubelet          Node ip-172-31-22-130 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     25m                kubelet          Node ip-172-31-22-130 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  25m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      25m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 25m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      25m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  25m                kubelet          Node ip-172-31-22-130 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    25m                kubelet          Node ip-172-31-22-130 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     25m                kubelet          Node ip-172-31-22-130 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  25m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeReady                25m                kubelet          Node ip-172-31-22-130 status is now: NodeReady\n  Normal   NodeAllocatableEnforced  25m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      25m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  25m                kubelet          Node ip-172-31-22-130 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    25m                kubelet          Node ip-172-31-22-130 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     25m                kubelet          Node ip-172-31-22-130 status is now: NodeHasSufficientPID\n  Normal   NodeNotReady             25m                kubelet          Node ip-172-31-22-130 status is now: NodeNotReady\n  Normal   Starting                 25m                kubelet          Starting kubelet.\n  Normal   NodeReady                25m                kubelet          Node ip-172-31-22-130 status is now: NodeReady\n  Normal   RegisteredNode           24m                node-controller  Node ip-172-31-22-130 event: Registered Node ip-172-31-22-130 in Controller\n  Normal   Starting                 23m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      23m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  23m                kubelet          Node ip-172-31-22-130 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    23m                kubelet          Node ip-172-31-22-130 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     23m                kubelet          Node ip-172-31-22-130 status is now: NodeHasSufficientPID\n  Normal   NodeNotReady             23m                kubelet          Node ip-172-31-22-130 status is now: NodeNotReady\n  Normal   NodeAllocatableEnforced  23m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeReady                23m                kubelet          Node ip-172-31-22-130 status is now: NodeReady\n"
  Nov 25 12:31:27.477: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-7689 describe namespace kubectl-7689'
  Nov 25 12:31:27.548: INFO: stderr: ""
  Nov 25 12:31:27.548: INFO: stdout: "Name:         kubectl-7689\nLabels:       e2e-framework=kubectl\n              e2e-run=c2f612a6-5592-45cc-881a-0621349258be\n              kubernetes.io/metadata.name=kubectl-7689\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Nov 25 12:31:27.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7689" for this suite. @ 11/25/23 12:31:27.552
• [1.847 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 11/25/23 12:31:27.57
  Nov 25 12:31:27.570: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 12:31:27.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:31:27.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:31:27.59
  STEP: creating service multi-endpoint-test in namespace services-6062 @ 11/25/23 12:31:27.593
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6062 to expose endpoints map[] @ 11/25/23 12:31:27.607
  Nov 25 12:31:27.611: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Nov 25 12:31:28.621: INFO: successfully validated that service multi-endpoint-test in namespace services-6062 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-6062 @ 11/25/23 12:31:28.621
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6062 to expose endpoints map[pod1:[100]] @ 11/25/23 12:31:30.641
  Nov 25 12:31:30.650: INFO: successfully validated that service multi-endpoint-test in namespace services-6062 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-6062 @ 11/25/23 12:31:30.65
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6062 to expose endpoints map[pod1:[100] pod2:[101]] @ 11/25/23 12:31:32.68
  Nov 25 12:31:32.693: INFO: successfully validated that service multi-endpoint-test in namespace services-6062 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 11/25/23 12:31:32.694
  Nov 25 12:31:32.694: INFO: Creating new exec pod
  Nov 25 12:31:35.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-6062 exec execpodczzqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Nov 25 12:31:35.849: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Nov 25 12:31:35.849: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 12:31:35.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-6062 exec execpodczzqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.113 80'
  Nov 25 12:31:35.988: INFO: stderr: "+ nc -v -t -w 2 10.152.183.113 80\nConnection to 10.152.183.113 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Nov 25 12:31:35.988: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 12:31:35.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-6062 exec execpodczzqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Nov 25 12:31:36.138: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Nov 25 12:31:36.138: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 12:31:36.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-6062 exec execpodczzqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.113 81'
  Nov 25 12:31:36.280: INFO: stderr: "+ nc -v -t -w 2 10.152.183.113 81\n+ echo hostName\nConnection to 10.152.183.113 81 port [tcp/*] succeeded!\n"
  Nov 25 12:31:36.280: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-6062 @ 11/25/23 12:31:36.28
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6062 to expose endpoints map[pod2:[101]] @ 11/25/23 12:31:36.305
  Nov 25 12:31:36.316: INFO: successfully validated that service multi-endpoint-test in namespace services-6062 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-6062 @ 11/25/23 12:31:36.316
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6062 to expose endpoints map[] @ 11/25/23 12:31:36.336
  Nov 25 12:31:36.347: INFO: successfully validated that service multi-endpoint-test in namespace services-6062 exposes endpoints map[]
  Nov 25 12:31:36.347: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6062" for this suite. @ 11/25/23 12:31:36.372
• [8.809 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 11/25/23 12:31:36.38
  Nov 25 12:31:36.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename resourcequota @ 11/25/23 12:31:36.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:31:36.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:31:36.398
  STEP: Counting existing ResourceQuota @ 11/25/23 12:31:36.402
  STEP: Creating a ResourceQuota @ 11/25/23 12:31:41.405
  STEP: Ensuring resource quota status is calculated @ 11/25/23 12:31:41.411
  STEP: Creating a Service @ 11/25/23 12:31:43.414
  STEP: Creating a NodePort Service @ 11/25/23 12:31:43.435
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 11/25/23 12:31:43.46
  STEP: Ensuring resource quota status captures service creation @ 11/25/23 12:31:43.479
  STEP: Deleting Services @ 11/25/23 12:31:45.483
  STEP: Ensuring resource quota status released usage @ 11/25/23 12:31:45.531
  Nov 25 12:31:47.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7054" for this suite. @ 11/25/23 12:31:47.539
• [11.166 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 11/25/23 12:31:47.546
  Nov 25 12:31:47.546: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 12:31:47.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:31:47.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:31:47.566
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/25/23 12:31:47.569
  STEP: Saw pod success @ 11/25/23 12:31:51.589
  Nov 25 12:31:51.592: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-b6015737-573e-44bd-880f-2a9ea26a05b8 container test-container: <nil>
  STEP: delete the pod @ 11/25/23 12:31:51.602
  Nov 25 12:31:51.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3909" for this suite. @ 11/25/23 12:31:51.622
• [4.082 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 11/25/23 12:31:51.628
  Nov 25 12:31:51.628: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/25/23 12:31:51.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:31:51.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:31:51.646
  Nov 25 12:31:51.649: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/25/23 12:31:53.052
  Nov 25 12:31:53.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-9357 --namespace=crd-publish-openapi-9357 create -f -'
  Nov 25 12:31:53.455: INFO: stderr: ""
  Nov 25 12:31:53.455: INFO: stdout: "e2e-test-crd-publish-openapi-5154-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Nov 25 12:31:53.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-9357 --namespace=crd-publish-openapi-9357 delete e2e-test-crd-publish-openapi-5154-crds test-cr'
  Nov 25 12:31:53.524: INFO: stderr: ""
  Nov 25 12:31:53.524: INFO: stdout: "e2e-test-crd-publish-openapi-5154-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Nov 25 12:31:53.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-9357 --namespace=crd-publish-openapi-9357 apply -f -'
  Nov 25 12:31:53.704: INFO: stderr: ""
  Nov 25 12:31:53.704: INFO: stdout: "e2e-test-crd-publish-openapi-5154-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Nov 25 12:31:53.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-9357 --namespace=crd-publish-openapi-9357 delete e2e-test-crd-publish-openapi-5154-crds test-cr'
  Nov 25 12:31:53.789: INFO: stderr: ""
  Nov 25 12:31:53.789: INFO: stdout: "e2e-test-crd-publish-openapi-5154-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 11/25/23 12:31:53.789
  Nov 25 12:31:53.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-9357 explain e2e-test-crd-publish-openapi-5154-crds'
  Nov 25 12:31:54.202: INFO: stderr: ""
  Nov 25 12:31:54.202: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5154-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Nov 25 12:31:55.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9357" for this suite. @ 11/25/23 12:31:55.501
• [3.878 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 11/25/23 12:31:55.507
  Nov 25 12:31:55.507: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 12:31:55.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:31:55.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:31:55.525
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 12:31:55.528
  STEP: Saw pod success @ 11/25/23 12:31:59.552
  Nov 25 12:31:59.555: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-9c6fb1cb-747c-4cba-aeda-56adf423cfd0 container client-container: <nil>
  STEP: delete the pod @ 11/25/23 12:31:59.561
  Nov 25 12:31:59.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7377" for this suite. @ 11/25/23 12:31:59.585
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 11/25/23 12:31:59.595
  Nov 25 12:31:59.595: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 12:31:59.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:31:59.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:31:59.617
  STEP: Creating the pod @ 11/25/23 12:31:59.62
  Nov 25 12:32:02.158: INFO: Successfully updated pod "labelsupdatebbe5a3f1-66c9-43ec-972d-e5ae57a2fcaf"
  Nov 25 12:32:04.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7294" for this suite. @ 11/25/23 12:32:04.177
• [4.590 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 11/25/23 12:32:04.189
  Nov 25 12:32:04.189: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 12:32:04.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:32:04.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:32:04.208
  STEP: Creating configMap configmap-8801/configmap-test-4184abba-dafa-4709-8565-8e70692f3f7e @ 11/25/23 12:32:04.211
  STEP: Creating a pod to test consume configMaps @ 11/25/23 12:32:04.215
  STEP: Saw pod success @ 11/25/23 12:32:08.239
  Nov 25 12:32:08.242: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-configmaps-de1f614e-0398-4855-8ea4-6875329d891f container env-test: <nil>
  STEP: delete the pod @ 11/25/23 12:32:08.248
  Nov 25 12:32:08.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8801" for this suite. @ 11/25/23 12:32:08.269
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 11/25/23 12:32:08.276
  Nov 25 12:32:08.276: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename deployment @ 11/25/23 12:32:08.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:32:08.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:32:08.296
  Nov 25 12:32:08.315: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Nov 25 12:32:13.319: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/25/23 12:32:13.319
  Nov 25 12:32:13.319: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Nov 25 12:32:15.323: INFO: Creating deployment "test-rollover-deployment"
  Nov 25 12:32:15.332: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Nov 25 12:32:17.338: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Nov 25 12:32:17.345: INFO: Ensure that both replica sets have 1 created replica
  Nov 25 12:32:17.350: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Nov 25 12:32:17.359: INFO: Updating deployment test-rollover-deployment
  Nov 25 12:32:17.359: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Nov 25 12:32:19.367: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Nov 25 12:32:19.372: INFO: Make sure deployment "test-rollover-deployment" is complete
  Nov 25 12:32:19.377: INFO: all replica sets need to contain the pod-template-hash label
  Nov 25 12:32:19.378: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 32, 19, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 25 12:32:21.385: INFO: all replica sets need to contain the pod-template-hash label
  Nov 25 12:32:21.385: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 32, 19, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 25 12:32:23.385: INFO: all replica sets need to contain the pod-template-hash label
  Nov 25 12:32:23.385: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 32, 19, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 25 12:32:25.386: INFO: all replica sets need to contain the pod-template-hash label
  Nov 25 12:32:25.386: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 32, 19, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 25 12:32:27.386: INFO: all replica sets need to contain the pod-template-hash label
  Nov 25 12:32:27.386: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 32, 19, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 25 12:32:29.394: INFO: 
  Nov 25 12:32:29.394: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 32, 29, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 32, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Nov 25 12:32:31.386: INFO: 
  Nov 25 12:32:31.386: INFO: Ensure that both old replica sets have no replicas
  Nov 25 12:32:31.395: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-775",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "255379d2-2498-48c9-9f46-9cf1fa96bca0",
      ResourceVersion: (string) (len=5) "10647",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836512335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 25 12:32:31.401: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-775",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed222050-29dc-4654-8766-87e9dcc226e3",
      ResourceVersion: (string) (len=5) "10637",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836512337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "255379d2-2498-48c9-9f46-9cf1fa96bca0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 35 35 33 37 39  64 32 2d 32 34 39 38 2d  |\"255379d2-2498-|
              00000120  34 38 63 39 2d 39 66 34  36 2d 39 63 66 31 66 61  |48c9-9f46-9cf1fa|
              00000130  39 36 62 63 61 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |96bca0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 25 12:32:31.405: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Nov 25 12:32:31.405: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-775",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8913954f-32d7-4814-a980-e5110f4c3ab0",
      ResourceVersion: (string) (len=5) "10646",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836512328,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "255379d2-2498-48c9-9f46-9cf1fa96bca0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512328,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  32 35 35 33 37 39 64 32  2d 32 34 39 38 2d 34 38  |255379d2-2498-48|
              000000c0  63 39 2d 39 66 34 36 2d  39 63 66 31 66 61 39 36  |c9-9f46-9cf1fa96|
              000000d0  62 63 61 30 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |bca0\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512349,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 25 12:32:31.407: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-775",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "780c6387-e335-43b4-9daf-01846dc746f9",
      ResourceVersion: (string) (len=5) "10592",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836512335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "255379d2-2498-48c9-9f46-9cf1fa96bca0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 35 35 33 37 39  64 32 2d 32 34 39 38 2d  |\"255379d2-2498-|
              00000120  34 38 63 39 2d 39 66 34  36 2d 39 63 66 31 66 61  |48c9-9f46-9cf1fa|
              00000130  39 36 62 63 61 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |96bca0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 25 12:32:31.412: INFO: Pod "test-rollover-deployment-5d484bf7f9-lnt7n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-lnt7n",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=14) "deployment-775",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14cd536a-f290-4cba-94f5-92e3565b98c8",
      ResourceVersion: (string) (len=5) "10616",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836512337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "ed222050-29dc-4654-8766-87e9dcc226e3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  32 32 32 30 35 30 2d 32  |d\":\"ed222050-2|
              00000090  39 64 63 2d 34 36 35 34  2d 38 37 36 36 2d 38 37  |9dc-4654-8766-87|
              000000a0  65 39 64 63 63 32 32 36  65 33 5c 22 7d 22 3a 7b  |e9dcc226e3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  38 2e 33 35 5c 22 7d 22  |192.168.8.35\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l8s6j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l8s6j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "192.168.8.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.8.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836512337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836512339,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://53a35557c23b7db9b91d106925600cbf2518a8dc243dd9b6e7e45f498b807206",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 12:32:31.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-775" for this suite. @ 11/25/23 12:32:31.42
• [23.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 11/25/23 12:32:31.433
  Nov 25 12:32:31.433: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/25/23 12:32:31.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:32:31.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:32:31.454
  STEP: set up a multi version CRD @ 11/25/23 12:32:31.458
  Nov 25 12:32:31.459: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: mark a version not serverd @ 11/25/23 12:32:35.061
  STEP: check the unserved version gets removed @ 11/25/23 12:32:35.087
  STEP: check the other version is not changed @ 11/25/23 12:32:36.049
  Nov 25 12:32:38.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4096" for this suite. @ 11/25/23 12:32:38.818
• [7.392 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 11/25/23 12:32:38.825
  Nov 25 12:32:38.825: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename var-expansion @ 11/25/23 12:32:38.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:32:38.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:32:38.846
  STEP: Creating a pod to test substitution in container's args @ 11/25/23 12:32:38.85
  STEP: Saw pod success @ 11/25/23 12:32:42.867
  Nov 25 12:32:42.870: INFO: Trying to get logs from node ip-172-31-85-186 pod var-expansion-620331c9-a8ab-46c7-b084-df0b5177b915 container dapi-container: <nil>
  STEP: delete the pod @ 11/25/23 12:32:42.876
  Nov 25 12:32:42.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-418" for this suite. @ 11/25/23 12:32:42.896
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 11/25/23 12:32:42.903
  Nov 25 12:32:42.903: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename secrets @ 11/25/23 12:32:42.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:32:42.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:32:42.923
  STEP: Creating secret with name secret-test-map-2706e741-3334-41d8-8231-4429037854c3 @ 11/25/23 12:32:42.931
  STEP: Creating a pod to test consume secrets @ 11/25/23 12:32:42.938
  STEP: Saw pod success @ 11/25/23 12:32:46.959
  Nov 25 12:32:46.962: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-secrets-226a6c85-5473-4745-9257-5698f61f104f container secret-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 12:32:46.968
  Nov 25 12:32:46.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8985" for this suite. @ 11/25/23 12:32:46.987
• [4.089 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 11/25/23 12:32:46.993
  Nov 25 12:32:46.993: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 12:32:46.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:32:47.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:32:47.011
  STEP: Setting up server cert @ 11/25/23 12:32:47.035
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 12:32:47.41
  STEP: Deploying the webhook pod @ 11/25/23 12:32:47.417
  STEP: Wait for the deployment to be ready @ 11/25/23 12:32:47.429
  Nov 25 12:32:47.443: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/25/23 12:32:49.453
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 12:32:49.463
  Nov 25 12:32:50.463: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/25/23 12:32:50.47
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/25/23 12:32:50.485
  STEP: Creating a dummy validating-webhook-configuration object @ 11/25/23 12:32:50.498
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 11/25/23 12:32:50.505
  STEP: Creating a dummy mutating-webhook-configuration object @ 11/25/23 12:32:50.51
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 11/25/23 12:32:50.519
  Nov 25 12:32:50.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5219" for this suite. @ 11/25/23 12:32:50.582
  STEP: Destroying namespace "webhook-markers-762" for this suite. @ 11/25/23 12:32:50.588
• [3.602 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 11/25/23 12:32:50.602
  Nov 25 12:32:50.602: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename controllerrevisions @ 11/25/23 12:32:50.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:32:50.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:32:50.619
  STEP: Creating DaemonSet "e2e-pwbpw-daemon-set" @ 11/25/23 12:32:50.639
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/25/23 12:32:50.644
  Nov 25 12:32:50.647: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:32:50.648: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:32:50.652: INFO: Number of nodes with available pods controlled by daemonset e2e-pwbpw-daemon-set: 0
  Nov 25 12:32:50.652: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  Nov 25 12:32:51.656: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:32:51.656: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:32:51.659: INFO: Number of nodes with available pods controlled by daemonset e2e-pwbpw-daemon-set: 0
  Nov 25 12:32:51.659: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  Nov 25 12:32:52.657: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:32:52.657: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:32:52.662: INFO: Number of nodes with available pods controlled by daemonset e2e-pwbpw-daemon-set: 2
  Nov 25 12:32:52.662: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  Nov 25 12:32:53.657: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:32:53.657: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:32:53.661: INFO: Number of nodes with available pods controlled by daemonset e2e-pwbpw-daemon-set: 2
  Nov 25 12:32:53.661: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  Nov 25 12:32:54.657: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:32:54.657: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:32:54.661: INFO: Number of nodes with available pods controlled by daemonset e2e-pwbpw-daemon-set: 3
  Nov 25 12:32:54.661: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-pwbpw-daemon-set
  STEP: Confirm DaemonSet "e2e-pwbpw-daemon-set" successfully created with "daemonset-name=e2e-pwbpw-daemon-set" label @ 11/25/23 12:32:54.664
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-pwbpw-daemon-set" @ 11/25/23 12:32:54.669
  Nov 25 12:32:54.672: INFO: Located ControllerRevision: "e2e-pwbpw-daemon-set-675fc694cf"
  STEP: Patching ControllerRevision "e2e-pwbpw-daemon-set-675fc694cf" @ 11/25/23 12:32:54.675
  Nov 25 12:32:54.681: INFO: e2e-pwbpw-daemon-set-675fc694cf has been patched
  STEP: Create a new ControllerRevision @ 11/25/23 12:32:54.681
  Nov 25 12:32:54.687: INFO: Created ControllerRevision: e2e-pwbpw-daemon-set-9d8bcb8f9
  STEP: Confirm that there are two ControllerRevisions @ 11/25/23 12:32:54.687
  Nov 25 12:32:54.687: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 25 12:32:54.690: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-pwbpw-daemon-set-675fc694cf" @ 11/25/23 12:32:54.69
  STEP: Confirm that there is only one ControllerRevision @ 11/25/23 12:32:54.696
  Nov 25 12:32:54.696: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 25 12:32:54.698: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-pwbpw-daemon-set-9d8bcb8f9" @ 11/25/23 12:32:54.701
  Nov 25 12:32:54.708: INFO: e2e-pwbpw-daemon-set-9d8bcb8f9 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 11/25/23 12:32:54.708
  W1125 12:32:54.716357      17 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 11/25/23 12:32:54.716
  Nov 25 12:32:54.716: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 25 12:32:55.720: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 25 12:32:55.723: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-pwbpw-daemon-set-9d8bcb8f9=updated" @ 11/25/23 12:32:55.723
  STEP: Confirm that there is only one ControllerRevision @ 11/25/23 12:32:55.735
  Nov 25 12:32:55.735: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 25 12:32:55.739: INFO: Found 1 ControllerRevisions
  Nov 25 12:32:55.742: INFO: ControllerRevision "e2e-pwbpw-daemon-set-846d464d58" has revision 3
  STEP: Deleting DaemonSet "e2e-pwbpw-daemon-set" @ 11/25/23 12:32:55.746
  STEP: deleting DaemonSet.extensions e2e-pwbpw-daemon-set in namespace controllerrevisions-887, will wait for the garbage collector to delete the pods @ 11/25/23 12:32:55.746
  Nov 25 12:32:55.807: INFO: Deleting DaemonSet.extensions e2e-pwbpw-daemon-set took: 6.704912ms
  Nov 25 12:32:55.907: INFO: Terminating DaemonSet.extensions e2e-pwbpw-daemon-set pods took: 100.136591ms
  Nov 25 12:32:57.211: INFO: Number of nodes with available pods controlled by daemonset e2e-pwbpw-daemon-set: 0
  Nov 25 12:32:57.211: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-pwbpw-daemon-set
  Nov 25 12:32:57.214: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11028"},"items":null}

  Nov 25 12:32:57.217: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11028"},"items":null}

  Nov 25 12:32:57.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-887" for this suite. @ 11/25/23 12:32:57.231
• [6.634 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 11/25/23 12:32:57.237
  Nov 25 12:32:57.238: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/25/23 12:32:57.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:32:57.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:32:57.259
  STEP: create the container to handle the HTTPGet hook request. @ 11/25/23 12:32:57.265
  STEP: create the pod with lifecycle hook @ 11/25/23 12:32:59.283
  STEP: check poststart hook @ 11/25/23 12:33:01.298
  STEP: delete the pod with lifecycle hook @ 11/25/23 12:33:01.317
  Nov 25 12:33:03.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7522" for this suite. @ 11/25/23 12:33:03.335
• [6.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 11/25/23 12:33:03.344
  Nov 25 12:33:03.344: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pods @ 11/25/23 12:33:03.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:33:03.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:33:03.359
  STEP: creating the pod @ 11/25/23 12:33:03.362
  STEP: submitting the pod to kubernetes @ 11/25/23 12:33:03.362
  W1125 12:33:03.370993      17 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 11/25/23 12:33:05.391
  STEP: updating the pod @ 11/25/23 12:33:05.395
  Nov 25 12:33:05.906: INFO: Successfully updated pod "pod-update-activedeadlineseconds-f0179184-dbec-4e88-aef3-ea5f8d22607f"
  Nov 25 12:33:09.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2625" for this suite. @ 11/25/23 12:33:09.925
• [6.586 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 11/25/23 12:33:09.93
  Nov 25 12:33:09.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pods @ 11/25/23 12:33:09.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:33:09.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:33:09.949
  Nov 25 12:33:09.952: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: creating the pod @ 11/25/23 12:33:09.952
  STEP: submitting the pod to kubernetes @ 11/25/23 12:33:09.952
  Nov 25 12:33:12.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2792" for this suite. @ 11/25/23 12:33:12.071
• [2.150 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 11/25/23 12:33:12.082
  Nov 25 12:33:12.082: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename deployment @ 11/25/23 12:33:12.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:33:12.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:33:12.103
  STEP: creating a Deployment @ 11/25/23 12:33:12.111
  STEP: waiting for Deployment to be created @ 11/25/23 12:33:12.115
  STEP: waiting for all Replicas to be Ready @ 11/25/23 12:33:12.12
  Nov 25 12:33:12.121: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 25 12:33:12.121: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 25 12:33:12.137: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 25 12:33:12.137: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 25 12:33:12.153: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 25 12:33:12.153: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 25 12:33:12.187: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 25 12:33:12.187: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 25 12:33:13.199: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Nov 25 12:33:13.199: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Nov 25 12:33:13.431: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 11/25/23 12:33:13.431
  Nov 25 12:33:13.444: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 11/25/23 12:33:13.444
  Nov 25 12:33:13.445: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0
  Nov 25 12:33:13.446: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0
  Nov 25 12:33:13.446: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0
  Nov 25 12:33:13.446: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0
  Nov 25 12:33:13.446: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0
  Nov 25 12:33:13.446: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0
  Nov 25 12:33:13.446: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0
  Nov 25 12:33:13.446: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 0
  Nov 25 12:33:13.446: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1
  Nov 25 12:33:13.446: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1
  Nov 25 12:33:13.446: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2
  Nov 25 12:33:13.446: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2
  Nov 25 12:33:13.446: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2
  Nov 25 12:33:13.446: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2
  Nov 25 12:33:13.456: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2
  Nov 25 12:33:13.456: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2
  Nov 25 12:33:13.474: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2
  Nov 25 12:33:13.474: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2
  Nov 25 12:33:13.500: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1
  Nov 25 12:33:13.500: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1
  Nov 25 12:33:15.217: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2
  Nov 25 12:33:15.217: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2
  Nov 25 12:33:15.243: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1
  STEP: listing Deployments @ 11/25/23 12:33:15.243
  Nov 25 12:33:15.248: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 11/25/23 12:33:15.248
  Nov 25 12:33:15.257: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 11/25/23 12:33:15.257
  Nov 25 12:33:15.266: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 25 12:33:15.271: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 25 12:33:15.308: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 25 12:33:15.323: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 25 12:33:15.337: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 25 12:33:16.447: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 25 12:33:16.475: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 25 12:33:16.490: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 25 12:33:17.232: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 11/25/23 12:33:17.253
  STEP: fetching the DeploymentStatus @ 11/25/23 12:33:17.264
  Nov 25 12:33:17.270: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1
  Nov 25 12:33:17.271: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1
  Nov 25 12:33:17.271: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1
  Nov 25 12:33:17.271: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1
  Nov 25 12:33:17.271: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 1
  Nov 25 12:33:17.271: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2
  Nov 25 12:33:17.272: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2
  Nov 25 12:33:17.272: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 2
  Nov 25 12:33:17.272: INFO: observed Deployment test-deployment in namespace deployment-9808 with ReadyReplicas 3
  STEP: deleting the Deployment @ 11/25/23 12:33:17.272
  Nov 25 12:33:17.283: INFO: observed event type MODIFIED
  Nov 25 12:33:17.284: INFO: observed event type MODIFIED
  Nov 25 12:33:17.284: INFO: observed event type MODIFIED
  Nov 25 12:33:17.284: INFO: observed event type MODIFIED
  Nov 25 12:33:17.284: INFO: observed event type MODIFIED
  Nov 25 12:33:17.284: INFO: observed event type MODIFIED
  Nov 25 12:33:17.285: INFO: observed event type MODIFIED
  Nov 25 12:33:17.285: INFO: observed event type MODIFIED
  Nov 25 12:33:17.285: INFO: observed event type MODIFIED
  Nov 25 12:33:17.285: INFO: observed event type MODIFIED
  Nov 25 12:33:17.285: INFO: observed event type MODIFIED
  Nov 25 12:33:17.285: INFO: observed event type MODIFIED
  Nov 25 12:33:17.290: INFO: Log out all the ReplicaSets if there is no deployment created
  Nov 25 12:33:17.294: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9808",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f3c38bc-9cba-4e6a-8f15-7b8eaea85662",
      ResourceVersion: (string) (len=5) "11300",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836512392,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "a2576ce1-88b5-488c-8755-a180a724ed58",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 32 35 37  36 63 65 31 2d 38 38 62  |":\"a2576ce1-88b|
              00000130  35 2d 34 38 38 63 2d 38  37 35 35 2d 61 31 38 30  |5-488c-8755-a180|
              00000140  61 37 32 34 65 64 35 38  5c 22 7d 22 3a 7b 7d 7d  |a724ed58\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Nov 25 12:33:17.300: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9808",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96e04d59-3ebd-44ae-81e5-c613ec488b4f",
      ResourceVersion: (string) (len=5) "11383",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836512395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "a2576ce1-88b5-488c-8755-a180a724ed58",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 32 35 37  36 63 65 31 2d 38 38 62  |":\"a2576ce1-88b|
              00000130  35 2d 34 38 38 63 2d 38  37 35 35 2d 61 31 38 30  |5-488c-8755-a180|
              00000140  61 37 32 34 65 64 35 38  5c 22 7d 22 3a 7b 7d 7d  |a724ed58\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Nov 25 12:33:17.311: INFO: pod: "test-deployment-79ff746c4-gzfmk":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-gzfmk",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-9808",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e90057a-8ecd-48e6-a50e-2178e93758f2",
      ResourceVersion: (string) (len=5) "11382",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836512396,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "96e04d59-3ebd-44ae-81e5-c613ec488b4f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 36 65 30 34 64 35 39  |uid\":\"96e04d59|
              000000a0  2d 33 65 62 64 2d 34 34  61 65 2d 38 31 65 35 2d  |-3ebd-44ae-81e5-|
              000000b0  63 36 31 33 65 63 34 38  38 62 34 66 5c 22 7d 22  |c613ec488b4f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 36 2e 33 36 5c 22  |192.168.196.36\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7h2nh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7h2nh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.196.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.196.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836512396,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836512397,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6cfc4a76b99408ade78c027255395712c470c21b1bf7f8477b119177ac51dfab",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Nov 25 12:33:17.315: INFO: pod: "test-deployment-79ff746c4-zljmd":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-zljmd",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-9808",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a27fb5d-e785-4119-87fa-ce99b9b22920",
      ResourceVersion: (string) (len=5) "11402",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836512395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836512398,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "96e04d59-3ebd-44ae-81e5-c613ec488b4f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 36 65 30 34 64 35 39  |uid\":\"96e04d59|
              000000a0  2d 33 65 62 64 2d 34 34  61 65 2d 38 31 65 35 2d  |-3ebd-44ae-81e5-|
              000000b0  63 36 31 33 65 63 34 38  38 62 34 66 5c 22 7d 22  |c613ec488b4f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  38 2e 33 38 5c 22 7d 22  |192.168.8.38\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gvd2g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gvd2g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512396,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836512395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "192.168.8.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.8.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836512395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836512396,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f520f68b42b283a4eb9abe51def7cc6b484b4db6b6901c7df6dea1dc2581148c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Nov 25 12:33:17.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9808" for this suite. @ 11/25/23 12:33:17.323
• [5.247 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 11/25/23 12:33:17.329
  Nov 25 12:33:17.329: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename secrets @ 11/25/23 12:33:17.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:33:17.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:33:17.351
  STEP: Creating secret with name secret-test-de0b8745-a93b-4d16-a91d-f02b4018f1dc @ 11/25/23 12:33:17.376
  STEP: Creating a pod to test consume secrets @ 11/25/23 12:33:17.38
  STEP: Saw pod success @ 11/25/23 12:33:21.401
  Nov 25 12:33:21.404: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-secrets-d2698d6a-aff4-4fdf-8def-f86ff8d9db0f container secret-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 12:33:21.41
  Nov 25 12:33:21.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2235" for this suite. @ 11/25/23 12:33:21.428
  STEP: Destroying namespace "secret-namespace-3304" for this suite. @ 11/25/23 12:33:21.433
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 11/25/23 12:33:21.44
  Nov 25 12:33:21.440: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename resourcequota @ 11/25/23 12:33:21.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:33:21.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:33:21.464
  STEP: Creating a ResourceQuota with best effort scope @ 11/25/23 12:33:21.467
  STEP: Ensuring ResourceQuota status is calculated @ 11/25/23 12:33:21.472
  STEP: Creating a ResourceQuota with not best effort scope @ 11/25/23 12:33:23.475
  STEP: Ensuring ResourceQuota status is calculated @ 11/25/23 12:33:23.479
  STEP: Creating a best-effort pod @ 11/25/23 12:33:25.484
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 11/25/23 12:33:25.497
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 11/25/23 12:33:27.5
  STEP: Deleting the pod @ 11/25/23 12:33:29.505
  STEP: Ensuring resource quota status released the pod usage @ 11/25/23 12:33:29.52
  STEP: Creating a not best-effort pod @ 11/25/23 12:33:31.524
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 11/25/23 12:33:31.545
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 11/25/23 12:33:33.55
  STEP: Deleting the pod @ 11/25/23 12:33:35.554
  STEP: Ensuring resource quota status released the pod usage @ 11/25/23 12:33:35.567
  Nov 25 12:33:37.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1956" for this suite. @ 11/25/23 12:33:37.576
• [16.141 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 11/25/23 12:33:37.582
  Nov 25 12:33:37.582: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 12:33:37.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:33:37.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:33:37.602
  STEP: creating a ConfigMap @ 11/25/23 12:33:37.604
  STEP: fetching the ConfigMap @ 11/25/23 12:33:37.612
  STEP: patching the ConfigMap @ 11/25/23 12:33:37.615
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 11/25/23 12:33:37.62
  STEP: deleting the ConfigMap by collection with a label selector @ 11/25/23 12:33:37.623
  STEP: listing all ConfigMaps in test namespace @ 11/25/23 12:33:37.631
  Nov 25 12:33:37.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4195" for this suite. @ 11/25/23 12:33:37.637
• [0.060 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 11/25/23 12:33:37.642
  Nov 25 12:33:37.642: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-probe @ 11/25/23 12:33:37.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:33:37.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:33:37.658
  STEP: Creating pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599 @ 11/25/23 12:33:37.661
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/25/23 12:33:39.678
  Nov 25 12:33:39.681: INFO: Initial restart count of pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca is 0
  Nov 25 12:33:39.684: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:33:41.688: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:33:43.692: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:33:45.696: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:33:47.700: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:33:49.704: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:33:51.708: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:33:53.713: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:33:55.717: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:33:57.720: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:33:59.725: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:01.730: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:03.734: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:05.738: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:07.742: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:09.746: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:11.751: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:13.755: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:15.760: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:17.763: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:19.774: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:21.778: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:23.782: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:25.786: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:27.789: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:29.795: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:31.800: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:33.804: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:35.809: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:37.813: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:39.817: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:41.824: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:43.827: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:45.832: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:47.836: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:49.840: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:51.844: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:53.849: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:55.853: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:57.858: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:34:59.862: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:01.865: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:03.869: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:05.872: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:07.876: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:09.880: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:11.884: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:13.888: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:15.893: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:17.896: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:19.901: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:21.905: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:23.909: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:25.913: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:27.917: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:29.921: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:31.924: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:33.928: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:35.933: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:37.936: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:39.942: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:41.945: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:43.950: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:45.954: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:47.957: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:49.962: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:51.965: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:53.970: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:55.973: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:57.978: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:35:59.982: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:01.986: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:03.988: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:05.992: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:07.997: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:10.001: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:12.004: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:14.008: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:16.012: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:18.015: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:20.019: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:22.023: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:24.026: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:26.030: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:28.034: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:30.038: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:32.042: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:34.046: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:36.050: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:38.054: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:40.060: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:42.065: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:44.068: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:46.073: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:48.077: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:50.081: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:52.085: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:54.088: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:56.093: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:36:58.098: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:00.103: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:02.107: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:04.112: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:06.124: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:08.128: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:10.134: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:12.139: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:14.143: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:16.148: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:18.152: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:20.156: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:22.161: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:24.164: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:26.169: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:28.173: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:30.178: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:32.182: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:34.186: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:36.189: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:38.194: INFO: Get pod liveness-a6ba644b-c85f-43d1-858a-7a2641e1ddca in namespace container-probe-599
  Nov 25 12:37:40.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 12:37:40.199
  STEP: Destroying namespace "container-probe-599" for this suite. @ 11/25/23 12:37:40.215
• [242.590 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 11/25/23 12:37:40.233
  Nov 25 12:37:40.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pod-network-test @ 11/25/23 12:37:40.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:37:40.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:37:40.256
  STEP: Performing setup for networking test in namespace pod-network-test-3297 @ 11/25/23 12:37:40.261
  STEP: creating a selector @ 11/25/23 12:37:40.261
  STEP: Creating the service pods in kubernetes @ 11/25/23 12:37:40.261
  Nov 25 12:37:40.261: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 11/25/23 12:38:02.397
  Nov 25 12:38:04.428: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov 25 12:38:04.428: INFO: Going to poll 192.168.72.150 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Nov 25 12:38:04.431: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.72.150 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3297 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:38:04.431: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:38:04.432: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:38:04.432: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3297/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.72.150+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 25 12:38:05.514: INFO: Found all 1 expected endpoints: [netserver-0]
  Nov 25 12:38:05.514: INFO: Going to poll 192.168.8.41 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Nov 25 12:38:05.520: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.8.41 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3297 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:38:05.520: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:38:05.520: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:38:05.520: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3297/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.8.41+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 25 12:38:06.596: INFO: Found all 1 expected endpoints: [netserver-1]
  Nov 25 12:38:06.596: INFO: Going to poll 192.168.196.38 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Nov 25 12:38:06.600: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.196.38 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3297 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:38:06.600: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:38:06.600: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:38:06.601: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3297/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.196.38+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 25 12:38:07.678: INFO: Found all 1 expected endpoints: [netserver-2]
  Nov 25 12:38:07.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3297" for this suite. @ 11/25/23 12:38:07.682
• [27.456 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 11/25/23 12:38:07.689
  Nov 25 12:38:07.689: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 12:38:07.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:38:07.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:38:07.709
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 12:38:07.712
  STEP: Saw pod success @ 11/25/23 12:38:11.735
  Nov 25 12:38:11.738: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-f1a01b00-b682-4643-963e-d57b11717a38 container client-container: <nil>
  STEP: delete the pod @ 11/25/23 12:38:11.755
  Nov 25 12:38:11.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1851" for this suite. @ 11/25/23 12:38:11.779
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 11/25/23 12:38:11.79
  Nov 25 12:38:11.790: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 12:38:11.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:38:11.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:38:11.811
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-888d446c-6d39-4a1d-8faf-cb067ec7e9de @ 11/25/23 12:38:11.817
  STEP: Creating the pod @ 11/25/23 12:38:11.822
  STEP: Updating configmap projected-configmap-test-upd-888d446c-6d39-4a1d-8faf-cb067ec7e9de @ 11/25/23 12:38:13.853
  STEP: waiting to observe update in volume @ 11/25/23 12:38:13.858
  Nov 25 12:39:46.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3602" for this suite. @ 11/25/23 12:39:46.234
• [94.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 11/25/23 12:39:46.241
  Nov 25 12:39:46.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 12:39:46.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:39:46.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:39:46.28
  STEP: creating the pod @ 11/25/23 12:39:46.286
  Nov 25 12:39:46.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5825 create -f -'
  Nov 25 12:39:46.507: INFO: stderr: ""
  Nov 25 12:39:46.507: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 11/25/23 12:39:48.516
  Nov 25 12:39:48.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5825 label pods pause testing-label=testing-label-value'
  Nov 25 12:39:48.583: INFO: stderr: ""
  Nov 25 12:39:48.583: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 11/25/23 12:39:48.583
  Nov 25 12:39:48.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5825 get pod pause -L testing-label'
  Nov 25 12:39:48.649: INFO: stderr: ""
  Nov 25 12:39:48.649: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 11/25/23 12:39:48.649
  Nov 25 12:39:48.649: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5825 label pods pause testing-label-'
  Nov 25 12:39:48.718: INFO: stderr: ""
  Nov 25 12:39:48.718: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 11/25/23 12:39:48.718
  Nov 25 12:39:48.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5825 get pod pause -L testing-label'
  Nov 25 12:39:48.784: INFO: stderr: ""
  Nov 25 12:39:48.784: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 11/25/23 12:39:48.784
  Nov 25 12:39:48.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5825 delete --grace-period=0 --force -f -'
  Nov 25 12:39:48.851: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 25 12:39:48.851: INFO: stdout: "pod \"pause\" force deleted\n"
  Nov 25 12:39:48.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5825 get rc,svc -l name=pause --no-headers'
  Nov 25 12:39:48.918: INFO: stderr: "No resources found in kubectl-5825 namespace.\n"
  Nov 25 12:39:48.918: INFO: stdout: ""
  Nov 25 12:39:48.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5825 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Nov 25 12:39:48.976: INFO: stderr: ""
  Nov 25 12:39:48.976: INFO: stdout: ""
  Nov 25 12:39:48.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5825" for this suite. @ 11/25/23 12:39:48.98
• [2.746 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 11/25/23 12:39:48.987
  Nov 25 12:39:48.987: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename field-validation @ 11/25/23 12:39:48.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:39:49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:39:49.002
  STEP: apply creating a deployment @ 11/25/23 12:39:49.006
  Nov 25 12:39:49.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2059" for this suite. @ 11/25/23 12:39:49.027
• [0.046 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:640
  STEP: Creating a kubernetes client @ 11/25/23 12:39:49.034
  Nov 25 12:39:49.034: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename statefulset @ 11/25/23 12:39:49.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:39:49.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:39:49.051
  STEP: Creating service test in namespace statefulset-9229 @ 11/25/23 12:39:49.054
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 11/25/23 12:39:49.062
  STEP: Creating stateful set ss in namespace statefulset-9229 @ 11/25/23 12:39:49.067
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9229 @ 11/25/23 12:39:49.074
  Nov 25 12:39:49.077: INFO: Found 0 stateful pods, waiting for 1
  Nov 25 12:39:59.083: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 11/25/23 12:39:59.083
  Nov 25 12:39:59.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-9229 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 25 12:39:59.226: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 25 12:39:59.226: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 25 12:39:59.226: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 25 12:39:59.229: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Nov 25 12:40:09.237: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov 25 12:40:09.237: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov 25 12:40:09.252: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999978s
  Nov 25 12:40:10.257: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.995777651s
  Nov 25 12:40:11.261: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.991932348s
  Nov 25 12:40:12.265: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.986861901s
  Nov 25 12:40:13.271: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.982872405s
  Nov 25 12:40:14.274: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.97832818s
  Nov 25 12:40:15.278: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.974431093s
  Nov 25 12:40:16.283: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.969805198s
  Nov 25 12:40:17.287: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.965426374s
  Nov 25 12:40:18.291: INFO: Verifying statefulset ss doesn't scale past 1 for another 961.93935ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9229 @ 11/25/23 12:40:19.291
  Nov 25 12:40:19.295: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-9229 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 25 12:40:19.444: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 25 12:40:19.444: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 25 12:40:19.444: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 25 12:40:19.448: INFO: Found 1 stateful pods, waiting for 3
  Nov 25 12:40:29.453: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 25 12:40:29.453: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 25 12:40:29.453: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 11/25/23 12:40:29.453
  STEP: Scale down will halt with unhealthy stateful pod @ 11/25/23 12:40:29.453
  Nov 25 12:40:29.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-9229 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 25 12:40:29.611: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 25 12:40:29.611: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 25 12:40:29.611: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 25 12:40:29.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-9229 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 25 12:40:29.761: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 25 12:40:29.761: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 25 12:40:29.761: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 25 12:40:29.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-9229 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 25 12:40:29.911: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 25 12:40:29.911: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 25 12:40:29.911: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 25 12:40:29.911: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov 25 12:40:29.914: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Nov 25 12:40:39.921: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov 25 12:40:39.921: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Nov 25 12:40:39.921: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Nov 25 12:40:39.934: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999808s
  Nov 25 12:40:40.938: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996080956s
  Nov 25 12:40:41.942: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992191605s
  Nov 25 12:40:42.947: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.9884772s
  Nov 25 12:40:43.951: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.983148579s
  Nov 25 12:40:44.955: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.979482256s
  Nov 25 12:40:45.959: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.974489154s
  Nov 25 12:40:46.964: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.970347647s
  Nov 25 12:40:47.968: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.966274075s
  Nov 25 12:40:48.972: INFO: Verifying statefulset ss doesn't scale past 3 for another 962.603918ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9229 @ 11/25/23 12:40:49.972
  Nov 25 12:40:49.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-9229 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 25 12:40:50.119: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 25 12:40:50.119: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 25 12:40:50.119: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 25 12:40:50.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-9229 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 25 12:40:50.259: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 25 12:40:50.259: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 25 12:40:50.259: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 25 12:40:50.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-9229 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 25 12:40:50.393: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 25 12:40:50.394: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 25 12:40:50.394: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 25 12:40:50.394: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 11/25/23 12:41:00.408
  Nov 25 12:41:00.408: INFO: Deleting all statefulset in ns statefulset-9229
  Nov 25 12:41:00.411: INFO: Scaling statefulset ss to 0
  Nov 25 12:41:00.420: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 25 12:41:00.422: INFO: Deleting statefulset ss
  Nov 25 12:41:00.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9229" for this suite. @ 11/25/23 12:41:00.439
• [71.412 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 11/25/23 12:41:00.446
  Nov 25 12:41:00.446: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename endpointslice @ 11/25/23 12:41:00.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:41:00.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:41:00.463
  Nov 25 12:41:02.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4978" for this suite. @ 11/25/23 12:41:02.518
• [2.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 11/25/23 12:41:02.533
  Nov 25 12:41:02.533: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/25/23 12:41:02.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:41:02.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:41:02.551
  STEP: Creating 50 configmaps @ 11/25/23 12:41:02.553
  STEP: Creating RC which spawns configmap-volume pods @ 11/25/23 12:41:02.787
  Nov 25 12:41:02.924: INFO: Pod name wrapped-volume-race-fcdd51a1-3edf-4dfe-b570-d020b7cd5bca: Found 3 pods out of 5
  Nov 25 12:41:07.966: INFO: Pod name wrapped-volume-race-fcdd51a1-3edf-4dfe-b570-d020b7cd5bca: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/25/23 12:41:07.966
  STEP: Creating RC which spawns configmap-volume pods @ 11/25/23 12:41:07.995
  Nov 25 12:41:08.018: INFO: Pod name wrapped-volume-race-5829d6e1-82ce-4124-b82c-944c26ea5195: Found 0 pods out of 5
  Nov 25 12:41:13.024: INFO: Pod name wrapped-volume-race-5829d6e1-82ce-4124-b82c-944c26ea5195: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/25/23 12:41:13.024
  STEP: Creating RC which spawns configmap-volume pods @ 11/25/23 12:41:13.048
  Nov 25 12:41:13.064: INFO: Pod name wrapped-volume-race-c82a2ffa-c401-4761-8c23-7775e7f54848: Found 0 pods out of 5
  Nov 25 12:41:18.094: INFO: Pod name wrapped-volume-race-c82a2ffa-c401-4761-8c23-7775e7f54848: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/25/23 12:41:18.094
  Nov 25 12:41:18.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-c82a2ffa-c401-4761-8c23-7775e7f54848 in namespace emptydir-wrapper-1394, will wait for the garbage collector to delete the pods @ 11/25/23 12:41:18.126
  Nov 25 12:41:18.187: INFO: Deleting ReplicationController wrapped-volume-race-c82a2ffa-c401-4761-8c23-7775e7f54848 took: 7.339809ms
  Nov 25 12:41:18.288: INFO: Terminating ReplicationController wrapped-volume-race-c82a2ffa-c401-4761-8c23-7775e7f54848 pods took: 100.363307ms
  STEP: deleting ReplicationController wrapped-volume-race-5829d6e1-82ce-4124-b82c-944c26ea5195 in namespace emptydir-wrapper-1394, will wait for the garbage collector to delete the pods @ 11/25/23 12:41:20.388
  Nov 25 12:41:20.449: INFO: Deleting ReplicationController wrapped-volume-race-5829d6e1-82ce-4124-b82c-944c26ea5195 took: 5.874023ms
  Nov 25 12:41:20.549: INFO: Terminating ReplicationController wrapped-volume-race-5829d6e1-82ce-4124-b82c-944c26ea5195 pods took: 100.630899ms
  STEP: deleting ReplicationController wrapped-volume-race-fcdd51a1-3edf-4dfe-b570-d020b7cd5bca in namespace emptydir-wrapper-1394, will wait for the garbage collector to delete the pods @ 11/25/23 12:41:22.35
  Nov 25 12:41:22.412: INFO: Deleting ReplicationController wrapped-volume-race-fcdd51a1-3edf-4dfe-b570-d020b7cd5bca took: 7.037985ms
  Nov 25 12:41:22.512: INFO: Terminating ReplicationController wrapped-volume-race-fcdd51a1-3edf-4dfe-b570-d020b7cd5bca pods took: 100.575206ms
  STEP: Cleaning up the configMaps @ 11/25/23 12:41:24.613
  STEP: Destroying namespace "emptydir-wrapper-1394" for this suite. @ 11/25/23 12:41:24.875
• [22.350 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 11/25/23 12:41:24.886
  Nov 25 12:41:24.886: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 12:41:24.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:41:24.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:41:24.904
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 12:41:24.907
  STEP: Saw pod success @ 11/25/23 12:41:28.928
  Nov 25 12:41:28.931: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-e8f66007-1260-4e00-bd19-4bd5a8dd5190 container client-container: <nil>
  STEP: delete the pod @ 11/25/23 12:41:28.945
  Nov 25 12:41:28.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4587" for this suite. @ 11/25/23 12:41:28.964
• [4.084 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 11/25/23 12:41:28.97
  Nov 25 12:41:28.970: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename var-expansion @ 11/25/23 12:41:28.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:41:28.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:41:28.988
  STEP: Creating a pod to test substitution in volume subpath @ 11/25/23 12:41:28.99
  STEP: Saw pod success @ 11/25/23 12:41:33.013
  Nov 25 12:41:33.016: INFO: Trying to get logs from node ip-172-31-85-186 pod var-expansion-54721d46-0fd9-4faf-9c23-de20fc27c649 container dapi-container: <nil>
  STEP: delete the pod @ 11/25/23 12:41:33.022
  Nov 25 12:41:33.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5484" for this suite. @ 11/25/23 12:41:33.047
• [4.083 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 11/25/23 12:41:33.053
  Nov 25 12:41:33.053: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename subpath @ 11/25/23 12:41:33.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:41:33.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:41:33.073
  STEP: Setting up data @ 11/25/23 12:41:33.075
  STEP: Creating pod pod-subpath-test-downwardapi-tw4h @ 11/25/23 12:41:33.084
  STEP: Creating a pod to test atomic-volume-subpath @ 11/25/23 12:41:33.084
  STEP: Saw pod success @ 11/25/23 12:41:57.149
  Nov 25 12:41:57.153: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-subpath-test-downwardapi-tw4h container test-container-subpath-downwardapi-tw4h: <nil>
  STEP: delete the pod @ 11/25/23 12:41:57.159
  STEP: Deleting pod pod-subpath-test-downwardapi-tw4h @ 11/25/23 12:41:57.172
  Nov 25 12:41:57.172: INFO: Deleting pod "pod-subpath-test-downwardapi-tw4h" in namespace "subpath-1868"
  Nov 25 12:41:57.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1868" for this suite. @ 11/25/23 12:41:57.178
• [24.132 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:901
  STEP: Creating a kubernetes client @ 11/25/23 12:41:57.185
  Nov 25 12:41:57.185: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename statefulset @ 11/25/23 12:41:57.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:41:57.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:41:57.206
  STEP: Creating service test in namespace statefulset-4065 @ 11/25/23 12:41:57.208
  STEP: Creating statefulset ss in namespace statefulset-4065 @ 11/25/23 12:41:57.213
  Nov 25 12:41:57.228: INFO: Found 0 stateful pods, waiting for 1
  Nov 25 12:42:07.233: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 11/25/23 12:42:07.238
  STEP: updating a scale subresource @ 11/25/23 12:42:07.241
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/25/23 12:42:07.247
  STEP: Patch a scale subresource @ 11/25/23 12:42:07.25
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/25/23 12:42:07.256
  Nov 25 12:42:07.259: INFO: Deleting all statefulset in ns statefulset-4065
  Nov 25 12:42:07.264: INFO: Scaling statefulset ss to 0
  Nov 25 12:42:17.288: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 25 12:42:17.291: INFO: Deleting statefulset ss
  Nov 25 12:42:17.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4065" for this suite. @ 11/25/23 12:42:17.307
• [20.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 11/25/23 12:42:17.315
  Nov 25 12:42:17.315: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename taint-single-pod @ 11/25/23 12:42:17.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:42:17.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:42:17.333
  Nov 25 12:42:17.336: INFO: Waiting up to 1m0s for all nodes to be ready
  Nov 25 12:43:17.370: INFO: Waiting for terminating namespaces to be deleted...
  Nov 25 12:43:17.377: INFO: Starting informer...
  STEP: Starting pod... @ 11/25/23 12:43:17.377
  Nov 25 12:43:17.592: INFO: Pod is running on ip-172-31-85-186. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/25/23 12:43:17.592
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/25/23 12:43:17.601
  STEP: Waiting short time to make sure Pod is queued for deletion @ 11/25/23 12:43:17.607
  Nov 25 12:43:17.607: INFO: Pod wasn't evicted. Proceeding
  Nov 25 12:43:17.607: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/25/23 12:43:17.624
  STEP: Waiting some time to make sure that toleration time passed. @ 11/25/23 12:43:17.627
  Nov 25 12:44:32.629: INFO: Pod wasn't evicted. Test successful
  Nov 25 12:44:32.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-7965" for this suite. @ 11/25/23 12:44:32.634
• [135.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 11/25/23 12:44:32.644
  Nov 25 12:44:32.644: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 12:44:32.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:44:32.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:44:32.664
  STEP: Setting up server cert @ 11/25/23 12:44:32.688
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 12:44:33.168
  STEP: Deploying the webhook pod @ 11/25/23 12:44:33.175
  STEP: Wait for the deployment to be ready @ 11/25/23 12:44:33.187
  Nov 25 12:44:33.194: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/25/23 12:44:35.205
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 12:44:35.215
  Nov 25 12:44:36.215: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 11/25/23 12:44:36.221
  STEP: create a namespace for the webhook @ 11/25/23 12:44:36.24
  STEP: create a configmap should be unconditionally rejected by the webhook @ 11/25/23 12:44:36.265
  Nov 25 12:44:36.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1689" for this suite. @ 11/25/23 12:44:36.386
  STEP: Destroying namespace "webhook-markers-9976" for this suite. @ 11/25/23 12:44:36.398
  STEP: Destroying namespace "fail-closed-namespace-4027" for this suite. @ 11/25/23 12:44:36.406
• [3.768 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 11/25/23 12:44:36.413
  Nov 25 12:44:36.413: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 12:44:36.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:44:36.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:44:36.433
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/25/23 12:44:36.436
  STEP: Saw pod success @ 11/25/23 12:44:40.458
  Nov 25 12:44:40.460: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-5b72135c-0e4b-4982-bdb7-0e246b7133a1 container test-container: <nil>
  STEP: delete the pod @ 11/25/23 12:44:40.479
  Nov 25 12:44:40.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1507" for this suite. @ 11/25/23 12:44:40.505
• [4.098 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 11/25/23 12:44:40.512
  Nov 25 12:44:40.512: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 12:44:40.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:44:40.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:44:40.531
  STEP: creating a collection of services @ 11/25/23 12:44:40.534
  Nov 25 12:44:40.534: INFO: Creating e2e-svc-a-sz78v
  Nov 25 12:44:40.542: INFO: Creating e2e-svc-b-57r6r
  Nov 25 12:44:40.555: INFO: Creating e2e-svc-c-h5whd
  STEP: deleting service collection @ 11/25/23 12:44:40.566
  Nov 25 12:44:40.591: INFO: Collection of services has been deleted
  Nov 25 12:44:40.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5366" for this suite. @ 11/25/23 12:44:40.594
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 11/25/23 12:44:40.602
  Nov 25 12:44:40.602: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename dns @ 11/25/23 12:44:40.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:44:40.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:44:40.623
  STEP: Creating a test externalName service @ 11/25/23 12:44:40.627
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2878.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2878.svc.cluster.local; sleep 1; done
   @ 11/25/23 12:44:40.632
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2878.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2878.svc.cluster.local; sleep 1; done
   @ 11/25/23 12:44:40.632
  STEP: creating a pod to probe DNS @ 11/25/23 12:44:40.632
  STEP: submitting the pod to kubernetes @ 11/25/23 12:44:40.632
  STEP: retrieving the pod @ 11/25/23 12:44:48.661
  STEP: looking for the results for each expected name from probers @ 11/25/23 12:44:48.664
  Nov 25 12:44:48.672: INFO: DNS probes using dns-test-f7440c8c-2670-43c2-afe1-fd43d239db90 succeeded

  STEP: changing the externalName to bar.example.com @ 11/25/23 12:44:48.672
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2878.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2878.svc.cluster.local; sleep 1; done
   @ 11/25/23 12:44:48.681
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2878.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2878.svc.cluster.local; sleep 1; done
   @ 11/25/23 12:44:48.681
  STEP: creating a second pod to probe DNS @ 11/25/23 12:44:48.681
  STEP: submitting the pod to kubernetes @ 11/25/23 12:44:48.681
  STEP: retrieving the pod @ 11/25/23 12:44:50.7
  STEP: looking for the results for each expected name from probers @ 11/25/23 12:44:50.703
  Nov 25 12:44:50.707: INFO: File wheezy_udp@dns-test-service-3.dns-2878.svc.cluster.local from pod  dns-2878/dns-test-6dfb64cb-0165-48f9-b575-50d66bcc0a8b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Nov 25 12:44:50.711: INFO: File jessie_udp@dns-test-service-3.dns-2878.svc.cluster.local from pod  dns-2878/dns-test-6dfb64cb-0165-48f9-b575-50d66bcc0a8b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Nov 25 12:44:50.711: INFO: Lookups using dns-2878/dns-test-6dfb64cb-0165-48f9-b575-50d66bcc0a8b failed for: [wheezy_udp@dns-test-service-3.dns-2878.svc.cluster.local jessie_udp@dns-test-service-3.dns-2878.svc.cluster.local]

  Nov 25 12:44:50.729: INFO: Pod client logs for webserver: 
  Nov 25 12:44:50.735: INFO: Pod client logs for querier: 
  Nov 25 12:44:50.741: INFO: Pod client logs for jessie-querier: 
  Nov 25 12:44:55.750: INFO: DNS probes using dns-test-6dfb64cb-0165-48f9-b575-50d66bcc0a8b succeeded

  STEP: changing the service to type=ClusterIP @ 11/25/23 12:44:55.75
  W1125 12:44:55.764450      17 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2878.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-2878.svc.cluster.local; sleep 1; done
   @ 11/25/23 12:44:55.764
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2878.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2878.svc.cluster.local; sleep 1; done
   @ 11/25/23 12:44:55.764
  STEP: creating a third pod to probe DNS @ 11/25/23 12:44:55.764
  STEP: submitting the pod to kubernetes @ 11/25/23 12:44:55.768
  STEP: retrieving the pod @ 11/25/23 12:44:57.781
  STEP: looking for the results for each expected name from probers @ 11/25/23 12:44:57.784
  Nov 25 12:44:57.791: INFO: DNS probes using dns-test-8583534e-3509-4fbb-be64-0726fd1de8ea succeeded

  Nov 25 12:44:57.792: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 12:44:57.795
  STEP: deleting the pod @ 11/25/23 12:44:57.811
  STEP: deleting the pod @ 11/25/23 12:44:57.827
  STEP: deleting the test externalName service @ 11/25/23 12:44:57.844
  STEP: Destroying namespace "dns-2878" for this suite. @ 11/25/23 12:44:57.875
• [17.281 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 11/25/23 12:44:57.883
  Nov 25 12:44:57.883: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-probe @ 11/25/23 12:44:57.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:44:57.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:44:57.905
  STEP: Creating pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179 @ 11/25/23 12:44:57.91
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/25/23 12:44:59.931
  Nov 25 12:44:59.936: INFO: Initial restart count of pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 is 0
  Nov 25 12:44:59.939: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:01.943: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:03.947: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:05.951: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:07.955: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:09.959: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:11.964: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:13.967: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:15.972: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:17.978: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:19.981: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:21.985: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:23.990: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:25.994: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:27.997: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:30.001: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:32.004: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:34.008: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:36.013: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:38.017: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:40.021: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:42.024: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:44.028: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:46.033: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:48.037: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:50.041: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:52.045: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:54.048: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:56.054: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:45:58.058: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:00.062: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:02.067: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:04.071: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:06.075: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:08.078: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:10.082: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:12.085: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:14.089: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:16.094: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:18.098: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:20.102: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:22.107: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:24.110: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:26.118: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:28.122: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:30.126: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:32.130: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:34.134: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:36.138: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:38.142: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:40.147: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:42.151: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:44.155: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:46.160: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:48.164: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:50.169: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:52.172: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:54.176: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:56.184: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:46:58.188: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:00.193: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:02.197: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:04.202: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:06.207: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:08.211: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:10.215: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:12.219: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:14.223: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:16.227: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:18.232: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:20.235: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:22.239: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:24.243: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:26.248: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:28.252: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:30.256: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:32.260: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:34.264: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:36.268: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:38.272: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:40.276: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:42.279: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:44.283: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:46.288: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:48.291: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:50.295: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:52.299: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:54.303: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:56.308: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:47:58.311: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:00.315: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:02.319: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:04.323: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:06.328: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:08.331: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:10.335: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:12.339: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:14.343: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:16.347: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:18.352: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:20.356: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:22.361: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:24.365: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:26.396: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:28.401: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:30.404: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:32.409: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:34.413: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:36.418: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:38.422: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:40.425: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:42.429: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:44.433: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:46.438: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:48.442: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:50.446: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:52.450: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:54.453: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:56.459: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:48:58.463: INFO: Get pod busybox-852aa73d-b7c3-4602-8d87-bca781de2dc0 in namespace container-probe-7179
  Nov 25 12:49:00.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 12:49:00.468
  STEP: Destroying namespace "container-probe-7179" for this suite. @ 11/25/23 12:49:00.48
• [242.603 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 11/25/23 12:49:00.487
  Nov 25 12:49:00.487: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/25/23 12:49:00.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:49:00.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:49:00.51
  Nov 25 12:49:00.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/25/23 12:49:01.811
  Nov 25 12:49:01.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-4832 --namespace=crd-publish-openapi-4832 create -f -'
  Nov 25 12:49:02.288: INFO: stderr: ""
  Nov 25 12:49:02.288: INFO: stdout: "e2e-test-crd-publish-openapi-8982-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Nov 25 12:49:02.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-4832 --namespace=crd-publish-openapi-4832 delete e2e-test-crd-publish-openapi-8982-crds test-cr'
  Nov 25 12:49:02.363: INFO: stderr: ""
  Nov 25 12:49:02.363: INFO: stdout: "e2e-test-crd-publish-openapi-8982-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Nov 25 12:49:02.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-4832 --namespace=crd-publish-openapi-4832 apply -f -'
  Nov 25 12:49:02.500: INFO: stderr: ""
  Nov 25 12:49:02.500: INFO: stdout: "e2e-test-crd-publish-openapi-8982-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Nov 25 12:49:02.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-4832 --namespace=crd-publish-openapi-4832 delete e2e-test-crd-publish-openapi-8982-crds test-cr'
  Nov 25 12:49:02.587: INFO: stderr: ""
  Nov 25 12:49:02.587: INFO: stdout: "e2e-test-crd-publish-openapi-8982-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/25/23 12:49:02.587
  Nov 25 12:49:02.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=crd-publish-openapi-4832 explain e2e-test-crd-publish-openapi-8982-crds'
  Nov 25 12:49:03.007: INFO: stderr: ""
  Nov 25 12:49:03.007: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8982-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Nov 25 12:49:04.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4832" for this suite. @ 11/25/23 12:49:04.312
• [3.832 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 11/25/23 12:49:04.319
  Nov 25 12:49:04.319: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 12:49:04.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:49:04.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:49:04.342
  STEP: creating Agnhost RC @ 11/25/23 12:49:04.345
  Nov 25 12:49:04.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-8070 create -f -'
  Nov 25 12:49:04.745: INFO: stderr: ""
  Nov 25 12:49:04.745: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/25/23 12:49:04.745
  Nov 25 12:49:05.750: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 25 12:49:05.750: INFO: Found 0 / 1
  Nov 25 12:49:06.750: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 25 12:49:06.750: INFO: Found 1 / 1
  Nov 25 12:49:06.750: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 11/25/23 12:49:06.75
  Nov 25 12:49:06.754: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 25 12:49:06.754: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov 25 12:49:06.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-8070 patch pod agnhost-primary-hqvqd -p {"metadata":{"annotations":{"x":"y"}}}'
  Nov 25 12:49:06.826: INFO: stderr: ""
  Nov 25 12:49:06.826: INFO: stdout: "pod/agnhost-primary-hqvqd patched\n"
  STEP: checking annotations @ 11/25/23 12:49:06.826
  Nov 25 12:49:06.830: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 25 12:49:06.830: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov 25 12:49:06.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8070" for this suite. @ 11/25/23 12:49:06.834
• [2.521 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 11/25/23 12:49:06.841
  Nov 25 12:49:06.841: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 12:49:06.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:49:06.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:49:06.861
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/25/23 12:49:06.864
  STEP: Saw pod success @ 11/25/23 12:49:10.887
  Nov 25 12:49:10.891: INFO: Trying to get logs from node ip-172-31-4-198 pod pod-8c0fb767-982b-4a53-9fa7-5bd005a61976 container test-container: <nil>
  STEP: delete the pod @ 11/25/23 12:49:10.907
  Nov 25 12:49:10.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3517" for this suite. @ 11/25/23 12:49:10.93
• [4.095 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 11/25/23 12:49:10.937
  Nov 25 12:49:10.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 12:49:10.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:49:10.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:49:10.958
  STEP: Setting up server cert @ 11/25/23 12:49:10.984
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 12:49:11.259
  STEP: Deploying the webhook pod @ 11/25/23 12:49:11.268
  STEP: Wait for the deployment to be ready @ 11/25/23 12:49:11.281
  Nov 25 12:49:11.289: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/25/23 12:49:13.302
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 12:49:13.313
  Nov 25 12:49:14.314: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 11/25/23 12:49:14.322
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/25/23 12:49:14.342
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 11/25/23 12:49:14.351
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/25/23 12:49:14.361
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 11/25/23 12:49:14.372
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/25/23 12:49:14.379
  Nov 25 12:49:14.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6517" for this suite. @ 11/25/23 12:49:14.43
  STEP: Destroying namespace "webhook-markers-5937" for this suite. @ 11/25/23 12:49:14.438
• [3.510 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 11/25/23 12:49:14.45
  Nov 25 12:49:14.450: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename events @ 11/25/23 12:49:14.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:49:14.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:49:14.47
  STEP: Create set of events @ 11/25/23 12:49:14.474
  STEP: get a list of Events with a label in the current namespace @ 11/25/23 12:49:14.493
  STEP: delete a list of events @ 11/25/23 12:49:14.496
  Nov 25 12:49:14.497: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/25/23 12:49:14.519
  Nov 25 12:49:14.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1134" for this suite. @ 11/25/23 12:49:14.527
• [0.085 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 11/25/23 12:49:14.535
  Nov 25 12:49:14.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 12:49:14.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:49:14.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:49:14.552
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 12:49:14.556
  STEP: Saw pod success @ 11/25/23 12:49:18.579
  Nov 25 12:49:18.583: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-21c8a170-b0bb-4ea9-8a1b-ced56d733cb6 container client-container: <nil>
  STEP: delete the pod @ 11/25/23 12:49:18.603
  Nov 25 12:49:18.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4188" for this suite. @ 11/25/23 12:49:18.622
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 11/25/23 12:49:18.631
  Nov 25 12:49:18.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename daemonsets @ 11/25/23 12:49:18.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:49:18.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:49:18.655
  Nov 25 12:49:18.682: INFO: Create a RollingUpdate DaemonSet
  Nov 25 12:49:18.690: INFO: Check that daemon pods launch on every node of the cluster
  Nov 25 12:49:18.693: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:49:18.693: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:49:18.697: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 12:49:18.697: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  Nov 25 12:49:19.703: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:49:19.704: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:49:19.708: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 12:49:19.708: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  Nov 25 12:49:20.702: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:49:20.702: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:49:20.706: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 25 12:49:20.706: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Nov 25 12:49:20.706: INFO: Update the DaemonSet to trigger a rollout
  Nov 25 12:49:20.716: INFO: Updating DaemonSet daemon-set
  Nov 25 12:49:21.737: INFO: Roll back the DaemonSet before rollout is complete
  Nov 25 12:49:21.749: INFO: Updating DaemonSet daemon-set
  Nov 25 12:49:21.749: INFO: Make sure DaemonSet rollback is complete
  Nov 25 12:49:21.753: INFO: Wrong image for pod: daemon-set-pfmft. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Nov 25 12:49:21.753: INFO: Pod daemon-set-pfmft is not available
  Nov 25 12:49:21.761: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:49:21.761: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:49:22.771: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:49:22.771: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:49:23.771: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:49:23.771: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:49:24.766: INFO: Pod daemon-set-8gpvt is not available
  Nov 25 12:49:24.771: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:49:24.771: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 11/25/23 12:49:24.778
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2159, will wait for the garbage collector to delete the pods @ 11/25/23 12:49:24.778
  Nov 25 12:49:24.839: INFO: Deleting DaemonSet.extensions daemon-set took: 6.903661ms
  Nov 25 12:49:24.939: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.113075ms
  Nov 25 12:49:26.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 12:49:26.251: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 25 12:49:26.254: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15468"},"items":null}

  Nov 25 12:49:26.258: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15468"},"items":null}

  Nov 25 12:49:26.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2159" for this suite. @ 11/25/23 12:49:26.278
• [7.653 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 11/25/23 12:49:26.288
  Nov 25 12:49:26.288: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename resourcequota @ 11/25/23 12:49:26.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:49:26.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:49:26.309
  STEP: Counting existing ResourceQuota @ 11/25/23 12:49:26.313
  STEP: Creating a ResourceQuota @ 11/25/23 12:49:31.318
  STEP: Ensuring resource quota status is calculated @ 11/25/23 12:49:31.325
  Nov 25 12:49:33.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8912" for this suite. @ 11/25/23 12:49:33.334
• [7.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 11/25/23 12:49:33.344
  Nov 25 12:49:33.344: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 12:49:33.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:49:33.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:49:33.364
  STEP: Creating secret with name projected-secret-test-7ec991f4-999b-4d4a-be63-d8af777e0302 @ 11/25/23 12:49:33.368
  STEP: Creating a pod to test consume secrets @ 11/25/23 12:49:33.373
  STEP: Saw pod success @ 11/25/23 12:49:37.397
  Nov 25 12:49:37.401: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-projected-secrets-e1abc62f-a599-4ef0-943d-9d4144806849 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 12:49:37.409
  Nov 25 12:49:37.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2758" for this suite. @ 11/25/23 12:49:37.434
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 11/25/23 12:49:37.445
  Nov 25 12:49:37.445: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename proxy @ 11/25/23 12:49:37.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:49:37.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:49:37.467
  Nov 25 12:49:37.472: INFO: Creating pod...
  Nov 25 12:49:39.494: INFO: Creating service...
  Nov 25 12:49:39.524: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8437/pods/agnhost/proxy/some/path/with/DELETE
  Nov 25 12:49:39.547: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov 25 12:49:39.547: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8437/pods/agnhost/proxy/some/path/with/GET
  Nov 25 12:49:39.551: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Nov 25 12:49:39.551: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8437/pods/agnhost/proxy/some/path/with/HEAD
  Nov 25 12:49:39.556: INFO: http.Client request:HEAD | StatusCode:200
  Nov 25 12:49:39.556: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8437/pods/agnhost/proxy/some/path/with/OPTIONS
  Nov 25 12:49:39.561: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov 25 12:49:39.561: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8437/pods/agnhost/proxy/some/path/with/PATCH
  Nov 25 12:49:39.565: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov 25 12:49:39.565: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8437/pods/agnhost/proxy/some/path/with/POST
  Nov 25 12:49:39.570: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov 25 12:49:39.570: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8437/pods/agnhost/proxy/some/path/with/PUT
  Nov 25 12:49:39.574: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov 25 12:49:39.574: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8437/services/test-service/proxy/some/path/with/DELETE
  Nov 25 12:49:39.581: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov 25 12:49:39.581: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8437/services/test-service/proxy/some/path/with/GET
  Nov 25 12:49:39.588: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Nov 25 12:49:39.588: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8437/services/test-service/proxy/some/path/with/HEAD
  Nov 25 12:49:39.594: INFO: http.Client request:HEAD | StatusCode:200
  Nov 25 12:49:39.594: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8437/services/test-service/proxy/some/path/with/OPTIONS
  Nov 25 12:49:39.601: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov 25 12:49:39.601: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8437/services/test-service/proxy/some/path/with/PATCH
  Nov 25 12:49:39.615: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov 25 12:49:39.615: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8437/services/test-service/proxy/some/path/with/POST
  Nov 25 12:49:39.624: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov 25 12:49:39.624: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8437/services/test-service/proxy/some/path/with/PUT
  Nov 25 12:49:39.634: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov 25 12:49:39.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8437" for this suite. @ 11/25/23 12:49:39.64
• [2.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 11/25/23 12:49:39.65
  Nov 25 12:49:39.651: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-probe @ 11/25/23 12:49:39.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:49:39.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:49:39.675
  STEP: Creating pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630 @ 11/25/23 12:49:39.681
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/25/23 12:49:41.704
  Nov 25 12:49:41.707: INFO: Initial restart count of pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb is 0
  Nov 25 12:49:41.711: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:49:43.716: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:49:45.722: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:49:47.728: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:49:49.732: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:49:51.737: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:49:53.742: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:49:55.747: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:49:57.752: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:49:59.757: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:01.762: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:03.766: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:05.771: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:07.776: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:09.780: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:11.785: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:13.790: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:15.796: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:17.801: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:19.805: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:21.809: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:23.814: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:25.820: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:27.824: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:29.829: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:31.833: INFO: Get pod busybox-356330dd-1032-4767-8f74-a00a8495d1eb in namespace container-probe-630
  Nov 25 12:50:31.833: INFO: Restart count of pod container-probe-630/busybox-356330dd-1032-4767-8f74-a00a8495d1eb is now 1 (50.125720148s elapsed)
  Nov 25 12:50:31.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 12:50:31.838
  STEP: Destroying namespace "container-probe-630" for this suite. @ 11/25/23 12:50:31.854
• [52.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 11/25/23 12:50:31.862
  Nov 25 12:50:31.862: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pods @ 11/25/23 12:50:31.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:50:31.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:50:31.883
  Nov 25 12:50:31.890: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: creating the pod @ 11/25/23 12:50:31.89
  STEP: submitting the pod to kubernetes @ 11/25/23 12:50:31.89
  Nov 25 12:50:33.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4869" for this suite. @ 11/25/23 12:50:33.934
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 11/25/23 12:50:33.943
  Nov 25 12:50:33.943: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename gc @ 11/25/23 12:50:33.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:50:33.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:50:33.967
  STEP: create the deployment @ 11/25/23 12:50:33.97
  W1125 12:50:33.977887      17 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/25/23 12:50:33.978
  STEP: delete the deployment @ 11/25/23 12:50:34.505
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 11/25/23 12:50:34.512
  STEP: Gathering metrics @ 11/25/23 12:50:35.035
  W1125 12:50:35.041291      17 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 25 12:50:35.041: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 25 12:50:35.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4344" for this suite. @ 11/25/23 12:50:35.045
• [1.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 11/25/23 12:50:35.054
  Nov 25 12:50:35.054: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename endpointslice @ 11/25/23 12:50:35.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:50:35.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:50:35.076
  STEP: getting /apis @ 11/25/23 12:50:35.079
  STEP: getting /apis/discovery.k8s.io @ 11/25/23 12:50:35.084
  STEP: getting /apis/discovery.k8s.iov1 @ 11/25/23 12:50:35.085
  STEP: creating @ 11/25/23 12:50:35.087
  STEP: getting @ 11/25/23 12:50:35.102
  STEP: listing @ 11/25/23 12:50:35.105
  STEP: watching @ 11/25/23 12:50:35.109
  Nov 25 12:50:35.109: INFO: starting watch
  STEP: cluster-wide listing @ 11/25/23 12:50:35.111
  STEP: cluster-wide watching @ 11/25/23 12:50:35.114
  Nov 25 12:50:35.114: INFO: starting watch
  STEP: patching @ 11/25/23 12:50:35.116
  STEP: updating @ 11/25/23 12:50:35.121
  Nov 25 12:50:35.129: INFO: waiting for watch events with expected annotations
  Nov 25 12:50:35.129: INFO: saw patched and updated annotations
  STEP: deleting @ 11/25/23 12:50:35.129
  STEP: deleting a collection @ 11/25/23 12:50:35.142
  Nov 25 12:50:35.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6347" for this suite. @ 11/25/23 12:50:35.162
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 11/25/23 12:50:35.171
  Nov 25 12:50:35.171: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename resourcequota @ 11/25/23 12:50:35.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:50:35.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:50:35.195
  STEP: Discovering how many secrets are in namespace by default @ 11/25/23 12:50:35.198
  STEP: Counting existing ResourceQuota @ 11/25/23 12:50:40.203
  STEP: Creating a ResourceQuota @ 11/25/23 12:50:45.208
  STEP: Ensuring resource quota status is calculated @ 11/25/23 12:50:45.215
  STEP: Creating a Secret @ 11/25/23 12:50:47.22
  STEP: Ensuring resource quota status captures secret creation @ 11/25/23 12:50:47.233
  STEP: Deleting a secret @ 11/25/23 12:50:49.238
  STEP: Ensuring resource quota status released usage @ 11/25/23 12:50:49.245
  Nov 25 12:50:51.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8146" for this suite. @ 11/25/23 12:50:51.254
• [16.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 11/25/23 12:50:51.262
  Nov 25 12:50:51.262: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename deployment @ 11/25/23 12:50:51.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:50:51.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:50:51.284
  Nov 25 12:50:51.287: INFO: Creating simple deployment test-new-deployment
  Nov 25 12:50:51.298: INFO: deployment "test-new-deployment" doesn't have the required revision set
  Nov 25 12:50:53.310: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 25, 12, 50, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 50, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 50, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 50, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-557759b7c7\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: getting scale subresource @ 11/25/23 12:50:55.318
  STEP: updating a scale subresource @ 11/25/23 12:50:55.322
  STEP: verifying the deployment Spec.Replicas was modified @ 11/25/23 12:50:55.329
  STEP: Patch a scale subresource @ 11/25/23 12:50:55.333
  Nov 25 12:50:55.354: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3141",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67e0e80e-4157-4e87-bee3-317c3fd2ce98",
      ResourceVersion: (string) (len=5) "15978",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836513451,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 25 12:50:55.362: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3141",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "749519e0-207b-43f0-8b2f-e3da4ea20263",
      ResourceVersion: (string) (len=5) "15985",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836513451,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "67e0e80e-4157-4e87-bee3-317c3fd2ce98",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513455,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 37 65 30 65 38  30 65 2d 34 31 35 37 2d  |\"67e0e80e-4157-|
              00000120  34 65 38 37 2d 62 65 65  33 2d 33 31 37 63 33 66  |4e87-bee3-317c3f|
              00000130  64 32 63 65 39 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d2ce98\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513455,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 25 12:50:55.367: INFO: Pod "test-new-deployment-557759b7c7-747q8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-747q8",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3141",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5c7094b-9c77-4647-876d-660f5bdffc9a",
      ResourceVersion: (string) (len=5) "15984",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836513455,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "749519e0-207b-43f0-8b2f-e3da4ea20263",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513455,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  39 35 31 39 65 30 2d 32  |d\":\"749519e0-2|
              00000090  30 37 62 2d 34 33 66 30  2d 38 62 32 66 2d 65 33  |07b-43f0-8b2f-e3|
              000000a0  64 61 34 65 61 32 30 32  36 33 5c 22 7d 22 3a 7b  |da4ea20263\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-88fvw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-88fvw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513455,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 12:50:55.370: INFO: Pod "test-new-deployment-557759b7c7-ntjn7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-ntjn7",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3141",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4c1d711-720e-4bdd-a023-a17d164fc3ff",
      ResourceVersion: (string) (len=5) "15972",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836513451,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "749519e0-207b-43f0-8b2f-e3da4ea20263",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  39 35 31 39 65 30 2d 32  |d\":\"749519e0-2|
              00000090  30 37 62 2d 34 33 66 30  2d 38 62 32 66 2d 65 33  |07b-43f0-8b2f-e3|
              000000a0  64 61 34 65 61 32 30 32  36 33 5c 22 7d 22 3a 7b  |da4ea20263\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  38 2e 35 36 5c 22 7d 22  |192.168.8.56\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h9rbd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h9rbd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "192.168.8.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.8.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836513451,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836513453,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8901b20dae581aa3375542b85f4a7bb72f9d7129c3fac09eb4c3c870d797f8f3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 12:50:55.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3141" for this suite. @ 11/25/23 12:50:55.381
• [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 11/25/23 12:50:55.393
  Nov 25 12:50:55.393: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 12:50:55.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:50:55.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:50:55.418
  STEP: Creating configMap with name configmap-test-volume-map-eb74ceea-bd9a-4d41-8087-8b40acbd86fd @ 11/25/23 12:50:55.422
  STEP: Creating a pod to test consume configMaps @ 11/25/23 12:50:55.428
  STEP: Saw pod success @ 11/25/23 12:50:59.456
  Nov 25 12:50:59.460: INFO: Trying to get logs from node ip-172-31-4-198 pod pod-configmaps-9f44c41c-abfc-4ccf-aa1a-e9d396aca491 container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 12:50:59.48
  Nov 25 12:50:59.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6610" for this suite. @ 11/25/23 12:50:59.504
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 11/25/23 12:50:59.512
  Nov 25 12:50:59.512: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pod-network-test @ 11/25/23 12:50:59.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:50:59.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:50:59.533
  STEP: Performing setup for networking test in namespace pod-network-test-7700 @ 11/25/23 12:50:59.536
  STEP: creating a selector @ 11/25/23 12:50:59.536
  STEP: Creating the service pods in kubernetes @ 11/25/23 12:50:59.536
  Nov 25 12:50:59.536: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 11/25/23 12:51:21.646
  Nov 25 12:51:23.667: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov 25 12:51:23.667: INFO: Breadth first check of 192.168.72.158 on host 172.31.22.130...
  Nov 25 12:51:23.670: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.196.6:9080/dial?request=hostname&protocol=http&host=192.168.72.158&port=8083&tries=1'] Namespace:pod-network-test-7700 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:51:23.670: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:51:23.671: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:51:23.671: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7700/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.196.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.72.158%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 25 12:51:23.754: INFO: Waiting for responses: map[]
  Nov 25 12:51:23.754: INFO: reached 192.168.72.158 after 0/1 tries
  Nov 25 12:51:23.754: INFO: Breadth first check of 192.168.8.58 on host 172.31.4.198...
  Nov 25 12:51:23.757: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.196.6:9080/dial?request=hostname&protocol=http&host=192.168.8.58&port=8083&tries=1'] Namespace:pod-network-test-7700 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:51:23.757: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:51:23.758: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:51:23.758: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7700/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.196.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.8.58%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 25 12:51:23.846: INFO: Waiting for responses: map[]
  Nov 25 12:51:23.846: INFO: reached 192.168.8.58 after 0/1 tries
  Nov 25 12:51:23.846: INFO: Breadth first check of 192.168.196.4 on host 172.31.85.186...
  Nov 25 12:51:23.850: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.196.6:9080/dial?request=hostname&protocol=http&host=192.168.196.4&port=8083&tries=1'] Namespace:pod-network-test-7700 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:51:23.850: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:51:23.851: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:51:23.851: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7700/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.196.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.196.4%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 25 12:51:23.936: INFO: Waiting for responses: map[]
  Nov 25 12:51:23.936: INFO: reached 192.168.196.4 after 0/1 tries
  Nov 25 12:51:23.936: INFO: Going to retry 0 out of 3 pods....
  Nov 25 12:51:23.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7700" for this suite. @ 11/25/23 12:51:23.941
• [24.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 11/25/23 12:51:23.949
  Nov 25 12:51:23.949: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename subpath @ 11/25/23 12:51:23.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:51:23.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:51:23.971
  STEP: Setting up data @ 11/25/23 12:51:23.975
  STEP: Creating pod pod-subpath-test-configmap-k9x8 @ 11/25/23 12:51:23.987
  STEP: Creating a pod to test atomic-volume-subpath @ 11/25/23 12:51:23.987
  STEP: Saw pod success @ 11/25/23 12:51:48.061
  Nov 25 12:51:48.065: INFO: Trying to get logs from node ip-172-31-4-198 pod pod-subpath-test-configmap-k9x8 container test-container-subpath-configmap-k9x8: <nil>
  STEP: delete the pod @ 11/25/23 12:51:48.073
  STEP: Deleting pod pod-subpath-test-configmap-k9x8 @ 11/25/23 12:51:48.097
  Nov 25 12:51:48.097: INFO: Deleting pod "pod-subpath-test-configmap-k9x8" in namespace "subpath-9605"
  Nov 25 12:51:48.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9605" for this suite. @ 11/25/23 12:51:48.108
• [24.167 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 11/25/23 12:51:48.116
  Nov 25 12:51:48.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename security-context @ 11/25/23 12:51:48.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:51:48.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:51:48.147
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/25/23 12:51:48.152
  STEP: Saw pod success @ 11/25/23 12:51:52.178
  Nov 25 12:51:52.182: INFO: Trying to get logs from node ip-172-31-85-186 pod security-context-75bd8c5a-7702-4745-844d-a1ddbd94f9ab container test-container: <nil>
  STEP: delete the pod @ 11/25/23 12:51:52.189
  Nov 25 12:51:52.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1207" for this suite. @ 11/25/23 12:51:52.21
• [4.100 seconds]
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 11/25/23 12:51:52.216
  Nov 25 12:51:52.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubelet-test @ 11/25/23 12:51:52.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:51:52.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:51:52.238
  Nov 25 12:51:54.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6707" for this suite. @ 11/25/23 12:51:54.275
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 11/25/23 12:51:54.283
  Nov 25 12:51:54.283: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 12:51:54.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:51:54.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:51:54.306
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/25/23 12:51:54.311
  STEP: Saw pod success @ 11/25/23 12:51:58.343
  Nov 25 12:51:58.351: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-31d9d68e-0867-42cd-974e-e3d85dd91019 container test-container: <nil>
  STEP: delete the pod @ 11/25/23 12:51:58.36
  Nov 25 12:51:58.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1484" for this suite. @ 11/25/23 12:51:58.387
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 11/25/23 12:51:58.396
  Nov 25 12:51:58.397: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename runtimeclass @ 11/25/23 12:51:58.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:51:58.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:51:58.419
  STEP: Deleting RuntimeClass runtimeclass-2490-delete-me @ 11/25/23 12:51:58.429
  STEP: Waiting for the RuntimeClass to disappear @ 11/25/23 12:51:58.437
  Nov 25 12:51:58.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2490" for this suite. @ 11/25/23 12:51:58.453
• [0.064 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 11/25/23 12:51:58.461
  Nov 25 12:51:58.461: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename namespaces @ 11/25/23 12:51:58.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:51:58.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:51:58.485
  STEP: Creating a test namespace @ 11/25/23 12:51:58.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:51:58.511
  STEP: Creating a service in the namespace @ 11/25/23 12:51:58.514
  STEP: Deleting the namespace @ 11/25/23 12:51:58.524
  STEP: Waiting for the namespace to be removed. @ 11/25/23 12:51:58.535
  STEP: Recreating the namespace @ 11/25/23 12:52:04.539
  STEP: Verifying there is no service in the namespace @ 11/25/23 12:52:04.556
  Nov 25 12:52:04.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6699" for this suite. @ 11/25/23 12:52:04.565
  STEP: Destroying namespace "nsdeletetest-2337" for this suite. @ 11/25/23 12:52:04.572
  Nov 25 12:52:04.576: INFO: Namespace nsdeletetest-2337 was already deleted
  STEP: Destroying namespace "nsdeletetest-9580" for this suite. @ 11/25/23 12:52:04.576
• [6.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 11/25/23 12:52:04.584
  Nov 25 12:52:04.585: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pods @ 11/25/23 12:52:04.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:52:04.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:52:04.615
  STEP: creating the pod @ 11/25/23 12:52:04.618
  STEP: submitting the pod to kubernetes @ 11/25/23 12:52:04.618
  STEP: verifying QOS class is set on the pod @ 11/25/23 12:52:04.627
  Nov 25 12:52:04.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3822" for this suite. @ 11/25/23 12:52:04.639
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 11/25/23 12:52:04.648
  Nov 25 12:52:04.648: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename svcaccounts @ 11/25/23 12:52:04.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:52:04.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:52:04.668
  STEP: Creating a pod to test service account token:  @ 11/25/23 12:52:04.672
  STEP: Saw pod success @ 11/25/23 12:52:08.696
  Nov 25 12:52:08.700: INFO: Trying to get logs from node ip-172-31-4-198 pod test-pod-2315fb40-aaa1-4577-8313-f7721b40b139 container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 12:52:08.707
  Nov 25 12:52:08.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5625" for this suite. @ 11/25/23 12:52:08.728
• [4.087 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 11/25/23 12:52:08.736
  Nov 25 12:52:08.737: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename secrets @ 11/25/23 12:52:08.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:52:08.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:52:08.756
  STEP: Creating secret with name secret-test-99081475-e1fe-4a89-b3e9-404d8b5143ed @ 11/25/23 12:52:08.759
  STEP: Creating a pod to test consume secrets @ 11/25/23 12:52:08.767
  STEP: Saw pod success @ 11/25/23 12:52:12.791
  Nov 25 12:52:12.795: INFO: Trying to get logs from node ip-172-31-4-198 pod pod-secrets-0bef6222-6ac6-443a-a84d-e5ef9f35a0e1 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 12:52:12.802
  Nov 25 12:52:12.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4958" for this suite. @ 11/25/23 12:52:12.824
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 11/25/23 12:52:12.832
  Nov 25 12:52:12.832: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/25/23 12:52:12.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:52:12.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:52:12.854
  STEP: creating @ 11/25/23 12:52:12.861
  STEP: getting @ 11/25/23 12:52:12.879
  STEP: listing in namespace @ 11/25/23 12:52:12.885
  STEP: patching @ 11/25/23 12:52:12.891
  STEP: deleting @ 11/25/23 12:52:12.9
  Nov 25 12:52:12.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7040" for this suite. @ 11/25/23 12:52:12.916
• [0.091 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 11/25/23 12:52:12.924
  Nov 25 12:52:12.924: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename gc @ 11/25/23 12:52:12.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:52:12.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:52:12.943
  STEP: create the deployment @ 11/25/23 12:52:12.947
  W1125 12:52:12.953068      17 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/25/23 12:52:12.953
  STEP: delete the deployment @ 11/25/23 12:52:13.471
  STEP: wait for all rs to be garbage collected @ 11/25/23 12:52:13.477
  STEP: expected 0 pods, got 2 pods @ 11/25/23 12:52:13.5
  STEP: Gathering metrics @ 11/25/23 12:52:14.012
  W1125 12:52:14.018478      17 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 25 12:52:14.018: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 25 12:52:14.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4231" for this suite. @ 11/25/23 12:52:14.022
• [1.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 11/25/23 12:52:14.043
  Nov 25 12:52:14.043: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename resourcequota @ 11/25/23 12:52:14.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:52:14.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:52:14.064
  STEP: Counting existing ResourceQuota @ 11/25/23 12:52:14.068
  STEP: Creating a ResourceQuota @ 11/25/23 12:52:19.073
  STEP: Ensuring resource quota status is calculated @ 11/25/23 12:52:19.079
  STEP: Creating a ReplicaSet @ 11/25/23 12:52:21.083
  STEP: Ensuring resource quota status captures replicaset creation @ 11/25/23 12:52:21.095
  STEP: Deleting a ReplicaSet @ 11/25/23 12:52:23.1
  STEP: Ensuring resource quota status released usage @ 11/25/23 12:52:23.107
  Nov 25 12:52:25.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3861" for this suite. @ 11/25/23 12:52:25.115
• [11.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 11/25/23 12:52:25.122
  Nov 25 12:52:25.122: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename sched-pred @ 11/25/23 12:52:25.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:52:25.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:52:25.143
  Nov 25 12:52:25.147: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov 25 12:52:25.156: INFO: Waiting for terminating namespaces to be deleted...
  Nov 25 12:52:25.159: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-22-130 before test
  Nov 25 12:52:25.166: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-s48l6 from ingress-nginx-kubernetes-worker started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 12:52:25.166: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov 25 12:52:25.166: INFO: nginx-ingress-controller-kubernetes-worker-h97gq from ingress-nginx-kubernetes-worker started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 12:52:25.166: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 25 12:52:25.166: INFO: calico-node-kk5hk from kube-system started at 2023-11-25 12:05:43 +0000 UTC (1 container statuses recorded)
  Nov 25 12:52:25.166: INFO: 	Container calico-node ready: true, restart count 0
  Nov 25 12:52:25.166: INFO: coredns-59cfb5bf46-hqlmw from kube-system started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 12:52:25.166: INFO: 	Container coredns ready: true, restart count 0
  Nov 25 12:52:25.166: INFO: kube-state-metrics-78c475f58b-stptt from kube-system started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 12:52:25.166: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov 25 12:52:25.166: INFO: metrics-server-v0.6.3-69d7fbfdf8-frwh6 from kube-system started at 2023-11-25 12:06:05 +0000 UTC (2 container statuses recorded)
  Nov 25 12:52:25.166: INFO: 	Container metrics-server ready: true, restart count 0
  Nov 25 12:52:25.166: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov 25 12:52:25.166: INFO: dashboard-metrics-scraper-5dd7cb5fc-lh87v from kubernetes-dashboard started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 12:52:25.166: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov 25 12:52:25.166: INFO: kubernetes-dashboard-7b899cb9d9-77vb9 from kubernetes-dashboard started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 12:52:25.166: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov 25 12:52:25.166: INFO: sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-7nrjs from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 12:52:25.166: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 12:52:25.166: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 25 12:52:25.166: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-4-198 before test
  Nov 25 12:52:25.172: INFO: nginx-ingress-controller-kubernetes-worker-zt7jm from ingress-nginx-kubernetes-worker started at 2023-11-25 12:06:22 +0000 UTC (1 container statuses recorded)
  Nov 25 12:52:25.172: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 25 12:52:25.172: INFO: calico-node-hl85s from kube-system started at 2023-11-25 12:05:44 +0000 UTC (1 container statuses recorded)
  Nov 25 12:52:25.172: INFO: 	Container calico-node ready: true, restart count 0
  Nov 25 12:52:25.172: INFO: sonobuoy-e2e-job-ecda927ab6f44d27 from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 12:52:25.172: INFO: 	Container e2e ready: true, restart count 0
  Nov 25 12:52:25.173: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 12:52:25.173: INFO: sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-jpcgl from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 12:52:25.173: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 12:52:25.173: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 25 12:52:25.173: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-85-186 before test
  Nov 25 12:52:25.179: INFO: nginx-ingress-controller-kubernetes-worker-2c9rz from ingress-nginx-kubernetes-worker started at 2023-11-25 12:43:28 +0000 UTC (1 container statuses recorded)
  Nov 25 12:52:25.179: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 25 12:52:25.179: INFO: calico-node-k8nh6 from kube-system started at 2023-11-25 12:05:46 +0000 UTC (1 container statuses recorded)
  Nov 25 12:52:25.179: INFO: 	Container calico-node ready: true, restart count 0
  Nov 25 12:52:25.179: INFO: busybox-readonly-fscd2c4075-32be-44c9-9a0d-ebdb59cbfed5 from kubelet-test-6707 started at 2023-11-25 12:51:52 +0000 UTC (1 container statuses recorded)
  Nov 25 12:52:25.179: INFO: 	Container busybox-readonly-fscd2c4075-32be-44c9-9a0d-ebdb59cbfed5 ready: true, restart count 0
  Nov 25 12:52:25.179: INFO: sonobuoy from sonobuoy started at 2023-11-25 12:12:47 +0000 UTC (1 container statuses recorded)
  Nov 25 12:52:25.179: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov 25 12:52:25.180: INFO: sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-bwfff from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 12:52:25.180: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 12:52:25.180: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/25/23 12:52:25.18
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/25/23 12:52:27.203
  STEP: Trying to apply a random label on the found node. @ 11/25/23 12:52:27.214
  STEP: verifying the node has the label kubernetes.io/e2e-141d49bd-0a14-4e24-999e-0f7194f93523 42 @ 11/25/23 12:52:27.222
  STEP: Trying to relaunch the pod, now with labels. @ 11/25/23 12:52:27.227
  STEP: removing the label kubernetes.io/e2e-141d49bd-0a14-4e24-999e-0f7194f93523 off the node ip-172-31-4-198 @ 11/25/23 12:52:29.251
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-141d49bd-0a14-4e24-999e-0f7194f93523 @ 11/25/23 12:52:29.262
  Nov 25 12:52:29.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1089" for this suite. @ 11/25/23 12:52:29.279
• [4.164 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 11/25/23 12:52:29.287
  Nov 25 12:52:29.287: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename containers @ 11/25/23 12:52:29.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:52:29.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:52:29.311
  STEP: Creating a pod to test override arguments @ 11/25/23 12:52:29.319
  STEP: Saw pod success @ 11/25/23 12:52:33.342
  Nov 25 12:52:33.346: INFO: Trying to get logs from node ip-172-31-85-186 pod client-containers-a402846f-6285-4085-b2bc-f0770e0e4a4a container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 12:52:33.354
  Nov 25 12:52:33.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9049" for this suite. @ 11/25/23 12:52:33.374
• [4.093 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 11/25/23 12:52:33.381
  Nov 25 12:52:33.381: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename replication-controller @ 11/25/23 12:52:33.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:52:33.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:52:33.425
  STEP: creating a ReplicationController @ 11/25/23 12:52:33.437
  STEP: waiting for RC to be added @ 11/25/23 12:52:33.442
  STEP: waiting for available Replicas @ 11/25/23 12:52:33.443
  STEP: patching ReplicationController @ 11/25/23 12:52:34.592
  STEP: waiting for RC to be modified @ 11/25/23 12:52:34.601
  STEP: patching ReplicationController status @ 11/25/23 12:52:34.601
  STEP: waiting for RC to be modified @ 11/25/23 12:52:34.607
  STEP: waiting for available Replicas @ 11/25/23 12:52:34.607
  STEP: fetching ReplicationController status @ 11/25/23 12:52:34.612
  STEP: patching ReplicationController scale @ 11/25/23 12:52:34.616
  STEP: waiting for RC to be modified @ 11/25/23 12:52:34.623
  STEP: waiting for ReplicationController's scale to be the max amount @ 11/25/23 12:52:34.623
  STEP: fetching ReplicationController; ensuring that it's patched @ 11/25/23 12:52:35.666
  STEP: updating ReplicationController status @ 11/25/23 12:52:35.669
  STEP: waiting for RC to be modified @ 11/25/23 12:52:35.678
  STEP: listing all ReplicationControllers @ 11/25/23 12:52:35.679
  STEP: checking that ReplicationController has expected values @ 11/25/23 12:52:35.683
  STEP: deleting ReplicationControllers by collection @ 11/25/23 12:52:35.683
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 11/25/23 12:52:35.694
  Nov 25 12:52:35.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1125 12:52:35.752284      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-30" for this suite. @ 11/25/23 12:52:35.756
• [2.381 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 11/25/23 12:52:35.764
  Nov 25 12:52:35.764: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 12:52:35.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:52:35.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:52:35.783
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/25/23 12:52:35.787
  E1125 12:52:36.752388      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:37.752605      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:38.753187      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:39.753436      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 12:52:39.81
  Nov 25 12:52:39.814: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-130c176e-08aa-4c0c-893f-ce23de67f6f8 container test-container: <nil>
  STEP: delete the pod @ 11/25/23 12:52:39.821
  Nov 25 12:52:39.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-495" for this suite. @ 11/25/23 12:52:39.842
• [4.086 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 11/25/23 12:52:39.85
  Nov 25 12:52:39.850: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename secrets @ 11/25/23 12:52:39.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:52:39.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:52:39.873
  STEP: Creating secret with name secret-test-6269cb6b-a7bd-4567-8ef9-f769cc6b2fdb @ 11/25/23 12:52:39.876
  STEP: Creating a pod to test consume secrets @ 11/25/23 12:52:39.886
  E1125 12:52:40.753697      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:41.753799      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:42.753846      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:43.754710      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 12:52:43.908
  Nov 25 12:52:43.912: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-secrets-fef845ec-845a-406f-be5d-592a58c6ee0b container secret-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 12:52:43.919
  Nov 25 12:52:43.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7752" for this suite. @ 11/25/23 12:52:43.941
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 11/25/23 12:52:43.952
  Nov 25 12:52:43.952: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename daemonsets @ 11/25/23 12:52:43.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:52:43.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:52:43.978
  STEP: Creating a simple DaemonSet "daemon-set" @ 11/25/23 12:52:44
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/25/23 12:52:44.005
  Nov 25 12:52:44.009: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:52:44.009: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:52:44.013: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 12:52:44.013: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  E1125 12:52:44.754855      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:52:45.018: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:52:45.018: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:52:45.022: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 12:52:45.022: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  E1125 12:52:45.755336      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:52:46.019: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:52:46.019: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:52:46.023: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 25 12:52:46.023: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 11/25/23 12:52:46.027
  Nov 25 12:52:46.042: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:52:46.042: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 12:52:46.046: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 25 12:52:46.046: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 11/25/23 12:52:46.046
  E1125 12:52:46.755432      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 11/25/23 12:52:47.056
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6792, will wait for the garbage collector to delete the pods @ 11/25/23 12:52:47.056
  Nov 25 12:52:47.117: INFO: Deleting DaemonSet.extensions daemon-set took: 6.640579ms
  Nov 25 12:52:47.218: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.5227ms
  E1125 12:52:47.756341      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:52:48.722: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 12:52:48.722: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 25 12:52:48.725: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17156"},"items":null}

  Nov 25 12:52:48.729: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17156"},"items":null}

  Nov 25 12:52:48.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6792" for this suite. @ 11/25/23 12:52:48.747
• [4.801 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 11/25/23 12:52:48.754
  Nov 25 12:52:48.754: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 12:52:48.754
  E1125 12:52:48.756898      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:52:48.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:52:48.777
  STEP: Creating configMap with name configmap-test-upd-aa2ce33d-d69f-4fe6-a836-f7c8eefa9774 @ 11/25/23 12:52:48.825
  STEP: Creating the pod @ 11/25/23 12:52:48.829
  E1125 12:52:49.757587      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:50.757641      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-aa2ce33d-d69f-4fe6-a836-f7c8eefa9774 @ 11/25/23 12:52:50.858
  STEP: waiting to observe update in volume @ 11/25/23 12:52:50.863
  E1125 12:52:51.758703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:52.758795      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:53.758888      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:54.759483      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:55.759595      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:56.759689      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:57.760754      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:58.761531      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:52:59.762164      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:00.762711      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:01.762817      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:02.762910      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:03.763912      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:04.764008      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:05.764439      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:06.764534      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:07.764628      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:08.764734      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:09.765587      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:10.765641      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:11.765741      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:12.765918      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:13.766025      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:14.766710      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:15.766799      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:16.767346      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:17.767446      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:18.767532      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:19.768434      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:20.769176      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:21.769652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:22.770696      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:23.770788      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:24.771035      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:25.771094      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:26.771186      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:27.771246      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:28.771349      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:29.771425      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:30.771666      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:31.771778      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:32.771859      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:33.772834      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:34.772931      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:35.773250      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:36.773347      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:37.773635      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:38.774699      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:39.775590      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:40.775686      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:41.776693      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:42.776776      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:43.777629      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:44.777948      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:45.778703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:46.778810      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:47.779516      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:48.780513      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:49.781589      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:50.781639      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:51.782538      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:52.782724      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:53.783656      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:54.783978      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:55.784058      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:56.784272      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:57.784882      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:58.785661      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:53:59.785998      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:00.786077      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:01.786685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:02.786779      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:03.786856      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:04.786902      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:05.787597      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:06.787786      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:07.788676      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:08.788774      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:09.789425      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:10.789618      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:11.790684      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:12.790999      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:13.791087      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:14.791131      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:15.791197      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:16.791392      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:17.791948      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:18.792040      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:19.792822      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:20.792917      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:21.793600      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:22.793690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:54:23.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1091" for this suite. @ 11/25/23 12:54:23.298
• [94.552 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 11/25/23 12:54:23.307
  Nov 25 12:54:23.307: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename svcaccounts @ 11/25/23 12:54:23.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:54:23.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:54:23.332
  Nov 25 12:54:23.361: INFO: created pod pod-service-account-defaultsa
  Nov 25 12:54:23.361: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Nov 25 12:54:23.370: INFO: created pod pod-service-account-mountsa
  Nov 25 12:54:23.370: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Nov 25 12:54:23.377: INFO: created pod pod-service-account-nomountsa
  Nov 25 12:54:23.377: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Nov 25 12:54:23.391: INFO: created pod pod-service-account-defaultsa-mountspec
  Nov 25 12:54:23.391: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Nov 25 12:54:23.399: INFO: created pod pod-service-account-mountsa-mountspec
  Nov 25 12:54:23.399: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Nov 25 12:54:23.407: INFO: created pod pod-service-account-nomountsa-mountspec
  Nov 25 12:54:23.407: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Nov 25 12:54:23.416: INFO: created pod pod-service-account-defaultsa-nomountspec
  Nov 25 12:54:23.416: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Nov 25 12:54:23.427: INFO: created pod pod-service-account-mountsa-nomountspec
  Nov 25 12:54:23.427: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Nov 25 12:54:23.438: INFO: created pod pod-service-account-nomountsa-nomountspec
  Nov 25 12:54:23.438: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Nov 25 12:54:23.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6122" for this suite. @ 11/25/23 12:54:23.443
• [0.148 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 11/25/23 12:54:23.456
  Nov 25 12:54:23.456: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/25/23 12:54:23.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:54:23.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:54:23.485
  Nov 25 12:54:23.489: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  E1125 12:54:23.794463      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:24.794710      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:25.795064      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:54:26.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2521" for this suite. @ 11/25/23 12:54:26.654
• [3.207 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 11/25/23 12:54:26.664
  Nov 25 12:54:26.664: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename taint-multiple-pods @ 11/25/23 12:54:26.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:54:26.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:54:26.688
  Nov 25 12:54:26.692: INFO: Waiting up to 1m0s for all nodes to be ready
  E1125 12:54:26.795334      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:27.795471      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:28.796275      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:29.796293      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:30.796909      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:31.797110      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:32.798020      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:33.798195      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:34.799065      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:35.799226      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:36.799706      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:37.799827      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:38.800279      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:39.800679      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:40.800763      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:41.801035      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:42.801348      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:43.801574      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:44.802516      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:45.802684      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:46.803651      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:47.803841      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:48.804829      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:49.805240      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:50.805481      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:51.805634      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:52.806702      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:53.806907      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:54.807219      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:55.807394      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:56.808411      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:57.808733      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:58.809466      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:54:59.809621      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:00.810475      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:01.810647      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:02.810739      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:03.810839      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:04.811893      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:05.812015      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:06.812290      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:07.813196      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:08.813590      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:09.814682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:10.815605      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:11.815707      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:12.816613      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:13.816982      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:14.817065      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:15.817140      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:16.817345      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:17.817532      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:18.818106      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:19.818256      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:20.819178      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:21.819350      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:22.820363      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:23.821073      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:24.822124      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:25.822686      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:55:26.717: INFO: Waiting for terminating namespaces to be deleted...
  Nov 25 12:55:26.721: INFO: Starting informer...
  STEP: Starting pods... @ 11/25/23 12:55:26.721
  E1125 12:55:26.823675      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:55:26.941: INFO: Pod1 is running on ip-172-31-85-186. Tainting Node
  E1125 12:55:27.823764      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:28.824775      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:55:29.164: INFO: Pod2 is running on ip-172-31-85-186. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/25/23 12:55:29.164
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/25/23 12:55:29.176
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 11/25/23 12:55:29.179
  E1125 12:55:29.825401      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:30.825526      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:31.825649      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:32.826704      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:33.827559      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:34.828138      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:55:34.984: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E1125 12:55:35.828233      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:36.828340      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:37.828450      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:38.829077      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:39.829363      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:40.829625      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:41.829710      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:42.830689      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:43.830781      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:44.831213      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:45.831386      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:46.831587      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:47.831690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:48.831782      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:49.832721      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:50.832875      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:51.833753      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:52.834725      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:53.834872      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:54.834989      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:55:55.019: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Nov 25 12:55:55.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/25/23 12:55:55.036
  STEP: Destroying namespace "taint-multiple-pods-2256" for this suite. @ 11/25/23 12:55:55.039
• [88.382 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 11/25/23 12:55:55.046
  Nov 25 12:55:55.046: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename namespaces @ 11/25/23 12:55:55.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:55:55.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:55:55.076
  STEP: Creating a test namespace @ 11/25/23 12:55:55.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:55:55.1
  STEP: Creating a pod in the namespace @ 11/25/23 12:55:55.103
  STEP: Waiting for the pod to have running status @ 11/25/23 12:55:55.112
  E1125 12:55:55.835089      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:56.835164      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 11/25/23 12:55:57.122
  STEP: Waiting for the namespace to be removed. @ 11/25/23 12:55:57.129
  E1125 12:55:57.835265      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:58.835349      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:55:59.835625      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:00.836569      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:01.836737      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:02.837588      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:03.838387      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:04.839105      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:05.839215      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:06.840064      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:07.840553      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 11/25/23 12:56:08.133
  STEP: Verifying there are no pods in the namespace @ 11/25/23 12:56:08.15
  Nov 25 12:56:08.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3735" for this suite. @ 11/25/23 12:56:08.158
  STEP: Destroying namespace "nsdeletetest-4210" for this suite. @ 11/25/23 12:56:08.164
  Nov 25 12:56:08.167: INFO: Namespace nsdeletetest-4210 was already deleted
  STEP: Destroying namespace "nsdeletetest-7516" for this suite. @ 11/25/23 12:56:08.167
• [13.128 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 11/25/23 12:56:08.174
  Nov 25 12:56:08.174: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename discovery @ 11/25/23 12:56:08.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:56:08.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:56:08.195
  STEP: Setting up server cert @ 11/25/23 12:56:08.202
  STEP: Requesting APIResourceList from "/api/v1" @ 11/25/23 12:56:08.535
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 11/25/23 12:56:08.537
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 11/25/23 12:56:08.538
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 11/25/23 12:56:08.54
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 11/25/23 12:56:08.541
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 11/25/23 12:56:08.543
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 11/25/23 12:56:08.544
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 11/25/23 12:56:08.545
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 11/25/23 12:56:08.547
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 11/25/23 12:56:08.548
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 11/25/23 12:56:08.549
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 11/25/23 12:56:08.551
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 11/25/23 12:56:08.552
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 11/25/23 12:56:08.553
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 11/25/23 12:56:08.555
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 11/25/23 12:56:08.556
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 11/25/23 12:56:08.558
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 11/25/23 12:56:08.559
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 11/25/23 12:56:08.56
  Nov 25 12:56:08.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5400" for this suite. @ 11/25/23 12:56:08.566
• [0.399 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 11/25/23 12:56:08.573
  Nov 25 12:56:08.573: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 12:56:08.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:56:08.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:56:08.593
  STEP: creating service endpoint-test2 in namespace services-8477 @ 11/25/23 12:56:08.596
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8477 to expose endpoints map[] @ 11/25/23 12:56:08.611
  Nov 25 12:56:08.615: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E1125 12:56:08.840648      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:56:09.624: INFO: successfully validated that service endpoint-test2 in namespace services-8477 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8477 @ 11/25/23 12:56:09.624
  E1125 12:56:09.840986      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:10.841311      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8477 to expose endpoints map[pod1:[80]] @ 11/25/23 12:56:11.644
  Nov 25 12:56:11.655: INFO: successfully validated that service endpoint-test2 in namespace services-8477 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 11/25/23 12:56:11.655
  Nov 25 12:56:11.655: INFO: Creating new exec pod
  E1125 12:56:11.841473      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:12.841641      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:13.841716      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:56:14.673: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-8477 exec execpodlfqsp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Nov 25 12:56:14.811: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Nov 25 12:56:14.811: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 12:56:14.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-8477 exec execpodlfqsp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.250 80'
  E1125 12:56:14.842378      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:56:14.950: INFO: stderr: "+ nc -v -t -w 2 10.152.183.250 80\n+ echo hostName\nConnection to 10.152.183.250 80 port [tcp/http] succeeded!\n"
  Nov 25 12:56:14.950: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-8477 @ 11/25/23 12:56:14.95
  E1125 12:56:15.842693      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:16.843153      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8477 to expose endpoints map[pod1:[80] pod2:[80]] @ 11/25/23 12:56:16.971
  Nov 25 12:56:16.986: INFO: successfully validated that service endpoint-test2 in namespace services-8477 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 11/25/23 12:56:16.986
  E1125 12:56:17.843220      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:56:17.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-8477 exec execpodlfqsp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Nov 25 12:56:18.119: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Nov 25 12:56:18.119: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 12:56:18.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-8477 exec execpodlfqsp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.250 80'
  Nov 25 12:56:18.266: INFO: stderr: "+ nc -v -t -w 2 10.152.183.250 80\n+ echo hostName\nConnection to 10.152.183.250 80 port [tcp/http] succeeded!\n"
  Nov 25 12:56:18.266: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8477 @ 11/25/23 12:56:18.266
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8477 to expose endpoints map[pod2:[80]] @ 11/25/23 12:56:18.278
  Nov 25 12:56:18.305: INFO: successfully validated that service endpoint-test2 in namespace services-8477 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 11/25/23 12:56:18.305
  E1125 12:56:18.843335      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:56:19.306: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-8477 exec execpodlfqsp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Nov 25 12:56:19.443: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Nov 25 12:56:19.443: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 12:56:19.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-8477 exec execpodlfqsp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.250 80'
  Nov 25 12:56:19.584: INFO: stderr: "+ nc -v -t -w 2 10.152.183.250 80\n+ echo hostName\nConnection to 10.152.183.250 80 port [tcp/http] succeeded!\n"
  Nov 25 12:56:19.584: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-8477 @ 11/25/23 12:56:19.584
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8477 to expose endpoints map[] @ 11/25/23 12:56:19.603
  Nov 25 12:56:19.614: INFO: successfully validated that service endpoint-test2 in namespace services-8477 exposes endpoints map[]
  Nov 25 12:56:19.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8477" for this suite. @ 11/25/23 12:56:19.637
• [11.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 11/25/23 12:56:19.645
  Nov 25 12:56:19.645: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename sched-preemption @ 11/25/23 12:56:19.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:56:19.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:56:19.666
  Nov 25 12:56:19.686: INFO: Waiting up to 1m0s for all nodes to be ready
  E1125 12:56:19.844394      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:20.844642      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:21.844680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:22.844760      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:23.845369      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:24.845682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:25.846496      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:26.847238      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:27.848271      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:28.848370      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:29.849030      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:30.849788      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:31.850688      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:32.850775      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:33.851128      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:34.852185      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:35.852642      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:36.852731      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:37.853589      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:38.853759      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:39.854605      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:40.854718      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:41.854971      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:42.855070      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:43.855170      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:44.855506      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:45.856308      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:46.856547      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:47.857222      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:48.857424      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:49.857715      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:50.858347      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:51.858454      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:52.858653      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:53.859333      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:54.859721      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:55.860448      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:56.860538      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:57.861137      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:58.861313      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:56:59.861673      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:00.861753      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:01.862025      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:02.862118      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:03.862672      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:04.863216      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:05.863518      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:06.863686      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:07.863751      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:08.864776      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:09.865008      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:10.865142      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:11.865164      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:12.865444      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:13.866065      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:14.866685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:15.867536      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:16.867626      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:17.868260      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:18.869356      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:57:19.713: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/25/23 12:57:19.717
  Nov 25 12:57:19.717: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/25/23 12:57:19.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:57:19.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:57:19.748
  Nov 25 12:57:19.771: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Nov 25 12:57:19.776: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Nov 25 12:57:19.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 25 12:57:19.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9744" for this suite. @ 11/25/23 12:57:19.867
  E1125 12:57:19.869758      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "sched-preemption-7354" for this suite. @ 11/25/23 12:57:19.877
• [60.240 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 11/25/23 12:57:19.885
  Nov 25 12:57:19.885: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 12:57:19.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:57:19.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:57:19.912
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/25/23 12:57:19.918
  E1125 12:57:20.869898      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:21.870695      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:22.870792      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:23.871136      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 12:57:23.947
  Nov 25 12:57:23.951: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-85f39cd0-d3be-4c2e-bc70-ff820d51d4dd container test-container: <nil>
  STEP: delete the pod @ 11/25/23 12:57:23.971
  Nov 25 12:57:23.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1599" for this suite. @ 11/25/23 12:57:23.992
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 11/25/23 12:57:24.001
  Nov 25 12:57:24.001: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename deployment @ 11/25/23 12:57:24.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:57:24.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:57:24.021
  STEP: creating a Deployment @ 11/25/23 12:57:24.029
  Nov 25 12:57:24.029: INFO: Creating simple deployment test-deployment-9vsb2
  Nov 25 12:57:24.042: INFO: new replicaset for deployment "test-deployment-9vsb2" is yet to be created
  E1125 12:57:24.871306      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:25.871637      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 11/25/23 12:57:26.058
  Nov 25 12:57:26.063: INFO: Deployment test-deployment-9vsb2 has Conditions: [{Available True 2023-11-25 12:57:25 +0000 UTC 2023-11-25 12:57:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-11-25 12:57:25 +0000 UTC 2023-11-25 12:57:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vsb2-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 11/25/23 12:57:26.063
  Nov 25 12:57:26.073: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 57, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 57, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 12, 57, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 12, 57, 24, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-9vsb2-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 11/25/23 12:57:26.073
  Nov 25 12:57:26.076: INFO: Observed &Deployment event: ADDED
  Nov 25 12:57:26.076: INFO: Observed Deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-25 12:57:24 +0000 UTC 2023-11-25 12:57:24 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9vsb2-5d576bd769"}
  Nov 25 12:57:26.076: INFO: Observed &Deployment event: MODIFIED
  Nov 25 12:57:26.076: INFO: Observed Deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-25 12:57:24 +0000 UTC 2023-11-25 12:57:24 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9vsb2-5d576bd769"}
  Nov 25 12:57:26.076: INFO: Observed Deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-25 12:57:24 +0000 UTC 2023-11-25 12:57:24 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov 25 12:57:26.076: INFO: Observed &Deployment event: MODIFIED
  Nov 25 12:57:26.076: INFO: Observed Deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-25 12:57:24 +0000 UTC 2023-11-25 12:57:24 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov 25 12:57:26.076: INFO: Observed Deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-25 12:57:24 +0000 UTC 2023-11-25 12:57:24 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-9vsb2-5d576bd769" is progressing.}
  Nov 25 12:57:26.077: INFO: Observed &Deployment event: MODIFIED
  Nov 25 12:57:26.077: INFO: Observed Deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-25 12:57:25 +0000 UTC 2023-11-25 12:57:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov 25 12:57:26.077: INFO: Observed Deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-25 12:57:25 +0000 UTC 2023-11-25 12:57:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vsb2-5d576bd769" has successfully progressed.}
  Nov 25 12:57:26.077: INFO: Observed &Deployment event: MODIFIED
  Nov 25 12:57:26.077: INFO: Observed Deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-25 12:57:25 +0000 UTC 2023-11-25 12:57:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov 25 12:57:26.077: INFO: Observed Deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-25 12:57:25 +0000 UTC 2023-11-25 12:57:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vsb2-5d576bd769" has successfully progressed.}
  Nov 25 12:57:26.077: INFO: Found Deployment test-deployment-9vsb2 in namespace deployment-3657 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 25 12:57:26.077: INFO: Deployment test-deployment-9vsb2 has an updated status
  STEP: patching the Statefulset Status @ 11/25/23 12:57:26.077
  Nov 25 12:57:26.077: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Nov 25 12:57:26.086: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 11/25/23 12:57:26.086
  Nov 25 12:57:26.088: INFO: Observed &Deployment event: ADDED
  Nov 25 12:57:26.089: INFO: Observed deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-25 12:57:24 +0000 UTC 2023-11-25 12:57:24 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9vsb2-5d576bd769"}
  Nov 25 12:57:26.089: INFO: Observed &Deployment event: MODIFIED
  Nov 25 12:57:26.089: INFO: Observed deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-25 12:57:24 +0000 UTC 2023-11-25 12:57:24 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9vsb2-5d576bd769"}
  Nov 25 12:57:26.089: INFO: Observed deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-25 12:57:24 +0000 UTC 2023-11-25 12:57:24 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov 25 12:57:26.089: INFO: Observed &Deployment event: MODIFIED
  Nov 25 12:57:26.089: INFO: Observed deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-25 12:57:24 +0000 UTC 2023-11-25 12:57:24 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov 25 12:57:26.089: INFO: Observed deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-25 12:57:24 +0000 UTC 2023-11-25 12:57:24 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-9vsb2-5d576bd769" is progressing.}
  Nov 25 12:57:26.089: INFO: Observed &Deployment event: MODIFIED
  Nov 25 12:57:26.089: INFO: Observed deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-25 12:57:25 +0000 UTC 2023-11-25 12:57:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov 25 12:57:26.090: INFO: Observed deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-25 12:57:25 +0000 UTC 2023-11-25 12:57:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vsb2-5d576bd769" has successfully progressed.}
  Nov 25 12:57:26.090: INFO: Observed &Deployment event: MODIFIED
  Nov 25 12:57:26.090: INFO: Observed deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-25 12:57:25 +0000 UTC 2023-11-25 12:57:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov 25 12:57:26.090: INFO: Observed deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-25 12:57:25 +0000 UTC 2023-11-25 12:57:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9vsb2-5d576bd769" has successfully progressed.}
  Nov 25 12:57:26.090: INFO: Observed deployment test-deployment-9vsb2 in namespace deployment-3657 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 25 12:57:26.090: INFO: Observed &Deployment event: MODIFIED
  Nov 25 12:57:26.090: INFO: Found deployment test-deployment-9vsb2 in namespace deployment-3657 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Nov 25 12:57:26.090: INFO: Deployment test-deployment-9vsb2 has a patched status
  Nov 25 12:57:26.095: INFO: Deployment "test-deployment-9vsb2":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-9vsb2",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0c723a2-b1b7-45f3-819f-d5ac203563e1",
      ResourceVersion: (string) (len=5) "18281",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836513844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-9vsb2-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 25 12:57:26.102: INFO: New ReplicaSet "test-deployment-9vsb2-5d576bd769" of Deployment "test-deployment-9vsb2":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-9vsb2-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3de95e1a-b5e8-496b-a366-00658b731078",
      ResourceVersion: (string) (len=5) "18275",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836513844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-9vsb2",
          UID: (types.UID) (len=36) "f0c723a2-b1b7-45f3-819f-d5ac203563e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 66 30 63  |k:{\"uid\":\"f0c|
              00000120  37 32 33 61 32 2d 62 31  62 37 2d 34 35 66 33 2d  |723a2-b1b7-45f3-|
              00000130  38 31 39 66 2d 64 35 61  63 32 30 33 35 36 33 65  |819f-d5ac203563e|
              00000140  31 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |1\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 25 12:57:26.108: INFO: Pod "test-deployment-9vsb2-5d576bd769-ht6cm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-9vsb2-5d576bd769-ht6cm",
      GenerateName: (string) (len=33) "test-deployment-9vsb2-5d576bd769-",
      Namespace: (string) (len=15) "deployment-3657",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d8282e2-63ec-47a8-a757-56d0723b67dc",
      ResourceVersion: (string) (len=5) "18274",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836513844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-9vsb2-5d576bd769",
          UID: (types.UID) (len=36) "3de95e1a-b5e8-496b-a366-00658b731078",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 33 64 65 39 35 65 31  61 2d 62 35 65 38 2d 34  |"3de95e1a-b5e8-4|
              000000a0  39 36 62 2d 61 33 36 36  2d 30 30 36 35 38 62 37  |96b-a366-00658b7|
              000000b0  33 31 30 37 38 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |31078\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 36 2e 32 33 5c 22  |192.168.196.23\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gdzrg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gdzrg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836513844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.196.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.196.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836513844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836513844,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5c61fe4a86776fe4e6b9619be670b754dcdd618d8a2981bd981c130bd17fdf34",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 12:57:26.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3657" for this suite. @ 11/25/23 12:57:26.119
• [2.126 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 11/25/23 12:57:26.127
  Nov 25 12:57:26.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename tables @ 11/25/23 12:57:26.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:57:26.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:57:26.15
  Nov 25 12:57:26.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1784" for this suite. @ 11/25/23 12:57:26.162
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 11/25/23 12:57:26.174
  Nov 25 12:57:26.174: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/25/23 12:57:26.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:57:26.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:57:26.197
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 11/25/23 12:57:26.203
  Nov 25 12:57:26.204: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  E1125 12:57:26.871707      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:57:27.682: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  E1125 12:57:27.872064      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:28.872182      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:29.872561      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:30.873132      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:31.873252      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:32.874164      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:57:33.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3649" for this suite. @ 11/25/23 12:57:33.399
• [7.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 11/25/23 12:57:33.417
  Nov 25 12:57:33.417: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/25/23 12:57:33.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:57:33.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:57:33.438
  E1125 12:57:33.874282      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:34.874407      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:57:35.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 11/25/23 12:57:35.471
  STEP: Cleaning up the configmap @ 11/25/23 12:57:35.477
  STEP: Cleaning up the pod @ 11/25/23 12:57:35.483
  STEP: Destroying namespace "emptydir-wrapper-5774" for this suite. @ 11/25/23 12:57:35.495
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 11/25/23 12:57:35.502
  Nov 25 12:57:35.502: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename proxy @ 11/25/23 12:57:35.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:57:35.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:57:35.517
  STEP: starting an echo server on multiple ports @ 11/25/23 12:57:35.532
  STEP: creating replication controller proxy-service-lnwzw in namespace proxy-5198 @ 11/25/23 12:57:35.533
  I1125 12:57:35.547057      17 runners.go:197] Created replication controller with name: proxy-service-lnwzw, namespace: proxy-5198, replica count: 1
  E1125 12:57:35.875188      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1125 12:57:36.598634      17 runners.go:197] proxy-service-lnwzw Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1125 12:57:36.876065      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1125 12:57:37.599536      17 runners.go:197] proxy-service-lnwzw Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 25 12:57:37.604: INFO: setup took 2.082565511s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 11/25/23 12:57:37.604
  Nov 25 12:57:37.610: INFO: (0) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 6.357666ms)
  Nov 25 12:57:37.614: INFO: (0) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 9.998036ms)
  Nov 25 12:57:37.614: INFO: (0) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 10.062666ms)
  Nov 25 12:57:37.615: INFO: (0) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 10.351093ms)
  Nov 25 12:57:37.618: INFO: (0) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 14.280556ms)
  Nov 25 12:57:37.619: INFO: (0) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 14.671469ms)
  Nov 25 12:57:37.620: INFO: (0) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 16.214819ms)
  Nov 25 12:57:37.620: INFO: (0) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 15.812495ms)
  Nov 25 12:57:37.620: INFO: (0) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 16.257343ms)
  Nov 25 12:57:37.621: INFO: (0) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 16.293588ms)
  Nov 25 12:57:37.621: INFO: (0) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 16.853287ms)
  Nov 25 12:57:37.621: INFO: (0) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 16.700669ms)
  Nov 25 12:57:37.625: INFO: (0) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 21.065348ms)
  Nov 25 12:57:37.626: INFO: (0) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 21.469352ms)
  Nov 25 12:57:37.626: INFO: (0) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 21.464513ms)
  Nov 25 12:57:37.626: INFO: (0) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 21.434873ms)
  Nov 25 12:57:37.631: INFO: (1) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 4.612117ms)
  Nov 25 12:57:37.632: INFO: (1) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 6.213846ms)
  Nov 25 12:57:37.632: INFO: (1) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 6.185318ms)
  Nov 25 12:57:37.633: INFO: (1) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 7.323704ms)
  Nov 25 12:57:37.634: INFO: (1) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 7.751119ms)
  Nov 25 12:57:37.634: INFO: (1) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 7.435167ms)
  Nov 25 12:57:37.635: INFO: (1) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 8.394538ms)
  Nov 25 12:57:37.635: INFO: (1) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 8.698661ms)
  Nov 25 12:57:37.635: INFO: (1) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 8.78251ms)
  Nov 25 12:57:37.635: INFO: (1) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 9.296154ms)
  Nov 25 12:57:37.635: INFO: (1) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 8.982757ms)
  Nov 25 12:57:37.638: INFO: (1) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 11.09635ms)
  Nov 25 12:57:37.642: INFO: (1) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 15.421298ms)
  Nov 25 12:57:37.642: INFO: (1) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 15.188969ms)
  Nov 25 12:57:37.643: INFO: (1) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 16.849156ms)
  Nov 25 12:57:37.644: INFO: (1) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 17.253648ms)
  Nov 25 12:57:37.663: INFO: (2) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 18.560987ms)
  Nov 25 12:57:37.668: INFO: (2) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 24.046336ms)
  Nov 25 12:57:37.674: INFO: (2) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 29.818731ms)
  Nov 25 12:57:37.677: INFO: (2) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 32.746167ms)
  Nov 25 12:57:37.677: INFO: (2) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 32.728736ms)
  Nov 25 12:57:37.678: INFO: (2) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 34.107045ms)
  Nov 25 12:57:37.686: INFO: (2) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 42.189119ms)
  Nov 25 12:57:37.687: INFO: (2) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 42.676177ms)
  Nov 25 12:57:37.687: INFO: (2) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 42.42113ms)
  Nov 25 12:57:37.687: INFO: (2) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 42.998544ms)
  Nov 25 12:57:37.687: INFO: (2) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 42.790241ms)
  Nov 25 12:57:37.687: INFO: (2) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 43.48983ms)
  Nov 25 12:57:37.687: INFO: (2) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 43.366158ms)
  Nov 25 12:57:37.687: INFO: (2) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 43.475826ms)
  Nov 25 12:57:37.688: INFO: (2) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 43.773919ms)
  Nov 25 12:57:37.688: INFO: (2) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 43.729765ms)
  Nov 25 12:57:37.703: INFO: (3) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 14.350356ms)
  Nov 25 12:57:37.708: INFO: (3) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 19.813081ms)
  Nov 25 12:57:37.708: INFO: (3) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 19.29726ms)
  Nov 25 12:57:37.710: INFO: (3) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 22.18499ms)
  Nov 25 12:57:37.711: INFO: (3) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 22.262195ms)
  Nov 25 12:57:37.721: INFO: (3) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 33.112572ms)
  Nov 25 12:57:37.721: INFO: (3) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 32.819246ms)
  Nov 25 12:57:37.721: INFO: (3) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 32.748131ms)
  Nov 25 12:57:37.721: INFO: (3) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 33.03186ms)
  Nov 25 12:57:37.721: INFO: (3) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 32.812186ms)
  Nov 25 12:57:37.722: INFO: (3) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 33.188143ms)
  Nov 25 12:57:37.722: INFO: (3) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 33.176933ms)
  Nov 25 12:57:37.722: INFO: (3) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 33.150508ms)
  Nov 25 12:57:37.722: INFO: (3) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 33.460745ms)
  Nov 25 12:57:37.722: INFO: (3) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 33.38598ms)
  Nov 25 12:57:37.722: INFO: (3) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 33.535175ms)
  Nov 25 12:57:37.745: INFO: (4) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 22.885894ms)
  Nov 25 12:57:37.745: INFO: (4) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 22.796278ms)
  Nov 25 12:57:37.745: INFO: (4) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 22.539934ms)
  Nov 25 12:57:37.747: INFO: (4) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 24.265832ms)
  Nov 25 12:57:37.747: INFO: (4) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 24.693094ms)
  Nov 25 12:57:37.748: INFO: (4) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 25.638909ms)
  Nov 25 12:57:37.748: INFO: (4) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 25.731432ms)
  Nov 25 12:57:37.749: INFO: (4) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 26.169158ms)
  Nov 25 12:57:37.750: INFO: (4) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 27.18365ms)
  Nov 25 12:57:37.752: INFO: (4) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 28.986882ms)
  Nov 25 12:57:37.752: INFO: (4) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 29.19034ms)
  Nov 25 12:57:37.757: INFO: (4) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 34.605965ms)
  Nov 25 12:57:37.757: INFO: (4) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 34.846285ms)
  Nov 25 12:57:37.757: INFO: (4) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 34.560726ms)
  Nov 25 12:57:37.757: INFO: (4) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 34.937772ms)
  Nov 25 12:57:37.757: INFO: (4) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 34.734727ms)
  Nov 25 12:57:37.770: INFO: (5) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 12.140487ms)
  Nov 25 12:57:37.771: INFO: (5) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 12.850089ms)
  Nov 25 12:57:37.771: INFO: (5) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 12.988806ms)
  Nov 25 12:57:37.772: INFO: (5) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 14.117332ms)
  Nov 25 12:57:37.772: INFO: (5) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 13.77764ms)
  Nov 25 12:57:37.772: INFO: (5) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 14.005215ms)
  Nov 25 12:57:37.772: INFO: (5) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 13.699978ms)
  Nov 25 12:57:37.772: INFO: (5) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 13.772362ms)
  Nov 25 12:57:37.772: INFO: (5) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 13.692249ms)
  Nov 25 12:57:37.772: INFO: (5) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 14.065253ms)
  Nov 25 12:57:37.773: INFO: (5) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 15.456864ms)
  Nov 25 12:57:37.774: INFO: (5) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 15.564483ms)
  Nov 25 12:57:37.774: INFO: (5) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 15.823642ms)
  Nov 25 12:57:37.774: INFO: (5) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 15.710436ms)
  Nov 25 12:57:37.774: INFO: (5) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 16.454345ms)
  Nov 25 12:57:37.774: INFO: (5) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 16.12766ms)
  Nov 25 12:57:37.780: INFO: (6) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 5.997174ms)
  Nov 25 12:57:37.780: INFO: (6) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 6.02781ms)
  Nov 25 12:57:37.782: INFO: (6) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 7.486944ms)
  Nov 25 12:57:37.782: INFO: (6) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 7.311204ms)
  Nov 25 12:57:37.782: INFO: (6) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 7.865668ms)
  Nov 25 12:57:37.783: INFO: (6) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 8.169929ms)
  Nov 25 12:57:37.784: INFO: (6) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 8.866338ms)
  Nov 25 12:57:37.785: INFO: (6) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 9.781399ms)
  Nov 25 12:57:37.785: INFO: (6) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 10.076713ms)
  Nov 25 12:57:37.785: INFO: (6) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 10.78179ms)
  Nov 25 12:57:37.785: INFO: (6) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 10.685343ms)
  Nov 25 12:57:37.785: INFO: (6) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 10.591143ms)
  Nov 25 12:57:37.786: INFO: (6) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 10.671927ms)
  Nov 25 12:57:37.786: INFO: (6) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 11.200701ms)
  Nov 25 12:57:37.786: INFO: (6) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 11.085978ms)
  Nov 25 12:57:37.786: INFO: (6) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 11.296786ms)
  Nov 25 12:57:37.791: INFO: (7) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 4.184431ms)
  Nov 25 12:57:37.792: INFO: (7) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 5.05236ms)
  Nov 25 12:57:37.792: INFO: (7) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 5.362995ms)
  Nov 25 12:57:37.793: INFO: (7) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 6.082291ms)
  Nov 25 12:57:37.793: INFO: (7) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 6.548714ms)
  Nov 25 12:57:37.793: INFO: (7) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 6.465804ms)
  Nov 25 12:57:37.794: INFO: (7) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 7.761203ms)
  Nov 25 12:57:37.795: INFO: (7) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 8.287925ms)
  Nov 25 12:57:37.795: INFO: (7) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 8.52263ms)
  Nov 25 12:57:37.796: INFO: (7) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 9.100106ms)
  Nov 25 12:57:37.796: INFO: (7) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 9.392604ms)
  Nov 25 12:57:37.796: INFO: (7) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 9.623905ms)
  Nov 25 12:57:37.797: INFO: (7) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 9.76359ms)
  Nov 25 12:57:37.797: INFO: (7) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 10.1863ms)
  Nov 25 12:57:37.797: INFO: (7) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 10.38728ms)
  Nov 25 12:57:37.798: INFO: (7) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 10.731745ms)
  Nov 25 12:57:37.803: INFO: (8) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 4.621813ms)
  Nov 25 12:57:37.804: INFO: (8) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 5.813897ms)
  Nov 25 12:57:37.805: INFO: (8) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 6.374504ms)
  Nov 25 12:57:37.805: INFO: (8) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 7.648315ms)
  Nov 25 12:57:37.806: INFO: (8) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 7.373169ms)
  Nov 25 12:57:37.806: INFO: (8) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 7.725882ms)
  Nov 25 12:57:37.806: INFO: (8) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 7.690978ms)
  Nov 25 12:57:37.807: INFO: (8) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 8.646182ms)
  Nov 25 12:57:37.808: INFO: (8) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 9.803534ms)
  Nov 25 12:57:37.808: INFO: (8) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 9.966948ms)
  Nov 25 12:57:37.808: INFO: (8) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 9.715702ms)
  Nov 25 12:57:37.808: INFO: (8) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 9.80027ms)
  Nov 25 12:57:37.808: INFO: (8) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 10.198632ms)
  Nov 25 12:57:37.808: INFO: (8) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 9.957604ms)
  Nov 25 12:57:37.809: INFO: (8) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 10.358681ms)
  Nov 25 12:57:37.809: INFO: (8) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 10.468721ms)
  Nov 25 12:57:37.815: INFO: (9) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 5.490036ms)
  Nov 25 12:57:37.816: INFO: (9) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 6.367737ms)
  Nov 25 12:57:37.816: INFO: (9) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 6.625546ms)
  Nov 25 12:57:37.816: INFO: (9) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 6.874513ms)
  Nov 25 12:57:37.817: INFO: (9) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 8.394801ms)
  Nov 25 12:57:37.818: INFO: (9) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 8.272382ms)
  Nov 25 12:57:37.818: INFO: (9) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 8.265237ms)
  Nov 25 12:57:37.818: INFO: (9) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 8.760509ms)
  Nov 25 12:57:37.818: INFO: (9) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 8.682246ms)
  Nov 25 12:57:37.818: INFO: (9) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 9.044912ms)
  Nov 25 12:57:37.819: INFO: (9) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 9.638075ms)
  Nov 25 12:57:37.820: INFO: (9) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 10.657825ms)
  Nov 25 12:57:37.820: INFO: (9) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 10.598572ms)
  Nov 25 12:57:37.820: INFO: (9) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 10.533516ms)
  Nov 25 12:57:37.820: INFO: (9) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 10.798214ms)
  Nov 25 12:57:37.820: INFO: (9) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 10.733535ms)
  Nov 25 12:57:37.826: INFO: (10) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 4.742638ms)
  Nov 25 12:57:37.827: INFO: (10) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 5.889002ms)
  Nov 25 12:57:37.827: INFO: (10) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 6.11902ms)
  Nov 25 12:57:37.828: INFO: (10) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 7.252314ms)
  Nov 25 12:57:37.828: INFO: (10) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 7.316131ms)
  Nov 25 12:57:37.828: INFO: (10) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 7.376903ms)
  Nov 25 12:57:37.829: INFO: (10) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 8.208664ms)
  Nov 25 12:57:37.829: INFO: (10) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 8.618476ms)
  Nov 25 12:57:37.830: INFO: (10) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 8.898708ms)
  Nov 25 12:57:37.830: INFO: (10) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 9.025341ms)
  Nov 25 12:57:37.830: INFO: (10) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 8.971836ms)
  Nov 25 12:57:37.830: INFO: (10) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 9.665893ms)
  Nov 25 12:57:37.831: INFO: (10) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 9.997631ms)
  Nov 25 12:57:37.831: INFO: (10) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 9.941737ms)
  Nov 25 12:57:37.831: INFO: (10) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 10.089666ms)
  Nov 25 12:57:37.831: INFO: (10) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 10.564649ms)
  Nov 25 12:57:37.836: INFO: (11) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 4.269167ms)
  Nov 25 12:57:37.837: INFO: (11) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 4.777575ms)
  Nov 25 12:57:37.838: INFO: (11) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 6.005779ms)
  Nov 25 12:57:37.839: INFO: (11) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 7.346345ms)
  Nov 25 12:57:37.840: INFO: (11) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 8.146589ms)
  Nov 25 12:57:37.840: INFO: (11) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 8.1469ms)
  Nov 25 12:57:37.840: INFO: (11) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 8.566156ms)
  Nov 25 12:57:37.840: INFO: (11) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 8.285131ms)
  Nov 25 12:57:37.841: INFO: (11) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 8.73169ms)
  Nov 25 12:57:37.841: INFO: (11) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 9.485775ms)
  Nov 25 12:57:37.841: INFO: (11) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 9.732536ms)
  Nov 25 12:57:37.842: INFO: (11) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 9.801713ms)
  Nov 25 12:57:37.842: INFO: (11) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 10.097493ms)
  Nov 25 12:57:37.842: INFO: (11) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 9.911178ms)
  Nov 25 12:57:37.842: INFO: (11) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 9.982026ms)
  Nov 25 12:57:37.843: INFO: (11) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 10.719682ms)
  Nov 25 12:57:37.848: INFO: (12) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 5.424251ms)
  Nov 25 12:57:37.850: INFO: (12) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 7.47871ms)
  Nov 25 12:57:37.850: INFO: (12) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 7.420603ms)
  Nov 25 12:57:37.850: INFO: (12) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 7.070928ms)
  Nov 25 12:57:37.850: INFO: (12) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 7.04452ms)
  Nov 25 12:57:37.851: INFO: (12) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 8.011506ms)
  Nov 25 12:57:37.852: INFO: (12) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 8.258797ms)
  Nov 25 12:57:37.852: INFO: (12) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 9.351341ms)
  Nov 25 12:57:37.852: INFO: (12) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 9.384292ms)
  Nov 25 12:57:37.852: INFO: (12) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 9.418735ms)
  Nov 25 12:57:37.853: INFO: (12) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 10.17198ms)
  Nov 25 12:57:37.853: INFO: (12) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 10.055961ms)
  Nov 25 12:57:37.854: INFO: (12) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 10.735049ms)
  Nov 25 12:57:37.854: INFO: (12) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 11.117758ms)
  Nov 25 12:57:37.855: INFO: (12) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 11.651339ms)
  Nov 25 12:57:37.855: INFO: (12) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 11.950477ms)
  Nov 25 12:57:37.861: INFO: (13) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 5.405009ms)
  Nov 25 12:57:37.861: INFO: (13) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 5.790768ms)
  Nov 25 12:57:37.863: INFO: (13) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 7.07516ms)
  Nov 25 12:57:37.863: INFO: (13) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 7.718066ms)
  Nov 25 12:57:37.863: INFO: (13) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 7.940374ms)
  Nov 25 12:57:37.864: INFO: (13) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 8.638585ms)
  Nov 25 12:57:37.864: INFO: (13) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 8.992144ms)
  Nov 25 12:57:37.865: INFO: (13) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 9.26551ms)
  Nov 25 12:57:37.865: INFO: (13) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 9.389613ms)
  Nov 25 12:57:37.865: INFO: (13) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 9.868288ms)
  Nov 25 12:57:37.866: INFO: (13) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 10.387944ms)
  Nov 25 12:57:37.866: INFO: (13) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 10.28819ms)
  Nov 25 12:57:37.867: INFO: (13) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 11.006843ms)
  Nov 25 12:57:37.867: INFO: (13) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 11.066133ms)
  Nov 25 12:57:37.867: INFO: (13) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 11.29121ms)
  Nov 25 12:57:37.867: INFO: (13) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 11.269495ms)
  Nov 25 12:57:37.871: INFO: (14) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 4.348015ms)
  Nov 25 12:57:37.871: INFO: (14) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 4.448086ms)
  Nov 25 12:57:37.873: INFO: (14) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 5.996311ms)
  Nov 25 12:57:37.873: INFO: (14) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 5.659379ms)
  Nov 25 12:57:37.874: INFO: (14) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 7.020005ms)
  Nov 25 12:57:37.875: INFO: (14) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 7.085343ms)
  Nov 25 12:57:37.875: INFO: (14) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 7.901392ms)
  Nov 25 12:57:37.875: INFO: (14) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 8.185783ms)
  E1125 12:57:37.876285      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:57:37.876: INFO: (14) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 8.939417ms)
  Nov 25 12:57:37.876: INFO: (14) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 8.651613ms)
  Nov 25 12:57:37.876: INFO: (14) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 9.093451ms)
  Nov 25 12:57:37.877: INFO: (14) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 9.260357ms)
  Nov 25 12:57:37.877: INFO: (14) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 9.717973ms)
  Nov 25 12:57:37.877: INFO: (14) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 9.958817ms)
  Nov 25 12:57:37.878: INFO: (14) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 10.414252ms)
  Nov 25 12:57:37.878: INFO: (14) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 10.567073ms)
  Nov 25 12:57:37.883: INFO: (15) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 3.835533ms)
  Nov 25 12:57:37.883: INFO: (15) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 5.003649ms)
  Nov 25 12:57:37.884: INFO: (15) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 6.214493ms)
  Nov 25 12:57:37.884: INFO: (15) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 5.9862ms)
  Nov 25 12:57:37.885: INFO: (15) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 6.676998ms)
  Nov 25 12:57:37.886: INFO: (15) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 7.485028ms)
  Nov 25 12:57:37.887: INFO: (15) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 8.620438ms)
  Nov 25 12:57:37.887: INFO: (15) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 8.717512ms)
  Nov 25 12:57:37.887: INFO: (15) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 9.203172ms)
  Nov 25 12:57:37.887: INFO: (15) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 9.292002ms)
  Nov 25 12:57:37.888: INFO: (15) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 9.485969ms)
  Nov 25 12:57:37.888: INFO: (15) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 9.772323ms)
  Nov 25 12:57:37.888: INFO: (15) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 10.006146ms)
  Nov 25 12:57:37.889: INFO: (15) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 10.105611ms)
  Nov 25 12:57:37.889: INFO: (15) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 10.430019ms)
  Nov 25 12:57:37.890: INFO: (15) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 11.557062ms)
  Nov 25 12:57:37.895: INFO: (16) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 4.722964ms)
  Nov 25 12:57:37.897: INFO: (16) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 7.371927ms)
  Nov 25 12:57:37.899: INFO: (16) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 8.076524ms)
  Nov 25 12:57:37.899: INFO: (16) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 8.352928ms)
  Nov 25 12:57:37.899: INFO: (16) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 8.715566ms)
  Nov 25 12:57:37.900: INFO: (16) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 9.109612ms)
  Nov 25 12:57:37.900: INFO: (16) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 9.293075ms)
  Nov 25 12:57:37.900: INFO: (16) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 9.751507ms)
  Nov 25 12:57:37.900: INFO: (16) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 9.829986ms)
  Nov 25 12:57:37.900: INFO: (16) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 9.765108ms)
  Nov 25 12:57:37.901: INFO: (16) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 10.228755ms)
  Nov 25 12:57:37.901: INFO: (16) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 10.874733ms)
  Nov 25 12:57:37.901: INFO: (16) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 10.661565ms)
  Nov 25 12:57:37.902: INFO: (16) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 11.450896ms)
  Nov 25 12:57:37.902: INFO: (16) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 11.375333ms)
  Nov 25 12:57:37.902: INFO: (16) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 11.47628ms)
  Nov 25 12:57:37.907: INFO: (17) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 4.837969ms)
  Nov 25 12:57:37.907: INFO: (17) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 4.73808ms)
  Nov 25 12:57:37.909: INFO: (17) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 6.583005ms)
  Nov 25 12:57:37.910: INFO: (17) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 7.575244ms)
  Nov 25 12:57:37.910: INFO: (17) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 7.683235ms)
  Nov 25 12:57:37.910: INFO: (17) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 7.561333ms)
  Nov 25 12:57:37.911: INFO: (17) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 9.398894ms)
  Nov 25 12:57:37.912: INFO: (17) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 9.532138ms)
  Nov 25 12:57:37.912: INFO: (17) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 9.799488ms)
  Nov 25 12:57:37.912: INFO: (17) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 9.603298ms)
  Nov 25 12:57:37.912: INFO: (17) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 9.957504ms)
  Nov 25 12:57:37.913: INFO: (17) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 10.294116ms)
  Nov 25 12:57:37.913: INFO: (17) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 10.103184ms)
  Nov 25 12:57:37.913: INFO: (17) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 10.756297ms)
  Nov 25 12:57:37.913: INFO: (17) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 11.02592ms)
  Nov 25 12:57:37.913: INFO: (17) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 10.952937ms)
  Nov 25 12:57:37.918: INFO: (18) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 4.018612ms)
  Nov 25 12:57:37.920: INFO: (18) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 6.37642ms)
  Nov 25 12:57:37.920: INFO: (18) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 6.609762ms)
  Nov 25 12:57:37.920: INFO: (18) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 6.652259ms)
  Nov 25 12:57:37.921: INFO: (18) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 7.827776ms)
  Nov 25 12:57:37.923: INFO: (18) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 8.849973ms)
  Nov 25 12:57:37.923: INFO: (18) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 9.047667ms)
  Nov 25 12:57:37.923: INFO: (18) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 9.361664ms)
  Nov 25 12:57:37.924: INFO: (18) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 9.667264ms)
  Nov 25 12:57:37.924: INFO: (18) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 10.019533ms)
  Nov 25 12:57:37.924: INFO: (18) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 10.222695ms)
  Nov 25 12:57:37.924: INFO: (18) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 10.647503ms)
  Nov 25 12:57:37.924: INFO: (18) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 10.618927ms)
  Nov 25 12:57:37.924: INFO: (18) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 10.620166ms)
  Nov 25 12:57:37.925: INFO: (18) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 10.699967ms)
  Nov 25 12:57:37.925: INFO: (18) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 11.333463ms)
  Nov 25 12:57:37.930: INFO: (19) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:462/proxy/: tls qux (200; 4.66763ms)
  Nov 25 12:57:37.930: INFO: (19) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 5.034078ms)
  Nov 25 12:57:37.931: INFO: (19) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">test<... (200; 6.28068ms)
  Nov 25 12:57:37.932: INFO: (19) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:460/proxy/: tls baz (200; 6.615163ms)
  Nov 25 12:57:37.932: INFO: (19) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 6.677625ms)
  Nov 25 12:57:37.933: INFO: (19) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:160/proxy/: foo (200; 7.116946ms)
  Nov 25 12:57:37.933: INFO: (19) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname1/proxy/: foo (200; 7.901722ms)
  Nov 25 12:57:37.933: INFO: (19) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:1080/proxy/rewriteme">... (200; 7.777949ms)
  Nov 25 12:57:37.933: INFO: (19) /api/v1/namespaces/proxy-5198/pods/http:proxy-service-lnwzw-6njxn:162/proxy/: bar (200; 8.028689ms)
  Nov 25 12:57:37.934: INFO: (19) /api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/proxy-service-lnwzw-6njxn/proxy/rewriteme">test</a> (200; 8.773568ms)
  Nov 25 12:57:37.934: INFO: (19) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname2/proxy/: tls qux (200; 8.799366ms)
  Nov 25 12:57:37.935: INFO: (19) /api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/: <a href="/api/v1/namespaces/proxy-5198/pods/https:proxy-service-lnwzw-6njxn:443/proxy/tlsrewritem... (200; 9.592195ms)
  Nov 25 12:57:37.935: INFO: (19) /api/v1/namespaces/proxy-5198/services/https:proxy-service-lnwzw:tlsportname1/proxy/: tls baz (200; 9.592646ms)
  Nov 25 12:57:37.936: INFO: (19) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname2/proxy/: bar (200; 10.409008ms)
  Nov 25 12:57:37.936: INFO: (19) /api/v1/namespaces/proxy-5198/services/proxy-service-lnwzw:portname1/proxy/: foo (200; 10.562166ms)
  Nov 25 12:57:37.937: INFO: (19) /api/v1/namespaces/proxy-5198/services/http:proxy-service-lnwzw:portname2/proxy/: bar (200; 10.909689ms)
  Nov 25 12:57:37.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-lnwzw in namespace proxy-5198, will wait for the garbage collector to delete the pods @ 11/25/23 12:57:37.94
  Nov 25 12:57:38.001: INFO: Deleting ReplicationController proxy-service-lnwzw took: 7.154136ms
  Nov 25 12:57:38.101: INFO: Terminating ReplicationController proxy-service-lnwzw pods took: 100.455004ms
  E1125 12:57:38.877019      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:39.877361      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-5198" for this suite. @ 11/25/23 12:57:40.302
• [4.807 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 11/25/23 12:57:40.31
  Nov 25 12:57:40.310: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename disruption @ 11/25/23 12:57:40.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:57:40.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:57:40.33
  STEP: Creating a pdb that targets all three pods in a test replica set @ 11/25/23 12:57:40.334
  STEP: Waiting for the pdb to be processed @ 11/25/23 12:57:40.34
  E1125 12:57:40.877454      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:41.877642      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 11/25/23 12:57:42.352
  STEP: Waiting for all pods to be running @ 11/25/23 12:57:42.352
  Nov 25 12:57:42.355: INFO: pods: 0 < 3
  E1125 12:57:42.877899      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:43.877937      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 11/25/23 12:57:44.359
  STEP: Updating the pdb to allow a pod to be evicted @ 11/25/23 12:57:44.368
  STEP: Waiting for the pdb to be processed @ 11/25/23 12:57:44.377
  E1125 12:57:44.878032      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:45.878115      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/25/23 12:57:46.384
  STEP: Waiting for all pods to be running @ 11/25/23 12:57:46.384
  STEP: Waiting for the pdb to observed all healthy pods @ 11/25/23 12:57:46.387
  STEP: Patching the pdb to disallow a pod to be evicted @ 11/25/23 12:57:46.419
  STEP: Waiting for the pdb to be processed @ 11/25/23 12:57:46.455
  E1125 12:57:46.878195      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:47.879218      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 11/25/23 12:57:48.463
  STEP: locating a running pod @ 11/25/23 12:57:48.467
  STEP: Deleting the pdb to allow a pod to be evicted @ 11/25/23 12:57:48.479
  STEP: Waiting for the pdb to be deleted @ 11/25/23 12:57:48.485
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/25/23 12:57:48.489
  STEP: Waiting for all pods to be running @ 11/25/23 12:57:48.489
  Nov 25 12:57:48.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2258" for this suite. @ 11/25/23 12:57:48.519
• [8.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 11/25/23 12:57:48.542
  Nov 25 12:57:48.542: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 12:57:48.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:57:48.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:57:48.582
  STEP: Creating the pod @ 11/25/23 12:57:48.585
  E1125 12:57:48.880345      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:49.880467      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:50.880959      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:57:51.138: INFO: Successfully updated pod "labelsupdate354e37f3-4172-4670-ba56-35033aedd891"
  E1125 12:57:51.881931      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:52.882025      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:53.882676      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:54.883129      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:57:55.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1063" for this suite. @ 11/25/23 12:57:55.168
• [6.636 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 11/25/23 12:57:55.181
  Nov 25 12:57:55.181: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 11/25/23 12:57:55.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:57:55.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:57:55.203
  STEP: Setting up the test @ 11/25/23 12:57:55.206
  STEP: Creating hostNetwork=false pod @ 11/25/23 12:57:55.206
  E1125 12:57:55.883916      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:56.883999      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 11/25/23 12:57:57.229
  E1125 12:57:57.884870      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:57:58.884956      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 11/25/23 12:57:59.251
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 11/25/23 12:57:59.251
  Nov 25 12:57:59.251: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1764 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:57:59.251: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:57:59.252: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:57:59.252: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1764/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov 25 12:57:59.328: INFO: Exec stderr: ""
  Nov 25 12:57:59.328: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1764 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:57:59.328: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:57:59.329: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:57:59.329: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1764/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov 25 12:57:59.419: INFO: Exec stderr: ""
  Nov 25 12:57:59.419: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1764 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:57:59.419: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:57:59.420: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:57:59.420: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1764/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Nov 25 12:57:59.499: INFO: Exec stderr: ""
  Nov 25 12:57:59.499: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1764 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:57:59.499: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:57:59.500: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:57:59.500: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1764/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Nov 25 12:57:59.576: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 11/25/23 12:57:59.576
  Nov 25 12:57:59.576: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1764 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:57:59.576: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:57:59.576: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:57:59.576: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1764/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Nov 25 12:57:59.647: INFO: Exec stderr: ""
  Nov 25 12:57:59.647: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1764 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:57:59.647: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:57:59.647: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:57:59.648: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1764/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Nov 25 12:57:59.727: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 11/25/23 12:57:59.727
  Nov 25 12:57:59.727: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1764 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:57:59.727: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:57:59.728: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:57:59.728: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1764/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov 25 12:57:59.810: INFO: Exec stderr: ""
  Nov 25 12:57:59.810: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1764 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:57:59.810: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:57:59.811: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:57:59.811: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1764/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E1125 12:57:59.885961      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:57:59.886: INFO: Exec stderr: ""
  Nov 25 12:57:59.886: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1764 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:57:59.886: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:57:59.887: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:57:59.887: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1764/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Nov 25 12:57:59.973: INFO: Exec stderr: ""
  Nov 25 12:57:59.974: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1764 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 12:57:59.974: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 12:57:59.974: INFO: ExecWithOptions: Clientset creation
  Nov 25 12:57:59.974: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1764/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Nov 25 12:58:00.060: INFO: Exec stderr: ""
  Nov 25 12:58:00.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-1764" for this suite. @ 11/25/23 12:58:00.066
• [4.892 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 11/25/23 12:58:00.075
  Nov 25 12:58:00.075: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename secrets @ 11/25/23 12:58:00.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:58:00.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:58:00.096
  STEP: Creating projection with secret that has name secret-emptykey-test-3f17db84-8d48-4ec7-84c0-27de9c0fb10f @ 11/25/23 12:58:00.099
  Nov 25 12:58:00.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9626" for this suite. @ 11/25/23 12:58:00.104
• [0.035 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 11/25/23 12:58:00.11
  Nov 25 12:58:00.110: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename endpointslicemirroring @ 11/25/23 12:58:00.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:58:00.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:58:00.125
  STEP: mirroring a new custom Endpoint @ 11/25/23 12:58:00.146
  Nov 25 12:58:00.162: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E1125 12:58:00.886573      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:01.887640      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 11/25/23 12:58:02.166
  Nov 25 12:58:02.175: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E1125 12:58:02.888639      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:03.889583      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 11/25/23 12:58:04.179
  Nov 25 12:58:04.189: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E1125 12:58:04.889793      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:05.890709      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:06.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-9003" for this suite. @ 11/25/23 12:58:06.197
• [6.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 11/25/23 12:58:06.206
  Nov 25 12:58:06.206: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename runtimeclass @ 11/25/23 12:58:06.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:58:06.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:58:06.226
  E1125 12:58:06.890787      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:07.890986      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:08.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8033" for this suite. @ 11/25/23 12:58:08.259
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 11/25/23 12:58:08.266
  Nov 25 12:58:08.266: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-probe @ 11/25/23 12:58:08.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:58:08.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:58:08.285
  STEP: Creating pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075 @ 11/25/23 12:58:08.288
  E1125 12:58:08.891095      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:09.891501      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/25/23 12:58:10.308
  Nov 25 12:58:10.311: INFO: Initial restart count of pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 is 0
  Nov 25 12:58:10.313: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:10.892517      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:11.892595      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:12.317: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:12.892667      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:13.892980      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:14.320: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:14.893731      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:15.893816      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:16.324: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:16.893922      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:17.894019      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:18.329: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:18.894688      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:19.895039      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:20.333: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:20.895148      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:21.895920      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:22.337: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:22.896013      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:23.896285      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:24.341: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:24.897096      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:25.897590      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:26.345: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:26.897651      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:27.898703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:28.348: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:28.898795      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:29.899215      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:30.353: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:30.900113      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:31.900207      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:32.356: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:32.900674      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:33.900907      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:34.359: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:34.901595      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:35.901625      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:36.363: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:36.902517      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:37.902617      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:38.369: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:38.903550      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:39.904589      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:40.373: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:40.904900      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:41.905474      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:42.377: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:42.905639      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:43.905717      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:44.381: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:44.906577      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:45.906762      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:46.385: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:46.907615      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:47.907722      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:48.389: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:48.908782      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:49.909783      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:50.392: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:50.910855      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:51.911163      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:52.395: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:52.911273      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:53.911590      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:54.399: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:54.912656      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:55.912824      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:56.404: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:56.913700      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:57.914683      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:58:58.407: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:58:58.915405      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:58:59.915724      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:59:00.412: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:59:00.915819      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:01.915916      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:59:02.415: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:59:02.916543      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:03.916723      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:59:04.420: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:59:04.917799      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:05.917892      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:59:06.423: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:59:06.918684      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:07.918775      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:59:08.427: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:59:08.919208      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:09.919297      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:59:10.432: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:59:10.919385      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:11.919570      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:59:12.435: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:59:12.920457      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:13.920548      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:59:14.439: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:59:14.920632      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:15.920832      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:59:16.443: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:59:16.921706      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:17.922681      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:59:18.446: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:59:18.922773      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:19.923219      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:59:20.450: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:59:20.924037      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:21.924127      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:59:22.454: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:59:22.924411      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:23.924506      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:59:24.457: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  E1125 12:59:24.925093      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:25.925269      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 12:59:26.461: INFO: Get pod test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 in namespace container-probe-4075
  Nov 25 12:59:26.461: INFO: Restart count of pod container-probe-4075/test-grpc-608106f3-3e88-48be-b2a6-9b2a317851d2 is now 1 (1m16.150552822s elapsed)
  Nov 25 12:59:26.461: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 12:59:26.465
  STEP: Destroying namespace "container-probe-4075" for this suite. @ 11/25/23 12:59:26.478
• [78.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 11/25/23 12:59:26.486
  Nov 25 12:59:26.486: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename certificates @ 11/25/23 12:59:26.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:59:26.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:59:26.502
  STEP: getting /apis @ 11/25/23 12:59:26.851
  STEP: getting /apis/certificates.k8s.io @ 11/25/23 12:59:26.854
  STEP: getting /apis/certificates.k8s.io/v1 @ 11/25/23 12:59:26.855
  STEP: creating @ 11/25/23 12:59:26.856
  STEP: getting @ 11/25/23 12:59:26.871
  STEP: listing @ 11/25/23 12:59:26.873
  STEP: watching @ 11/25/23 12:59:26.876
  Nov 25 12:59:26.876: INFO: starting watch
  STEP: patching @ 11/25/23 12:59:26.877
  STEP: updating @ 11/25/23 12:59:26.884
  Nov 25 12:59:26.888: INFO: waiting for watch events with expected annotations
  Nov 25 12:59:26.888: INFO: saw patched and updated annotations
  STEP: getting /approval @ 11/25/23 12:59:26.888
  STEP: patching /approval @ 11/25/23 12:59:26.891
  STEP: updating /approval @ 11/25/23 12:59:26.898
  STEP: getting /status @ 11/25/23 12:59:26.904
  STEP: patching /status @ 11/25/23 12:59:26.907
  STEP: updating /status @ 11/25/23 12:59:26.914
  STEP: deleting @ 11/25/23 12:59:26.923
  E1125 12:59:26.926296      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting a collection @ 11/25/23 12:59:26.935
  Nov 25 12:59:26.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-7524" for this suite. @ 11/25/23 12:59:26.951
• [0.470 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 11/25/23 12:59:26.959
  Nov 25 12:59:26.959: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 12:59:26.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:59:26.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:59:26.977
  STEP: Creating configMap with name configmap-test-volume-map-0b5dcd12-f3ea-4f79-950e-533ef605d2f8 @ 11/25/23 12:59:26.983
  STEP: Creating a pod to test consume configMaps @ 11/25/23 12:59:26.986
  E1125 12:59:27.926434      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:28.926644      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:29.927159      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:30.927253      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 12:59:31.007
  Nov 25 12:59:31.010: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-configmaps-2759ca7e-3b9c-4e91-8122-0cfda52fb6c8 container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 12:59:31.023
  Nov 25 12:59:31.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4544" for this suite. @ 11/25/23 12:59:31.041
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 11/25/23 12:59:31.051
  Nov 25 12:59:31.051: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename field-validation @ 11/25/23 12:59:31.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:59:31.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:59:31.067
  STEP: apply creating a deployment @ 11/25/23 12:59:31.071
  Nov 25 12:59:31.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1341" for this suite. @ 11/25/23 12:59:31.086
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 11/25/23 12:59:31.092
  Nov 25 12:59:31.092: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename svcaccounts @ 11/25/23 12:59:31.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 12:59:31.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 12:59:31.11
  Nov 25 12:59:31.124: INFO: created pod
  E1125 12:59:31.927340      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:32.927435      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:33.927687      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:34.927805      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 12:59:35.134
  E1125 12:59:35.928102      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:36.928925      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:37.929216      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:38.930017      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:39.930314      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:40.931353      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:41.931539      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:42.931625      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:43.931781      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:44.931861      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:45.932020      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:46.932219      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:47.932308      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:48.932428      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:49.932622      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:50.932773      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:51.933013      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:52.933259      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:53.933460      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:54.933614      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:55.933899      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:56.934051      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:57.934144      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:58.934684      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 12:59:59.934864      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:00.935578      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:01.935670      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:02.935814      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:03.935980      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:04.936466      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:05.134: INFO: polling logs
  Nov 25 13:00:05.141: INFO: Pod logs: 
  I1125 12:59:31.864233       1 log.go:194] OK: Got token
  I1125 12:59:31.864296       1 log.go:194] validating with in-cluster discovery
  I1125 12:59:31.864619       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I1125 12:59:31.864649       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6428:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000124210), NotBefore:(*jwt.NumericDate)(0xc0001242f8), IssuedAt:(*jwt.NumericDate)(0xc000124220), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6428", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"b0ee55f3-7ebc-4400-852e-04ebd83b11e0"}}}
  I1125 12:59:31.874182       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1125 12:59:31.881063       1 log.go:194] OK: Validated signature on JWT
  I1125 12:59:31.881159       1 log.go:194] OK: Got valid claims from token!
  I1125 12:59:31.881193       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6428:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000125348), NotBefore:(*jwt.NumericDate)(0xc000125370), IssuedAt:(*jwt.NumericDate)(0xc000125350), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6428", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"b0ee55f3-7ebc-4400-852e-04ebd83b11e0"}}}

  Nov 25 13:00:05.142: INFO: completed pod
  Nov 25 13:00:05.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6428" for this suite. @ 11/25/23 13:00:05.151
• [34.065 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 11/25/23 13:00:05.158
  Nov 25 13:00:05.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 13:00:05.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:00:05.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:00:05.178
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 13:00:05.181
  E1125 13:00:05.937213      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:06.937306      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:07.937636      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:08.937716      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:00:09.2
  Nov 25 13:00:09.203: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-8cf6b6c4-bad9-4919-acf3-0bd51fcda9b3 container client-container: <nil>
  STEP: delete the pod @ 11/25/23 13:00:09.209
  Nov 25 13:00:09.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8879" for this suite. @ 11/25/23 13:00:09.228
• [4.076 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 11/25/23 13:00:09.234
  Nov 25 13:00:09.234: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 13:00:09.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:00:09.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:00:09.253
  STEP: Creating configMap with name configmap-test-volume-map-6cba0c08-65f8-4d6d-8c4e-880de5d443fd @ 11/25/23 13:00:09.255
  STEP: Creating a pod to test consume configMaps @ 11/25/23 13:00:09.26
  E1125 13:00:09.938086      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:10.938168      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:11.938721      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:12.938791      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:00:13.282
  Nov 25 13:00:13.286: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-configmaps-d2370813-ddb0-4022-add8-caf130cca18e container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 13:00:13.292
  Nov 25 13:00:13.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-155" for this suite. @ 11/25/23 13:00:13.308
• [4.080 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 11/25/23 13:00:13.314
  Nov 25 13:00:13.314: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename daemonsets @ 11/25/23 13:00:13.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:00:13.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:00:13.332
  Nov 25 13:00:13.351: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 11/25/23 13:00:13.355
  Nov 25 13:00:13.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 13:00:13.358: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 11/25/23 13:00:13.358
  Nov 25 13:00:13.378: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 13:00:13.378: INFO: Node ip-172-31-4-198 is running 0 daemon pod, expected 1
  E1125 13:00:13.938894      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:14.382: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 13:00:14.382: INFO: Node ip-172-31-4-198 is running 0 daemon pod, expected 1
  E1125 13:00:14.939281      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:15.382: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 25 13:00:15.382: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 11/25/23 13:00:15.384
  Nov 25 13:00:15.400: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 25 13:00:15.400: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E1125 13:00:15.939368      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:16.405: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 13:00:16.405: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 11/25/23 13:00:16.405
  Nov 25 13:00:16.414: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 13:00:16.414: INFO: Node ip-172-31-4-198 is running 0 daemon pod, expected 1
  E1125 13:00:16.939865      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:17.418: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 13:00:17.418: INFO: Node ip-172-31-4-198 is running 0 daemon pod, expected 1
  E1125 13:00:17.939889      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:18.419: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 25 13:00:18.419: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/25/23 13:00:18.425
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9752, will wait for the garbage collector to delete the pods @ 11/25/23 13:00:18.425
  Nov 25 13:00:18.487: INFO: Deleting DaemonSet.extensions daemon-set took: 7.203456ms
  Nov 25 13:00:18.588: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.896019ms
  E1125 13:00:18.940326      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:19.592: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 13:00:19.592: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 25 13:00:19.594: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19395"},"items":null}

  Nov 25 13:00:19.597: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19395"},"items":null}

  Nov 25 13:00:19.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9752" for this suite. @ 11/25/23 13:00:19.623
• [6.315 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 11/25/23 13:00:19.63
  Nov 25 13:00:19.630: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-runtime @ 11/25/23 13:00:19.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:00:19.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:00:19.655
  STEP: create the container @ 11/25/23 13:00:19.657
  W1125 13:00:19.665193      17 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 11/25/23 13:00:19.665
  E1125 13:00:19.940958      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:20.941320      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:21.941421      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/25/23 13:00:22.679
  STEP: the container should be terminated @ 11/25/23 13:00:22.682
  STEP: the termination message should be set @ 11/25/23 13:00:22.682
  Nov 25 13:00:22.682: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/25/23 13:00:22.682
  Nov 25 13:00:22.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6235" for this suite. @ 11/25/23 13:00:22.702
• [3.079 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 11/25/23 13:00:22.71
  Nov 25 13:00:22.710: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 13:00:22.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:00:22.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:00:22.73
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/25/23 13:00:22.733
  E1125 13:00:22.941625      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:23.941730      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:24.942433      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:25.942469      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:00:26.759
  Nov 25 13:00:26.761: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-b888bdc8-27af-4aa7-8fc6-62b3223a2b5e container test-container: <nil>
  STEP: delete the pod @ 11/25/23 13:00:26.768
  Nov 25 13:00:26.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8671" for this suite. @ 11/25/23 13:00:26.786
• [4.083 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 11/25/23 13:00:26.794
  Nov 25 13:00:26.794: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-probe @ 11/25/23 13:00:26.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:00:26.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:00:26.812
  STEP: Creating pod liveness-19969129-840c-4bf8-88c8-ffaba5171849 in namespace container-probe-8810 @ 11/25/23 13:00:26.814
  E1125 13:00:26.942528      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:27.942703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/25/23 13:00:28.834
  Nov 25 13:00:28.837: INFO: Initial restart count of pod liveness-19969129-840c-4bf8-88c8-ffaba5171849 is 0
  Nov 25 13:00:28.841: INFO: Get pod liveness-19969129-840c-4bf8-88c8-ffaba5171849 in namespace container-probe-8810
  E1125 13:00:28.943391      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:29.943699      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:30.845: INFO: Get pod liveness-19969129-840c-4bf8-88c8-ffaba5171849 in namespace container-probe-8810
  E1125 13:00:30.944362      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:31.944447      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:32.849: INFO: Get pod liveness-19969129-840c-4bf8-88c8-ffaba5171849 in namespace container-probe-8810
  E1125 13:00:32.945336      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:33.945438      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:34.852: INFO: Get pod liveness-19969129-840c-4bf8-88c8-ffaba5171849 in namespace container-probe-8810
  E1125 13:00:34.945757      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:35.946706      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:36.856: INFO: Get pod liveness-19969129-840c-4bf8-88c8-ffaba5171849 in namespace container-probe-8810
  E1125 13:00:36.947717      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:37.947826      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:38.860: INFO: Get pod liveness-19969129-840c-4bf8-88c8-ffaba5171849 in namespace container-probe-8810
  E1125 13:00:38.948087      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:39.948230      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:40.865: INFO: Get pod liveness-19969129-840c-4bf8-88c8-ffaba5171849 in namespace container-probe-8810
  E1125 13:00:40.948279      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:41.948374      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:42.868: INFO: Get pod liveness-19969129-840c-4bf8-88c8-ffaba5171849 in namespace container-probe-8810
  E1125 13:00:42.948404      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:43.948500      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:44.871: INFO: Get pod liveness-19969129-840c-4bf8-88c8-ffaba5171849 in namespace container-probe-8810
  E1125 13:00:44.948979      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:45.949074      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:46.876: INFO: Get pod liveness-19969129-840c-4bf8-88c8-ffaba5171849 in namespace container-probe-8810
  E1125 13:00:46.949242      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:47.949330      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:00:48.879: INFO: Get pod liveness-19969129-840c-4bf8-88c8-ffaba5171849 in namespace container-probe-8810
  Nov 25 13:00:48.879: INFO: Restart count of pod container-probe-8810/liveness-19969129-840c-4bf8-88c8-ffaba5171849 is now 1 (20.042137518s elapsed)
  Nov 25 13:00:48.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 13:00:48.883
  STEP: Destroying namespace "container-probe-8810" for this suite. @ 11/25/23 13:00:48.895
• [22.108 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 11/25/23 13:00:48.902
  Nov 25 13:00:48.902: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename namespaces @ 11/25/23 13:00:48.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:00:48.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:00:48.926
  STEP: Updating Namespace "namespaces-8096" @ 11/25/23 13:00:48.929
  Nov 25 13:00:48.936: INFO: Namespace "namespaces-8096" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"c2f612a6-5592-45cc-881a-0621349258be", "kubernetes.io/metadata.name":"namespaces-8096", "namespaces-8096":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Nov 25 13:00:48.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8096" for this suite. @ 11/25/23 13:00:48.94
• [0.045 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 11/25/23 13:00:48.947
  Nov 25 13:00:48.947: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename crd-watch @ 11/25/23 13:00:48.948
  E1125 13:00:48.950266      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:00:48.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:00:48.964
  Nov 25 13:00:48.966: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  E1125 13:00:49.950415      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:50.950712      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 11/25/23 13:00:51.509
  Nov 25 13:00:51.513: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-25T13:00:51Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-25T13:00:51Z]] name:name1 resourceVersion:19594 uid:6adccf2b-f56b-42e7-8e83-8da3fa4d936c] num:map[num1:9223372036854775807 num2:1000000]]}
  E1125 13:00:51.951473      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:52.951999      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:53.952299      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:54.952456      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:55.952662      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:56.953064      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:57.953248      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:58.953420      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:00:59.953616      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:00.953709      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 11/25/23 13:01:01.514
  Nov 25 13:01:01.521: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-25T13:01:01Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-25T13:01:01Z]] name:name2 resourceVersion:19633 uid:880677e9-54a1-441f-86b7-59b0c840c165] num:map[num1:9223372036854775807 num2:1000000]]}
  E1125 13:01:01.953801      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:02.954680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:03.954887      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:04.955274      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:05.955366      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:06.955550      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:07.955717      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:08.955814      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:09.955965      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:10.956150      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 11/25/23 13:01:11.521
  Nov 25 13:01:11.528: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-25T13:00:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-25T13:01:11Z]] name:name1 resourceVersion:19653 uid:6adccf2b-f56b-42e7-8e83-8da3fa4d936c] num:map[num1:9223372036854775807 num2:1000000]]}
  E1125 13:01:11.956759      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:12.956854      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:13.957137      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:14.957516      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:15.957618      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:16.958679      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:17.958869      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:18.959945      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:19.960298      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:20.960530      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 11/25/23 13:01:21.529
  Nov 25 13:01:21.536: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-25T13:01:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-25T13:01:21Z]] name:name2 resourceVersion:19673 uid:880677e9-54a1-441f-86b7-59b0c840c165] num:map[num1:9223372036854775807 num2:1000000]]}
  E1125 13:01:21.960631      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:22.960672      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:23.961463      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:24.961612      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:25.961704      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:26.962706      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:27.962796      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:28.963045      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:29.963131      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:30.963233      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 11/25/23 13:01:31.536
  Nov 25 13:01:31.544: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-25T13:00:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-25T13:01:11Z]] name:name1 resourceVersion:19693 uid:6adccf2b-f56b-42e7-8e83-8da3fa4d936c] num:map[num1:9223372036854775807 num2:1000000]]}
  E1125 13:01:31.963798      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:32.963985      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:33.964291      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:34.964428      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:35.964473      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:36.964779      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:37.965048      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:38.965725      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:39.966677      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:40.966845      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 11/25/23 13:01:41.544
  Nov 25 13:01:41.551: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-25T13:01:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-25T13:01:21Z]] name:name2 resourceVersion:19713 uid:880677e9-54a1-441f-86b7-59b0c840c165] num:map[num1:9223372036854775807 num2:1000000]]}
  E1125 13:01:41.967655      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:42.967740      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:43.968653      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:44.968712      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:45.968793      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:46.968833      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:47.968914      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:48.969931      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:49.970027      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:50.970112      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:51.970181      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:01:52.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-506" for this suite. @ 11/25/23 13:01:52.072
• [63.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 11/25/23 13:01:52.082
  Nov 25 13:01:52.082: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 13:01:52.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:01:52.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:01:52.104
  STEP: creating service in namespace services-7587 @ 11/25/23 13:01:52.107
  STEP: creating service affinity-clusterip in namespace services-7587 @ 11/25/23 13:01:52.107
  STEP: creating replication controller affinity-clusterip in namespace services-7587 @ 11/25/23 13:01:52.119
  I1125 13:01:52.131450      17 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-7587, replica count: 3
  E1125 13:01:52.970731      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:53.970818      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:54.971193      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1125 13:01:55.182596      17 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 25 13:01:55.188: INFO: Creating new exec pod
  E1125 13:01:55.971307      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:56.971379      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:57.972370      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:01:58.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-7587 exec execpod-affinityjgpjz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Nov 25 13:01:58.349: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Nov 25 13:01:58.349: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 13:01:58.349: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-7587 exec execpod-affinityjgpjz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.53 80'
  Nov 25 13:01:58.492: INFO: stderr: "+ nc -v -t -w 2 10.152.183.53 80\nConnection to 10.152.183.53 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Nov 25 13:01:58.492: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 13:01:58.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-7587 exec execpod-affinityjgpjz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.53:80/ ; done'
  Nov 25 13:01:58.685: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.53:80/\n"
  Nov 25 13:01:58.685: INFO: stdout: "\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf\naffinity-clusterip-l62hf"
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Received response from host: affinity-clusterip-l62hf
  Nov 25 13:01:58.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 25 13:01:58.691: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7587, will wait for the garbage collector to delete the pods @ 11/25/23 13:01:58.707
  Nov 25 13:01:58.775: INFO: Deleting ReplicationController affinity-clusterip took: 12.100862ms
  Nov 25 13:01:58.876: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.448313ms
  E1125 13:01:58.973332      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:01:59.973601      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:00.975919      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-7587" for this suite. @ 11/25/23 13:02:01.894
• [9.818 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 11/25/23 13:02:01.903
  Nov 25 13:02:01.903: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 13:02:01.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:02:01.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:02:01.921
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 13:02:01.924
  E1125 13:02:01.976105      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:02.976492      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:03.977395      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:04.977738      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:02:05.944
  Nov 25 13:02:05.948: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-4514f563-a403-4569-931d-7503766709b5 container client-container: <nil>
  STEP: delete the pod @ 11/25/23 13:02:05.961
  E1125 13:02:05.978258      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:02:05.979: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5131" for this suite. @ 11/25/23 13:02:05.982
• [4.085 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 11/25/23 13:02:05.988
  Nov 25 13:02:05.988: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename replicaset @ 11/25/23 13:02:05.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:02:06.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:02:06.007
  STEP: Create a Replicaset @ 11/25/23 13:02:06.016
  STEP: Verify that the required pods have come up. @ 11/25/23 13:02:06.022
  Nov 25 13:02:06.029: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1125 13:02:06.978568      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:07.978636      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:08.978762      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:09.978821      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:10.979036      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:02:11.034: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/25/23 13:02:11.034
  STEP: Getting /status @ 11/25/23 13:02:11.034
  Nov 25 13:02:11.038: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 11/25/23 13:02:11.038
  Nov 25 13:02:11.050: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 11/25/23 13:02:11.05
  Nov 25 13:02:11.053: INFO: Observed &ReplicaSet event: ADDED
  Nov 25 13:02:11.053: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 25 13:02:11.053: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 25 13:02:11.053: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 25 13:02:11.053: INFO: Found replicaset test-rs in namespace replicaset-3639 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov 25 13:02:11.054: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 11/25/23 13:02:11.054
  Nov 25 13:02:11.054: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Nov 25 13:02:11.060: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 11/25/23 13:02:11.06
  Nov 25 13:02:11.063: INFO: Observed &ReplicaSet event: ADDED
  Nov 25 13:02:11.063: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 25 13:02:11.063: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 25 13:02:11.063: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 25 13:02:11.063: INFO: Observed replicaset test-rs in namespace replicaset-3639 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 25 13:02:11.064: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 25 13:02:11.064: INFO: Found replicaset test-rs in namespace replicaset-3639 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Nov 25 13:02:11.064: INFO: Replicaset test-rs has a patched status
  Nov 25 13:02:11.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3639" for this suite. @ 11/25/23 13:02:11.068
• [5.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 11/25/23 13:02:11.076
  Nov 25 13:02:11.076: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename lease-test @ 11/25/23 13:02:11.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:02:11.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:02:11.094
  Nov 25 13:02:11.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-4733" for this suite. @ 11/25/23 13:02:11.153
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:792
  STEP: Creating a kubernetes client @ 11/25/23 13:02:11.165
  Nov 25 13:02:11.165: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename statefulset @ 11/25/23 13:02:11.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:02:11.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:02:11.187
  STEP: Creating service test in namespace statefulset-1744 @ 11/25/23 13:02:11.19
  STEP: Looking for a node to schedule stateful set and pod @ 11/25/23 13:02:11.197
  STEP: Creating pod with conflicting port in namespace statefulset-1744 @ 11/25/23 13:02:11.201
  STEP: Waiting until pod test-pod will start running in namespace statefulset-1744 @ 11/25/23 13:02:11.209
  E1125 13:02:11.979120      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:12.979233      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-1744 @ 11/25/23 13:02:13.216
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1744 @ 11/25/23 13:02:13.223
  Nov 25 13:02:13.234: INFO: Observed stateful pod in namespace: statefulset-1744, name: ss-0, uid: f1b53a43-75fa-4230-bc2f-dbed47f8d46e, status phase: Pending. Waiting for statefulset controller to delete.
  Nov 25 13:02:13.247: INFO: Observed stateful pod in namespace: statefulset-1744, name: ss-0, uid: f1b53a43-75fa-4230-bc2f-dbed47f8d46e, status phase: Failed. Waiting for statefulset controller to delete.
  Nov 25 13:02:13.276: INFO: Observed stateful pod in namespace: statefulset-1744, name: ss-0, uid: f1b53a43-75fa-4230-bc2f-dbed47f8d46e, status phase: Failed. Waiting for statefulset controller to delete.
  Nov 25 13:02:13.293: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-1744
  STEP: Removing pod with conflicting port in namespace statefulset-1744 @ 11/25/23 13:02:13.293
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1744 and will be in running state @ 11/25/23 13:02:13.312
  E1125 13:02:13.979568      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:14.979984      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:02:15.321: INFO: Deleting all statefulset in ns statefulset-1744
  Nov 25 13:02:15.323: INFO: Scaling statefulset ss to 0
  E1125 13:02:15.980077      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:16.980177      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:17.980260      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:18.980358      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:19.980861      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:20.981062      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:21.981595      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:22.981690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:23.982682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:24.983138      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:02:25.341: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 25 13:02:25.343: INFO: Deleting statefulset ss
  Nov 25 13:02:25.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1744" for this suite. @ 11/25/23 13:02:25.359
• [14.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 11/25/23 13:02:25.372
  Nov 25 13:02:25.372: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename var-expansion @ 11/25/23 13:02:25.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:02:25.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:02:25.39
  E1125 13:02:25.984015      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:26.984105      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:02:27.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 25 13:02:27.414: INFO: Deleting pod "var-expansion-ab76714a-d390-448a-9075-4d2772f8c63e" in namespace "var-expansion-1052"
  Nov 25 13:02:27.421: INFO: Wait up to 5m0s for pod "var-expansion-ab76714a-d390-448a-9075-4d2772f8c63e" to be fully deleted
  E1125 13:02:27.984788      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:28.985119      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-1052" for this suite. @ 11/25/23 13:02:29.429
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 11/25/23 13:02:29.437
  Nov 25 13:02:29.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 13:02:29.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:02:29.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:02:29.46
  STEP: Setting up server cert @ 11/25/23 13:02:29.481
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 13:02:29.889
  STEP: Deploying the webhook pod @ 11/25/23 13:02:29.898
  STEP: Wait for the deployment to be ready @ 11/25/23 13:02:29.909
  Nov 25 13:02:29.917: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1125 13:02:29.985352      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:30.985476      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/25/23 13:02:31.926
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 13:02:31.938
  E1125 13:02:31.986446      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:02:32.939: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E1125 13:02:32.986918      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 11/25/23 13:02:33.006
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/25/23 13:02:33.045
  STEP: Deleting the collection of validation webhooks @ 11/25/23 13:02:33.08
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/25/23 13:02:33.129
  Nov 25 13:02:33.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7118" for this suite. @ 11/25/23 13:02:33.196
  STEP: Destroying namespace "webhook-markers-1355" for this suite. @ 11/25/23 13:02:33.207
• [3.785 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 11/25/23 13:02:33.226
  Nov 25 13:02:33.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:02:33.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:02:33.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:02:33.253
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 13:02:33.265
  E1125 13:02:33.987324      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:34.987526      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:35.988370      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:36.988697      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:02:37.3
  Nov 25 13:02:37.303: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-f9c0b899-b187-45ca-9806-5e9197e50a8d container client-container: <nil>
  STEP: delete the pod @ 11/25/23 13:02:37.313
  Nov 25 13:02:37.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1883" for this suite. @ 11/25/23 13:02:37.33
• [4.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 11/25/23 13:02:37.335
  Nov 25 13:02:37.335: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename gc @ 11/25/23 13:02:37.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:02:37.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:02:37.351
  STEP: create the rc @ 11/25/23 13:02:37.361
  W1125 13:02:37.366964      17 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1125 13:02:37.989794      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:38.991558      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:39.999400      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:40.999727      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:41.999816      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:43.014438      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 11/25/23 13:02:43.371
  STEP: wait for the rc to be deleted @ 11/25/23 13:02:43.378
  E1125 13:02:44.014623      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:45.014876      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:46.014960      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:47.015047      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:48.015123      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 11/25/23 13:02:48.381
  E1125 13:02:49.015562      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:50.015658      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:51.015986      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:52.016236      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:53.016307      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:54.016402      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:55.016809      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:56.016887      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:57.017071      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:58.017294      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:02:59.017543      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:00.017626      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:01.018705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:02.018788      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:03.018893      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:04.018988      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:05.020025      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:06.020593      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:07.020671      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:08.020763      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:09.020925      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:10.021258      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:11.021350      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:12.021415      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:13.021633      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:14.021681      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:15.021741      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:16.021839      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:17.021960      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:18.022831      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/25/23 13:03:18.392
  W1125 13:03:18.397186      17 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 25 13:03:18.397: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 25 13:03:18.399: INFO: Deleting pod "simpletest.rc-25jf6" in namespace "gc-132"
  Nov 25 13:03:18.411: INFO: Deleting pod "simpletest.rc-29kz2" in namespace "gc-132"
  Nov 25 13:03:18.426: INFO: Deleting pod "simpletest.rc-2fqbt" in namespace "gc-132"
  Nov 25 13:03:18.439: INFO: Deleting pod "simpletest.rc-2pjsr" in namespace "gc-132"
  Nov 25 13:03:18.450: INFO: Deleting pod "simpletest.rc-2wsgs" in namespace "gc-132"
  Nov 25 13:03:18.463: INFO: Deleting pod "simpletest.rc-45xv5" in namespace "gc-132"
  Nov 25 13:03:18.473: INFO: Deleting pod "simpletest.rc-4v5cm" in namespace "gc-132"
  Nov 25 13:03:18.487: INFO: Deleting pod "simpletest.rc-55vv8" in namespace "gc-132"
  Nov 25 13:03:18.503: INFO: Deleting pod "simpletest.rc-598fm" in namespace "gc-132"
  Nov 25 13:03:18.517: INFO: Deleting pod "simpletest.rc-5lm6v" in namespace "gc-132"
  Nov 25 13:03:18.529: INFO: Deleting pod "simpletest.rc-5rrdp" in namespace "gc-132"
  Nov 25 13:03:18.542: INFO: Deleting pod "simpletest.rc-6fpzt" in namespace "gc-132"
  Nov 25 13:03:18.558: INFO: Deleting pod "simpletest.rc-74pcj" in namespace "gc-132"
  Nov 25 13:03:18.573: INFO: Deleting pod "simpletest.rc-7jvhg" in namespace "gc-132"
  Nov 25 13:03:18.589: INFO: Deleting pod "simpletest.rc-7kvvx" in namespace "gc-132"
  Nov 25 13:03:18.604: INFO: Deleting pod "simpletest.rc-7lwsc" in namespace "gc-132"
  Nov 25 13:03:18.617: INFO: Deleting pod "simpletest.rc-7vz67" in namespace "gc-132"
  Nov 25 13:03:18.633: INFO: Deleting pod "simpletest.rc-87f8h" in namespace "gc-132"
  Nov 25 13:03:18.645: INFO: Deleting pod "simpletest.rc-8klp9" in namespace "gc-132"
  Nov 25 13:03:18.659: INFO: Deleting pod "simpletest.rc-9f475" in namespace "gc-132"
  Nov 25 13:03:18.677: INFO: Deleting pod "simpletest.rc-9gslt" in namespace "gc-132"
  Nov 25 13:03:18.691: INFO: Deleting pod "simpletest.rc-9mrqr" in namespace "gc-132"
  Nov 25 13:03:18.700: INFO: Deleting pod "simpletest.rc-9rpg6" in namespace "gc-132"
  Nov 25 13:03:18.713: INFO: Deleting pod "simpletest.rc-9v8gm" in namespace "gc-132"
  Nov 25 13:03:18.724: INFO: Deleting pod "simpletest.rc-9vlgp" in namespace "gc-132"
  Nov 25 13:03:18.740: INFO: Deleting pod "simpletest.rc-9x55t" in namespace "gc-132"
  Nov 25 13:03:18.754: INFO: Deleting pod "simpletest.rc-b84zn" in namespace "gc-132"
  Nov 25 13:03:18.764: INFO: Deleting pod "simpletest.rc-bd62v" in namespace "gc-132"
  Nov 25 13:03:18.775: INFO: Deleting pod "simpletest.rc-bvpqw" in namespace "gc-132"
  Nov 25 13:03:18.788: INFO: Deleting pod "simpletest.rc-cd56j" in namespace "gc-132"
  Nov 25 13:03:18.804: INFO: Deleting pod "simpletest.rc-ckqrz" in namespace "gc-132"
  Nov 25 13:03:18.815: INFO: Deleting pod "simpletest.rc-d99rk" in namespace "gc-132"
  Nov 25 13:03:18.830: INFO: Deleting pod "simpletest.rc-dq2xg" in namespace "gc-132"
  Nov 25 13:03:18.842: INFO: Deleting pod "simpletest.rc-fgnsg" in namespace "gc-132"
  Nov 25 13:03:18.857: INFO: Deleting pod "simpletest.rc-frk4d" in namespace "gc-132"
  Nov 25 13:03:18.869: INFO: Deleting pod "simpletest.rc-gc75m" in namespace "gc-132"
  Nov 25 13:03:18.880: INFO: Deleting pod "simpletest.rc-gknss" in namespace "gc-132"
  Nov 25 13:03:18.892: INFO: Deleting pod "simpletest.rc-gkzdm" in namespace "gc-132"
  Nov 25 13:03:18.904: INFO: Deleting pod "simpletest.rc-gnn2f" in namespace "gc-132"
  Nov 25 13:03:18.918: INFO: Deleting pod "simpletest.rc-gzj56" in namespace "gc-132"
  Nov 25 13:03:18.930: INFO: Deleting pod "simpletest.rc-hb2qs" in namespace "gc-132"
  Nov 25 13:03:18.945: INFO: Deleting pod "simpletest.rc-hc8b5" in namespace "gc-132"
  Nov 25 13:03:18.960: INFO: Deleting pod "simpletest.rc-hch8h" in namespace "gc-132"
  Nov 25 13:03:18.975: INFO: Deleting pod "simpletest.rc-hvjng" in namespace "gc-132"
  Nov 25 13:03:18.986: INFO: Deleting pod "simpletest.rc-jj9pc" in namespace "gc-132"
  Nov 25 13:03:19.003: INFO: Deleting pod "simpletest.rc-jq96d" in namespace "gc-132"
  Nov 25 13:03:19.016: INFO: Deleting pod "simpletest.rc-jsgss" in namespace "gc-132"
  E1125 13:03:19.023622      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:03:19.030: INFO: Deleting pod "simpletest.rc-k5g5g" in namespace "gc-132"
  Nov 25 13:03:19.040: INFO: Deleting pod "simpletest.rc-k7qjc" in namespace "gc-132"
  Nov 25 13:03:19.056: INFO: Deleting pod "simpletest.rc-k7sdw" in namespace "gc-132"
  Nov 25 13:03:19.070: INFO: Deleting pod "simpletest.rc-k82z2" in namespace "gc-132"
  Nov 25 13:03:19.084: INFO: Deleting pod "simpletest.rc-k8bsj" in namespace "gc-132"
  Nov 25 13:03:19.099: INFO: Deleting pod "simpletest.rc-kfw7l" in namespace "gc-132"
  Nov 25 13:03:19.108: INFO: Deleting pod "simpletest.rc-ln4ww" in namespace "gc-132"
  Nov 25 13:03:19.119: INFO: Deleting pod "simpletest.rc-lqw9v" in namespace "gc-132"
  Nov 25 13:03:19.134: INFO: Deleting pod "simpletest.rc-mhn6r" in namespace "gc-132"
  Nov 25 13:03:19.149: INFO: Deleting pod "simpletest.rc-mnnvh" in namespace "gc-132"
  Nov 25 13:03:19.162: INFO: Deleting pod "simpletest.rc-nd2zv" in namespace "gc-132"
  Nov 25 13:03:19.173: INFO: Deleting pod "simpletest.rc-ndd7m" in namespace "gc-132"
  Nov 25 13:03:19.186: INFO: Deleting pod "simpletest.rc-njmvl" in namespace "gc-132"
  Nov 25 13:03:19.198: INFO: Deleting pod "simpletest.rc-p7b4c" in namespace "gc-132"
  Nov 25 13:03:19.213: INFO: Deleting pod "simpletest.rc-p7k89" in namespace "gc-132"
  Nov 25 13:03:19.227: INFO: Deleting pod "simpletest.rc-pbl7x" in namespace "gc-132"
  Nov 25 13:03:19.241: INFO: Deleting pod "simpletest.rc-pd4bb" in namespace "gc-132"
  Nov 25 13:03:19.255: INFO: Deleting pod "simpletest.rc-pn5nd" in namespace "gc-132"
  Nov 25 13:03:19.268: INFO: Deleting pod "simpletest.rc-pwcsj" in namespace "gc-132"
  Nov 25 13:03:19.292: INFO: Deleting pod "simpletest.rc-q2q8k" in namespace "gc-132"
  Nov 25 13:03:19.344: INFO: Deleting pod "simpletest.rc-qjkzw" in namespace "gc-132"
  Nov 25 13:03:19.393: INFO: Deleting pod "simpletest.rc-r6tbv" in namespace "gc-132"
  Nov 25 13:03:19.451: INFO: Deleting pod "simpletest.rc-rz6ss" in namespace "gc-132"
  Nov 25 13:03:19.495: INFO: Deleting pod "simpletest.rc-s7z45" in namespace "gc-132"
  Nov 25 13:03:19.544: INFO: Deleting pod "simpletest.rc-sjm5s" in namespace "gc-132"
  Nov 25 13:03:19.595: INFO: Deleting pod "simpletest.rc-snrhx" in namespace "gc-132"
  Nov 25 13:03:19.661: INFO: Deleting pod "simpletest.rc-sphln" in namespace "gc-132"
  Nov 25 13:03:19.692: INFO: Deleting pod "simpletest.rc-st7mz" in namespace "gc-132"
  Nov 25 13:03:19.746: INFO: Deleting pod "simpletest.rc-stknc" in namespace "gc-132"
  Nov 25 13:03:19.796: INFO: Deleting pod "simpletest.rc-vdk89" in namespace "gc-132"
  Nov 25 13:03:19.848: INFO: Deleting pod "simpletest.rc-vdpgb" in namespace "gc-132"
  Nov 25 13:03:19.908: INFO: Deleting pod "simpletest.rc-vjf4n" in namespace "gc-132"
  Nov 25 13:03:19.955: INFO: Deleting pod "simpletest.rc-vwxxj" in namespace "gc-132"
  Nov 25 13:03:19.995: INFO: Deleting pod "simpletest.rc-vz77n" in namespace "gc-132"
  E1125 13:03:20.024533      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:03:20.045: INFO: Deleting pod "simpletest.rc-w4v6t" in namespace "gc-132"
  Nov 25 13:03:20.095: INFO: Deleting pod "simpletest.rc-w6vwg" in namespace "gc-132"
  Nov 25 13:03:20.144: INFO: Deleting pod "simpletest.rc-whq9t" in namespace "gc-132"
  Nov 25 13:03:20.196: INFO: Deleting pod "simpletest.rc-wj9j5" in namespace "gc-132"
  Nov 25 13:03:20.250: INFO: Deleting pod "simpletest.rc-wjzx9" in namespace "gc-132"
  Nov 25 13:03:20.296: INFO: Deleting pod "simpletest.rc-wmh6s" in namespace "gc-132"
  Nov 25 13:03:20.345: INFO: Deleting pod "simpletest.rc-wrblx" in namespace "gc-132"
  Nov 25 13:03:20.391: INFO: Deleting pod "simpletest.rc-wx96v" in namespace "gc-132"
  Nov 25 13:03:20.443: INFO: Deleting pod "simpletest.rc-x8vch" in namespace "gc-132"
  Nov 25 13:03:20.500: INFO: Deleting pod "simpletest.rc-x8zr7" in namespace "gc-132"
  Nov 25 13:03:20.579: INFO: Deleting pod "simpletest.rc-xg4gb" in namespace "gc-132"
  Nov 25 13:03:20.606: INFO: Deleting pod "simpletest.rc-xgkfv" in namespace "gc-132"
  Nov 25 13:03:20.648: INFO: Deleting pod "simpletest.rc-xzrbb" in namespace "gc-132"
  Nov 25 13:03:20.707: INFO: Deleting pod "simpletest.rc-z2w4w" in namespace "gc-132"
  Nov 25 13:03:20.747: INFO: Deleting pod "simpletest.rc-zc2j8" in namespace "gc-132"
  Nov 25 13:03:20.795: INFO: Deleting pod "simpletest.rc-zjfbb" in namespace "gc-132"
  Nov 25 13:03:20.850: INFO: Deleting pod "simpletest.rc-zlwxb" in namespace "gc-132"
  Nov 25 13:03:20.895: INFO: Deleting pod "simpletest.rc-zsjb9" in namespace "gc-132"
  Nov 25 13:03:20.953: INFO: Deleting pod "simpletest.rc-zwzvp" in namespace "gc-132"
  Nov 25 13:03:21.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1125 13:03:21.030974      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "gc-132" for this suite. @ 11/25/23 13:03:21.037
• [43.756 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 11/25/23 13:03:21.096
  Nov 25 13:03:21.096: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename prestop @ 11/25/23 13:03:21.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:03:21.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:03:21.128
  STEP: Creating server pod server in namespace prestop-317 @ 11/25/23 13:03:21.132
  STEP: Waiting for pods to come up. @ 11/25/23 13:03:21.139
  E1125 13:03:22.031657      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:23.034853      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:24.059282      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:25.061742      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:26.065665      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:27.083498      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-317 @ 11/25/23 13:03:27.164
  E1125 13:03:28.083857      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:29.083912      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 11/25/23 13:03:29.178
  E1125 13:03:30.084680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:31.084770      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:32.084982      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:33.085191      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:34.085436      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:03:34.191: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Nov 25 13:03:34.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 11/25/23 13:03:34.195
  STEP: Destroying namespace "prestop-317" for this suite. @ 11/25/23 13:03:34.214
• [13.125 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 11/25/23 13:03:34.222
  Nov 25 13:03:34.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename resourcequota @ 11/25/23 13:03:34.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:03:34.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:03:34.243
  STEP: Creating a ResourceQuota @ 11/25/23 13:03:34.246
  STEP: Getting a ResourceQuota @ 11/25/23 13:03:34.252
  STEP: Updating a ResourceQuota @ 11/25/23 13:03:34.256
  STEP: Verifying a ResourceQuota was modified @ 11/25/23 13:03:34.261
  STEP: Deleting a ResourceQuota @ 11/25/23 13:03:34.265
  STEP: Verifying the deleted ResourceQuota @ 11/25/23 13:03:34.27
  Nov 25 13:03:34.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-764" for this suite. @ 11/25/23 13:03:34.277
• [0.062 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 11/25/23 13:03:34.284
  Nov 25 13:03:34.284: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename daemonsets @ 11/25/23 13:03:34.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:03:34.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:03:34.312
  STEP: Creating simple DaemonSet "daemon-set" @ 11/25/23 13:03:34.33
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/25/23 13:03:34.335
  Nov 25 13:03:34.338: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:03:34.339: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:03:34.342: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 13:03:34.342: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  E1125 13:03:35.085469      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:03:35.346: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:03:35.346: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:03:35.348: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 13:03:35.349: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  E1125 13:03:36.085640      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:03:36.346: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:03:36.346: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:03:36.350: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 25 13:03:36.350: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 11/25/23 13:03:36.352
  STEP: DeleteCollection of the DaemonSets @ 11/25/23 13:03:36.356
  STEP: Verify that ReplicaSets have been deleted @ 11/25/23 13:03:36.364
  Nov 25 13:03:36.377: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23085"},"items":null}

  Nov 25 13:03:36.386: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23088"},"items":[{"metadata":{"name":"daemon-set-8nlts","generateName":"daemon-set-","namespace":"daemonsets-7478","uid":"0c0248ca-07b8-42d3-8394-fcd663723949","resourceVersion":"23087","creationTimestamp":"2023-11-25T13:03:34Z","deletionTimestamp":"2023-11-25T13:04:06Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a4a41e33-6a21-4b4e-ae08-34d9395ae114","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-11-25T13:03:34Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a4a41e33-6a21-4b4e-ae08-34d9395ae114\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-11-25T13:03:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.72.139\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-6nfhd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-6nfhd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-22-130","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-22-130"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-25T13:03:34Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-25T13:03:36Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-25T13:03:36Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-25T13:03:34Z"}],"hostIP":"172.31.22.130","podIP":"192.168.72.139","podIPs":[{"ip":"192.168.72.139"}],"startTime":"2023-11-25T13:03:34Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-11-25T13:03:35Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://cd6442701679d00a3148300dcf092182b8dcf7c9c1d71d67cdbe3dfe6e1b2b4c","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-fg67s","generateName":"daemon-set-","namespace":"daemonsets-7478","uid":"9320d61f-cefe-4ccb-bed2-320c15217c9a","resourceVersion":"23080","creationTimestamp":"2023-11-25T13:03:34Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a4a41e33-6a21-4b4e-ae08-34d9395ae114","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-11-25T13:03:34Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a4a41e33-6a21-4b4e-ae08-34d9395ae114\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-11-25T13:03:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.196.18\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-l9xf9","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-l9xf9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-85-186","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-85-186"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-25T13:03:34Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-25T13:03:35Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-25T13:03:35Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-25T13:03:34Z"}],"hostIP":"172.31.85.186","podIP":"192.168.196.18","podIPs":[{"ip":"192.168.196.18"}],"startTime":"2023-11-25T13:03:34Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-11-25T13:03:35Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://748c5bf7a5f458f2eff5dbb493973be878869fe3e350b501a129674afb2c0b0f","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-xb484","generateName":"daemon-set-","namespace":"daemonsets-7478","uid":"3f2cd113-1b90-4607-a083-a77172f175c6","resourceVersion":"23086","creationTimestamp":"2023-11-25T13:03:34Z","deletionTimestamp":"2023-11-25T13:04:06Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a4a41e33-6a21-4b4e-ae08-34d9395ae114","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-11-25T13:03:34Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a4a41e33-6a21-4b4e-ae08-34d9395ae114\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-11-25T13:03:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.8.49\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-dsz6p","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-dsz6p","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-4-198","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-4-198"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-25T13:03:34Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-25T13:03:35Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-25T13:03:35Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-25T13:03:34Z"}],"hostIP":"172.31.4.198","podIP":"192.168.8.49","podIPs":[{"ip":"192.168.8.49"}],"startTime":"2023-11-25T13:03:34Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-11-25T13:03:35Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a4ce40347a088bdc1ae03013386e76aeaed5c7428b069151cf67bcaf9c96f582","started":true}],"qosClass":"BestEffort"}}]}

  Nov 25 13:03:36.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7478" for this suite. @ 11/25/23 13:03:36.402
• [2.126 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 11/25/23 13:03:36.41
  Nov 25 13:03:36.410: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename containers @ 11/25/23 13:03:36.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:03:36.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:03:36.431
  STEP: Creating a pod to test override command @ 11/25/23 13:03:36.435
  E1125 13:03:37.085730      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:38.086699      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:39.086796      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:40.087793      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:03:40.458
  Nov 25 13:03:40.461: INFO: Trying to get logs from node ip-172-31-85-186 pod client-containers-665f8e7d-5237-4f52-a0d2-dcf645c493f6 container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 13:03:40.468
  Nov 25 13:03:40.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7779" for this suite. @ 11/25/23 13:03:40.489
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 11/25/23 13:03:40.501
  Nov 25 13:03:40.501: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename sched-pred @ 11/25/23 13:03:40.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:03:40.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:03:40.52
  Nov 25 13:03:40.522: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov 25 13:03:40.529: INFO: Waiting for terminating namespaces to be deleted...
  Nov 25 13:03:40.532: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-22-130 before test
  Nov 25 13:03:40.538: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-s48l6 from ingress-nginx-kubernetes-worker started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 13:03:40.538: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov 25 13:03:40.538: INFO: nginx-ingress-controller-kubernetes-worker-h97gq from ingress-nginx-kubernetes-worker started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 13:03:40.538: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 25 13:03:40.538: INFO: calico-node-kk5hk from kube-system started at 2023-11-25 12:05:43 +0000 UTC (1 container statuses recorded)
  Nov 25 13:03:40.538: INFO: 	Container calico-node ready: true, restart count 0
  Nov 25 13:03:40.538: INFO: coredns-59cfb5bf46-hqlmw from kube-system started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 13:03:40.538: INFO: 	Container coredns ready: true, restart count 0
  Nov 25 13:03:40.538: INFO: kube-state-metrics-78c475f58b-stptt from kube-system started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 13:03:40.538: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov 25 13:03:40.538: INFO: metrics-server-v0.6.3-69d7fbfdf8-frwh6 from kube-system started at 2023-11-25 12:06:05 +0000 UTC (2 container statuses recorded)
  Nov 25 13:03:40.538: INFO: 	Container metrics-server ready: true, restart count 0
  Nov 25 13:03:40.538: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov 25 13:03:40.538: INFO: dashboard-metrics-scraper-5dd7cb5fc-lh87v from kubernetes-dashboard started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 13:03:40.538: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov 25 13:03:40.538: INFO: kubernetes-dashboard-7b899cb9d9-77vb9 from kubernetes-dashboard started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 13:03:40.538: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov 25 13:03:40.538: INFO: sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-7nrjs from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 13:03:40.538: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 13:03:40.538: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 25 13:03:40.538: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-4-198 before test
  Nov 25 13:03:40.543: INFO: nginx-ingress-controller-kubernetes-worker-zt7jm from ingress-nginx-kubernetes-worker started at 2023-11-25 12:06:22 +0000 UTC (1 container statuses recorded)
  Nov 25 13:03:40.543: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 25 13:03:40.543: INFO: calico-node-hl85s from kube-system started at 2023-11-25 12:05:44 +0000 UTC (1 container statuses recorded)
  Nov 25 13:03:40.543: INFO: 	Container calico-node ready: true, restart count 0
  Nov 25 13:03:40.543: INFO: sonobuoy-e2e-job-ecda927ab6f44d27 from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 13:03:40.543: INFO: 	Container e2e ready: true, restart count 0
  Nov 25 13:03:40.543: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 13:03:40.543: INFO: sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-jpcgl from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 13:03:40.543: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 13:03:40.544: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 25 13:03:40.544: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-85-186 before test
  Nov 25 13:03:40.548: INFO: nginx-ingress-controller-kubernetes-worker-mb27l from ingress-nginx-kubernetes-worker started at 2023-11-25 12:55:55 +0000 UTC (1 container statuses recorded)
  Nov 25 13:03:40.548: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 25 13:03:40.548: INFO: calico-node-k8nh6 from kube-system started at 2023-11-25 12:05:46 +0000 UTC (1 container statuses recorded)
  Nov 25 13:03:40.548: INFO: 	Container calico-node ready: true, restart count 0
  Nov 25 13:03:40.548: INFO: tester from prestop-317 started at 2023-11-25 13:03:27 +0000 UTC (1 container statuses recorded)
  Nov 25 13:03:40.548: INFO: 	Container tester ready: true, restart count 0
  Nov 25 13:03:40.549: INFO: sonobuoy from sonobuoy started at 2023-11-25 12:12:47 +0000 UTC (1 container statuses recorded)
  Nov 25 13:03:40.549: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov 25 13:03:40.549: INFO: sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-bwfff from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 13:03:40.549: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 13:03:40.549: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-22-130 @ 11/25/23 13:03:40.564
  STEP: verifying the node has the label node ip-172-31-4-198 @ 11/25/23 13:03:40.575
  STEP: verifying the node has the label node ip-172-31-85-186 @ 11/25/23 13:03:40.594
  Nov 25 13:03:40.612: INFO: Pod default-http-backend-kubernetes-worker-5c79cc75ff-s48l6 requesting resource cpu=10m on Node ip-172-31-22-130
  Nov 25 13:03:40.613: INFO: Pod nginx-ingress-controller-kubernetes-worker-h97gq requesting resource cpu=0m on Node ip-172-31-22-130
  Nov 25 13:03:40.613: INFO: Pod nginx-ingress-controller-kubernetes-worker-mb27l requesting resource cpu=0m on Node ip-172-31-85-186
  Nov 25 13:03:40.614: INFO: Pod nginx-ingress-controller-kubernetes-worker-zt7jm requesting resource cpu=0m on Node ip-172-31-4-198
  Nov 25 13:03:40.614: INFO: Pod calico-node-hl85s requesting resource cpu=250m on Node ip-172-31-4-198
  Nov 25 13:03:40.615: INFO: Pod calico-node-k8nh6 requesting resource cpu=250m on Node ip-172-31-85-186
  Nov 25 13:03:40.615: INFO: Pod calico-node-kk5hk requesting resource cpu=250m on Node ip-172-31-22-130
  Nov 25 13:03:40.615: INFO: Pod coredns-59cfb5bf46-hqlmw requesting resource cpu=100m on Node ip-172-31-22-130
  Nov 25 13:03:40.616: INFO: Pod kube-state-metrics-78c475f58b-stptt requesting resource cpu=0m on Node ip-172-31-22-130
  Nov 25 13:03:40.616: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-frwh6 requesting resource cpu=5m on Node ip-172-31-22-130
  Nov 25 13:03:40.616: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-lh87v requesting resource cpu=0m on Node ip-172-31-22-130
  Nov 25 13:03:40.617: INFO: Pod kubernetes-dashboard-7b899cb9d9-77vb9 requesting resource cpu=0m on Node ip-172-31-22-130
  Nov 25 13:03:40.617: INFO: Pod tester requesting resource cpu=0m on Node ip-172-31-85-186
  Nov 25 13:03:40.618: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-85-186
  Nov 25 13:03:40.618: INFO: Pod sonobuoy-e2e-job-ecda927ab6f44d27 requesting resource cpu=0m on Node ip-172-31-4-198
  Nov 25 13:03:40.618: INFO: Pod sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-7nrjs requesting resource cpu=0m on Node ip-172-31-22-130
  Nov 25 13:03:40.619: INFO: Pod sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-bwfff requesting resource cpu=0m on Node ip-172-31-85-186
  Nov 25 13:03:40.619: INFO: Pod sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-jpcgl requesting resource cpu=0m on Node ip-172-31-4-198
  STEP: Starting Pods to consume most of the cluster CPU. @ 11/25/23 13:03:40.619
  Nov 25 13:03:40.620: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-4-198
  Nov 25 13:03:40.628: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-85-186
  Nov 25 13:03:40.637: INFO: Creating a pod which consumes cpu=1144m on Node ip-172-31-22-130
  E1125 13:03:41.088107      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:42.088213      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 11/25/23 13:03:42.658
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-52db03b0-e608-43df-b8aa-cea53a6203e9.179adf61d9247318], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6343/filler-pod-52db03b0-e608-43df-b8aa-cea53a6203e9 to ip-172-31-4-198] @ 11/25/23 13:03:42.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-52db03b0-e608-43df-b8aa-cea53a6203e9.179adf61fdc0767d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 11/25/23 13:03:42.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-52db03b0-e608-43df-b8aa-cea53a6203e9.179adf61ff3ad3f9], Reason = [Created], Message = [Created container filler-pod-52db03b0-e608-43df-b8aa-cea53a6203e9] @ 11/25/23 13:03:42.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-52db03b0-e608-43df-b8aa-cea53a6203e9.179adf62050460cc], Reason = [Started], Message = [Started container filler-pod-52db03b0-e608-43df-b8aa-cea53a6203e9] @ 11/25/23 13:03:42.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7fbfab19-5007-4027-abdb-68ee832e1018.179adf61da1eebf7], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6343/filler-pod-7fbfab19-5007-4027-abdb-68ee832e1018 to ip-172-31-22-130] @ 11/25/23 13:03:42.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7fbfab19-5007-4027-abdb-68ee832e1018.179adf620996513b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 11/25/23 13:03:42.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7fbfab19-5007-4027-abdb-68ee832e1018.179adf620b218fa5], Reason = [Created], Message = [Created container filler-pod-7fbfab19-5007-4027-abdb-68ee832e1018] @ 11/25/23 13:03:42.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7fbfab19-5007-4027-abdb-68ee832e1018.179adf62114f1875], Reason = [Started], Message = [Started container filler-pod-7fbfab19-5007-4027-abdb-68ee832e1018] @ 11/25/23 13:03:42.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a45dfed9-afb0-4b22-88a4-06cdc86d9e80.179adf61d992417e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6343/filler-pod-a45dfed9-afb0-4b22-88a4-06cdc86d9e80 to ip-172-31-85-186] @ 11/25/23 13:03:42.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a45dfed9-afb0-4b22-88a4-06cdc86d9e80.179adf62001d2f74], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 11/25/23 13:03:42.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a45dfed9-afb0-4b22-88a4-06cdc86d9e80.179adf6201ebdc2f], Reason = [Created], Message = [Created container filler-pod-a45dfed9-afb0-4b22-88a4-06cdc86d9e80] @ 11/25/23 13:03:42.662
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a45dfed9-afb0-4b22-88a4-06cdc86d9e80.179adf62078a12d7], Reason = [Started], Message = [Started container filler-pod-a45dfed9-afb0-4b22-88a4-06cdc86d9e80] @ 11/25/23 13:03:42.662
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.179adf6252622f62], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod..] @ 11/25/23 13:03:42.675
  E1125 13:03:43.088628      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-22-130 @ 11/25/23 13:03:43.673
  STEP: verifying the node doesn't have the label node @ 11/25/23 13:03:43.685
  STEP: removing the label node off the node ip-172-31-4-198 @ 11/25/23 13:03:43.688
  STEP: verifying the node doesn't have the label node @ 11/25/23 13:03:43.708
  STEP: removing the label node off the node ip-172-31-85-186 @ 11/25/23 13:03:43.711
  STEP: verifying the node doesn't have the label node @ 11/25/23 13:03:43.724
  Nov 25 13:03:43.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6343" for this suite. @ 11/25/23 13:03:43.731
• [3.236 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 11/25/23 13:03:43.737
  Nov 25 13:03:43.737: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename namespaces @ 11/25/23 13:03:43.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:03:43.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:03:43.757
  STEP: Read namespace status @ 11/25/23 13:03:43.76
  Nov 25 13:03:43.763: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 11/25/23 13:03:43.763
  Nov 25 13:03:43.770: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 11/25/23 13:03:43.77
  Nov 25 13:03:43.776: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Nov 25 13:03:43.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6731" for this suite. @ 11/25/23 13:03:43.78
• [0.049 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 11/25/23 13:03:43.788
  Nov 25 13:03:43.788: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 13:03:43.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:03:43.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:03:43.804
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 13:03:43.807
  E1125 13:03:44.089631      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:45.089722      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:46.090094      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:47.090172      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:03:47.826
  Nov 25 13:03:47.830: INFO: Trying to get logs from node ip-172-31-4-198 pod downwardapi-volume-aa97edae-d447-4ac3-a1e1-90f567a235f9 container client-container: <nil>
  STEP: delete the pod @ 11/25/23 13:03:47.849
  Nov 25 13:03:47.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1697" for this suite. @ 11/25/23 13:03:47.869
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 11/25/23 13:03:47.877
  Nov 25 13:03:47.877: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-probe @ 11/25/23 13:03:47.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:03:47.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:03:47.899
  E1125 13:03:48.091150      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:49.095730      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:50.095811      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:51.096355      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:52.097029      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:53.097884      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:54.098454      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:55.099456      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:56.100386      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:57.100849      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:58.101316      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:03:59.102022      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:00.102413      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:01.103336      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:02.103988      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:03.104608      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:04.104919      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:05.105602      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:06.106252      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:07.106267      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:08.106674      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:09.107075      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:10.107309      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:11.107678      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:12.108419      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:13.108662      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:14.108757      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:15.109571      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:16.110494      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:17.110694      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:18.111125      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:19.111768      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:20.112232      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:21.113143      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:22.113759      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:23.114012      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:24.114247      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:25.114948      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:26.115227      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:27.115961      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:28.115996      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:29.117065      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:30.117680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:31.117942      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:32.118926      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:33.119404      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:34.119436      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:35.119515      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:36.119809      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:37.119962      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:38.120274      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:39.121035      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:40.121579      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:41.122437      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:42.122662      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:43.122806      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:44.122892      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:45.122977      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:46.123071      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:47.123158      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:04:47.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2655" for this suite. @ 11/25/23 13:04:47.924
• [60.053 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 11/25/23 13:04:47.93
  Nov 25 13:04:47.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 13:04:47.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:04:47.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:04:47.95
  STEP: creating a replication controller @ 11/25/23 13:04:47.953
  Nov 25 13:04:47.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 create -f -'
  E1125 13:04:48.123270      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:04:48.325: INFO: stderr: ""
  Nov 25 13:04:48.325: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/25/23 13:04:48.325
  Nov 25 13:04:48.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 25 13:04:48.399: INFO: stderr: ""
  Nov 25 13:04:48.399: INFO: stdout: "update-demo-nautilus-7hppg update-demo-nautilus-vfvtf "
  Nov 25 13:04:48.399: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods update-demo-nautilus-7hppg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 25 13:04:48.457: INFO: stderr: ""
  Nov 25 13:04:48.457: INFO: stdout: ""
  Nov 25 13:04:48.457: INFO: update-demo-nautilus-7hppg is created but not running
  E1125 13:04:49.123439      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:50.124105      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:51.124178      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:52.124410      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:53.124496      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:04:53.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 25 13:04:53.530: INFO: stderr: ""
  Nov 25 13:04:53.530: INFO: stdout: "update-demo-nautilus-7hppg update-demo-nautilus-vfvtf "
  Nov 25 13:04:53.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods update-demo-nautilus-7hppg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 25 13:04:53.630: INFO: stderr: ""
  Nov 25 13:04:53.630: INFO: stdout: "true"
  Nov 25 13:04:53.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods update-demo-nautilus-7hppg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 25 13:04:53.692: INFO: stderr: ""
  Nov 25 13:04:53.692: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 25 13:04:53.692: INFO: validating pod update-demo-nautilus-7hppg
  Nov 25 13:04:53.697: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 25 13:04:53.697: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 25 13:04:53.697: INFO: update-demo-nautilus-7hppg is verified up and running
  Nov 25 13:04:53.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods update-demo-nautilus-vfvtf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 25 13:04:53.759: INFO: stderr: ""
  Nov 25 13:04:53.759: INFO: stdout: "true"
  Nov 25 13:04:53.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods update-demo-nautilus-vfvtf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 25 13:04:53.819: INFO: stderr: ""
  Nov 25 13:04:53.819: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 25 13:04:53.819: INFO: validating pod update-demo-nautilus-vfvtf
  Nov 25 13:04:53.824: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 25 13:04:53.824: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 25 13:04:53.824: INFO: update-demo-nautilus-vfvtf is verified up and running
  STEP: scaling down the replication controller @ 11/25/23 13:04:53.824
  Nov 25 13:04:53.825: INFO: scanned /root for discovery docs: <nil>
  Nov 25 13:04:53.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1125 13:04:54.125206      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:04:54.908: INFO: stderr: ""
  Nov 25 13:04:54.908: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/25/23 13:04:54.908
  Nov 25 13:04:54.909: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 25 13:04:54.970: INFO: stderr: ""
  Nov 25 13:04:54.971: INFO: stdout: "update-demo-nautilus-7hppg update-demo-nautilus-vfvtf "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 11/25/23 13:04:54.971
  E1125 13:04:55.126241      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:56.126329      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:57.126446      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:58.127068      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:04:59.127145      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:04:59.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 25 13:05:00.035: INFO: stderr: ""
  Nov 25 13:05:00.035: INFO: stdout: "update-demo-nautilus-vfvtf "
  Nov 25 13:05:00.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods update-demo-nautilus-vfvtf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 25 13:05:00.095: INFO: stderr: ""
  Nov 25 13:05:00.095: INFO: stdout: "true"
  Nov 25 13:05:00.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods update-demo-nautilus-vfvtf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E1125 13:05:00.127553      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:05:00.155: INFO: stderr: ""
  Nov 25 13:05:00.155: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 25 13:05:00.155: INFO: validating pod update-demo-nautilus-vfvtf
  Nov 25 13:05:00.159: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 25 13:05:00.159: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 25 13:05:00.159: INFO: update-demo-nautilus-vfvtf is verified up and running
  STEP: scaling up the replication controller @ 11/25/23 13:05:00.159
  Nov 25 13:05:00.160: INFO: scanned /root for discovery docs: <nil>
  Nov 25 13:05:00.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1125 13:05:01.128159      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:05:01.241: INFO: stderr: ""
  Nov 25 13:05:01.241: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/25/23 13:05:01.241
  Nov 25 13:05:01.241: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 25 13:05:01.321: INFO: stderr: ""
  Nov 25 13:05:01.321: INFO: stdout: "update-demo-nautilus-jvwd9 update-demo-nautilus-vfvtf "
  Nov 25 13:05:01.321: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods update-demo-nautilus-jvwd9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 25 13:05:01.380: INFO: stderr: ""
  Nov 25 13:05:01.380: INFO: stdout: ""
  Nov 25 13:05:01.380: INFO: update-demo-nautilus-jvwd9 is created but not running
  E1125 13:05:02.128237      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:03.128318      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:04.128428      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:05.129308      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:06.129611      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:05:06.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 25 13:05:06.445: INFO: stderr: ""
  Nov 25 13:05:06.445: INFO: stdout: "update-demo-nautilus-jvwd9 update-demo-nautilus-vfvtf "
  Nov 25 13:05:06.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods update-demo-nautilus-jvwd9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 25 13:05:06.506: INFO: stderr: ""
  Nov 25 13:05:06.506: INFO: stdout: "true"
  Nov 25 13:05:06.507: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods update-demo-nautilus-jvwd9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 25 13:05:06.569: INFO: stderr: ""
  Nov 25 13:05:06.569: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 25 13:05:06.569: INFO: validating pod update-demo-nautilus-jvwd9
  Nov 25 13:05:06.574: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 25 13:05:06.574: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 25 13:05:06.574: INFO: update-demo-nautilus-jvwd9 is verified up and running
  Nov 25 13:05:06.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods update-demo-nautilus-vfvtf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 25 13:05:06.635: INFO: stderr: ""
  Nov 25 13:05:06.635: INFO: stdout: "true"
  Nov 25 13:05:06.635: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods update-demo-nautilus-vfvtf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 25 13:05:06.694: INFO: stderr: ""
  Nov 25 13:05:06.694: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 25 13:05:06.694: INFO: validating pod update-demo-nautilus-vfvtf
  Nov 25 13:05:06.699: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 25 13:05:06.699: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 25 13:05:06.699: INFO: update-demo-nautilus-vfvtf is verified up and running
  STEP: using delete to clean up resources @ 11/25/23 13:05:06.699
  Nov 25 13:05:06.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 delete --grace-period=0 --force -f -'
  Nov 25 13:05:06.772: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 25 13:05:06.772: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Nov 25 13:05:06.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get rc,svc -l name=update-demo --no-headers'
  Nov 25 13:05:06.872: INFO: stderr: "No resources found in kubectl-58 namespace.\n"
  Nov 25 13:05:06.872: INFO: stdout: ""
  Nov 25 13:05:06.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-58 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Nov 25 13:05:06.981: INFO: stderr: ""
  Nov 25 13:05:06.981: INFO: stdout: ""
  Nov 25 13:05:06.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-58" for this suite. @ 11/25/23 13:05:06.985
• [19.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 11/25/23 13:05:06.997
  Nov 25 13:05:06.997: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename secrets @ 11/25/23 13:05:06.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:05:07.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:05:07.026
  STEP: Creating secret with name secret-test-7ef4a966-436c-4249-8b04-55ac034fdf22 @ 11/25/23 13:05:07.038
  STEP: Creating a pod to test consume secrets @ 11/25/23 13:05:07.064
  E1125 13:05:07.129890      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:08.129999      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:09.130401      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:10.130710      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:05:11.105
  Nov 25 13:05:11.108: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-secrets-4043a395-6c97-49d4-aef5-7e09a903b068 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 13:05:11.124
  E1125 13:05:11.131069      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:05:11.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3386" for this suite. @ 11/25/23 13:05:11.146
• [4.155 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 11/25/23 13:05:11.152
  Nov 25 13:05:11.153: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename var-expansion @ 11/25/23 13:05:11.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:05:11.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:05:11.174
  E1125 13:05:12.131206      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:13.131416      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:05:13.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 25 13:05:13.198: INFO: Deleting pod "var-expansion-792526b7-60b7-4145-a05e-e90741ee6236" in namespace "var-expansion-6860"
  Nov 25 13:05:13.206: INFO: Wait up to 5m0s for pod "var-expansion-792526b7-60b7-4145-a05e-e90741ee6236" to be fully deleted
  E1125 13:05:14.131902      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:15.132301      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-6860" for this suite. @ 11/25/23 13:05:15.213
• [4.069 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:961
  STEP: Creating a kubernetes client @ 11/25/23 13:05:15.221
  Nov 25 13:05:15.221: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename statefulset @ 11/25/23 13:05:15.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:05:15.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:05:15.245
  STEP: Creating service test in namespace statefulset-550 @ 11/25/23 13:05:15.249
  Nov 25 13:05:15.277: INFO: Found 0 stateful pods, waiting for 1
  E1125 13:05:16.133326      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:17.133561      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:18.133643      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:19.134727      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:20.134754      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:21.134832      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:22.135032      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:23.136082      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:24.136193      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:25.136315      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:05:25.280: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 11/25/23 13:05:25.286
  W1125 13:05:25.296138      17 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Nov 25 13:05:25.302: INFO: Found 1 stateful pods, waiting for 2
  E1125 13:05:26.136743      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:27.136830      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:28.137060      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:29.137149      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:30.137255      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:31.137414      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:32.137627      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:33.138719      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:34.139111      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:35.139025      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:05:35.306: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 25 13:05:35.306: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 11/25/23 13:05:35.313
  STEP: Delete all of the StatefulSets @ 11/25/23 13:05:35.316
  STEP: Verify that StatefulSets have been deleted @ 11/25/23 13:05:35.325
  Nov 25 13:05:35.328: INFO: Deleting all statefulset in ns statefulset-550
  Nov 25 13:05:35.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-550" for this suite. @ 11/25/23 13:05:35.353
• [20.139 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 11/25/23 13:05:35.36
  Nov 25 13:05:35.360: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename watch @ 11/25/23 13:05:35.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:05:35.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:05:35.384
  STEP: creating a watch on configmaps @ 11/25/23 13:05:35.389
  STEP: creating a new configmap @ 11/25/23 13:05:35.39
  STEP: modifying the configmap once @ 11/25/23 13:05:35.394
  STEP: closing the watch once it receives two notifications @ 11/25/23 13:05:35.402
  Nov 25 13:05:35.403: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8657  a9405423-80df-4d8e-b077-8159ec5b0c15 23904 0 2023-11-25 13:05:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-25 13:05:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 13:05:35.403: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8657  a9405423-80df-4d8e-b077-8159ec5b0c15 23905 0 2023-11-25 13:05:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-25 13:05:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 11/25/23 13:05:35.403
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 11/25/23 13:05:35.411
  STEP: deleting the configmap @ 11/25/23 13:05:35.413
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 11/25/23 13:05:35.418
  Nov 25 13:05:35.418: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8657  a9405423-80df-4d8e-b077-8159ec5b0c15 23906 0 2023-11-25 13:05:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-25 13:05:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 13:05:35.418: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8657  a9405423-80df-4d8e-b077-8159ec5b0c15 23907 0 2023-11-25 13:05:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-25 13:05:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 13:05:35.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8657" for this suite. @ 11/25/23 13:05:35.422
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 11/25/23 13:05:35.431
  Nov 25 13:05:35.431: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename dns @ 11/25/23 13:05:35.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:05:35.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:05:35.449
  STEP: Creating a test headless service @ 11/25/23 13:05:35.453
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-801 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-801;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-801 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-801;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-801.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-801.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-801.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-801.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-801.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-801.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-801.svc;check="$$(dig +notcp +noall +answer +search 133.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.133_udp@PTR;check="$$(dig +tcp +noall +answer +search 133.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.133_tcp@PTR;sleep 1; done
   @ 11/25/23 13:05:35.477
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-801 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-801;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-801 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-801;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-801.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-801.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-801.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-801.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-801.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-801.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-801.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-801.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-801.svc;check="$$(dig +notcp +noall +answer +search 133.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.133_udp@PTR;check="$$(dig +tcp +noall +answer +search 133.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.133_tcp@PTR;sleep 1; done
   @ 11/25/23 13:05:35.477
  STEP: creating a pod to probe DNS @ 11/25/23 13:05:35.477
  STEP: submitting the pod to kubernetes @ 11/25/23 13:05:35.477
  E1125 13:05:36.139582      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:37.139685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/25/23 13:05:37.502
  STEP: looking for the results for each expected name from probers @ 11/25/23 13:05:37.516
  Nov 25 13:05:37.524: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.531: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.535: INFO: Unable to read wheezy_udp@dns-test-service.dns-801 from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.541: INFO: Unable to read wheezy_tcp@dns-test-service.dns-801 from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.545: INFO: Unable to read wheezy_udp@dns-test-service.dns-801.svc from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.549: INFO: Unable to read wheezy_tcp@dns-test-service.dns-801.svc from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.553: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.557: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.585: INFO: Unable to read jessie_udp@dns-test-service from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.589: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.593: INFO: Unable to read jessie_udp@dns-test-service.dns-801 from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.598: INFO: Unable to read jessie_tcp@dns-test-service.dns-801 from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.603: INFO: Unable to read jessie_udp@dns-test-service.dns-801.svc from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.607: INFO: Unable to read jessie_tcp@dns-test-service.dns-801.svc from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.610: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.613: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-801.svc from pod dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f: the server could not find the requested resource (get pods dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f)
  Nov 25 13:05:37.626: INFO: Lookups using dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-801 wheezy_tcp@dns-test-service.dns-801 wheezy_udp@dns-test-service.dns-801.svc wheezy_tcp@dns-test-service.dns-801.svc wheezy_udp@_http._tcp.dns-test-service.dns-801.svc wheezy_tcp@_http._tcp.dns-test-service.dns-801.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-801 jessie_tcp@dns-test-service.dns-801 jessie_udp@dns-test-service.dns-801.svc jessie_tcp@dns-test-service.dns-801.svc jessie_udp@_http._tcp.dns-test-service.dns-801.svc jessie_tcp@_http._tcp.dns-test-service.dns-801.svc]

  Nov 25 13:05:37.631: INFO: Pod client logs for webserver: 
  Nov 25 13:05:37.637: INFO: Pod client logs for querier: 
  Nov 25 13:05:37.643: INFO: Pod client logs for jessie-querier: 
  E1125 13:05:38.139968      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:39.140866      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:40.141214      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:41.141309      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:42.141627      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:05:42.720: INFO: DNS probes using dns-801/dns-test-da1f1e81-fd81-4632-b6fe-80e4fec5e67f succeeded

  Nov 25 13:05:42.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 13:05:42.724
  STEP: deleting the test service @ 11/25/23 13:05:42.738
  STEP: deleting the test headless service @ 11/25/23 13:05:42.761
  STEP: Destroying namespace "dns-801" for this suite. @ 11/25/23 13:05:42.774
• [7.352 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 11/25/23 13:05:42.785
  Nov 25 13:05:42.785: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 13:05:42.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:05:42.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:05:42.805
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/25/23 13:05:42.808
  Nov 25 13:05:42.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-6461 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Nov 25 13:05:42.879: INFO: stderr: ""
  Nov 25 13:05:42.879: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/25/23 13:05:42.879
  Nov 25 13:05:42.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-6461 delete pods e2e-test-httpd-pod'
  E1125 13:05:43.142381      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:05:44.018: INFO: stderr: ""
  Nov 25 13:05:44.018: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Nov 25 13:05:44.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6461" for this suite. @ 11/25/23 13:05:44.022
• [1.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 11/25/23 13:05:44.031
  Nov 25 13:05:44.031: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename svcaccounts @ 11/25/23 13:05:44.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:05:44.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:05:44.048
  STEP: creating a ServiceAccount @ 11/25/23 13:05:44.051
  STEP: watching for the ServiceAccount to be added @ 11/25/23 13:05:44.058
  STEP: patching the ServiceAccount @ 11/25/23 13:05:44.06
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 11/25/23 13:05:44.12
  STEP: deleting the ServiceAccount @ 11/25/23 13:05:44.124
  Nov 25 13:05:44.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1125 13:05:44.143202      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "svcaccounts-3374" for this suite. @ 11/25/23 13:05:44.144
• [0.120 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 11/25/23 13:05:44.152
  Nov 25 13:05:44.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename secrets @ 11/25/23 13:05:44.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:05:44.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:05:44.172
  STEP: Creating secret with name s-test-opt-del-cfa022be-2043-4ba2-99f8-42dd55cf66e4 @ 11/25/23 13:05:44.178
  STEP: Creating secret with name s-test-opt-upd-0856c3a1-d4fa-4b03-9b29-73cf77499913 @ 11/25/23 13:05:44.182
  STEP: Creating the pod @ 11/25/23 13:05:44.186
  E1125 13:05:45.143910      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:46.143985      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-cfa022be-2043-4ba2-99f8-42dd55cf66e4 @ 11/25/23 13:05:46.241
  STEP: Updating secret s-test-opt-upd-0856c3a1-d4fa-4b03-9b29-73cf77499913 @ 11/25/23 13:05:46.246
  STEP: Creating secret with name s-test-opt-create-8824842b-bb07-4f54-ba87-cc38baf9032d @ 11/25/23 13:05:46.254
  STEP: waiting to observe update in volume @ 11/25/23 13:05:46.258
  E1125 13:05:47.144095      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:48.144260      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:49.144878      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:50.145217      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:05:50.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-320" for this suite. @ 11/25/23 13:05:50.294
• [6.149 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 11/25/23 13:05:50.301
  Nov 25 13:05:50.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename job @ 11/25/23 13:05:50.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:05:50.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:05:50.321
  STEP: Creating Indexed job @ 11/25/23 13:05:50.324
  STEP: Ensuring job reaches completions @ 11/25/23 13:05:50.331
  E1125 13:05:51.145643      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:52.146703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:53.146794      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:54.147012      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:55.147407      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:56.147531      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:57.147606      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:05:58.147700      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 11/25/23 13:05:58.335
  Nov 25 13:05:58.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-212" for this suite. @ 11/25/23 13:05:58.342
• [8.046 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 11/25/23 13:05:58.347
  Nov 25 13:05:58.347: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 13:05:58.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:05:58.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:05:58.368
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7900 @ 11/25/23 13:05:58.37
  STEP: changing the ExternalName service to type=ClusterIP @ 11/25/23 13:05:58.374
  STEP: creating replication controller externalname-service in namespace services-7900 @ 11/25/23 13:05:58.391
  I1125 13:05:58.401387      17 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7900, replica count: 2
  E1125 13:05:59.148186      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:00.148264      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:01.148367      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1125 13:06:01.452944      17 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 25 13:06:01.452: INFO: Creating new exec pod
  E1125 13:06:02.148702      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:03.148801      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:04.148876      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:04.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-7900 exec execpodkd7cl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov 25 13:06:04.617: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov 25 13:06:04.617: INFO: stdout: ""
  E1125 13:06:05.148955      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:05.617: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-7900 exec execpodkd7cl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov 25 13:06:05.765: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov 25 13:06:05.765: INFO: stdout: ""
  E1125 13:06:06.149592      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:06.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-7900 exec execpodkd7cl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov 25 13:06:06.752: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov 25 13:06:06.752: INFO: stdout: ""
  E1125 13:06:07.149633      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:07.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-7900 exec execpodkd7cl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov 25 13:06:07.765: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov 25 13:06:07.765: INFO: stdout: ""
  E1125 13:06:08.150493      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:08.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-7900 exec execpodkd7cl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov 25 13:06:08.796: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov 25 13:06:08.796: INFO: stdout: ""
  E1125 13:06:09.151126      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:09.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-7900 exec execpodkd7cl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov 25 13:06:09.805: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov 25 13:06:09.805: INFO: stdout: ""
  E1125 13:06:10.151950      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:10.617: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-7900 exec execpodkd7cl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov 25 13:06:10.809: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov 25 13:06:10.810: INFO: stdout: ""
  E1125 13:06:11.152251      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:11.617: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-7900 exec execpodkd7cl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov 25 13:06:11.774: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov 25 13:06:11.775: INFO: stdout: "externalname-service-z44j9"
  Nov 25 13:06:11.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-7900 exec execpodkd7cl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.174 80'
  Nov 25 13:06:11.904: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.174 80\nConnection to 10.152.183.174 80 port [tcp/http] succeeded!\n"
  Nov 25 13:06:11.904: INFO: stdout: "externalname-service-9sn5p"
  Nov 25 13:06:11.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 25 13:06:11.908: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-7900" for this suite. @ 11/25/23 13:06:11.941
• [13.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 11/25/23 13:06:11.948
  Nov 25 13:06:11.948: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:06:11.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:06:11.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:06:11.966
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 13:06:11.969
  E1125 13:06:12.153231      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:13.153386      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:14.153770      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:15.154705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:06:15.988
  Nov 25 13:06:15.991: INFO: Trying to get logs from node ip-172-31-4-198 pod downwardapi-volume-fb2801d9-08cb-4eb0-8c12-939438bf4885 container client-container: <nil>
  STEP: delete the pod @ 11/25/23 13:06:16.005
  Nov 25 13:06:16.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5695" for this suite. @ 11/25/23 13:06:16.038
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 11/25/23 13:06:16.048
  Nov 25 13:06:16.048: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename daemonsets @ 11/25/23 13:06:16.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:06:16.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:06:16.063
  STEP: Creating simple DaemonSet "daemon-set" @ 11/25/23 13:06:16.105
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/25/23 13:06:16.116
  Nov 25 13:06:16.125: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:16.125: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:16.131: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 13:06:16.131: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  E1125 13:06:16.155025      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:17.135: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:17.135: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:17.139: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 25 13:06:17.139: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  E1125 13:06:17.155401      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:18.136: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:18.136: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:18.139: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 25 13:06:18.139: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 11/25/23 13:06:18.142
  E1125 13:06:18.155939      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:18.157: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:18.157: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:18.160: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 25 13:06:18.160: INFO: Node ip-172-31-4-198 is running 0 daemon pod, expected 1
  E1125 13:06:19.156888      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:19.165: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:19.165: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:19.171: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 25 13:06:19.171: INFO: Node ip-172-31-4-198 is running 0 daemon pod, expected 1
  E1125 13:06:20.157541      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:20.164: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:20.164: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:20.167: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 25 13:06:20.168: INFO: Node ip-172-31-4-198 is running 0 daemon pod, expected 1
  E1125 13:06:21.157980      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:21.165: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:21.165: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:21.169: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 25 13:06:21.169: INFO: Node ip-172-31-4-198 is running 0 daemon pod, expected 1
  E1125 13:06:22.158041      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:22.165: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:22.165: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:06:22.168: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 25 13:06:22.168: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/25/23 13:06:22.171
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7914, will wait for the garbage collector to delete the pods @ 11/25/23 13:06:22.171
  Nov 25 13:06:22.230: INFO: Deleting DaemonSet.extensions daemon-set took: 5.637257ms
  Nov 25 13:06:22.331: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.032072ms
  E1125 13:06:23.158347      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:23.935: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 13:06:23.935: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 25 13:06:23.938: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24584"},"items":null}

  Nov 25 13:06:23.941: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24584"},"items":null}

  Nov 25 13:06:23.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7914" for this suite. @ 11/25/23 13:06:23.955
• [7.913 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 11/25/23 13:06:23.962
  Nov 25 13:06:23.962: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename secrets @ 11/25/23 13:06:23.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:06:23.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:06:23.98
  STEP: creating secret secrets-2527/secret-test-8ab8349d-cf91-4f20-b222-1e0117aa1d22 @ 11/25/23 13:06:23.983
  STEP: Creating a pod to test consume secrets @ 11/25/23 13:06:23.987
  E1125 13:06:24.158695      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:25.158795      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:26.159466      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:27.159568      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:06:28.009
  Nov 25 13:06:28.013: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-configmaps-89a4e744-aafb-434a-8372-13e9eeadbb10 container env-test: <nil>
  STEP: delete the pod @ 11/25/23 13:06:28.019
  Nov 25 13:06:28.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2527" for this suite. @ 11/25/23 13:06:28.038
• [4.082 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 11/25/23 13:06:28.044
  Nov 25 13:06:28.044: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 13:06:28.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:06:28.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:06:28.062
  STEP: Creating the pod @ 11/25/23 13:06:28.066
  E1125 13:06:28.160079      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:29.160206      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:30.161050      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:30.602: INFO: Successfully updated pod "annotationupdate3be6198a-ede6-4e98-af8d-9f3c50992caf"
  E1125 13:06:31.161106      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:32.161207      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:32.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9286" for this suite. @ 11/25/23 13:06:32.621
• [4.584 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 11/25/23 13:06:32.629
  Nov 25 13:06:32.629: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename var-expansion @ 11/25/23 13:06:32.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:06:32.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:06:32.646
  STEP: Creating a pod to test env composition @ 11/25/23 13:06:32.65
  E1125 13:06:33.161691      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:34.161787      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:35.162483      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:36.163342      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:06:36.668
  Nov 25 13:06:36.671: INFO: Trying to get logs from node ip-172-31-4-198 pod var-expansion-43a955ce-90d4-458d-8780-e4ad2b63ef3f container dapi-container: <nil>
  STEP: delete the pod @ 11/25/23 13:06:36.677
  Nov 25 13:06:36.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7360" for this suite. @ 11/25/23 13:06:36.696
• [4.073 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 11/25/23 13:06:36.702
  Nov 25 13:06:36.702: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename secrets @ 11/25/23 13:06:36.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:06:36.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:06:36.721
  STEP: creating a secret @ 11/25/23 13:06:36.723
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 11/25/23 13:06:36.728
  STEP: patching the secret @ 11/25/23 13:06:36.731
  STEP: deleting the secret using a LabelSelector @ 11/25/23 13:06:36.739
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 11/25/23 13:06:36.746
  Nov 25 13:06:36.749: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9665" for this suite. @ 11/25/23 13:06:36.752
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 11/25/23 13:06:36.759
  Nov 25 13:06:36.759: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename svc-latency @ 11/25/23 13:06:36.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:06:36.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:06:36.78
  Nov 25 13:06:36.785: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-8717 @ 11/25/23 13:06:36.786
  I1125 13:06:36.794626      17 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8717, replica count: 1
  E1125 13:06:37.163945      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1125 13:06:37.845785      17 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1125 13:06:38.163996      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1125 13:06:38.846629      17 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 25 13:06:38.955: INFO: Created: latency-svc-n2mb9
  Nov 25 13:06:38.969: INFO: Got endpoints: latency-svc-n2mb9 [22.830501ms]
  Nov 25 13:06:38.986: INFO: Created: latency-svc-xklj5
  Nov 25 13:06:38.987: INFO: Created: latency-svc-tdxv7
  Nov 25 13:06:38.991: INFO: Got endpoints: latency-svc-xklj5 [21.389495ms]
  Nov 25 13:06:38.999: INFO: Got endpoints: latency-svc-tdxv7 [29.037556ms]
  Nov 25 13:06:39.002: INFO: Created: latency-svc-b2tkv
  Nov 25 13:06:39.009: INFO: Got endpoints: latency-svc-b2tkv [38.885468ms]
  Nov 25 13:06:39.012: INFO: Created: latency-svc-vvtlk
  Nov 25 13:06:39.022: INFO: Got endpoints: latency-svc-vvtlk [52.084283ms]
  Nov 25 13:06:39.022: INFO: Created: latency-svc-xggdw
  Nov 25 13:06:39.027: INFO: Created: latency-svc-lrwcd
  Nov 25 13:06:39.032: INFO: Got endpoints: latency-svc-xggdw [62.114904ms]
  Nov 25 13:06:39.035: INFO: Got endpoints: latency-svc-lrwcd [64.790276ms]
  Nov 25 13:06:39.040: INFO: Created: latency-svc-ml7df
  Nov 25 13:06:39.047: INFO: Created: latency-svc-hx4kd
  Nov 25 13:06:39.048: INFO: Got endpoints: latency-svc-ml7df [78.494753ms]
  Nov 25 13:06:39.059: INFO: Got endpoints: latency-svc-hx4kd [88.787093ms]
  Nov 25 13:06:39.062: INFO: Created: latency-svc-brq2k
  Nov 25 13:06:39.068: INFO: Got endpoints: latency-svc-brq2k [97.998864ms]
  Nov 25 13:06:39.072: INFO: Created: latency-svc-49hqc
  Nov 25 13:06:39.077: INFO: Got endpoints: latency-svc-49hqc [106.401064ms]
  Nov 25 13:06:39.081: INFO: Created: latency-svc-8n242
  Nov 25 13:06:39.091: INFO: Created: latency-svc-cg5f7
  Nov 25 13:06:39.091: INFO: Got endpoints: latency-svc-8n242 [120.467502ms]
  Nov 25 13:06:39.097: INFO: Got endpoints: latency-svc-cg5f7 [126.622661ms]
  Nov 25 13:06:39.101: INFO: Created: latency-svc-gm8qn
  Nov 25 13:06:39.106: INFO: Created: latency-svc-kqwb8
  Nov 25 13:06:39.109: INFO: Got endpoints: latency-svc-gm8qn [138.952719ms]
  Nov 25 13:06:39.114: INFO: Created: latency-svc-zw7gb
  Nov 25 13:06:39.115: INFO: Got endpoints: latency-svc-kqwb8 [144.913284ms]
  Nov 25 13:06:39.124: INFO: Got endpoints: latency-svc-zw7gb [152.995206ms]
  Nov 25 13:06:39.128: INFO: Created: latency-svc-szkjw
  Nov 25 13:06:39.136: INFO: Got endpoints: latency-svc-szkjw [145.224944ms]
  Nov 25 13:06:39.136: INFO: Created: latency-svc-fmjgt
  Nov 25 13:06:39.145: INFO: Created: latency-svc-v66jg
  Nov 25 13:06:39.147: INFO: Got endpoints: latency-svc-fmjgt [148.059409ms]
  Nov 25 13:06:39.153: INFO: Created: latency-svc-8p5qj
  Nov 25 13:06:39.156: INFO: Got endpoints: latency-svc-v66jg [146.792884ms]
  E1125 13:06:39.164459      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:39.165: INFO: Got endpoints: latency-svc-8p5qj [142.601672ms]
  Nov 25 13:06:39.168: INFO: Created: latency-svc-2fjg9
  Nov 25 13:06:39.172: INFO: Created: latency-svc-85dqh
  Nov 25 13:06:39.175: INFO: Got endpoints: latency-svc-2fjg9 [142.300967ms]
  Nov 25 13:06:39.183: INFO: Got endpoints: latency-svc-85dqh [148.485503ms]
  Nov 25 13:06:39.187: INFO: Created: latency-svc-6ghlv
  Nov 25 13:06:39.197: INFO: Got endpoints: latency-svc-6ghlv [148.729567ms]
  Nov 25 13:06:39.198: INFO: Created: latency-svc-qtt99
  Nov 25 13:06:39.200: INFO: Created: latency-svc-9tpfh
  Nov 25 13:06:39.204: INFO: Got endpoints: latency-svc-qtt99 [144.873751ms]
  Nov 25 13:06:39.209: INFO: Got endpoints: latency-svc-9tpfh [140.466879ms]
  Nov 25 13:06:39.213: INFO: Created: latency-svc-59llk
  Nov 25 13:06:39.218: INFO: Created: latency-svc-867sr
  Nov 25 13:06:39.219: INFO: Got endpoints: latency-svc-59llk [142.299749ms]
  Nov 25 13:06:39.229: INFO: Got endpoints: latency-svc-867sr [138.211077ms]
  Nov 25 13:06:39.230: INFO: Created: latency-svc-kcvv7
  Nov 25 13:06:39.237: INFO: Got endpoints: latency-svc-kcvv7 [139.688243ms]
  Nov 25 13:06:39.241: INFO: Created: latency-svc-n9rht
  Nov 25 13:06:39.244: INFO: Got endpoints: latency-svc-n9rht [134.150128ms]
  Nov 25 13:06:39.244: INFO: Created: latency-svc-7hzjw
  Nov 25 13:06:39.252: INFO: Created: latency-svc-nc4lv
  Nov 25 13:06:39.255: INFO: Got endpoints: latency-svc-7hzjw [139.759704ms]
  Nov 25 13:06:39.263: INFO: Got endpoints: latency-svc-nc4lv [138.729434ms]
  Nov 25 13:06:39.267: INFO: Created: latency-svc-zhhpp
  Nov 25 13:06:39.269: INFO: Created: latency-svc-wq97v
  Nov 25 13:06:39.275: INFO: Got endpoints: latency-svc-zhhpp [138.633877ms]
  Nov 25 13:06:39.278: INFO: Got endpoints: latency-svc-wq97v [130.860107ms]
  Nov 25 13:06:39.280: INFO: Created: latency-svc-t8l2v
  Nov 25 13:06:39.287: INFO: Got endpoints: latency-svc-t8l2v [131.647626ms]
  Nov 25 13:06:39.290: INFO: Created: latency-svc-lvk7q
  Nov 25 13:06:39.295: INFO: Created: latency-svc-bbrrv
  Nov 25 13:06:39.301: INFO: Got endpoints: latency-svc-lvk7q [136.548374ms]
  Nov 25 13:06:39.303: INFO: Created: latency-svc-lmkhq
  Nov 25 13:06:39.306: INFO: Got endpoints: latency-svc-bbrrv [131.600328ms]
  Nov 25 13:06:39.314: INFO: Got endpoints: latency-svc-lmkhq [130.992688ms]
  Nov 25 13:06:39.318: INFO: Created: latency-svc-pgb4t
  Nov 25 13:06:39.323: INFO: Created: latency-svc-gq6zn
  Nov 25 13:06:39.327: INFO: Created: latency-svc-wxl8s
  Nov 25 13:06:39.335: INFO: Created: latency-svc-fzxc7
  Nov 25 13:06:39.341: INFO: Created: latency-svc-p4f5h
  Nov 25 13:06:39.345: INFO: Created: latency-svc-4lh79
  Nov 25 13:06:39.351: INFO: Created: latency-svc-m8fnd
  Nov 25 13:06:39.358: INFO: Created: latency-svc-dslwb
  Nov 25 13:06:39.363: INFO: Created: latency-svc-rvhm6
  Nov 25 13:06:39.365: INFO: Got endpoints: latency-svc-pgb4t [167.740234ms]
  Nov 25 13:06:39.371: INFO: Created: latency-svc-7bw98
  Nov 25 13:06:39.375: INFO: Created: latency-svc-pqkjv
  Nov 25 13:06:39.380: INFO: Created: latency-svc-cclkm
  Nov 25 13:06:39.389: INFO: Created: latency-svc-cj6nk
  Nov 25 13:06:39.395: INFO: Created: latency-svc-ljtbm
  Nov 25 13:06:39.398: INFO: Created: latency-svc-4pv2x
  Nov 25 13:06:39.406: INFO: Created: latency-svc-xt2b9
  Nov 25 13:06:39.417: INFO: Got endpoints: latency-svc-gq6zn [212.978161ms]
  Nov 25 13:06:39.427: INFO: Created: latency-svc-ns8w5
  Nov 25 13:06:39.464: INFO: Got endpoints: latency-svc-wxl8s [255.707107ms]
  Nov 25 13:06:39.474: INFO: Created: latency-svc-bgmwf
  Nov 25 13:06:39.514: INFO: Got endpoints: latency-svc-fzxc7 [294.615718ms]
  Nov 25 13:06:39.524: INFO: Created: latency-svc-4p44d
  Nov 25 13:06:39.564: INFO: Got endpoints: latency-svc-p4f5h [334.741762ms]
  Nov 25 13:06:39.573: INFO: Created: latency-svc-pnrh8
  Nov 25 13:06:39.612: INFO: Got endpoints: latency-svc-4lh79 [374.949395ms]
  Nov 25 13:06:39.620: INFO: Created: latency-svc-57vlz
  Nov 25 13:06:39.664: INFO: Got endpoints: latency-svc-m8fnd [419.903924ms]
  Nov 25 13:06:39.675: INFO: Created: latency-svc-ccrzx
  Nov 25 13:06:39.714: INFO: Got endpoints: latency-svc-dslwb [458.542855ms]
  Nov 25 13:06:39.724: INFO: Created: latency-svc-hlzqq
  Nov 25 13:06:39.761: INFO: Got endpoints: latency-svc-rvhm6 [498.349956ms]
  Nov 25 13:06:39.772: INFO: Created: latency-svc-nfphs
  Nov 25 13:06:39.810: INFO: Got endpoints: latency-svc-7bw98 [535.565678ms]
  Nov 25 13:06:39.823: INFO: Created: latency-svc-rnpfh
  Nov 25 13:06:39.863: INFO: Got endpoints: latency-svc-pqkjv [585.110787ms]
  Nov 25 13:06:39.874: INFO: Created: latency-svc-rg8zs
  Nov 25 13:06:39.919: INFO: Got endpoints: latency-svc-cclkm [631.320413ms]
  Nov 25 13:06:39.927: INFO: Created: latency-svc-bm296
  Nov 25 13:06:39.966: INFO: Got endpoints: latency-svc-cj6nk [664.712935ms]
  Nov 25 13:06:39.979: INFO: Created: latency-svc-pvgdj
  Nov 25 13:06:40.015: INFO: Got endpoints: latency-svc-ljtbm [708.764043ms]
  Nov 25 13:06:40.028: INFO: Created: latency-svc-qmr4j
  Nov 25 13:06:40.068: INFO: Got endpoints: latency-svc-4pv2x [753.282782ms]
  Nov 25 13:06:40.077: INFO: Created: latency-svc-mg54g
  Nov 25 13:06:40.114: INFO: Got endpoints: latency-svc-xt2b9 [749.200705ms]
  Nov 25 13:06:40.127: INFO: Created: latency-svc-nsw82
  Nov 25 13:06:40.163: INFO: Got endpoints: latency-svc-ns8w5 [745.94349ms]
  E1125 13:06:40.165400      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:40.174: INFO: Created: latency-svc-5bm4b
  Nov 25 13:06:40.220: INFO: Got endpoints: latency-svc-bgmwf [755.884626ms]
  Nov 25 13:06:40.231: INFO: Created: latency-svc-8zcmh
  Nov 25 13:06:40.263: INFO: Got endpoints: latency-svc-4p44d [749.238676ms]
  Nov 25 13:06:40.279: INFO: Created: latency-svc-6vbcv
  Nov 25 13:06:40.314: INFO: Got endpoints: latency-svc-pnrh8 [749.997374ms]
  Nov 25 13:06:40.324: INFO: Created: latency-svc-9k2hq
  Nov 25 13:06:40.363: INFO: Got endpoints: latency-svc-57vlz [751.19079ms]
  Nov 25 13:06:40.372: INFO: Created: latency-svc-nzrkk
  Nov 25 13:06:40.413: INFO: Got endpoints: latency-svc-ccrzx [748.835216ms]
  Nov 25 13:06:40.426: INFO: Created: latency-svc-28r8d
  Nov 25 13:06:40.466: INFO: Got endpoints: latency-svc-hlzqq [751.838691ms]
  Nov 25 13:06:40.477: INFO: Created: latency-svc-d7zbt
  Nov 25 13:06:40.514: INFO: Got endpoints: latency-svc-nfphs [752.742601ms]
  Nov 25 13:06:40.523: INFO: Created: latency-svc-g4k8b
  Nov 25 13:06:40.562: INFO: Got endpoints: latency-svc-rnpfh [751.198531ms]
  Nov 25 13:06:40.571: INFO: Created: latency-svc-xj75c
  Nov 25 13:06:40.614: INFO: Got endpoints: latency-svc-rg8zs [750.532829ms]
  Nov 25 13:06:40.623: INFO: Created: latency-svc-67cf9
  Nov 25 13:06:40.665: INFO: Got endpoints: latency-svc-bm296 [746.152027ms]
  Nov 25 13:06:40.676: INFO: Created: latency-svc-j5qt7
  Nov 25 13:06:40.713: INFO: Got endpoints: latency-svc-pvgdj [746.733201ms]
  Nov 25 13:06:40.728: INFO: Created: latency-svc-2ncnr
  Nov 25 13:06:40.762: INFO: Got endpoints: latency-svc-qmr4j [746.567263ms]
  Nov 25 13:06:40.775: INFO: Created: latency-svc-bhvnc
  Nov 25 13:06:40.813: INFO: Got endpoints: latency-svc-mg54g [744.88209ms]
  Nov 25 13:06:40.821: INFO: Created: latency-svc-clwxr
  Nov 25 13:06:40.863: INFO: Got endpoints: latency-svc-nsw82 [748.624247ms]
  Nov 25 13:06:40.879: INFO: Created: latency-svc-cxg5r
  Nov 25 13:06:40.915: INFO: Got endpoints: latency-svc-5bm4b [752.241522ms]
  Nov 25 13:06:40.924: INFO: Created: latency-svc-szfdg
  Nov 25 13:06:40.964: INFO: Got endpoints: latency-svc-8zcmh [743.632536ms]
  Nov 25 13:06:40.974: INFO: Created: latency-svc-fd2k6
  Nov 25 13:06:41.014: INFO: Got endpoints: latency-svc-6vbcv [750.793082ms]
  Nov 25 13:06:41.024: INFO: Created: latency-svc-nbrz5
  Nov 25 13:06:41.063: INFO: Got endpoints: latency-svc-9k2hq [748.481426ms]
  Nov 25 13:06:41.073: INFO: Created: latency-svc-l5ndd
  Nov 25 13:06:41.114: INFO: Got endpoints: latency-svc-nzrkk [751.528053ms]
  Nov 25 13:06:41.122: INFO: Created: latency-svc-kr8cn
  Nov 25 13:06:41.164: INFO: Got endpoints: latency-svc-28r8d [751.223306ms]
  E1125 13:06:41.165812      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:41.176: INFO: Created: latency-svc-t6blp
  Nov 25 13:06:41.214: INFO: Got endpoints: latency-svc-d7zbt [747.915509ms]
  Nov 25 13:06:41.224: INFO: Created: latency-svc-m9mph
  Nov 25 13:06:41.263: INFO: Got endpoints: latency-svc-g4k8b [748.958051ms]
  Nov 25 13:06:41.272: INFO: Created: latency-svc-flcrr
  Nov 25 13:06:41.311: INFO: Got endpoints: latency-svc-xj75c [749.438628ms]
  Nov 25 13:06:41.321: INFO: Created: latency-svc-vcqwv
  Nov 25 13:06:41.362: INFO: Got endpoints: latency-svc-67cf9 [747.821455ms]
  Nov 25 13:06:41.371: INFO: Created: latency-svc-qhg94
  Nov 25 13:06:41.412: INFO: Got endpoints: latency-svc-j5qt7 [747.438005ms]
  Nov 25 13:06:41.420: INFO: Created: latency-svc-l87sk
  Nov 25 13:06:41.464: INFO: Got endpoints: latency-svc-2ncnr [750.938742ms]
  Nov 25 13:06:41.474: INFO: Created: latency-svc-k7nvd
  Nov 25 13:06:41.514: INFO: Got endpoints: latency-svc-bhvnc [752.397114ms]
  Nov 25 13:06:41.524: INFO: Created: latency-svc-2sctr
  Nov 25 13:06:41.564: INFO: Got endpoints: latency-svc-clwxr [751.299545ms]
  Nov 25 13:06:41.573: INFO: Created: latency-svc-tbx52
  Nov 25 13:06:41.618: INFO: Got endpoints: latency-svc-cxg5r [754.555874ms]
  Nov 25 13:06:41.628: INFO: Created: latency-svc-2c84m
  Nov 25 13:06:41.664: INFO: Got endpoints: latency-svc-szfdg [748.460911ms]
  Nov 25 13:06:41.675: INFO: Created: latency-svc-qpmd7
  Nov 25 13:06:41.711: INFO: Got endpoints: latency-svc-fd2k6 [746.120394ms]
  Nov 25 13:06:41.721: INFO: Created: latency-svc-g8z7s
  Nov 25 13:06:41.764: INFO: Got endpoints: latency-svc-nbrz5 [750.532485ms]
  Nov 25 13:06:41.777: INFO: Created: latency-svc-l785v
  Nov 25 13:06:41.813: INFO: Got endpoints: latency-svc-l5ndd [750.202738ms]
  Nov 25 13:06:41.823: INFO: Created: latency-svc-mxq69
  Nov 25 13:06:41.865: INFO: Got endpoints: latency-svc-kr8cn [750.67984ms]
  Nov 25 13:06:41.877: INFO: Created: latency-svc-5q95l
  Nov 25 13:06:41.915: INFO: Got endpoints: latency-svc-t6blp [751.314081ms]
  Nov 25 13:06:41.927: INFO: Created: latency-svc-zw6vm
  Nov 25 13:06:41.962: INFO: Got endpoints: latency-svc-m9mph [747.757975ms]
  Nov 25 13:06:41.982: INFO: Created: latency-svc-h97mp
  Nov 25 13:06:42.011: INFO: Got endpoints: latency-svc-flcrr [748.223499ms]
  Nov 25 13:06:42.024: INFO: Created: latency-svc-55c66
  Nov 25 13:06:42.062: INFO: Got endpoints: latency-svc-vcqwv [750.561653ms]
  Nov 25 13:06:42.075: INFO: Created: latency-svc-p9kvj
  Nov 25 13:06:42.113: INFO: Got endpoints: latency-svc-qhg94 [751.793491ms]
  Nov 25 13:06:42.122: INFO: Created: latency-svc-v6vtd
  Nov 25 13:06:42.163: INFO: Got endpoints: latency-svc-l87sk [750.940543ms]
  E1125 13:06:42.166319      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:42.173: INFO: Created: latency-svc-tdhjj
  Nov 25 13:06:42.211: INFO: Got endpoints: latency-svc-k7nvd [746.995208ms]
  Nov 25 13:06:42.221: INFO: Created: latency-svc-6tjmz
  Nov 25 13:06:42.266: INFO: Got endpoints: latency-svc-2sctr [751.761426ms]
  Nov 25 13:06:42.275: INFO: Created: latency-svc-ccxld
  Nov 25 13:06:42.312: INFO: Got endpoints: latency-svc-tbx52 [748.230301ms]
  Nov 25 13:06:42.327: INFO: Created: latency-svc-wsxxz
  Nov 25 13:06:42.364: INFO: Got endpoints: latency-svc-2c84m [745.943844ms]
  Nov 25 13:06:42.375: INFO: Created: latency-svc-sr2d6
  Nov 25 13:06:42.413: INFO: Got endpoints: latency-svc-qpmd7 [748.906171ms]
  Nov 25 13:06:42.422: INFO: Created: latency-svc-vd9d6
  Nov 25 13:06:42.464: INFO: Got endpoints: latency-svc-g8z7s [752.995524ms]
  Nov 25 13:06:42.473: INFO: Created: latency-svc-vzhss
  Nov 25 13:06:42.514: INFO: Got endpoints: latency-svc-l785v [749.793673ms]
  Nov 25 13:06:42.524: INFO: Created: latency-svc-wd8dq
  Nov 25 13:06:42.561: INFO: Got endpoints: latency-svc-mxq69 [748.609758ms]
  Nov 25 13:06:42.573: INFO: Created: latency-svc-pjpln
  Nov 25 13:06:42.612: INFO: Got endpoints: latency-svc-5q95l [746.792422ms]
  Nov 25 13:06:42.622: INFO: Created: latency-svc-9fzm4
  Nov 25 13:06:42.663: INFO: Got endpoints: latency-svc-zw6vm [747.470892ms]
  Nov 25 13:06:42.672: INFO: Created: latency-svc-48jx8
  Nov 25 13:06:42.715: INFO: Got endpoints: latency-svc-h97mp [752.562184ms]
  Nov 25 13:06:42.724: INFO: Created: latency-svc-2gkww
  Nov 25 13:06:42.764: INFO: Got endpoints: latency-svc-55c66 [753.127446ms]
  Nov 25 13:06:42.775: INFO: Created: latency-svc-2gdfz
  Nov 25 13:06:42.811: INFO: Got endpoints: latency-svc-p9kvj [749.409592ms]
  Nov 25 13:06:42.826: INFO: Created: latency-svc-6dgfh
  Nov 25 13:06:42.862: INFO: Got endpoints: latency-svc-v6vtd [748.085718ms]
  Nov 25 13:06:42.873: INFO: Created: latency-svc-mlb94
  Nov 25 13:06:42.912: INFO: Got endpoints: latency-svc-tdhjj [748.876954ms]
  Nov 25 13:06:42.922: INFO: Created: latency-svc-2fgw9
  Nov 25 13:06:42.977: INFO: Got endpoints: latency-svc-6tjmz [765.045306ms]
  Nov 25 13:06:42.999: INFO: Created: latency-svc-zj87d
  Nov 25 13:06:43.018: INFO: Got endpoints: latency-svc-ccxld [751.66821ms]
  Nov 25 13:06:43.034: INFO: Created: latency-svc-q8mcr
  Nov 25 13:06:43.071: INFO: Got endpoints: latency-svc-wsxxz [758.441718ms]
  Nov 25 13:06:43.081: INFO: Created: latency-svc-tbxbs
  Nov 25 13:06:43.115: INFO: Got endpoints: latency-svc-sr2d6 [750.763206ms]
  Nov 25 13:06:43.125: INFO: Created: latency-svc-vqp4b
  Nov 25 13:06:43.165: INFO: Got endpoints: latency-svc-vd9d6 [752.5203ms]
  E1125 13:06:43.167236      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:43.175: INFO: Created: latency-svc-fpfwh
  Nov 25 13:06:43.213: INFO: Got endpoints: latency-svc-vzhss [748.520777ms]
  Nov 25 13:06:43.222: INFO: Created: latency-svc-djptd
  Nov 25 13:06:43.261: INFO: Got endpoints: latency-svc-wd8dq [747.136901ms]
  Nov 25 13:06:43.273: INFO: Created: latency-svc-ptkpq
  Nov 25 13:06:43.314: INFO: Got endpoints: latency-svc-pjpln [752.482812ms]
  Nov 25 13:06:43.323: INFO: Created: latency-svc-7gcn5
  Nov 25 13:06:43.364: INFO: Got endpoints: latency-svc-9fzm4 [752.053724ms]
  Nov 25 13:06:43.371: INFO: Created: latency-svc-d7lf9
  Nov 25 13:06:43.412: INFO: Got endpoints: latency-svc-48jx8 [749.549334ms]
  Nov 25 13:06:43.423: INFO: Created: latency-svc-bfj5x
  Nov 25 13:06:43.463: INFO: Got endpoints: latency-svc-2gkww [748.309072ms]
  Nov 25 13:06:43.473: INFO: Created: latency-svc-q9bd6
  Nov 25 13:06:43.514: INFO: Got endpoints: latency-svc-2gdfz [749.698611ms]
  Nov 25 13:06:43.523: INFO: Created: latency-svc-vlpfb
  Nov 25 13:06:43.563: INFO: Got endpoints: latency-svc-6dgfh [751.515582ms]
  Nov 25 13:06:43.572: INFO: Created: latency-svc-wskbf
  Nov 25 13:06:43.614: INFO: Got endpoints: latency-svc-mlb94 [751.96114ms]
  Nov 25 13:06:43.624: INFO: Created: latency-svc-dxlxx
  Nov 25 13:06:43.665: INFO: Got endpoints: latency-svc-2fgw9 [752.23117ms]
  Nov 25 13:06:43.674: INFO: Created: latency-svc-rvgwh
  Nov 25 13:06:43.713: INFO: Got endpoints: latency-svc-zj87d [736.354823ms]
  Nov 25 13:06:43.724: INFO: Created: latency-svc-j54qf
  Nov 25 13:06:43.762: INFO: Got endpoints: latency-svc-q8mcr [744.539572ms]
  Nov 25 13:06:43.772: INFO: Created: latency-svc-p2xm9
  Nov 25 13:06:43.812: INFO: Got endpoints: latency-svc-tbxbs [741.029239ms]
  Nov 25 13:06:43.822: INFO: Created: latency-svc-xn8kz
  Nov 25 13:06:43.862: INFO: Got endpoints: latency-svc-vqp4b [747.181761ms]
  Nov 25 13:06:43.872: INFO: Created: latency-svc-vgxpp
  Nov 25 13:06:43.912: INFO: Got endpoints: latency-svc-fpfwh [746.688024ms]
  Nov 25 13:06:43.922: INFO: Created: latency-svc-dlgts
  Nov 25 13:06:43.967: INFO: Got endpoints: latency-svc-djptd [753.733601ms]
  Nov 25 13:06:43.978: INFO: Created: latency-svc-mklld
  Nov 25 13:06:44.012: INFO: Got endpoints: latency-svc-ptkpq [750.221829ms]
  Nov 25 13:06:44.022: INFO: Created: latency-svc-lb7tn
  Nov 25 13:06:44.062: INFO: Got endpoints: latency-svc-7gcn5 [748.0861ms]
  Nov 25 13:06:44.071: INFO: Created: latency-svc-r9pt9
  Nov 25 13:06:44.113: INFO: Got endpoints: latency-svc-d7lf9 [748.729787ms]
  Nov 25 13:06:44.121: INFO: Created: latency-svc-lsb8m
  Nov 25 13:06:44.165: INFO: Got endpoints: latency-svc-bfj5x [752.660709ms]
  E1125 13:06:44.167718      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:44.176: INFO: Created: latency-svc-lx5nm
  Nov 25 13:06:44.210: INFO: Got endpoints: latency-svc-q9bd6 [747.097709ms]
  Nov 25 13:06:44.224: INFO: Created: latency-svc-dgdhc
  Nov 25 13:06:44.261: INFO: Got endpoints: latency-svc-vlpfb [747.209963ms]
  Nov 25 13:06:44.270: INFO: Created: latency-svc-ngv4n
  Nov 25 13:06:44.312: INFO: Got endpoints: latency-svc-wskbf [748.404709ms]
  Nov 25 13:06:44.324: INFO: Created: latency-svc-psgsc
  Nov 25 13:06:44.363: INFO: Got endpoints: latency-svc-dxlxx [749.507596ms]
  Nov 25 13:06:44.373: INFO: Created: latency-svc-75md5
  Nov 25 13:06:44.415: INFO: Got endpoints: latency-svc-rvgwh [750.044217ms]
  Nov 25 13:06:44.423: INFO: Created: latency-svc-j5s28
  Nov 25 13:06:44.461: INFO: Got endpoints: latency-svc-j54qf [747.113494ms]
  Nov 25 13:06:44.471: INFO: Created: latency-svc-5dxs2
  Nov 25 13:06:44.514: INFO: Got endpoints: latency-svc-p2xm9 [751.297852ms]
  Nov 25 13:06:44.525: INFO: Created: latency-svc-hdt29
  Nov 25 13:06:44.563: INFO: Got endpoints: latency-svc-xn8kz [751.165402ms]
  Nov 25 13:06:44.574: INFO: Created: latency-svc-2z82x
  Nov 25 13:06:44.612: INFO: Got endpoints: latency-svc-vgxpp [750.130706ms]
  Nov 25 13:06:44.628: INFO: Created: latency-svc-m5kqc
  Nov 25 13:06:44.664: INFO: Got endpoints: latency-svc-dlgts [751.897619ms]
  Nov 25 13:06:44.673: INFO: Created: latency-svc-4jvjt
  Nov 25 13:06:44.714: INFO: Got endpoints: latency-svc-mklld [746.965431ms]
  Nov 25 13:06:44.722: INFO: Created: latency-svc-xqvx6
  Nov 25 13:06:44.762: INFO: Got endpoints: latency-svc-lb7tn [749.819254ms]
  Nov 25 13:06:44.774: INFO: Created: latency-svc-nn5jt
  Nov 25 13:06:44.812: INFO: Got endpoints: latency-svc-r9pt9 [749.895676ms]
  Nov 25 13:06:44.822: INFO: Created: latency-svc-4vw7k
  Nov 25 13:06:44.863: INFO: Got endpoints: latency-svc-lsb8m [749.602057ms]
  Nov 25 13:06:44.871: INFO: Created: latency-svc-7kfdf
  Nov 25 13:06:44.914: INFO: Got endpoints: latency-svc-lx5nm [748.47011ms]
  Nov 25 13:06:44.924: INFO: Created: latency-svc-z2shb
  Nov 25 13:06:44.966: INFO: Got endpoints: latency-svc-dgdhc [755.614286ms]
  Nov 25 13:06:44.981: INFO: Created: latency-svc-7qvjg
  Nov 25 13:06:45.013: INFO: Got endpoints: latency-svc-ngv4n [752.137959ms]
  Nov 25 13:06:45.025: INFO: Created: latency-svc-p2kvs
  Nov 25 13:06:45.062: INFO: Got endpoints: latency-svc-psgsc [750.247872ms]
  Nov 25 13:06:45.072: INFO: Created: latency-svc-wxc4n
  Nov 25 13:06:45.114: INFO: Got endpoints: latency-svc-75md5 [749.986385ms]
  Nov 25 13:06:45.124: INFO: Created: latency-svc-46hmc
  Nov 25 13:06:45.164: INFO: Got endpoints: latency-svc-j5s28 [749.132242ms]
  E1125 13:06:45.168110      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:45.173: INFO: Created: latency-svc-fnzsq
  Nov 25 13:06:45.213: INFO: Got endpoints: latency-svc-5dxs2 [752.821192ms]
  Nov 25 13:06:45.223: INFO: Created: latency-svc-4tdhr
  Nov 25 13:06:45.266: INFO: Got endpoints: latency-svc-hdt29 [752.010422ms]
  Nov 25 13:06:45.275: INFO: Created: latency-svc-5k98j
  Nov 25 13:06:45.312: INFO: Got endpoints: latency-svc-2z82x [748.907503ms]
  Nov 25 13:06:45.320: INFO: Created: latency-svc-hqq4x
  Nov 25 13:06:45.361: INFO: Got endpoints: latency-svc-m5kqc [749.198234ms]
  Nov 25 13:06:45.373: INFO: Created: latency-svc-2xzzt
  Nov 25 13:06:45.416: INFO: Got endpoints: latency-svc-4jvjt [752.033899ms]
  Nov 25 13:06:45.426: INFO: Created: latency-svc-jpgjl
  Nov 25 13:06:45.464: INFO: Got endpoints: latency-svc-xqvx6 [750.018295ms]
  Nov 25 13:06:45.473: INFO: Created: latency-svc-nrr58
  Nov 25 13:06:45.514: INFO: Got endpoints: latency-svc-nn5jt [752.120073ms]
  Nov 25 13:06:45.526: INFO: Created: latency-svc-5wlqp
  Nov 25 13:06:45.562: INFO: Got endpoints: latency-svc-4vw7k [749.7205ms]
  Nov 25 13:06:45.581: INFO: Created: latency-svc-fzdms
  Nov 25 13:06:45.612: INFO: Got endpoints: latency-svc-7kfdf [748.698752ms]
  Nov 25 13:06:45.622: INFO: Created: latency-svc-tjdnf
  Nov 25 13:06:45.666: INFO: Got endpoints: latency-svc-z2shb [751.948032ms]
  Nov 25 13:06:45.679: INFO: Created: latency-svc-gs8hl
  Nov 25 13:06:45.715: INFO: Got endpoints: latency-svc-7qvjg [748.229643ms]
  Nov 25 13:06:45.724: INFO: Created: latency-svc-ks5xt
  Nov 25 13:06:45.763: INFO: Got endpoints: latency-svc-p2kvs [749.517335ms]
  Nov 25 13:06:45.777: INFO: Created: latency-svc-nv6hn
  Nov 25 13:06:45.810: INFO: Got endpoints: latency-svc-wxc4n [747.965241ms]
  Nov 25 13:06:45.820: INFO: Created: latency-svc-46klt
  Nov 25 13:06:45.865: INFO: Got endpoints: latency-svc-46hmc [750.908168ms]
  Nov 25 13:06:45.874: INFO: Created: latency-svc-qszjl
  Nov 25 13:06:45.913: INFO: Got endpoints: latency-svc-fnzsq [748.304756ms]
  Nov 25 13:06:45.921: INFO: Created: latency-svc-jv6r2
  Nov 25 13:06:45.960: INFO: Got endpoints: latency-svc-4tdhr [747.017945ms]
  Nov 25 13:06:45.972: INFO: Created: latency-svc-k46vb
  Nov 25 13:06:46.015: INFO: Got endpoints: latency-svc-5k98j [748.829231ms]
  Nov 25 13:06:46.026: INFO: Created: latency-svc-pwg7s
  Nov 25 13:06:46.062: INFO: Got endpoints: latency-svc-hqq4x [749.728267ms]
  Nov 25 13:06:46.073: INFO: Created: latency-svc-qvr4w
  Nov 25 13:06:46.113: INFO: Got endpoints: latency-svc-2xzzt [751.175145ms]
  Nov 25 13:06:46.127: INFO: Created: latency-svc-xtttb
  Nov 25 13:06:46.164: INFO: Got endpoints: latency-svc-jpgjl [748.154413ms]
  E1125 13:06:46.168932      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:46.175: INFO: Created: latency-svc-297pd
  Nov 25 13:06:46.215: INFO: Got endpoints: latency-svc-nrr58 [750.569469ms]
  Nov 25 13:06:46.223: INFO: Created: latency-svc-klx24
  Nov 25 13:06:46.262: INFO: Got endpoints: latency-svc-5wlqp [747.767441ms]
  Nov 25 13:06:46.275: INFO: Created: latency-svc-8jcdm
  Nov 25 13:06:46.317: INFO: Got endpoints: latency-svc-fzdms [755.125954ms]
  Nov 25 13:06:46.332: INFO: Created: latency-svc-p2xhc
  Nov 25 13:06:46.366: INFO: Got endpoints: latency-svc-tjdnf [754.24839ms]
  Nov 25 13:06:46.376: INFO: Created: latency-svc-54td6
  Nov 25 13:06:46.416: INFO: Got endpoints: latency-svc-gs8hl [750.059827ms]
  Nov 25 13:06:46.430: INFO: Created: latency-svc-zmg5h
  Nov 25 13:06:46.468: INFO: Got endpoints: latency-svc-ks5xt [753.365584ms]
  Nov 25 13:06:46.481: INFO: Created: latency-svc-hfzbn
  Nov 25 13:06:46.515: INFO: Got endpoints: latency-svc-nv6hn [752.432046ms]
  Nov 25 13:06:46.528: INFO: Created: latency-svc-7hzzj
  Nov 25 13:06:46.565: INFO: Got endpoints: latency-svc-46klt [754.263486ms]
  Nov 25 13:06:46.576: INFO: Created: latency-svc-qv9x5
  Nov 25 13:06:46.613: INFO: Got endpoints: latency-svc-qszjl [748.555483ms]
  Nov 25 13:06:46.629: INFO: Created: latency-svc-b7mkc
  Nov 25 13:06:46.668: INFO: Got endpoints: latency-svc-jv6r2 [755.281804ms]
  Nov 25 13:06:46.683: INFO: Created: latency-svc-rm2fw
  Nov 25 13:06:46.712: INFO: Got endpoints: latency-svc-k46vb [751.146392ms]
  Nov 25 13:06:46.723: INFO: Created: latency-svc-m25w5
  Nov 25 13:06:46.763: INFO: Got endpoints: latency-svc-pwg7s [748.388072ms]
  Nov 25 13:06:46.773: INFO: Created: latency-svc-gxn5p
  Nov 25 13:06:46.814: INFO: Got endpoints: latency-svc-qvr4w [751.685343ms]
  Nov 25 13:06:46.871: INFO: Got endpoints: latency-svc-xtttb [757.8022ms]
  Nov 25 13:06:46.916: INFO: Got endpoints: latency-svc-297pd [751.349733ms]
  Nov 25 13:06:46.965: INFO: Got endpoints: latency-svc-klx24 [750.15837ms]
  Nov 25 13:06:47.013: INFO: Got endpoints: latency-svc-8jcdm [750.529057ms]
  Nov 25 13:06:47.065: INFO: Got endpoints: latency-svc-p2xhc [747.290018ms]
  Nov 25 13:06:47.113: INFO: Got endpoints: latency-svc-54td6 [746.440659ms]
  Nov 25 13:06:47.164: INFO: Got endpoints: latency-svc-zmg5h [748.347195ms]
  E1125 13:06:47.169963      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:47.211: INFO: Got endpoints: latency-svc-hfzbn [743.184722ms]
  Nov 25 13:06:47.263: INFO: Got endpoints: latency-svc-7hzzj [747.596928ms]
  Nov 25 13:06:47.312: INFO: Got endpoints: latency-svc-qv9x5 [747.60658ms]
  Nov 25 13:06:47.364: INFO: Got endpoints: latency-svc-b7mkc [750.979607ms]
  Nov 25 13:06:47.413: INFO: Got endpoints: latency-svc-rm2fw [744.79342ms]
  Nov 25 13:06:47.463: INFO: Got endpoints: latency-svc-m25w5 [751.488128ms]
  Nov 25 13:06:47.513: INFO: Got endpoints: latency-svc-gxn5p [749.53905ms]
  Nov 25 13:06:47.513: INFO: Latencies: [21.389495ms 29.037556ms 38.885468ms 52.084283ms 62.114904ms 64.790276ms 78.494753ms 88.787093ms 97.998864ms 106.401064ms 120.467502ms 126.622661ms 130.860107ms 130.992688ms 131.600328ms 131.647626ms 134.150128ms 136.548374ms 138.211077ms 138.633877ms 138.729434ms 138.952719ms 139.688243ms 139.759704ms 140.466879ms 142.299749ms 142.300967ms 142.601672ms 144.873751ms 144.913284ms 145.224944ms 146.792884ms 148.059409ms 148.485503ms 148.729567ms 152.995206ms 167.740234ms 212.978161ms 255.707107ms 294.615718ms 334.741762ms 374.949395ms 419.903924ms 458.542855ms 498.349956ms 535.565678ms 585.110787ms 631.320413ms 664.712935ms 708.764043ms 736.354823ms 741.029239ms 743.184722ms 743.632536ms 744.539572ms 744.79342ms 744.88209ms 745.94349ms 745.943844ms 746.120394ms 746.152027ms 746.440659ms 746.567263ms 746.688024ms 746.733201ms 746.792422ms 746.965431ms 746.995208ms 747.017945ms 747.097709ms 747.113494ms 747.136901ms 747.181761ms 747.209963ms 747.290018ms 747.438005ms 747.470892ms 747.596928ms 747.60658ms 747.757975ms 747.767441ms 747.821455ms 747.915509ms 747.965241ms 748.085718ms 748.0861ms 748.154413ms 748.223499ms 748.229643ms 748.230301ms 748.304756ms 748.309072ms 748.347195ms 748.388072ms 748.404709ms 748.460911ms 748.47011ms 748.481426ms 748.520777ms 748.555483ms 748.609758ms 748.624247ms 748.698752ms 748.729787ms 748.829231ms 748.835216ms 748.876954ms 748.906171ms 748.907503ms 748.958051ms 749.132242ms 749.198234ms 749.200705ms 749.238676ms 749.409592ms 749.438628ms 749.507596ms 749.517335ms 749.53905ms 749.549334ms 749.602057ms 749.698611ms 749.7205ms 749.728267ms 749.793673ms 749.819254ms 749.895676ms 749.986385ms 749.997374ms 750.018295ms 750.044217ms 750.059827ms 750.130706ms 750.15837ms 750.202738ms 750.221829ms 750.247872ms 750.529057ms 750.532485ms 750.532829ms 750.561653ms 750.569469ms 750.67984ms 750.763206ms 750.793082ms 750.908168ms 750.938742ms 750.940543ms 750.979607ms 751.146392ms 751.165402ms 751.175145ms 751.19079ms 751.198531ms 751.223306ms 751.297852ms 751.299545ms 751.314081ms 751.349733ms 751.488128ms 751.515582ms 751.528053ms 751.66821ms 751.685343ms 751.761426ms 751.793491ms 751.838691ms 751.897619ms 751.948032ms 751.96114ms 752.010422ms 752.033899ms 752.053724ms 752.120073ms 752.137959ms 752.23117ms 752.241522ms 752.397114ms 752.432046ms 752.482812ms 752.5203ms 752.562184ms 752.660709ms 752.742601ms 752.821192ms 752.995524ms 753.127446ms 753.282782ms 753.365584ms 753.733601ms 754.24839ms 754.263486ms 754.555874ms 755.125954ms 755.281804ms 755.614286ms 755.884626ms 757.8022ms 758.441718ms 765.045306ms]
  Nov 25 13:06:47.513: INFO: 50 %ile: 748.609758ms
  Nov 25 13:06:47.513: INFO: 90 %ile: 752.5203ms
  Nov 25 13:06:47.513: INFO: 99 %ile: 758.441718ms
  Nov 25 13:06:47.513: INFO: Total sample count: 200
  Nov 25 13:06:47.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-8717" for this suite. @ 11/25/23 13:06:47.519
• [10.766 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 11/25/23 13:06:47.525
  Nov 25 13:06:47.525: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename runtimeclass @ 11/25/23 13:06:47.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:06:47.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:06:47.545
  E1125 13:06:48.170710      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:49.170795      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:49.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2329" for this suite. @ 11/25/23 13:06:49.578
• [2.060 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 11/25/23 13:06:49.586
  Nov 25 13:06:49.586: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:06:49.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:06:49.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:06:49.605
  STEP: Creating configMap with name projected-configmap-test-volume-map-deea1837-d2eb-4ccd-a353-abb1e3ff906d @ 11/25/23 13:06:49.608
  STEP: Creating a pod to test consume configMaps @ 11/25/23 13:06:49.613
  E1125 13:06:50.171717      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:51.171930      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:52.172048      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:53.172138      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:06:53.651
  Nov 25 13:06:53.679: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-projected-configmaps-e774f9f2-6618-4aa5-92b1-6599a63b0901 container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 13:06:53.697
  Nov 25 13:06:53.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3870" for this suite. @ 11/25/23 13:06:53.734
• [4.159 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 11/25/23 13:06:53.746
  Nov 25 13:06:53.746: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/25/23 13:06:53.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:06:53.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:06:53.775
  Nov 25 13:06:53.779: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  E1125 13:06:54.172729      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:55.173338      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:56.173540      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:57.173663      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:58.174161      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:06:59.174714      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:06:59.979: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2411" for this suite. @ 11/25/23 13:06:59.988
• [6.252 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 11/25/23 13:07:00
  Nov 25 13:07:00.000: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename csistoragecapacity @ 11/25/23 13:07:00.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:07:00.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:07:00.078
  STEP: getting /apis @ 11/25/23 13:07:00.082
  STEP: getting /apis/storage.k8s.io @ 11/25/23 13:07:00.087
  STEP: getting /apis/storage.k8s.io/v1 @ 11/25/23 13:07:00.089
  STEP: creating @ 11/25/23 13:07:00.091
  STEP: watching @ 11/25/23 13:07:00.108
  Nov 25 13:07:00.108: INFO: starting watch
  STEP: getting @ 11/25/23 13:07:00.115
  STEP: listing in namespace @ 11/25/23 13:07:00.117
  STEP: listing across namespaces @ 11/25/23 13:07:00.121
  STEP: patching @ 11/25/23 13:07:00.123
  STEP: updating @ 11/25/23 13:07:00.128
  Nov 25 13:07:00.135: INFO: waiting for watch events with expected annotations in namespace
  Nov 25 13:07:00.135: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 11/25/23 13:07:00.135
  STEP: deleting a collection @ 11/25/23 13:07:00.149
  Nov 25 13:07:00.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-7662" for this suite. @ 11/25/23 13:07:00.167
• [0.174 seconds]
------------------------------
SSSSSS  E1125 13:07:00.174701      17 retrywatcher.go:129] "Watch failed" err="context canceled"
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 11/25/23 13:07:00.175
  Nov 25 13:07:00.175: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 13:07:00.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:07:00.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:07:00.192
  STEP: Setting up server cert @ 11/25/23 13:07:00.216
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 13:07:00.376
  STEP: Deploying the webhook pod @ 11/25/23 13:07:00.385
  STEP: Wait for the deployment to be ready @ 11/25/23 13:07:00.396
  Nov 25 13:07:00.403: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1125 13:07:01.175682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:02.176362      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/25/23 13:07:02.412
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 13:07:02.421
  E1125 13:07:03.176483      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:07:03.421: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 25 13:07:03.424: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  E1125 13:07:04.176514      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:07:04.421: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 25 13:07:04.423: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  E1125 13:07:05.176606      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:07:05.421: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 25 13:07:05.428: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8533-crds.webhook.example.com via the AdmissionRegistration API @ 11/25/23 13:07:05.938
  STEP: Creating a custom resource while v1 is storage version @ 11/25/23 13:07:05.953
  E1125 13:07:06.176803      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:07.177372      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 11/25/23 13:07:07.998
  STEP: Patching the custom resource while v2 is storage version @ 11/25/23 13:07:08.015
  Nov 25 13:07:08.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1125 13:07:08.177726      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-6887" for this suite. @ 11/25/23 13:07:08.629
  STEP: Destroying namespace "webhook-markers-4336" for this suite. @ 11/25/23 13:07:08.636
• [8.468 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 11/25/23 13:07:08.644
  Nov 25 13:07:08.644: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename resourcequota @ 11/25/23 13:07:08.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:07:08.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:07:08.663
  STEP: Creating resourceQuota "e2e-rq-status-cxskp" @ 11/25/23 13:07:08.669
  Nov 25 13:07:08.676: INFO: Resource quota "e2e-rq-status-cxskp" reports spec: hard cpu limit of 500m
  Nov 25 13:07:08.676: INFO: Resource quota "e2e-rq-status-cxskp" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-cxskp" /status @ 11/25/23 13:07:08.676
  STEP: Confirm /status for "e2e-rq-status-cxskp" resourceQuota via watch @ 11/25/23 13:07:08.684
  Nov 25 13:07:08.685: INFO: observed resourceQuota "e2e-rq-status-cxskp" in namespace "resourcequota-1774" with hard status: v1.ResourceList(nil)
  Nov 25 13:07:08.685: INFO: Found resourceQuota "e2e-rq-status-cxskp" in namespace "resourcequota-1774" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Nov 25 13:07:08.685: INFO: ResourceQuota "e2e-rq-status-cxskp" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 11/25/23 13:07:08.688
  Nov 25 13:07:08.696: INFO: Resource quota "e2e-rq-status-cxskp" reports spec: hard cpu limit of 1
  Nov 25 13:07:08.696: INFO: Resource quota "e2e-rq-status-cxskp" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-cxskp" /status @ 11/25/23 13:07:08.696
  STEP: Confirm /status for "e2e-rq-status-cxskp" resourceQuota via watch @ 11/25/23 13:07:08.702
  Nov 25 13:07:08.703: INFO: observed resourceQuota "e2e-rq-status-cxskp" in namespace "resourcequota-1774" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Nov 25 13:07:08.703: INFO: Found resourceQuota "e2e-rq-status-cxskp" in namespace "resourcequota-1774" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Nov 25 13:07:08.703: INFO: ResourceQuota "e2e-rq-status-cxskp" /status was patched
  STEP: Get "e2e-rq-status-cxskp" /status @ 11/25/23 13:07:08.703
  Nov 25 13:07:08.706: INFO: Resourcequota "e2e-rq-status-cxskp" reports status: hard cpu of 1
  Nov 25 13:07:08.706: INFO: Resourcequota "e2e-rq-status-cxskp" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-cxskp" /status before checking Spec is unchanged @ 11/25/23 13:07:08.709
  Nov 25 13:07:08.714: INFO: Resourcequota "e2e-rq-status-cxskp" reports status: hard cpu of 2
  Nov 25 13:07:08.714: INFO: Resourcequota "e2e-rq-status-cxskp" reports status: hard memory of 2Gi
  Nov 25 13:07:08.716: INFO: Found resourceQuota "e2e-rq-status-cxskp" in namespace "resourcequota-1774" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E1125 13:07:09.178707      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:10.179005      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:11.179097      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:12.179817      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:13.179886      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:14.180581      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:15.180703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:16.180779      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:17.181384      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:18.181600      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:19.182637      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:20.182974      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:21.183229      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:22.183291      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:23.183371      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:24.184084      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:25.184258      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:26.184315      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:27.184517      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:28.184591      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:29.184652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:30.185456      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:31.185713      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:32.186730      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:33.186810      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:34.187354      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:35.186941      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:36.187012      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:37.187204      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:38.187292      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:39.187386      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:40.187639      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:41.187839      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:42.188034      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:43.188227      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:44.188371      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:45.188746      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:46.188832      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:47.189771      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:48.189883      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:49.189976      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:50.190718      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:51.190803      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:52.190986      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:53.191059      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:54.191109      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:55.191452      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:56.191518      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:57.191861      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:58.191961      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:07:59.192041      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:00.192158      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:01.192248      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:02.192407      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:03.192495      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:04.192597      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:05.193308      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:06.193492      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:07.193647      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:08.194611      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:09.195186      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:10.196021      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:11.196224      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:12.196325      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:13.196424      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:14.197004      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:15.197658      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:16.197719      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:17.198663      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:18.198835      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:19.198942      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:20.199022      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:21.199256      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:22.199344      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:23.199458      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:24.199538      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:25.199636      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:26.200212      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:27.200237      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:28.200303      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:29.200421      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:30.200805      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:31.200914      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:32.201010      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:33.201103      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:34.201989      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:35.202703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:36.203700      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:37.203808      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:38.203908      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:39.204013      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:40.204410      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:41.204676      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:42.204771      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:43.205188      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:44.205493      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:45.205641      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:46.205733      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:47.205809      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:48.205919      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:49.206008      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:50.206683      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:51.206884      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:52.206979      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:53.207292      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:54.207401      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:55.207604      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:56.207685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:57.207864      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:58.207946      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:08:59.208051      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:00.208654      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:01.208782      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:02.208851      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:03.209883      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:04.209972      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:05.210680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:06.210780      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:07.211507      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:08.211591      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:09.212525      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:10.212812      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:11.213011      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:12.213092      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:13.213185      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:14.213284      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:15.213634      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:16.213833      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:17.213932      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:18.214705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:19.214797      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:20.214958      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:21.215031      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:22.215211      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:23.215530      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:24.215622      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:25.216106      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:26.216210      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:27.216281      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:28.216343      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:29.217056      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:30.217446      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:31.217812      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:32.217895      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:33.218679      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:34.219128      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:35.219478      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:36.220531      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:37.221373      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:38.221618      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:39.221784      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:40.221860      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:41.222681      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:42.222776      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:43.222959      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:44.223354      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:45.223453      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:46.223758      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:47.224245      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:48.224334      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:49.224434      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:50.224522      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:51.224741      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:52.224859      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:53.224945      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:54.225044      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:55.225613      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:56.226687      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:57.226880      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:58.227022      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:09:59.227516      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:00.227632      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:01.227818      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:02.227915      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:03.228669      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:04.229099      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:05.229612      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:06.230645      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:07.230774      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:08.230867      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:09.231370      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:10.231768      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:11.231863      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:12.232594      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:13.232894      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:14.232962      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:15.233055      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:16.233229      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:17.233420      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:18.233615      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:19.234678      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:20.235009      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:21.235888      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:22.236028      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:23.236729      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:24.236795      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:25.237794      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:26.237890      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:27.237979      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:28.238706      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:29.239477      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:30.240546      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:31.240636      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:32.241084      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:33.241340      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:34.242007      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:35.242417      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:36.242511      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:37.242612      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:38.242709      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:39.242804      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:40.242915      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:41.242973      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:42.243441      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:43.243730      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:44.244056      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:45.244449      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:46.244543      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:47.244648      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:48.244737      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:49.244861      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:50.245129      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:51.245247      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:52.245307      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:53.245468      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:54.246537      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:55.246629      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:56.246724      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:57.246913      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:58.247090      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:10:59.248038      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:00.248617      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:01.248725      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:02.249033      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:03.249143      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:04.249791      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:05.250682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:06.250858      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:07.251035      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:08.251238      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:09.251462      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:10.251747      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:11.252033      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:12.253019      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:13.253245      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:14.254197      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:15.255090      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:16.255179      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:17.255272      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:18.255449      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:19.255547      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:20.255820      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:21.255976      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:22.256182      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:23.256351      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:24.256445      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:25.256775      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:26.256875      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:27.256964      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:28.257562      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:29.258616      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:30.258776      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:31.258944      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:32.259041      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:33.259140      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:34.259556      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:35.259880      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:36.260278      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:37.260494      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:38.260642      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:39.261663      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:40.261758      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:41.262679      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:42.263352      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:43.263553      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:44.263619      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:45.264196      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:46.264281      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:47.264485      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:48.264603      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:49.265245      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:50.265435      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:51.265592      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:52.265643      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:53.266681      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:54.267054      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:55.267448      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:56.267626      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:57.267690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:11:58.267786      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:11:58.722: INFO: ResourceQuota "e2e-rq-status-cxskp" Spec was unchanged and /status reset
  Nov 25 13:11:58.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1774" for this suite. @ 11/25/23 13:11:58.726
• [290.090 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 11/25/23 13:11:58.735
  Nov 25 13:11:58.735: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename conformance-tests @ 11/25/23 13:11:58.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:11:58.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:11:58.757
  STEP: Getting node addresses @ 11/25/23 13:11:58.759
  Nov 25 13:11:58.759: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Nov 25 13:11:58.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7900" for this suite. @ 11/25/23 13:11:58.771
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 11/25/23 13:11:58.779
  Nov 25 13:11:58.779: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:11:58.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:11:58.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:11:58.801
  STEP: Creating configMap with name projected-configmap-test-volume-267b2ce9-6eda-48bb-a1d3-98a6b9b3ef05 @ 11/25/23 13:11:58.804
  STEP: Creating a pod to test consume configMaps @ 11/25/23 13:11:58.81
  E1125 13:11:59.268113      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:00.268216      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:01.268297      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:02.268394      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:12:02.835
  Nov 25 13:12:02.839: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-projected-configmaps-bbe32d55-00b1-4c08-bc18-c0abe16e3be1 container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 13:12:02.86
  Nov 25 13:12:02.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4871" for this suite. @ 11/25/23 13:12:02.885
• [4.121 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 11/25/23 13:12:02.901
  Nov 25 13:12:02.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:12:02.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:12:02.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:12:02.928
  STEP: Creating projection with secret that has name projected-secret-test-38649692-806b-45f8-93c2-b49e4663f171 @ 11/25/23 13:12:02.931
  STEP: Creating a pod to test consume secrets @ 11/25/23 13:12:02.937
  E1125 13:12:03.269284      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:04.269398      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:05.269918      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:06.270022      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:12:06.964
  Nov 25 13:12:06.966: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-projected-secrets-de7ef012-c5f6-4a83-a99e-33fcd9f6ad00 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 13:12:06.977
  Nov 25 13:12:06.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4500" for this suite. @ 11/25/23 13:12:06.995
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 11/25/23 13:12:07.002
  Nov 25 13:12:07.002: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:12:07.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:12:07.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:12:07.066
  STEP: Creating secret with name s-test-opt-del-3589276d-a530-4afa-b324-5e526b462fa3 @ 11/25/23 13:12:07.072
  STEP: Creating secret with name s-test-opt-upd-b9d3b85f-b57d-42be-9d4c-5ced5b59e89a @ 11/25/23 13:12:07.076
  STEP: Creating the pod @ 11/25/23 13:12:07.08
  E1125 13:12:07.271034      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:08.271264      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-3589276d-a530-4afa-b324-5e526b462fa3 @ 11/25/23 13:12:09.113
  STEP: Updating secret s-test-opt-upd-b9d3b85f-b57d-42be-9d4c-5ced5b59e89a @ 11/25/23 13:12:09.118
  STEP: Creating secret with name s-test-opt-create-29647c92-1208-4905-bef9-9341c17ceb56 @ 11/25/23 13:12:09.123
  STEP: waiting to observe update in volume @ 11/25/23 13:12:09.127
  E1125 13:12:09.272104      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:10.272322      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:11.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6977" for this suite. @ 11/25/23 13:12:11.16
• [4.164 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 11/25/23 13:12:11.166
  Nov 25 13:12:11.166: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-probe @ 11/25/23 13:12:11.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:12:11.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:12:11.186
  STEP: Creating pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534 @ 11/25/23 13:12:11.189
  E1125 13:12:11.272731      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:12.272828      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/25/23 13:12:13.202
  Nov 25 13:12:13.206: INFO: Initial restart count of pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 is 0
  Nov 25 13:12:13.209: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:13.273441      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:14.273558      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:15.212: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:15.273624      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:16.274714      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:17.215: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:17.275769      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:18.275963      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:19.218: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:19.275976      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:20.276123      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:21.222: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:21.276319      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:22.276440      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:23.225: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:23.277137      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:24.277241      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:25.229: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:25.277740      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:26.277886      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:27.233: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:27.278258      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:28.278705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:29.236: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:29.279652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:30.279943      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:31.240: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:31.280697      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:32.280780      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:33.244: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:33.281218      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:34.281293      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:35.248: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:35.282269      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:36.282449      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:37.251: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:37.282663      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:38.282775      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:39.255: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:39.283399      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:40.283656      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:41.258: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:41.284700      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:42.284824      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:43.263: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:43.285588      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:44.285643      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:45.266: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:45.285942      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:46.286049      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:47.269: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:47.286957      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:48.287122      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:49.273: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:49.287714      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:50.288031      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:51.276: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:51.288837      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:52.288951      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:53.280: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:53.289682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:54.289822      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:55.284: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:55.290401      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:56.290532      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:57.287: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:12:57.290996      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:58.291118      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:12:59.291765      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:12:59.291: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:00.292034      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:01.292128      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:01.295: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:02.292243      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:03.292335      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:03.300: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:04.292595      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:05.293046      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:05.303: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:06.293126      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:07.293314      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:07.306: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:08.293382      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:09.293639      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:09.309: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:10.294703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:11.294796      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:11.313: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:12.294887      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:13.295146      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:13.318: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:14.296009      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:15.296418      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:15.321: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:16.296491      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:17.296593      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:17.326: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:18.296702      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:19.296763      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:19.329: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:20.297123      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:21.297238      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:21.333: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:22.297715      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:23.297847      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:23.337: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:24.298751      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:25.298920      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:25.341: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:26.299010      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:27.299109      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:27.345: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:28.299491      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:29.299586      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:29.348: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:30.299776      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:31.299955      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:31.352: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:32.300041      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:33.300261      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:33.356: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:34.300682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:35.300471      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:35.360: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:36.300525      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:37.300703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:37.363: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:38.301322      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:39.301416      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:39.367: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:40.301441      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:41.301619      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:41.370: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:42.301711      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:43.302679      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:43.375: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:44.302776      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:45.303271      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:45.379: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:46.303349      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:47.303536      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:47.382: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:48.303627      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:49.303798      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:49.386: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:50.304643      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:51.304734      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:51.390: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:52.305220      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:53.305409      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:53.394: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:54.305445      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:55.305626      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:55.398: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:56.306678      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:57.306792      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:57.401: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:13:58.306816      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:13:59.307594      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:13:59.405: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:00.307688      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:01.307893      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:01.409: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:02.308014      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:03.308932      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:03.414: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:04.309925      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:05.310646      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:05.419: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:06.311244      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:07.311592      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:07.423: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:08.311689      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:09.312752      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:09.427: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:10.312853      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:11.313016      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:11.431: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:12.313234      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:13.313314      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:13.434: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:14.313623      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:15.313976      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:15.438: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:16.314099      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:17.314679      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:17.442: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:18.314767      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:19.314864      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:19.446: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:20.315305      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:21.315487      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:21.453: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:22.315581      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:23.315894      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:23.458: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:24.316418      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:25.316508      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:25.462: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:26.316603      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:27.317363      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:27.465: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:28.317619      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:29.318685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:29.469: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:30.319145      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:31.319238      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:31.473: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:32.319429      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:33.319529      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:33.477: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:34.320285      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:35.320375      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:35.482: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:36.321088      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:37.321277      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:37.485: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:38.321616      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:39.321704      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:39.489: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:40.321799      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:41.322645      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:41.493: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:42.322745      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:43.322840      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:43.498: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:44.323772      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:45.324327      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:45.502: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:46.325307      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:47.325403      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:47.506: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:48.325530      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:49.325620      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:49.510: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:50.326682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:51.326871      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:51.515: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:52.327187      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:53.327382      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:53.520: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:54.328176      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:55.329177      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:55.524: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:56.329671      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:57.329759      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:57.528: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:14:58.330452      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:14:59.330646      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:14:59.533: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:00.331551      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:01.331881      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:01.537: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:02.331992      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:03.332117      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:03.541: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:04.332134      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:05.332224      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:05.545: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:06.332331      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:07.333136      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:07.549: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:08.333180      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:09.333422      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:09.554: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:10.333615      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:11.334680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:11.558: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:12.335233      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:13.335330      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:13.563: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:14.335829      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:15.336050      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:15.566: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:16.336152      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:17.336340      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:17.570: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:18.336433      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:19.336509      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:19.574: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:20.336854      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:21.337166      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:21.577: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:22.337620      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:23.337724      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:23.582: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:24.337783      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:25.338108      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:25.587: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:26.338690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:27.338777      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:27.591: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:28.339566      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:29.340344      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:29.595: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:30.341075      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:31.341262      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:31.598: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:32.341642      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:33.342708      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:33.603: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:34.346617      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:35.346704      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:35.607: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:36.347573      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:37.347716      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:37.611: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:38.347780      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:39.348078      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:39.615: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:40.348427      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:41.348534      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:41.619: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:42.348643      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:43.348712      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:43.623: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:44.349676      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:45.350677      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:45.627: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:46.351321      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:47.351381      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:47.631: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:48.351476      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:49.352088      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:49.634: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:50.352373      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:51.352539      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:51.638: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:52.353031      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:53.353129      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:53.642: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:54.353978      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:55.354068      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:55.645: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:56.354172      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:57.354683      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:57.649: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:15:58.355546      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:15:59.355845      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:15:59.653: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:16:00.356393      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:01.357171      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:16:01.657: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:16:02.357265      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:03.357428      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:16:03.662: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:16:04.358172      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:05.358703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:16:05.666: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:16:06.359170      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:07.359252      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:16:07.680: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:16:08.359372      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:09.360222      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:16:09.685: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:16:10.361095      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:11.362140      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:16:11.689: INFO: Get pod test-webserver-e3736625-de03-4850-a097-4f4e6f73e267 in namespace container-probe-5534
  E1125 13:16:12.362706      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:13.362796      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:16:13.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 13:16:13.694
  STEP: Destroying namespace "container-probe-5534" for this suite. @ 11/25/23 13:16:13.709
• [242.550 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 11/25/23 13:16:13.717
  Nov 25 13:16:13.717: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename sched-preemption @ 11/25/23 13:16:13.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:16:13.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:16:13.739
  Nov 25 13:16:13.755: INFO: Waiting up to 1m0s for all nodes to be ready
  E1125 13:16:14.363684      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:15.363777      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:16.364008      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:17.364086      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:18.364825      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:19.365319      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:20.365401      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:21.365744      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:22.366783      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:23.367634      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:24.368655      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:25.368756      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:26.368849      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:27.369901      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:28.369991      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:29.370275      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:30.370405      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:31.370501      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:32.370590      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:33.370687      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:34.371570      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:35.371812      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:36.372756      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:37.372970      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:38.373101      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:39.374087      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:40.374188      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:41.374290      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:42.374687      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:43.374774      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:44.375681      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:45.375873      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:46.375970      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:47.376166      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:48.376257      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:49.377271      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:50.377639      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:51.378690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:52.379495      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:53.379595      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:54.380013      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:55.380246      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:56.381002      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:57.381208      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:58.381306      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:16:59.381805      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:00.382682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:01.382875      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:02.382962      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:03.383076      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:04.383666      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:05.383765      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:06.383869      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:07.383962      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:08.384156      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:09.384469      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:10.384553      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:11.384743      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:12.385285      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:13.385514      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:17:13.779: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/25/23 13:17:13.782
  Nov 25 13:17:13.802: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Nov 25 13:17:13.811: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Nov 25 13:17:13.833: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Nov 25 13:17:13.840: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Nov 25 13:17:13.870: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Nov 25 13:17:13.879: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/25/23 13:17:13.879
  E1125 13:17:14.385780      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:15.386704      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 11/25/23 13:17:15.901
  E1125 13:17:16.387690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:17.387902      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:18.388437      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:19.388742      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:17:19.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2716" for this suite. @ 11/25/23 13:17:19.977
• [66.266 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 11/25/23 13:17:19.984
  Nov 25 13:17:19.984: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename init-container @ 11/25/23 13:17:19.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:17:20.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:17:20.005
  STEP: creating the pod @ 11/25/23 13:17:20.008
  Nov 25 13:17:20.008: INFO: PodSpec: initContainers in spec.initContainers
  E1125 13:17:20.389753      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:21.390740      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:22.391133      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:17:23.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8356" for this suite. @ 11/25/23 13:17:23.35
• [3.371 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 11/25/23 13:17:23.356
  Nov 25 13:17:23.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 13:17:23.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:17:23.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:17:23.374
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2438 @ 11/25/23 13:17:23.381
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/25/23 13:17:23.389
  STEP: creating service externalsvc in namespace services-2438 @ 11/25/23 13:17:23.389
  E1125 13:17:23.392215      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller externalsvc in namespace services-2438 @ 11/25/23 13:17:23.408
  I1125 13:17:23.419523      17 runners.go:197] Created replication controller with name: externalsvc, namespace: services-2438, replica count: 2
  E1125 13:17:24.393061      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:25.394145      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:26.394167      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1125 13:17:26.471448      17 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 11/25/23 13:17:26.475
  Nov 25 13:17:26.486: INFO: Creating new exec pod
  E1125 13:17:27.394262      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:28.394700      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:17:28.507: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-2438 exec execpodshgvr -- /bin/sh -x -c nslookup clusterip-service.services-2438.svc.cluster.local'
  Nov 25 13:17:28.687: INFO: stderr: "+ nslookup clusterip-service.services-2438.svc.cluster.local\n"
  Nov 25 13:17:28.688: INFO: stdout: "Server:\t\t10.152.183.212\nAddress:\t10.152.183.212#53\n\nclusterip-service.services-2438.svc.cluster.local\tcanonical name = externalsvc.services-2438.svc.cluster.local.\nName:\texternalsvc.services-2438.svc.cluster.local\nAddress: 10.152.183.120\n\n"
  Nov 25 13:17:28.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-2438, will wait for the garbage collector to delete the pods @ 11/25/23 13:17:28.691
  Nov 25 13:17:28.754: INFO: Deleting ReplicationController externalsvc took: 7.182544ms
  Nov 25 13:17:28.855: INFO: Terminating ReplicationController externalsvc pods took: 101.052424ms
  E1125 13:17:29.395113      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:30.395443      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:31.396351      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:17:32.173: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-2438" for this suite. @ 11/25/23 13:17:32.184
• [8.835 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 11/25/23 13:17:32.191
  Nov 25 13:17:32.191: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:17:32.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:17:32.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:17:32.208
  STEP: Creating configMap with name projected-configmap-test-volume-d424c51e-c474-487b-888e-afd89408e99c @ 11/25/23 13:17:32.211
  STEP: Creating a pod to test consume configMaps @ 11/25/23 13:17:32.216
  E1125 13:17:32.396769      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:33.396865      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:34.397449      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:35.397652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:17:36.235
  Nov 25 13:17:36.238: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-projected-configmaps-eeb796c1-786f-4985-91be-74eb37fa90b4 container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 13:17:36.255
  Nov 25 13:17:36.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8171" for this suite. @ 11/25/23 13:17:36.274
• [4.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 11/25/23 13:17:36.281
  Nov 25 13:17:36.281: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename proxy @ 11/25/23 13:17:36.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:17:36.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:17:36.294
  Nov 25 13:17:36.298: INFO: Creating pod...
  E1125 13:17:36.397703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:37.398704      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:17:38.315: INFO: Creating service...
  Nov 25 13:17:38.324: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8734/pods/agnhost/proxy?method=DELETE
  Nov 25 13:17:38.338: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov 25 13:17:38.338: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8734/pods/agnhost/proxy?method=OPTIONS
  Nov 25 13:17:38.341: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov 25 13:17:38.341: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8734/pods/agnhost/proxy?method=PATCH
  Nov 25 13:17:38.344: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov 25 13:17:38.344: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8734/pods/agnhost/proxy?method=POST
  Nov 25 13:17:38.347: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov 25 13:17:38.347: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8734/pods/agnhost/proxy?method=PUT
  Nov 25 13:17:38.350: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov 25 13:17:38.351: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8734/services/e2e-proxy-test-service/proxy?method=DELETE
  Nov 25 13:17:38.355: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov 25 13:17:38.355: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8734/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Nov 25 13:17:38.360: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov 25 13:17:38.361: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8734/services/e2e-proxy-test-service/proxy?method=PATCH
  Nov 25 13:17:38.367: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov 25 13:17:38.367: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8734/services/e2e-proxy-test-service/proxy?method=POST
  Nov 25 13:17:38.373: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov 25 13:17:38.373: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8734/services/e2e-proxy-test-service/proxy?method=PUT
  Nov 25 13:17:38.377: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov 25 13:17:38.377: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8734/pods/agnhost/proxy?method=GET
  Nov 25 13:17:38.379: INFO: http.Client request:GET StatusCode:301
  Nov 25 13:17:38.379: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8734/services/e2e-proxy-test-service/proxy?method=GET
  Nov 25 13:17:38.383: INFO: http.Client request:GET StatusCode:301
  Nov 25 13:17:38.383: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8734/pods/agnhost/proxy?method=HEAD
  Nov 25 13:17:38.386: INFO: http.Client request:HEAD StatusCode:301
  Nov 25 13:17:38.386: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8734/services/e2e-proxy-test-service/proxy?method=HEAD
  Nov 25 13:17:38.390: INFO: http.Client request:HEAD StatusCode:301
  Nov 25 13:17:38.390: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8734" for this suite. @ 11/25/23 13:17:38.393
  E1125 13:17:38.399401      17 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.120 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 11/25/23 13:17:38.401
  Nov 25 13:17:38.401: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename cronjob @ 11/25/23 13:17:38.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:17:38.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:17:38.424
  STEP: Creating a suspended cronjob @ 11/25/23 13:17:38.427
  STEP: Ensuring no jobs are scheduled @ 11/25/23 13:17:38.433
  E1125 13:17:39.400295      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:40.400394      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:41.400478      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:42.400581      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:43.400662      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:44.401628      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:45.401722      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:46.401815      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:47.401911      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:48.401987      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:49.402445      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:50.403163      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:51.403232      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:52.403437      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:53.403541      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:54.403967      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:55.404063      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:56.404163      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:57.404240      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:58.404414      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:17:59.405312      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:00.405411      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:01.405647      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:02.405721      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:03.406679      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:04.407127      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:05.407344      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:06.407439      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:07.407551      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:08.407648      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:09.408243      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:10.408344      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:11.408432      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:12.408529      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:13.408762      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:14.409718      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:15.409817      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:16.410831      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:17.410934      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:18.411027      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:19.411309      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:20.411485      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:21.411580      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:22.411904      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:23.411986      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:24.412458      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:25.412544      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:26.412640      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:27.412861      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:28.413041      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:29.413404      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:30.413515      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:31.413639      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:32.413727      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:33.413826      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:34.414215      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:35.414322      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:36.414710      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:37.414862      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:38.415075      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:39.415319      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:40.415416      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:41.415486      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:42.415588      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:43.415682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:44.416126      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:45.416240      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:46.416330      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:47.416427      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:48.416514      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:49.416950      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:50.417045      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:51.417140      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:52.417233      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:53.417630      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:54.418708      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:55.418821      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:56.418863      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:57.418963      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:58.419044      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:18:59.419315      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:00.420194      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:01.420265      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:02.421307      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:03.421637      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:04.422058      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:05.422690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:06.422861      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:07.422942      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:08.432566      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:09.433549      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:10.434036      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:11.434843      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:12.435732      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:13.435841      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:14.436872      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:15.437001      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:16.437463      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:17.437613      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:18.437830      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:19.438109      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:20.439026      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:21.440001      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:22.440231      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:23.440398      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:24.440894      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:25.441081      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:26.441947      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:27.442832      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:28.443218      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:29.443468      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:30.443772      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:31.443880      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:32.444201      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:33.445097      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:34.445138      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:35.445305      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:36.445557      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:37.445622      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:38.446225      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:39.446279      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:40.446383      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:41.446504      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:42.446652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:43.446851      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:44.447201      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:45.447304      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:46.447920      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:47.448036      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:48.448643      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:49.449336      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:50.449955      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:51.450069      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:52.451008      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:53.451221      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:54.451242      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:55.451429      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:56.452406      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:57.452520      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:58.453337      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:19:59.454350      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:00.454644      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:01.454864      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:02.455043      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:03.455159      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:04.456094      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:05.456287      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:06.456745      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:07.456858      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:08.457189      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:09.457291      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:10.457541      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:11.457622      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:12.458499      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:13.458720      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:14.459112      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:15.459225      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:16.459672      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:17.459781      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:18.460571      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:19.460846      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:20.461077      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:21.461254      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:22.461793      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:23.462680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:24.463456      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:25.463570      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:26.464534      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:27.465091      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:28.465470      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:29.465754      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:30.466385      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:31.467368      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:32.467652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:33.468620      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:34.469190      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:35.469286      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:36.469583      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:37.469698      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:38.469980      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:39.470113      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:40.470304      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:41.470685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:42.471354      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:43.471565      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:44.472342      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:45.472504      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:46.473322      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:47.473527      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:48.474164      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:49.474301      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:50.475354      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:51.475545      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:52.476397      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:53.476704      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:54.476917      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:55.477292      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:56.477532      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:57.477630      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:58.478150      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:20:59.478430      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:00.478980      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:01.479912      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:02.480569      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:03.481531      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:04.481898      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:05.482684      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:06.482929      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:07.483091      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:08.483472      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:09.483286      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:10.483483      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:11.483665      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:12.483966      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:13.484145      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:14.484405      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:15.484598      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:16.485632      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:17.485742      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:18.486213      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:19.486493      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:20.487268      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:21.487378      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:22.488419      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:23.488548      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:24.488580      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:25.489216      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:26.489433      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:27.489566      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:28.490556      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:29.490857      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:30.491276      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:31.491431      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:32.491662      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:33.491749      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:34.492006      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:35.492582      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:36.493335      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:37.493433      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:38.493913      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:39.494255      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:40.494452      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:41.494652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:42.495611      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:43.495810      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:44.496141      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:45.496281      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:46.497311      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:47.499352      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:48.499959      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:49.500298      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:50.501292      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:51.501396      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:52.502430      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:53.502533      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:54.502563      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:55.502753      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:56.503324      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:57.504159      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:58.504903      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:21:59.505241      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:00.506070      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:01.506673      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:02.506719      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:03.506880      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:04.507177      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:05.507278      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:06.507552      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:07.507731      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:08.508540      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:09.509582      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:10.510368      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:11.510697      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:12.510956      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:13.511141      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:14.511668      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:15.511857      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:16.512157      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:17.513184      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:18.513534      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:19.514430      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:20.514889      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:21.515085      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:22.515238      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:23.515353      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:24.516406      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:25.516585      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:26.517455      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:27.517637      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:28.518235      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:29.518644      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:30.518675      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:31.518793      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:32.519018      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:33.519125      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:34.519660      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:35.519766      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:36.520778      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:37.520875      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 11/25/23 13:22:38.44
  STEP: Removing cronjob @ 11/25/23 13:22:38.443
  Nov 25 13:22:38.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7455" for this suite. @ 11/25/23 13:22:38.451
• [300.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 11/25/23 13:22:38.459
  Nov 25 13:22:38.459: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pods @ 11/25/23 13:22:38.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:22:38.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:22:38.477
  STEP: creating a Pod with a static label @ 11/25/23 13:22:38.484
  STEP: watching for Pod to be ready @ 11/25/23 13:22:38.491
  Nov 25 13:22:38.493: INFO: observed Pod pod-test in namespace pods-9841 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Nov 25 13:22:38.501: INFO: observed Pod pod-test in namespace pods-9841 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:22:38 +0000 UTC  }]
  E1125 13:22:38.521861      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:22:38.527: INFO: observed Pod pod-test in namespace pods-9841 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:22:38 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:22:38 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:22:38 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:22:38 +0000 UTC  }]
  E1125 13:22:39.522073      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:22:39.942: INFO: Found Pod pod-test in namespace pods-9841 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:22:38 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:22:39 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:22:39 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:22:38 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 11/25/23 13:22:39.945
  STEP: getting the Pod and ensuring that it's patched @ 11/25/23 13:22:39.959
  STEP: replacing the Pod's status Ready condition to False @ 11/25/23 13:22:39.962
  STEP: check the Pod again to ensure its Ready conditions are False @ 11/25/23 13:22:39.972
  STEP: deleting the Pod via a Collection with a LabelSelector @ 11/25/23 13:22:39.972
  STEP: watching for the Pod to be deleted @ 11/25/23 13:22:39.979
  Nov 25 13:22:39.981: INFO: observed event type MODIFIED
  E1125 13:22:40.522704      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:41.523068      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:22:41.946: INFO: observed event type MODIFIED
  Nov 25 13:22:42.192: INFO: observed event type MODIFIED
  E1125 13:22:42.523659      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:22:42.950: INFO: observed event type MODIFIED
  Nov 25 13:22:42.958: INFO: observed event type MODIFIED
  Nov 25 13:22:42.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9841" for this suite. @ 11/25/23 13:22:42.973
• [4.521 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 11/25/23 13:22:42.981
  Nov 25 13:22:42.981: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 13:22:42.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:22:42.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:22:43.002
  STEP: Starting the proxy @ 11/25/23 13:22:43.004
  Nov 25 13:22:43.005: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-9430 proxy --unix-socket=/tmp/kubectl-proxy-unix3993428565/test'
  STEP: retrieving proxy /api/ output @ 11/25/23 13:22:43.048
  Nov 25 13:22:43.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9430" for this suite. @ 11/25/23 13:22:43.052
• [0.077 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 11/25/23 13:22:43.059
  Nov 25 13:22:43.059: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 13:22:43.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:22:43.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:22:43.075
  STEP: fetching services @ 11/25/23 13:22:43.078
  Nov 25 13:22:43.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9169" for this suite. @ 11/25/23 13:22:43.084
• [0.032 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 11/25/23 13:22:43.092
  Nov 25 13:22:43.092: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename var-expansion @ 11/25/23 13:22:43.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:22:43.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:22:43.109
  STEP: Creating a pod to test substitution in container's command @ 11/25/23 13:22:43.112
  E1125 13:22:43.524262      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:44.525097      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:45.525549      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:46.525650      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:22:47.132
  Nov 25 13:22:47.135: INFO: Trying to get logs from node ip-172-31-85-186 pod var-expansion-90837f0f-82f0-4cd1-a686-d0c564dcaa55 container dapi-container: <nil>
  STEP: delete the pod @ 11/25/23 13:22:47.153
  Nov 25 13:22:47.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8801" for this suite. @ 11/25/23 13:22:47.171
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 11/25/23 13:22:47.18
  Nov 25 13:22:47.180: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename subjectreview @ 11/25/23 13:22:47.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:22:47.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:22:47.197
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8599" @ 11/25/23 13:22:47.199
  Nov 25 13:22:47.203: INFO: saUsername: "system:serviceaccount:subjectreview-8599:e2e"
  Nov 25 13:22:47.203: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8599"}
  Nov 25 13:22:47.203: INFO: saUID: "eb2b6582-a2c1-4355-a762-1f80adf138ac"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8599:e2e" @ 11/25/23 13:22:47.203
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8599:e2e" @ 11/25/23 13:22:47.204
  Nov 25 13:22:47.205: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8599:e2e" api 'list' configmaps in "subjectreview-8599" namespace @ 11/25/23 13:22:47.205
  Nov 25 13:22:47.207: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8599:e2e" @ 11/25/23 13:22:47.207
  Nov 25 13:22:47.209: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Nov 25 13:22:47.209: INFO: LocalSubjectAccessReview has been verified
  Nov 25 13:22:47.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8599" for this suite. @ 11/25/23 13:22:47.212
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 11/25/23 13:22:47.223
  Nov 25 13:22:47.223: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 13:22:47.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:22:47.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:22:47.24
  STEP: Setting up server cert @ 11/25/23 13:22:47.262
  E1125 13:22:47.526677      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 13:22:47.639
  STEP: Deploying the webhook pod @ 11/25/23 13:22:47.647
  STEP: Wait for the deployment to be ready @ 11/25/23 13:22:47.659
  Nov 25 13:22:47.665: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1125 13:22:48.527494      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:49.528452      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/25/23 13:22:49.676
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 13:22:49.686
  E1125 13:22:50.529380      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:22:50.687: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 11/25/23 13:22:50.693
  STEP: create a pod that should be updated by the webhook @ 11/25/23 13:22:50.722
  Nov 25 13:22:50.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6496" for this suite. @ 11/25/23 13:22:50.837
  STEP: Destroying namespace "webhook-markers-7054" for this suite. @ 11/25/23 13:22:50.843
• [3.627 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 11/25/23 13:22:50.851
  Nov 25 13:22:50.851: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 13:22:50.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:22:50.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:22:50.871
  STEP: Creating a pod to test downward api env vars @ 11/25/23 13:22:50.874
  E1125 13:22:51.530209      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:52.530701      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:53.530845      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:54.531840      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:22:54.892
  Nov 25 13:22:54.895: INFO: Trying to get logs from node ip-172-31-85-186 pod downward-api-1f340095-0ca9-41b5-a551-edca48d766b5 container dapi-container: <nil>
  STEP: delete the pod @ 11/25/23 13:22:54.902
  Nov 25 13:22:54.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5578" for this suite. @ 11/25/23 13:22:54.922
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 11/25/23 13:22:54.93
  Nov 25 13:22:54.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename security-context @ 11/25/23 13:22:54.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:22:54.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:22:54.948
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/25/23 13:22:54.951
  E1125 13:22:55.531951      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:56.532254      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:57.532275      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:22:58.533191      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:22:58.969
  Nov 25 13:22:58.973: INFO: Trying to get logs from node ip-172-31-85-186 pod security-context-15de830e-aea7-4c83-8642-52542475d2d9 container test-container: <nil>
  STEP: delete the pod @ 11/25/23 13:22:58.978
  Nov 25 13:22:58.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3438" for this suite. @ 11/25/23 13:22:58.997
• [4.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 11/25/23 13:22:59.005
  Nov 25 13:22:59.005: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename replicaset @ 11/25/23 13:22:59.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:22:59.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:22:59.021
  Nov 25 13:22:59.035: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1125 13:22:59.534089      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:00.534186      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:01.534684      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:02.534782      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:03.534874      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:23:04.038: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/25/23 13:23:04.038
  STEP: Scaling up "test-rs" replicaset  @ 11/25/23 13:23:04.038
  Nov 25 13:23:04.088: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 11/25/23 13:23:04.088
  Nov 25 13:23:04.113: INFO: observed ReplicaSet test-rs in namespace replicaset-3661 with ReadyReplicas 1, AvailableReplicas 1
  Nov 25 13:23:04.122: INFO: observed ReplicaSet test-rs in namespace replicaset-3661 with ReadyReplicas 1, AvailableReplicas 1
  Nov 25 13:23:04.136: INFO: observed ReplicaSet test-rs in namespace replicaset-3661 with ReadyReplicas 1, AvailableReplicas 1
  Nov 25 13:23:04.155: INFO: observed ReplicaSet test-rs in namespace replicaset-3661 with ReadyReplicas 1, AvailableReplicas 1
  E1125 13:23:04.535060      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:23:05.449: INFO: observed ReplicaSet test-rs in namespace replicaset-3661 with ReadyReplicas 2, AvailableReplicas 2
  E1125 13:23:05.535845      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:23:05.648: INFO: observed Replicaset test-rs in namespace replicaset-3661 with ReadyReplicas 3 found true
  Nov 25 13:23:05.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3661" for this suite. @ 11/25/23 13:23:05.656
• [6.659 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 11/25/23 13:23:05.664
  Nov 25 13:23:05.664: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 13:23:05.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:23:05.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:23:05.682
  STEP: validating api versions @ 11/25/23 13:23:05.685
  Nov 25 13:23:05.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-1203 api-versions'
  Nov 25 13:23:05.743: INFO: stderr: ""
  Nov 25 13:23:05.743: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Nov 25 13:23:05.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1203" for this suite. @ 11/25/23 13:23:05.747
• [0.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 11/25/23 13:23:05.756
  Nov 25 13:23:05.756: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 13:23:05.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:23:05.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:23:05.779
  STEP: creating an Endpoint @ 11/25/23 13:23:05.784
  STEP: waiting for available Endpoint @ 11/25/23 13:23:05.788
  STEP: listing all Endpoints @ 11/25/23 13:23:05.789
  STEP: updating the Endpoint @ 11/25/23 13:23:05.792
  STEP: fetching the Endpoint @ 11/25/23 13:23:05.798
  STEP: patching the Endpoint @ 11/25/23 13:23:05.8
  STEP: fetching the Endpoint @ 11/25/23 13:23:05.808
  STEP: deleting the Endpoint by Collection @ 11/25/23 13:23:05.81
  STEP: waiting for Endpoint deletion @ 11/25/23 13:23:05.818
  STEP: fetching the Endpoint @ 11/25/23 13:23:05.819
  Nov 25 13:23:05.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8381" for this suite. @ 11/25/23 13:23:05.825
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 11/25/23 13:23:05.835
  Nov 25 13:23:05.835: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename cronjob @ 11/25/23 13:23:05.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:23:05.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:23:05.852
  STEP: Creating a ReplaceConcurrent cronjob @ 11/25/23 13:23:05.855
  STEP: Ensuring a job is scheduled @ 11/25/23 13:23:05.859
  E1125 13:23:06.536677      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:07.536801      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:08.537288      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:09.537454      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:10.537624      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:11.537711      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:12.538557      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:13.538756      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:14.539779      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:15.539872      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:16.540413      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:17.540603      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:18.540664      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:19.540763      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:20.541108      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:21.541213      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:22.541981      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:23.542084      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:24.543112      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:25.543208      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:26.543302      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:27.543449      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:28.544266      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:29.544368      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:30.544464      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:31.544670      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:32.544766      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:33.544985      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:34.545066      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:35.545255      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:36.546324      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:37.546403      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:38.546428      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:39.546676      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:40.547103      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:41.547254      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:42.548166      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:43.548288      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:44.548791      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:45.548891      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:46.548985      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:47.549857      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:48.549953      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:49.550237      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:50.550679      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:51.550774      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:52.551036      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:53.551528      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:54.552042      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:55.552144      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:56.552667      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:57.552769      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:58.552940      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:23:59.553427      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:00.553614      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:01.553707      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 11/25/23 13:24:01.863
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/25/23 13:24:01.866
  STEP: Ensuring the job is replaced with a new one @ 11/25/23 13:24:01.869
  E1125 13:24:02.554348      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:03.554457      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:04.555114      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:05.555212      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:06.555303      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:07.555509      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:08.555573      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:09.555662      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:10.555705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:11.555896      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:12.556211      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:13.556498      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:14.556563      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:15.556753      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:16.557449      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:17.557612      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:18.558691      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:19.559615      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:20.560033      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:21.560220      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:22.560326      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:23.560694      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:24.560726      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:25.560823      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:26.561064      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:27.561693      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:28.562682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:29.563023      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:30.563679      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:31.563768      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:32.564453      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:33.564593      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:34.565139      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:35.565329      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:36.566237      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:37.566400      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:38.566913      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:39.567293      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:40.567395      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:41.567457      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:42.567528      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:43.567660      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:44.567786      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:45.568091      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:46.568252      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:47.568337      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:48.569286      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:49.569607      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:50.570329      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:51.570678      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:52.571683      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:53.571913      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:54.572745      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:55.572844      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:56.573643      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:57.574685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:58.574775      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:24:59.574989      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:00.575398      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:01.575717      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 11/25/23 13:25:01.873
  Nov 25 13:25:01.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4769" for this suite. @ 11/25/23 13:25:01.885
• [116.059 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 11/25/23 13:25:01.895
  Nov 25 13:25:01.895: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-runtime @ 11/25/23 13:25:01.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:25:01.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:25:01.92
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 11/25/23 13:25:01.931
  E1125 13:25:02.575832      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:03.576792      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:04.577176      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:05.577267      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:06.577707      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:07.577799      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:08.578212      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:09.578327      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:10.578816      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:11.579165      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:12.580154      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:13.580364      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:14.580815      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:15.581231      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 11/25/23 13:25:15.99
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 11/25/23 13:25:15.993
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 11/25/23 13:25:15.999
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 11/25/23 13:25:15.999
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 11/25/23 13:25:16.023
  E1125 13:25:16.581662      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:17.582508      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 11/25/23 13:25:18.037
  E1125 13:25:18.582677      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:19.583439      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 11/25/23 13:25:20.048
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 11/25/23 13:25:20.054
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 11/25/23 13:25:20.054
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 11/25/23 13:25:20.074
  E1125 13:25:20.585781      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 11/25/23 13:25:21.082
  E1125 13:25:21.585845      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:22.585931      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 11/25/23 13:25:23.092
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 11/25/23 13:25:23.098
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 11/25/23 13:25:23.098
  Nov 25 13:25:23.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8153" for this suite. @ 11/25/23 13:25:23.123
• [21.234 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 11/25/23 13:25:23.13
  Nov 25 13:25:23.130: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename replicaset @ 11/25/23 13:25:23.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:25:23.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:25:23.148
  Nov 25 13:25:23.151: INFO: Creating ReplicaSet my-hostname-basic-da54c0b8-0d64-40bb-933a-1812e546082e
  Nov 25 13:25:23.159: INFO: Pod name my-hostname-basic-da54c0b8-0d64-40bb-933a-1812e546082e: Found 0 pods out of 1
  E1125 13:25:23.586777      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:24.586757      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:25.586847      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:26.587174      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:27.587283      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:25:28.164: INFO: Pod name my-hostname-basic-da54c0b8-0d64-40bb-933a-1812e546082e: Found 1 pods out of 1
  Nov 25 13:25:28.164: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-da54c0b8-0d64-40bb-933a-1812e546082e" is running
  Nov 25 13:25:28.167: INFO: Pod "my-hostname-basic-da54c0b8-0d64-40bb-933a-1812e546082e-pmhmk" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-25 13:25:23 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-25 13:25:24 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-25 13:25:24 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-25 13:25:23 +0000 UTC Reason: Message:}])
  Nov 25 13:25:28.167: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/25/23 13:25:28.167
  Nov 25 13:25:28.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2907" for this suite. @ 11/25/23 13:25:28.181
• [5.057 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 11/25/23 13:25:28.187
  Nov 25 13:25:28.187: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 13:25:28.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:25:28.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:25:28.206
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/25/23 13:25:28.21
  E1125 13:25:28.588035      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:29.588429      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:30.588529      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:31.588613      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:25:32.236
  Nov 25 13:25:32.239: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-985ee8f2-b6cd-4438-a57b-22d23a009935 container test-container: <nil>
  STEP: delete the pod @ 11/25/23 13:25:32.255
  Nov 25 13:25:32.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4262" for this suite. @ 11/25/23 13:25:32.273
• [4.093 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 11/25/23 13:25:32.281
  Nov 25 13:25:32.281: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 13:25:32.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:25:32.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:25:32.299
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/25/23 13:25:32.302
  Nov 25 13:25:32.302: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-2768 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Nov 25 13:25:32.370: INFO: stderr: ""
  Nov 25 13:25:32.370: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 11/25/23 13:25:32.37
  Nov 25 13:25:32.370: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-2768 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Nov 25 13:25:32.434: INFO: stderr: ""
  Nov 25 13:25:32.434: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/25/23 13:25:32.434
  Nov 25 13:25:32.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-2768 delete pods e2e-test-httpd-pod'
  E1125 13:25:32.588888      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:33.589107      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:25:34.323: INFO: stderr: ""
  Nov 25 13:25:34.323: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Nov 25 13:25:34.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2768" for this suite. @ 11/25/23 13:25:34.327
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 11/25/23 13:25:34.334
  Nov 25 13:25:34.334: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubelet-test @ 11/25/23 13:25:34.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:25:34.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:25:34.358
  STEP: Waiting for pod completion @ 11/25/23 13:25:34.369
  E1125 13:25:34.590126      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:35.590211      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:36.590302      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:37.590383      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:25:38.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9011" for this suite. @ 11/25/23 13:25:38.391
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 11/25/23 13:25:38.398
  Nov 25 13:25:38.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename security-context-test @ 11/25/23 13:25:38.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:25:38.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:25:38.415
  E1125 13:25:38.590423      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:39.591490      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:40.591877      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:41.591971      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:25:42.441: INFO: Got logs for pod "busybox-privileged-false-200651d7-9600-4c89-9417-b44df5a05f35": "ip: RTNETLINK answers: Operation not permitted\n"
  Nov 25 13:25:42.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7300" for this suite. @ 11/25/23 13:25:42.445
• [4.054 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 11/25/23 13:25:42.453
  Nov 25 13:25:42.453: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/25/23 13:25:42.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:25:42.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:25:42.474
  Nov 25 13:25:42.477: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  E1125 13:25:42.592749      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:25:43.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-51" for this suite. @ 11/25/23 13:25:43.507
• [1.061 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 11/25/23 13:25:43.514
  Nov 25 13:25:43.514: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename svcaccounts @ 11/25/23 13:25:43.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:25:43.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:25:43.535
  E1125 13:25:43.593714      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:44.594065      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 11/25/23 13:25:45.564
  Nov 25 13:25:45.564: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3093 pod-service-account-d2a17b65-d97b-4a60-9f38-867aa39d3662 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  E1125 13:25:45.594878      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 11/25/23 13:25:45.707
  Nov 25 13:25:45.707: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3093 pod-service-account-d2a17b65-d97b-4a60-9f38-867aa39d3662 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 11/25/23 13:25:45.84
  Nov 25 13:25:45.840: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3093 pod-service-account-d2a17b65-d97b-4a60-9f38-867aa39d3662 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Nov 25 13:25:45.986: INFO: Got root ca configmap in namespace "svcaccounts-3093"
  Nov 25 13:25:45.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3093" for this suite. @ 11/25/23 13:25:45.992
• [2.484 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 11/25/23 13:25:45.999
  Nov 25 13:25:45.999: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename replicaset @ 11/25/23 13:25:45.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:25:46.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:25:46.022
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 11/25/23 13:25:46.028
  Nov 25 13:25:46.040: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1125 13:25:46.595870      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:47.596181      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:48.596275      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:49.597237      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:50.597331      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:25:51.044: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/25/23 13:25:51.044
  STEP: getting scale subresource @ 11/25/23 13:25:51.044
  STEP: updating a scale subresource @ 11/25/23 13:25:51.048
  STEP: verifying the replicaset Spec.Replicas was modified @ 11/25/23 13:25:51.054
  STEP: Patch a scale subresource @ 11/25/23 13:25:51.059
  Nov 25 13:25:51.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-303" for this suite. @ 11/25/23 13:25:51.08
• [5.092 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:1030
  STEP: Creating a kubernetes client @ 11/25/23 13:25:51.091
  Nov 25 13:25:51.091: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename statefulset @ 11/25/23 13:25:51.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:25:51.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:25:51.109
  STEP: Creating service test in namespace statefulset-5222 @ 11/25/23 13:25:51.113
  STEP: Creating statefulset ss in namespace statefulset-5222 @ 11/25/23 13:25:51.126
  Nov 25 13:25:51.134: INFO: Found 0 stateful pods, waiting for 1
  E1125 13:25:51.597640      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:52.597718      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:53.597879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:54.598696      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:55.598960      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:56.599139      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:57.599273      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:58.599539      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:25:59.599896      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:00.600189      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:01.138: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 11/25/23 13:26:01.144
  STEP: Getting /status @ 11/25/23 13:26:01.149
  Nov 25 13:26:01.153: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 11/25/23 13:26:01.153
  Nov 25 13:26:01.162: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 11/25/23 13:26:01.162
  Nov 25 13:26:01.164: INFO: Observed &StatefulSet event: ADDED
  Nov 25 13:26:01.164: INFO: Found Statefulset ss in namespace statefulset-5222 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 25 13:26:01.164: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 11/25/23 13:26:01.165
  Nov 25 13:26:01.165: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Nov 25 13:26:01.172: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 11/25/23 13:26:01.172
  Nov 25 13:26:01.173: INFO: Observed &StatefulSet event: ADDED
  Nov 25 13:26:01.173: INFO: Deleting all statefulset in ns statefulset-5222
  Nov 25 13:26:01.176: INFO: Scaling statefulset ss to 0
  E1125 13:26:01.601261      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:02.601366      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:03.601556      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:04.602081      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:05.602199      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:06.602881      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:07.602949      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:08.603148      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:09.603267      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:10.603555      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:11.192: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 25 13:26:11.194: INFO: Deleting statefulset ss
  Nov 25 13:26:11.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5222" for this suite. @ 11/25/23 13:26:11.21
• [20.125 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 11/25/23 13:26:11.217
  Nov 25 13:26:11.217: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename svcaccounts @ 11/25/23 13:26:11.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:26:11.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:26:11.235
  Nov 25 13:26:11.240: INFO: Got root ca configmap in namespace "svcaccounts-3682"
  Nov 25 13:26:11.245: INFO: Deleted root ca configmap in namespace "svcaccounts-3682"
  E1125 13:26:11.604292      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 11/25/23 13:26:11.746
  Nov 25 13:26:11.750: INFO: Recreated root ca configmap in namespace "svcaccounts-3682"
  Nov 25 13:26:11.757: INFO: Updated root ca configmap in namespace "svcaccounts-3682"
  STEP: waiting for the root ca configmap reconciled @ 11/25/23 13:26:12.258
  Nov 25 13:26:12.261: INFO: Reconciled root ca configmap in namespace "svcaccounts-3682"
  Nov 25 13:26:12.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3682" for this suite. @ 11/25/23 13:26:12.265
• [1.055 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:750
  STEP: Creating a kubernetes client @ 11/25/23 13:26:12.273
  Nov 25 13:26:12.273: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename statefulset @ 11/25/23 13:26:12.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:26:12.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:26:12.291
  STEP: Creating service test in namespace statefulset-5130 @ 11/25/23 13:26:12.294
  STEP: Creating stateful set ss in namespace statefulset-5130 @ 11/25/23 13:26:12.3
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5130 @ 11/25/23 13:26:12.307
  Nov 25 13:26:12.311: INFO: Found 0 stateful pods, waiting for 1
  E1125 13:26:12.604843      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:13.604923      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:14.605473      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:15.605672      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:16.605897      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:17.606063      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:18.606167      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:19.606427      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:20.606622      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:21.606721      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:22.314: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 11/25/23 13:26:22.315
  Nov 25 13:26:22.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-5130 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 25 13:26:22.456: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 25 13:26:22.456: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 25 13:26:22.456: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 25 13:26:22.459: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1125 13:26:22.607200      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:23.607397      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:24.607581      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:25.607686      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:26.607721      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:27.608060      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:28.608164      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:29.608440      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:30.608570      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:31.608876      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:32.463: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov 25 13:26:32.464: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov 25 13:26:32.480: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Nov 25 13:26:32.480: INFO: ss-0  ip-172-31-85-186  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:12 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:12 +0000 UTC  }]
  Nov 25 13:26:32.480: INFO: 
  Nov 25 13:26:32.480: INFO: StatefulSet ss has not reached scale 3, at 1
  E1125 13:26:32.609637      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:33.484: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996235225s
  E1125 13:26:33.610411      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:34.488: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991823593s
  E1125 13:26:34.610504      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:35.491: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.988326336s
  E1125 13:26:35.611185      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:36.498: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.984673617s
  E1125 13:26:36.611478      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:37.501: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.978344213s
  E1125 13:26:37.611874      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:38.508: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.974231552s
  E1125 13:26:38.612203      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:39.512: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.968563313s
  E1125 13:26:39.612379      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:40.517: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.964463968s
  E1125 13:26:40.613289      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:41.521: INFO: Verifying statefulset ss doesn't scale past 3 for another 959.518176ms
  E1125 13:26:41.613609      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5130 @ 11/25/23 13:26:42.521
  Nov 25 13:26:42.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-5130 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1125 13:26:42.614354      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:42.663: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 25 13:26:42.663: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 25 13:26:42.663: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 25 13:26:42.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-5130 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 25 13:26:42.818: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Nov 25 13:26:42.818: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 25 13:26:42.818: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 25 13:26:42.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-5130 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 25 13:26:42.962: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Nov 25 13:26:42.962: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 25 13:26:42.962: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 25 13:26:42.965: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E1125 13:26:43.614758      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:44.615694      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:45.615911      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:46.615997      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:47.616090      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:48.616289      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:49.616505      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:50.617120      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:51.617336      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:52.617647      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:26:52.970: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 25 13:26:52.970: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 25 13:26:52.970: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 11/25/23 13:26:52.97
  Nov 25 13:26:52.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-5130 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 25 13:26:53.119: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 25 13:26:53.119: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 25 13:26:53.119: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 25 13:26:53.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-5130 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 25 13:26:53.265: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 25 13:26:53.265: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 25 13:26:53.265: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 25 13:26:53.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=statefulset-5130 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 25 13:26:53.420: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 25 13:26:53.420: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 25 13:26:53.420: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 25 13:26:53.420: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov 25 13:26:53.423: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1125 13:26:53.618720      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:54.618806      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:55.618906      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:56.619665      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:57.620381      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:58.621323      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:26:59.621751      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:00.622687      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:01.622781      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:02.622966      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:27:03.430: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov 25 13:27:03.430: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Nov 25 13:27:03.430: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Nov 25 13:27:03.445: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Nov 25 13:27:03.445: INFO: ss-0  ip-172-31-85-186  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:12 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:12 +0000 UTC  }]
  Nov 25 13:27:03.445: INFO: ss-1  ip-172-31-22-130  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:32 +0000 UTC  }]
  Nov 25 13:27:03.445: INFO: ss-2  ip-172-31-4-198   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:32 +0000 UTC  }]
  Nov 25 13:27:03.445: INFO: 
  Nov 25 13:27:03.445: INFO: StatefulSet ss has not reached scale 0, at 3
  E1125 13:27:03.625481      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:27:04.449: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Nov 25 13:27:04.449: INFO: ss-0  ip-172-31-85-186  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:12 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:53 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:53 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-25 13:26:12 +0000 UTC  }]
  Nov 25 13:27:04.449: INFO: 
  Nov 25 13:27:04.449: INFO: StatefulSet ss has not reached scale 0, at 1
  E1125 13:27:04.626267      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:27:05.452: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.992309798s
  E1125 13:27:05.626614      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:27:06.455: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.988955347s
  E1125 13:27:06.627220      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:27:07.459: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.985479336s
  E1125 13:27:07.627531      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:27:08.462: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.982130318s
  E1125 13:27:08.627759      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:27:09.465: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.978975413s
  E1125 13:27:09.628160      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:27:10.469: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.974879904s
  E1125 13:27:10.628162      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:27:11.473: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.970889205s
  E1125 13:27:11.628848      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:27:12.477: INFO: Verifying statefulset ss doesn't scale past 0 for another 966.876084ms
  E1125 13:27:12.629731      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5130 @ 11/25/23 13:27:13.477
  Nov 25 13:27:13.480: INFO: Scaling statefulset ss to 0
  Nov 25 13:27:13.490: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 25 13:27:13.492: INFO: Deleting all statefulset in ns statefulset-5130
  Nov 25 13:27:13.495: INFO: Scaling statefulset ss to 0
  Nov 25 13:27:13.503: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 25 13:27:13.506: INFO: Deleting statefulset ss
  Nov 25 13:27:13.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5130" for this suite. @ 11/25/23 13:27:13.522
• [61.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 11/25/23 13:27:13.53
  Nov 25 13:27:13.530: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 13:27:13.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:27:13.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:27:13.556
  STEP: Creating configMap with name configmap-test-volume-37afae94-1844-4e18-bc2c-de8935575a13 @ 11/25/23 13:27:13.559
  STEP: Creating a pod to test consume configMaps @ 11/25/23 13:27:13.563
  E1125 13:27:13.630180      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:14.630441      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:15.630896      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:16.631100      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:27:17.581
  Nov 25 13:27:17.584: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-configmaps-0e432e35-a03c-4635-ba38-6e6a590ca3bc container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 13:27:17.597
  Nov 25 13:27:17.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7701" for this suite. @ 11/25/23 13:27:17.615
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 11/25/23 13:27:17.629
  Nov 25 13:27:17.629: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename sched-preemption @ 11/25/23 13:27:17.63
  E1125 13:27:17.632020      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:27:17.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:27:17.651
  Nov 25 13:27:17.665: INFO: Waiting up to 1m0s for all nodes to be ready
  E1125 13:27:18.632185      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:19.632474      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:20.633582      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:21.633629      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:22.633739      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:23.633818      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:24.634344      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:25.634766      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:26.634810      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:27.634890      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:28.635021      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:29.636061      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:30.636695      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:31.637213      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:32.637349      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:33.637432      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:34.637923      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:35.638711      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:36.638744      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:37.639018      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:38.639162      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:39.639410      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:40.639501      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:41.639681      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:42.640497      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:43.641494      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:44.642232      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:45.642326      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:46.643016      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:47.643185      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:48.643985      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:49.644272      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:50.644366      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:51.644416      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:52.645118      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:53.645313      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:54.645400      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:55.645632      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:56.645712      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:57.646682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:58.646774      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:27:59.647719      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:00.647805      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:01.648726      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:02.648794      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:03.648814      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:04.648970      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:05.649814      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:06.649902      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:07.650681      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:08.651745      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:09.652435      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:10.652530      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:11.652692      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:12.652798      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:13.652888      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:14.653332      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:15.653429      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:16.653618      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:17.653713      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:28:17.686: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/25/23 13:28:17.689
  Nov 25 13:28:17.708: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Nov 25 13:28:17.718: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Nov 25 13:28:17.732: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Nov 25 13:28:17.743: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Nov 25 13:28:17.758: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Nov 25 13:28:17.765: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/25/23 13:28:17.765
  E1125 13:28:18.654796      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:19.655570      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 11/25/23 13:28:19.786
  E1125 13:28:20.656354      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:21.656440      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:22.656536      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:23.656632      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:28:23.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1865" for this suite. @ 11/25/23 13:28:23.888
• [66.265 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 11/25/23 13:28:23.894
  Nov 25 13:28:23.894: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename containers @ 11/25/23 13:28:23.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:28:23.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:28:23.913
  E1125 13:28:24.657244      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:25.657349      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:28:25.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4912" for this suite. @ 11/25/23 13:28:25.944
• [2.057 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 11/25/23 13:28:25.952
  Nov 25 13:28:25.952: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 13:28:25.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:28:25.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:28:25.971
  STEP: Creating a pod to test downward api env vars @ 11/25/23 13:28:25.974
  E1125 13:28:26.658335      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:27.658540      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:28.658972      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:29.659062      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:28:29.991
  Nov 25 13:28:29.995: INFO: Trying to get logs from node ip-172-31-4-198 pod downward-api-1b198db6-4f3d-4cf1-8355-d0c55378be01 container dapi-container: <nil>
  STEP: delete the pod @ 11/25/23 13:28:30.013
  Nov 25 13:28:30.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9696" for this suite. @ 11/25/23 13:28:30.032
• [4.086 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 11/25/23 13:28:30.038
  Nov 25 13:28:30.038: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/25/23 13:28:30.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:28:30.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:28:30.067
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 11/25/23 13:28:30.069
  Nov 25 13:28:30.070: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  E1125 13:28:30.659951      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:28:31.548: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  E1125 13:28:31.660376      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:32.660837      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:33.661655      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:34.662534      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:35.663449      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:36.664007      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:28:36.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3959" for this suite. @ 11/25/23 13:28:36.88
• [6.849 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 11/25/23 13:28:36.888
  Nov 25 13:28:36.888: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename endpointslice @ 11/25/23 13:28:36.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:28:36.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:28:36.907
  Nov 25 13:28:36.921: INFO: Endpoints addresses: [172.31.33.137 172.31.72.0] , ports: [6443]
  Nov 25 13:28:36.921: INFO: EndpointSlices addresses: [172.31.33.137 172.31.72.0] , ports: [6443]
  Nov 25 13:28:36.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7493" for this suite. @ 11/25/23 13:28:36.925
• [0.046 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 11/25/23 13:28:36.934
  Nov 25 13:28:36.934: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 13:28:36.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:28:36.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:28:36.955
  STEP: Setting up server cert @ 11/25/23 13:28:36.981
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 13:28:37.239
  STEP: Deploying the webhook pod @ 11/25/23 13:28:37.248
  STEP: Wait for the deployment to be ready @ 11/25/23 13:28:37.263
  Nov 25 13:28:37.270: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1125 13:28:37.664702      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:38.664900      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/25/23 13:28:39.282
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 13:28:39.294
  E1125 13:28:39.665445      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:28:40.294: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/25/23 13:28:40.301
  STEP: create a pod that should be denied by the webhook @ 11/25/23 13:28:40.318
  STEP: create a pod that causes the webhook to hang @ 11/25/23 13:28:40.332
  E1125 13:28:40.665640      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:41.666726      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:42.667485      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:43.667574      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:44.667687      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:45.667773      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:46.668631      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:47.668674      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:48.669618      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:49.670295      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 11/25/23 13:28:50.342
  STEP: create a configmap that should be admitted by the webhook @ 11/25/23 13:28:50.415
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/25/23 13:28:50.426
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/25/23 13:28:50.436
  STEP: create a namespace that bypass the webhook @ 11/25/23 13:28:50.443
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 11/25/23 13:28:50.464
  Nov 25 13:28:50.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-852" for this suite. @ 11/25/23 13:28:50.541
  STEP: Destroying namespace "webhook-markers-1786" for this suite. @ 11/25/23 13:28:50.55
  STEP: Destroying namespace "exempted-namespace-4765" for this suite. @ 11/25/23 13:28:50.558
• [13.631 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 11/25/23 13:28:50.57
  Nov 25 13:28:50.570: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/25/23 13:28:50.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:28:50.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:28:50.591
  STEP: create the container to handle the HTTPGet hook request. @ 11/25/23 13:28:50.601
  E1125 13:28:50.670737      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:51.670980      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 11/25/23 13:28:52.629
  E1125 13:28:52.671408      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:53.671515      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 11/25/23 13:28:54.649
  E1125 13:28:54.671857      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:55.672001      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:56.672755      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:28:57.672974      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 11/25/23 13:28:58.672
  E1125 13:28:58.673707      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:28:58.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3263" for this suite. @ 11/25/23 13:28:58.699
• [8.140 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 11/25/23 13:28:58.714
  Nov 25 13:28:58.714: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:28:58.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:28:58.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:28:58.742
  STEP: Creating configMap with name configmap-projected-all-test-volume-172b436d-b7c5-40ae-818d-d3562c708c8e @ 11/25/23 13:28:58.748
  STEP: Creating secret with name secret-projected-all-test-volume-1f329547-a0d9-44d1-8b5a-b792c344b81c @ 11/25/23 13:28:58.753
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 11/25/23 13:28:58.759
  E1125 13:28:59.674274      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:00.674369      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:01.674456      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:02.674547      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:29:02.786
  Nov 25 13:29:02.791: INFO: Trying to get logs from node ip-172-31-4-198 pod projected-volume-fd489844-d8dc-4052-8010-82b7d73c83d2 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 13:29:02.811
  Nov 25 13:29:02.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9969" for this suite. @ 11/25/23 13:29:02.835
• [4.129 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 11/25/23 13:29:02.842
  Nov 25 13:29:02.842: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 13:29:02.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:29:02.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:29:02.867
  STEP: Creating configMap with name configmap-test-volume-8a22d163-9e1a-4b23-b3c6-f464ce2bdb68 @ 11/25/23 13:29:02.873
  STEP: Creating a pod to test consume configMaps @ 11/25/23 13:29:02.878
  E1125 13:29:03.674647      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:04.674951      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:05.675033      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:06.675216      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:29:06.902
  Nov 25 13:29:06.906: INFO: Trying to get logs from node ip-172-31-4-198 pod pod-configmaps-eb724098-4f62-4d8c-824a-1265eb58d588 container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 13:29:06.913
  Nov 25 13:29:06.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8603" for this suite. @ 11/25/23 13:29:06.934
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 11/25/23 13:29:06.943
  Nov 25 13:29:06.943: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename namespaces @ 11/25/23 13:29:06.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:29:06.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:29:06.962
  STEP: Creating namespace "e2e-ns-pzwjz" @ 11/25/23 13:29:06.966
  Nov 25 13:29:06.987: INFO: Namespace "e2e-ns-pzwjz-7878" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-pzwjz-7878" @ 11/25/23 13:29:06.987
  Nov 25 13:29:06.998: INFO: Namespace "e2e-ns-pzwjz-7878" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-pzwjz-7878" @ 11/25/23 13:29:06.998
  Nov 25 13:29:07.008: INFO: Namespace "e2e-ns-pzwjz-7878" has []v1.FinalizerName{"kubernetes"}
  Nov 25 13:29:07.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9735" for this suite. @ 11/25/23 13:29:07.013
  STEP: Destroying namespace "e2e-ns-pzwjz-7878" for this suite. @ 11/25/23 13:29:07.019
• [0.083 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 11/25/23 13:29:07.025
  Nov 25 13:29:07.025: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename events @ 11/25/23 13:29:07.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:29:07.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:29:07.047
  STEP: Create set of events @ 11/25/23 13:29:07.051
  Nov 25 13:29:07.056: INFO: created test-event-1
  Nov 25 13:29:07.062: INFO: created test-event-2
  Nov 25 13:29:07.066: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 11/25/23 13:29:07.066
  STEP: delete collection of events @ 11/25/23 13:29:07.07
  Nov 25 13:29:07.070: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/25/23 13:29:07.092
  Nov 25 13:29:07.092: INFO: requesting list of events to confirm quantity
  Nov 25 13:29:07.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6989" for this suite. @ 11/25/23 13:29:07.099
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 11/25/23 13:29:07.108
  Nov 25 13:29:07.108: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:29:07.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:29:07.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:29:07.139
  STEP: Creating configMap with name cm-test-opt-del-aed2e864-6e53-4fdc-9164-b5c317a63405 @ 11/25/23 13:29:07.146
  STEP: Creating configMap with name cm-test-opt-upd-2e77d6c1-6d2d-4657-8200-2f67bfaff036 @ 11/25/23 13:29:07.151
  STEP: Creating the pod @ 11/25/23 13:29:07.156
  E1125 13:29:07.675402      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:08.676334      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-aed2e864-6e53-4fdc-9164-b5c317a63405 @ 11/25/23 13:29:09.202
  STEP: Updating configmap cm-test-opt-upd-2e77d6c1-6d2d-4657-8200-2f67bfaff036 @ 11/25/23 13:29:09.209
  STEP: Creating configMap with name cm-test-opt-create-1a6a1c81-6dea-4ef9-b2a5-2a4c7ea5b5ba @ 11/25/23 13:29:09.214
  STEP: waiting to observe update in volume @ 11/25/23 13:29:09.22
  E1125 13:29:09.676442      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:10.676611      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:11.676717      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:12.676818      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:13.677156      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:14.677199      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:15.677291      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:16.677526      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:17.678132      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:18.678246      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:19.678690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:20.678955      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:21.679041      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:22.679231      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:23.679768      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:24.679937      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:25.680789      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:26.680979      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:27.681063      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:28.681443      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:29.682101      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:30.682195      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:31.682301      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:32.682388      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:33.683065      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:34.683231      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:35.683701      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:36.683788      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:37.684480      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:38.684705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:39.685711      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:40.685803      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:41.685889      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:42.686692      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:43.686788      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:44.687295      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:45.687668      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:46.687857      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:47.688609      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:48.688707      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:49.689047      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:50.689111      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:51.690006      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:52.690099      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:53.690499      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:54.690683      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:55.690794      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:56.691120      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:57.691172      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:58.691795      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:29:59.691879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:00.691969      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:01.692068      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:02.692465      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:03.692925      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:04.694014      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:05.694149      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:06.694255      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:07.694686      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:08.694797      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:09.695222      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:10.695289      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:11.695354      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:12.695456      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:13.695531      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:14.696034      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:30:15.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8209" for this suite. @ 11/25/23 13:30:15.548
• [68.446 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 11/25/23 13:30:15.555
  Nov 25 13:30:15.555: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 13:30:15.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:30:15.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:30:15.577
  STEP: Creating a pod to test downward api env vars @ 11/25/23 13:30:15.581
  E1125 13:30:15.696558      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:16.697218      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:17.697442      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:18.697648      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:30:19.604
  Nov 25 13:30:19.608: INFO: Trying to get logs from node ip-172-31-4-198 pod downward-api-3f0edeb4-9e76-4311-b80d-b341461a695a container dapi-container: <nil>
  STEP: delete the pod @ 11/25/23 13:30:19.624
  Nov 25 13:30:19.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7055" for this suite. @ 11/25/23 13:30:19.646
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 11/25/23 13:30:19.654
  Nov 25 13:30:19.654: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename dns @ 11/25/23 13:30:19.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:30:19.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:30:19.682
  STEP: Creating a test headless service @ 11/25/23 13:30:19.685
  E1125 13:30:19.698474      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5341.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5341.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5341.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5341.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5341.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5341.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5341.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5341.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5341.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5341.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5341.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5341.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 171.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.171_udp@PTR;check="$$(dig +tcp +noall +answer +search 171.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.171_tcp@PTR;sleep 1; done
   @ 11/25/23 13:30:19.702
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5341.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5341.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5341.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5341.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5341.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5341.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5341.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5341.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5341.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5341.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5341.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5341.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 171.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.171_udp@PTR;check="$$(dig +tcp +noall +answer +search 171.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.171_tcp@PTR;sleep 1; done
   @ 11/25/23 13:30:19.702
  STEP: creating a pod to probe DNS @ 11/25/23 13:30:19.702
  STEP: submitting the pod to kubernetes @ 11/25/23 13:30:19.702
  E1125 13:30:20.698996      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:21.699976      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/25/23 13:30:21.725
  STEP: looking for the results for each expected name from probers @ 11/25/23 13:30:21.729
  Nov 25 13:30:21.736: INFO: Unable to read wheezy_udp@dns-test-service.dns-5341.svc.cluster.local from pod dns-5341/dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015: the server could not find the requested resource (get pods dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015)
  Nov 25 13:30:21.750: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5341.svc.cluster.local from pod dns-5341/dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015: the server could not find the requested resource (get pods dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015)
  Nov 25 13:30:21.759: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5341.svc.cluster.local from pod dns-5341/dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015: the server could not find the requested resource (get pods dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015)
  Nov 25 13:30:21.769: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5341.svc.cluster.local from pod dns-5341/dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015: the server could not find the requested resource (get pods dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015)
  Nov 25 13:30:21.814: INFO: Unable to read jessie_udp@dns-test-service.dns-5341.svc.cluster.local from pod dns-5341/dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015: the server could not find the requested resource (get pods dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015)
  Nov 25 13:30:21.819: INFO: Unable to read jessie_tcp@dns-test-service.dns-5341.svc.cluster.local from pod dns-5341/dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015: the server could not find the requested resource (get pods dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015)
  Nov 25 13:30:21.825: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5341.svc.cluster.local from pod dns-5341/dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015: the server could not find the requested resource (get pods dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015)
  Nov 25 13:30:21.831: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5341.svc.cluster.local from pod dns-5341/dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015: the server could not find the requested resource (get pods dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015)
  Nov 25 13:30:21.851: INFO: Lookups using dns-5341/dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015 failed for: [wheezy_udp@dns-test-service.dns-5341.svc.cluster.local wheezy_tcp@dns-test-service.dns-5341.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5341.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5341.svc.cluster.local jessie_udp@dns-test-service.dns-5341.svc.cluster.local jessie_tcp@dns-test-service.dns-5341.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5341.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5341.svc.cluster.local]

  Nov 25 13:30:21.858: INFO: Pod client logs for webserver: 
  Nov 25 13:30:21.866: INFO: Pod client logs for querier: 
  Nov 25 13:30:21.874: INFO: Pod client logs for jessie-querier: 
  E1125 13:30:22.700290      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:23.700316      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:24.700945      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:25.701030      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:26.701825      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:30:26.941: INFO: DNS probes using dns-5341/dns-test-1ae0950c-8b18-4ddb-8ec4-e182a6d1d015 succeeded

  Nov 25 13:30:26.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 13:30:26.945
  STEP: deleting the test service @ 11/25/23 13:30:26.96
  STEP: deleting the test headless service @ 11/25/23 13:30:26.984
  STEP: Destroying namespace "dns-5341" for this suite. @ 11/25/23 13:30:26.996
• [7.350 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 11/25/23 13:30:27.005
  Nov 25 13:30:27.005: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename watch @ 11/25/23 13:30:27.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:30:27.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:30:27.031
  STEP: creating a watch on configmaps with label A @ 11/25/23 13:30:27.035
  STEP: creating a watch on configmaps with label B @ 11/25/23 13:30:27.037
  STEP: creating a watch on configmaps with label A or B @ 11/25/23 13:30:27.039
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 11/25/23 13:30:27.04
  Nov 25 13:30:27.045: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7011  50b13eaf-c2aa-41e1-a67c-8d10f5178fc4 32020 0 2023-11-25 13:30:27 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-25 13:30:27 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 13:30:27.045: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7011  50b13eaf-c2aa-41e1-a67c-8d10f5178fc4 32020 0 2023-11-25 13:30:27 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-25 13:30:27 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 11/25/23 13:30:27.045
  Nov 25 13:30:27.053: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7011  50b13eaf-c2aa-41e1-a67c-8d10f5178fc4 32021 0 2023-11-25 13:30:27 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-25 13:30:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 13:30:27.053: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7011  50b13eaf-c2aa-41e1-a67c-8d10f5178fc4 32021 0 2023-11-25 13:30:27 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-25 13:30:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 11/25/23 13:30:27.054
  Nov 25 13:30:27.062: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7011  50b13eaf-c2aa-41e1-a67c-8d10f5178fc4 32022 0 2023-11-25 13:30:27 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-25 13:30:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 13:30:27.062: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7011  50b13eaf-c2aa-41e1-a67c-8d10f5178fc4 32022 0 2023-11-25 13:30:27 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-25 13:30:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 11/25/23 13:30:27.062
  Nov 25 13:30:27.069: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7011  50b13eaf-c2aa-41e1-a67c-8d10f5178fc4 32023 0 2023-11-25 13:30:27 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-25 13:30:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 13:30:27.070: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7011  50b13eaf-c2aa-41e1-a67c-8d10f5178fc4 32023 0 2023-11-25 13:30:27 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-25 13:30:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 11/25/23 13:30:27.07
  Nov 25 13:30:27.075: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7011  f0c70599-0060-4fdf-ac7c-2ee02b40fe0b 32024 0 2023-11-25 13:30:27 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-25 13:30:27 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 13:30:27.075: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7011  f0c70599-0060-4fdf-ac7c-2ee02b40fe0b 32024 0 2023-11-25 13:30:27 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-25 13:30:27 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1125 13:30:27.701909      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:28.702693      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:29.703600      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:30.703705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:31.703922      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:32.704129      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:33.704221      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:34.704305      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:35.704500      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:36.704597      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 11/25/23 13:30:37.075
  Nov 25 13:30:37.083: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7011  f0c70599-0060-4fdf-ac7c-2ee02b40fe0b 32068 0 2023-11-25 13:30:27 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-25 13:30:27 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 25 13:30:37.083: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7011  f0c70599-0060-4fdf-ac7c-2ee02b40fe0b 32068 0 2023-11-25 13:30:27 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-25 13:30:27 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1125 13:30:37.705385      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:38.705615      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:39.706412      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:40.706682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:41.706870      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:42.707061      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:43.707587      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:44.707830      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:45.707925      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:46.708012      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:30:47.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7011" for this suite. @ 11/25/23 13:30:47.09
• [20.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 11/25/23 13:30:47.098
  Nov 25 13:30:47.098: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename sched-pred @ 11/25/23 13:30:47.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:30:47.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:30:47.121
  Nov 25 13:30:47.124: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov 25 13:30:47.132: INFO: Waiting for terminating namespaces to be deleted...
  Nov 25 13:30:47.135: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-22-130 before test
  Nov 25 13:30:47.141: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-s48l6 from ingress-nginx-kubernetes-worker started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 13:30:47.141: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov 25 13:30:47.141: INFO: nginx-ingress-controller-kubernetes-worker-h97gq from ingress-nginx-kubernetes-worker started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 13:30:47.141: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 25 13:30:47.141: INFO: calico-node-kk5hk from kube-system started at 2023-11-25 12:05:43 +0000 UTC (1 container statuses recorded)
  Nov 25 13:30:47.141: INFO: 	Container calico-node ready: true, restart count 0
  Nov 25 13:30:47.141: INFO: coredns-59cfb5bf46-hqlmw from kube-system started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 13:30:47.142: INFO: 	Container coredns ready: true, restart count 0
  Nov 25 13:30:47.142: INFO: kube-state-metrics-78c475f58b-stptt from kube-system started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 13:30:47.142: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov 25 13:30:47.142: INFO: metrics-server-v0.6.3-69d7fbfdf8-frwh6 from kube-system started at 2023-11-25 12:06:05 +0000 UTC (2 container statuses recorded)
  Nov 25 13:30:47.142: INFO: 	Container metrics-server ready: true, restart count 0
  Nov 25 13:30:47.142: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov 25 13:30:47.142: INFO: dashboard-metrics-scraper-5dd7cb5fc-lh87v from kubernetes-dashboard started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 13:30:47.142: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov 25 13:30:47.142: INFO: kubernetes-dashboard-7b899cb9d9-77vb9 from kubernetes-dashboard started at 2023-11-25 12:06:05 +0000 UTC (1 container statuses recorded)
  Nov 25 13:30:47.142: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov 25 13:30:47.142: INFO: sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-7nrjs from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 13:30:47.142: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 13:30:47.142: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 25 13:30:47.142: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-4-198 before test
  Nov 25 13:30:47.149: INFO: nginx-ingress-controller-kubernetes-worker-zt7jm from ingress-nginx-kubernetes-worker started at 2023-11-25 12:06:22 +0000 UTC (1 container statuses recorded)
  Nov 25 13:30:47.149: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 25 13:30:47.149: INFO: calico-node-hl85s from kube-system started at 2023-11-25 12:05:44 +0000 UTC (1 container statuses recorded)
  Nov 25 13:30:47.149: INFO: 	Container calico-node ready: true, restart count 0
  Nov 25 13:30:47.149: INFO: sonobuoy-e2e-job-ecda927ab6f44d27 from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 13:30:47.149: INFO: 	Container e2e ready: true, restart count 0
  Nov 25 13:30:47.149: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 13:30:47.149: INFO: sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-jpcgl from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 13:30:47.149: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 13:30:47.149: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 25 13:30:47.149: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-85-186 before test
  Nov 25 13:30:47.155: INFO: nginx-ingress-controller-kubernetes-worker-mb27l from ingress-nginx-kubernetes-worker started at 2023-11-25 12:55:55 +0000 UTC (1 container statuses recorded)
  Nov 25 13:30:47.155: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 25 13:30:47.155: INFO: calico-node-k8nh6 from kube-system started at 2023-11-25 12:05:46 +0000 UTC (1 container statuses recorded)
  Nov 25 13:30:47.155: INFO: 	Container calico-node ready: true, restart count 0
  Nov 25 13:30:47.155: INFO: sonobuoy from sonobuoy started at 2023-11-25 12:12:47 +0000 UTC (1 container statuses recorded)
  Nov 25 13:30:47.155: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov 25 13:30:47.155: INFO: sonobuoy-systemd-logs-daemon-set-077e1e96f5ae4887-bwfff from sonobuoy started at 2023-11-25 12:12:49 +0000 UTC (2 container statuses recorded)
  Nov 25 13:30:47.155: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 25 13:30:47.155: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 11/25/23 13:30:47.155
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.179ae0dc8efd0a98], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling..] @ 11/25/23 13:30:47.191
  E1125 13:30:47.708138      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:30:48.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6676" for this suite. @ 11/25/23 13:30:48.19
• [1.099 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 11/25/23 13:30:48.197
  Nov 25 13:30:48.197: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:30:48.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:30:48.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:30:48.219
  STEP: Creating projection with secret that has name projected-secret-test-95d7c278-7d61-4a5f-8489-61b52d0b8ca8 @ 11/25/23 13:30:48.223
  STEP: Creating a pod to test consume secrets @ 11/25/23 13:30:48.229
  E1125 13:30:48.708235      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:49.708528      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:50.708590      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:51.709340      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:30:52.253
  Nov 25 13:30:52.256: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-projected-secrets-78c27fa0-f0b5-40e2-9a66-b35746fb8785 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 13:30:52.267
  Nov 25 13:30:52.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8608" for this suite. @ 11/25/23 13:30:52.288
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 11/25/23 13:30:52.296
  Nov 25 13:30:52.296: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-probe @ 11/25/23 13:30:52.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:30:52.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:30:52.321
  STEP: Creating pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073 @ 11/25/23 13:30:52.325
  E1125 13:30:52.710030      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:53.710691      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/25/23 13:30:54.342
  Nov 25 13:30:54.346: INFO: Initial restart count of pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 is 0
  Nov 25 13:30:54.349: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:30:54.711187      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:55.711269      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:30:56.354: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:30:56.712209      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:57.712397      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:30:58.359: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:30:58.712491      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:30:59.712669      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:00.363: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:00.713147      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:01.713237      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:02.368: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:02.713570      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:03.713687      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:04.372: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:04.713774      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:05.713869      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:06.376: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:06.714143      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:07.715025      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:08.381: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:08.715546      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:09.716440      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:10.385: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:10.716526      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:11.716697      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:12.389: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:12.717268      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:13.717975      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:14.393: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:14.718210      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:15.718684      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:16.398: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:16.719331      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:17.720377      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:18.404: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:18.720713      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:19.720968      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:20.408: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:20.721936      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:21.722030      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:22.412: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:22.722306      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:23.722691      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:24.418: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:24.723544      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:25.724538      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:26.422: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:26.725308      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:27.725406      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:28.427: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:28.726345      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:29.726586      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:30.433: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:30.727645      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:31.727758      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:32.437: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:32.728713      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:33.728897      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:34.442: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:34.729784      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:35.730686      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:36.446: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:36.730818      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:37.730993      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:38.451: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:38.731422      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:39.731642      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:40.456: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:40.732638      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:41.732765      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:42.460: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:42.733299      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:43.733391      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:44.465: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:44.734219      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:45.734794      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:46.472: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:46.735322      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:47.735511      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:48.476: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:48.736013      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:49.736272      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:50.481: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:50.736406      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:51.736827      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:52.485: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:52.736939      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:53.737126      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:54.489: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:54.737397      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:55.737599      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:56.494: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:56.737650      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:57.737730      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:31:58.499: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:31:58.738217      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:31:59.738484      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:00.504: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:00.739414      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:01.740236      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:02.508: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:02.740947      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:03.741322      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:04.512: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:04.742226      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:05.742331      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:06.517: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:06.742422      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:07.743291      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:08.521: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:08.743752      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:09.743996      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:10.525: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:10.744105      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:11.744312      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:12.530: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:12.745012      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:13.745064      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:14.534: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:14.746071      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:15.746157      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:16.539: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:16.746715      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:17.746932      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:18.544: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:18.747791      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:19.748789      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:20.548: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:20.748857      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:21.750056      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:22.552: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:22.750140      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:23.750241      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:24.557: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:24.750556      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:25.750652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:26.561: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:26.751577      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:27.751678      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:28.566: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:28.752526      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:29.752591      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:30.570: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:30.753465      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:31.753655      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:32.574: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:32.754701      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:33.755631      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:34.578: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:34.756131      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:35.756236      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:36.582: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:36.757060      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:37.757147      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:38.587: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:38.758095      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:39.758216      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:40.591: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:40.759238      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:41.761934      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:42.596: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:42.762013      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:43.762083      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:44.601: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:44.762475      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:45.762821      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:46.605: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:46.763980      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:47.764248      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:48.611: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:48.764548      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:49.765409      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:50.616: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:50.765712      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:51.766733      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:52.620: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:52.767279      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:53.767775      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:54.625: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:54.768367      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:55.769308      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:56.629: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:56.769688      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:57.770705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:32:58.633: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:32:58.770941      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:32:59.771343      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:00.638: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:00.771179      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:01.771846      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:02.642: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:02.772758      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:03.772857      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:04.646: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:04.773746      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:05.773839      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:06.650: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:06.774719      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:07.774783      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:08.655: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:08.775259      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:09.776088      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:10.660: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:10.776591      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:11.776692      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:12.665: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:12.776975      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:13.777068      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:14.672: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:14.777929      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:15.778748      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:16.677: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:16.778749      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:17.778819      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:18.683: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:18.778995      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:19.779644      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:20.688: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:20.780502      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:21.781590      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:22.693: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:22.782188      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:23.782291      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:24.697: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:24.783074      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:25.783215      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:26.702: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:26.783838      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:27.784016      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:28.707: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:28.784226      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:29.784324      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:30.711: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:30.784675      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:31.785662      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:32.716: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:32.786141      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:33.787156      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:34.721: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:34.787845      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:35.787944      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:36.725: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:36.788123      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:37.788229      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:38.730: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:38.788996      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:39.789847      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:40.736: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:40.790392      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:41.790682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:42.741: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:42.791174      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:43.791485      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:44.745: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:44.791547      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:45.791679      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:46.749: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:46.792065      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:47.792242      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:48.755: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:48.793180      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:49.793285      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:50.759: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:50.793847      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:51.793947      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:52.764: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:52.794443      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:53.795182      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:54.769: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:54.795219      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:55.795388      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:56.773: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:56.796196      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:57.796306      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:33:58.779: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:33:58.796446      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:33:59.796667      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:00.783: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:00.797637      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:01.798686      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:02.788: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:02.799097      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:03.799279      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:04.791: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:04.799978      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:05.800089      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:06.796: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:06.800732      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:07.800966      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:08.801795      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:08.801: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:09.802681      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:10.802860      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:10.807: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:11.802961      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:12.803081      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:12.811: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:13.803496      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:14.803897      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:14.815: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:15.804077      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:16.804271      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:16.820: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:17.804366      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:18.804595      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:18.825: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:19.805425      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:20.805635      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:20.829: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:21.805718      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:22.805814      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:22.834: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:23.805911      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:24.806705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:24.839: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:25.806818      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:26.806892      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:26.843: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:27.807795      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:28.808652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:28.849: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:29.809469      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:30.809648      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:30.853: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:31.810703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:32.810879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:32.858: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:33.810983      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:34.811151      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:34.863: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:35.812067      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:36.812254      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:36.867: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:37.812377      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:38.812477      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:38.873: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:39.813073      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:40.813164      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:40.877: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:41.813635      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:42.813742      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:42.882: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:43.814700      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:44.815058      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:44.886: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:45.815345      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:46.815436      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:46.890: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:47.815531      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:48.815628      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:48.895: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:49.816558      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:50.816647      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:50.899: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:51.817373      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:52.818262      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:52.904: INFO: Get pod test-grpc-d2114f6e-7f1d-4a9d-849d-8302d39833c0 in namespace container-probe-8073
  E1125 13:34:53.818554      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:54.818971      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:34:54.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 13:34:54.909
  STEP: Destroying namespace "container-probe-8073" for this suite. @ 11/25/23 13:34:54.924
• [242.637 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 11/25/23 13:34:54.934
  Nov 25 13:34:54.934: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 13:34:54.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:34:54.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:34:54.957
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/25/23 13:34:54.961
  Nov 25 13:34:54.961: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-1517 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Nov 25 13:34:55.029: INFO: stderr: ""
  Nov 25 13:34:55.029: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 11/25/23 13:34:55.029
  E1125 13:34:55.819061      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:56.819186      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:57.819302      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:58.819377      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:34:59.819796      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/25/23 13:35:00.08
  Nov 25 13:35:00.080: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-1517 get pod e2e-test-httpd-pod -o json'
  Nov 25 13:35:00.143: INFO: stderr: ""
  Nov 25 13:35:00.143: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-11-25T13:34:55Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1517\",\n        \"resourceVersion\": \"32659\",\n        \"uid\": \"1f8ca778-ebdb-48f3-ae49-d72f74251a3a\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-d46l7\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-85-186\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-d46l7\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-25T13:34:55Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-25T13:34:56Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-25T13:34:56Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-25T13:34:55Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://e689dbab2563fe36e131d960f5e1ebf97e6d4007f574d2cfe4aeaa77787385c5\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-11-25T13:34:55Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.85.186\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.196.14\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.196.14\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-11-25T13:34:55Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 11/25/23 13:35:00.143
  Nov 25 13:35:00.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-1517 replace -f -'
  Nov 25 13:35:00.406: INFO: stderr: ""
  Nov 25 13:35:00.406: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 11/25/23 13:35:00.407
  Nov 25 13:35:00.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-1517 delete pods e2e-test-httpd-pod'
  E1125 13:35:00.819588      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:01.819641      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:35:02.426: INFO: stderr: ""
  Nov 25 13:35:02.426: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Nov 25 13:35:02.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1517" for this suite. @ 11/25/23 13:35:02.431
• [7.505 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 11/25/23 13:35:02.44
  Nov 25 13:35:02.440: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename resourcequota @ 11/25/23 13:35:02.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:35:02.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:35:02.461
  STEP: Creating a ResourceQuota @ 11/25/23 13:35:02.465
  STEP: Getting a ResourceQuota @ 11/25/23 13:35:02.47
  STEP: Listing all ResourceQuotas with LabelSelector @ 11/25/23 13:35:02.475
  STEP: Patching the ResourceQuota @ 11/25/23 13:35:02.478
  STEP: Deleting a Collection of ResourceQuotas @ 11/25/23 13:35:02.484
  STEP: Verifying the deleted ResourceQuota @ 11/25/23 13:35:02.494
  Nov 25 13:35:02.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-627" for this suite. @ 11/25/23 13:35:02.501
• [0.071 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 11/25/23 13:35:02.511
  Nov 25 13:35:02.511: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename containers @ 11/25/23 13:35:02.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:35:02.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:35:02.533
  STEP: Creating a pod to test override all @ 11/25/23 13:35:02.537
  E1125 13:35:02.819737      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:03.819823      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:04.820091      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:05.820286      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:35:06.56
  Nov 25 13:35:06.564: INFO: Trying to get logs from node ip-172-31-85-186 pod client-containers-9e1c3855-4b4a-4092-b65e-ea7827a27155 container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 13:35:06.582
  Nov 25 13:35:06.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2207" for this suite. @ 11/25/23 13:35:06.606
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 11/25/23 13:35:06.614
  Nov 25 13:35:06.614: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename endpointslice @ 11/25/23 13:35:06.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:35:06.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:35:06.639
  E1125 13:35:06.820497      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:07.820604      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:08.820760      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:09.821757      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:10.822702      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 11/25/23 13:35:11.707
  E1125 13:35:11.823160      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:12.823331      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:13.823420      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:14.824399      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:15.824867      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 11/25/23 13:35:16.715
  E1125 13:35:16.825039      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:17.825224      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:18.825740      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:19.826691      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:20.826879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 11/25/23 13:35:21.724
  E1125 13:35:21.827976      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:22.828154      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:23.828373      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:24.829044      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:25.829117      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 11/25/23 13:35:26.733
  Nov 25 13:35:26.759: INFO: EndpointSlice for Service endpointslice-9168/example-named-port not found
  E1125 13:35:26.830084      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:27.830710      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:28.830788      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:29.831043      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:30.831133      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:31.831813      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:32.831906      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:33.832112      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:34.832499      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:35.832703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:35:36.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9168" for this suite. @ 11/25/23 13:35:36.775
• [30.168 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 11/25/23 13:35:36.783
  Nov 25 13:35:36.783: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename ingress @ 11/25/23 13:35:36.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:35:36.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:35:36.807
  STEP: getting /apis @ 11/25/23 13:35:36.813
  STEP: getting /apis/networking.k8s.io @ 11/25/23 13:35:36.818
  STEP: getting /apis/networking.k8s.iov1 @ 11/25/23 13:35:36.82
  STEP: creating @ 11/25/23 13:35:36.822
  E1125 13:35:36.833464      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting @ 11/25/23 13:35:36.846
  STEP: listing @ 11/25/23 13:35:36.852
  STEP: watching @ 11/25/23 13:35:36.857
  Nov 25 13:35:36.857: INFO: starting watch
  STEP: cluster-wide listing @ 11/25/23 13:35:36.859
  STEP: cluster-wide watching @ 11/25/23 13:35:36.864
  Nov 25 13:35:36.864: INFO: starting watch
  STEP: patching @ 11/25/23 13:35:36.867
  STEP: updating @ 11/25/23 13:35:36.873
  Nov 25 13:35:36.887: INFO: waiting for watch events with expected annotations
  Nov 25 13:35:36.887: INFO: saw patched and updated annotations
  STEP: patching /status @ 11/25/23 13:35:36.887
  STEP: updating /status @ 11/25/23 13:35:36.894
  STEP: get /status @ 11/25/23 13:35:36.919
  STEP: deleting @ 11/25/23 13:35:36.923
  STEP: deleting a collection @ 11/25/23 13:35:36.945
  Nov 25 13:35:36.964: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-8458" for this suite. @ 11/25/23 13:35:36.971
• [0.202 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 11/25/23 13:35:36.986
  Nov 25 13:35:36.986: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 13:35:36.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:35:37.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:35:37.018
  STEP: create deployment with httpd image @ 11/25/23 13:35:37.025
  Nov 25 13:35:37.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-8229 create -f -'
  Nov 25 13:35:37.205: INFO: stderr: ""
  Nov 25 13:35:37.205: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 11/25/23 13:35:37.205
  Nov 25 13:35:37.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-8229 diff -f -'
  Nov 25 13:35:37.459: INFO: rc: 1
  Nov 25 13:35:37.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-8229 delete -f -'
  Nov 25 13:35:37.523: INFO: stderr: ""
  Nov 25 13:35:37.523: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Nov 25 13:35:37.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8229" for this suite. @ 11/25/23 13:35:37.528
• [0.552 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 11/25/23 13:35:37.539
  Nov 25 13:35:37.539: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 13:35:37.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:35:37.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:35:37.561
  STEP: Creating a pod to test emptydir volume type on node default medium @ 11/25/23 13:35:37.566
  E1125 13:35:37.833910      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:38.833912      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:39.834961      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:40.835148      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:35:41.609
  Nov 25 13:35:41.613: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-bc01e56e-c9e3-4fb3-9bec-60d9057be880 container test-container: <nil>
  STEP: delete the pod @ 11/25/23 13:35:41.621
  Nov 25 13:35:41.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5310" for this suite. @ 11/25/23 13:35:41.644
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 11/25/23 13:35:41.655
  Nov 25 13:35:41.655: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename deployment @ 11/25/23 13:35:41.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:35:41.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:35:41.674
  Nov 25 13:35:41.677: INFO: Creating deployment "webserver-deployment"
  Nov 25 13:35:41.685: INFO: Waiting for observed generation 1
  E1125 13:35:41.835909      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:42.836027      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:35:43.693: INFO: Waiting for all required pods to come up
  Nov 25 13:35:43.698: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 11/25/23 13:35:43.698
  E1125 13:35:43.836929      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:44.837949      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:35:45.707: INFO: Waiting for deployment "webserver-deployment" to complete
  Nov 25 13:35:45.715: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Nov 25 13:35:45.728: INFO: Updating deployment webserver-deployment
  Nov 25 13:35:45.728: INFO: Waiting for observed generation 2
  E1125 13:35:45.838390      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:46.838841      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:35:47.739: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Nov 25 13:35:47.742: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Nov 25 13:35:47.746: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Nov 25 13:35:47.756: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Nov 25 13:35:47.756: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Nov 25 13:35:47.760: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Nov 25 13:35:47.766: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Nov 25 13:35:47.766: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Nov 25 13:35:47.778: INFO: Updating deployment webserver-deployment
  Nov 25 13:35:47.778: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Nov 25 13:35:47.790: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  E1125 13:35:47.839579      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:48.841809      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:35:49.799: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Nov 25 13:35:49.810: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f842d116-762c-4d71-94b4-c3c2914e30ec",
      ResourceVersion: (string) (len=5) "33402",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 25 13:35:49.820: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0df1d3e-9837-48d2-bf06-54000952a217",
      ResourceVersion: (string) (len=5) "33400",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f842d116-762c-4d71-94b4-c3c2914e30ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 38 34 32 64 31  31 36 2d 37 36 32 63 2d  |\"f842d116-762c-|
              00000120  34 64 37 31 2d 39 34 62  34 2d 63 33 63 32 39 31  |4d71-94b4-c3c291|
              00000130  34 65 33 30 65 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4e30ec\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 25 13:35:49.823: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Nov 25 13:35:49.824: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
      ResourceVersion: (string) (len=5) "33391",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f842d116-762c-4d71-94b4-c3c2914e30ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 38 34 32 64 31  31 36 2d 37 36 32 63 2d  |\"f842d116-762c-|
              00000120  34 64 37 31 2d 39 34 62  34 2d 63 33 63 32 39 31  |4d71-94b4-c3c291|
              00000130  34 65 33 30 65 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4e30ec\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 25 13:35:49.833: INFO: Pod "webserver-deployment-557759b7c7-4q9fc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4q9fc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "489491bd-dbdc-47ad-96a6-77e0ace9bf1e",
      ResourceVersion: (string) (len=5) "33397",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t28wv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t28wv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.838: INFO: Pod "webserver-deployment-557759b7c7-9848z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9848z",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9ea7c0e-474c-4da9-a093-36d825db41f7",
      ResourceVersion: (string) (len=5) "33198",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 36 2e 38 5c 22 7d  |192.168.196.8\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p7c78",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p7c78",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.196.8",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.196.8"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836516143,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a4969272eaf86f5ccedbb72dd49072d970d89ae8a18f78e7d0601569f80c6bd7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  E1125 13:35:49.841765      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:35:49.843: INFO: Pod "webserver-deployment-557759b7c7-bhjkh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bhjkh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f38e37b-6a2b-4db1-a20c-ca564c68f1f6",
      ResourceVersion: (string) (len=5) "33412",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vzmn6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vzmn6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-130",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.130",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.846: INFO: Pod "webserver-deployment-557759b7c7-gnjbb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gnjbb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33c11002-a38f-490f-b76c-fbe2e4fd8403",
      ResourceVersion: (string) (len=5) "33405",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nfxgm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nfxgm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.849: INFO: Pod "webserver-deployment-557759b7c7-gtgzh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gtgzh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f5263ad-fbf5-4b77-9edd-9ce38e0a0f76",
      ResourceVersion: (string) (len=5) "33420",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qv9wv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qv9wv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.863: INFO: Pod "webserver-deployment-557759b7c7-hw2wn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hw2wn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7c7f978-1ee4-4e8d-9a8a-57d13472bfa2",
      ResourceVersion: (string) (len=5) "33193",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 36 2e 31 31 5c 22  |192.168.196.11\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q7k5d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q7k5d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.196.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.196.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836516143,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d051be32f85456f2ce7458b806d9b438a58b13a3d3c519d907724f86cced5bb0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.866: INFO: Pod "webserver-deployment-557759b7c7-j6czl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-j6czl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75068745-a387-4d3d-8b4e-926563f8eed6",
      ResourceVersion: (string) (len=5) "33396",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-62b7x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-62b7x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-130",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.130",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.871: INFO: Pod "webserver-deployment-557759b7c7-nk9zr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nk9zr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7fdb84b-a9e4-46ed-99d3-6e550ecdead5",
      ResourceVersion: (string) (len=5) "33390",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5zq2g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5zq2g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.874: INFO: Pod "webserver-deployment-557759b7c7-pr8ft" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pr8ft",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bbf66618-52ae-4d7c-9cb5-352cfd285004",
      ResourceVersion: (string) (len=5) "33365",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-27r57",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-27r57",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.878: INFO: Pod "webserver-deployment-557759b7c7-qxqs4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qxqs4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5fb3cbbb-63bf-4975-a770-c5f8822ffc62",
      ResourceVersion: (string) (len=5) "33425",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4pvcc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4pvcc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.883: INFO: Pod "webserver-deployment-557759b7c7-rwspx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rwspx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c615d34a-817f-4078-8ee8-c06d4f26c33f",
      ResourceVersion: (string) (len=5) "33208",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  37 32 2e 31 35 35 5c 22  |192.168.72.155\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rrnsc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rrnsc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-130",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.130",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.72.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.72.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836516142,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://87ff0f45f33b124598c973ba64bb5de3454a26fa17a421a85b16aef8d65465bf",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.887: INFO: Pod "webserver-deployment-557759b7c7-srmsc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-srmsc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02db1897-9dbf-4f0e-942c-5c89381685a1",
      ResourceVersion: (string) (len=5) "33158",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  37 32 2e 31 35 31 5c 22  |192.168.72.151\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d2495",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d2495",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-130",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.130",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.72.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.72.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836516142,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ae6e12bdc22f782b3ebbd55795f7877360167c2d9ebc753058d31cecb6425000",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.890: INFO: Pod "webserver-deployment-557759b7c7-tn2rt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tn2rt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "077d3470-1f1b-40b2-a2bd-ead7b80aa611",
      ResourceVersion: (string) (len=5) "33201",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 39 36 2e 32 5c 22 7d  |192.168.196.2\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rzxnw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rzxnw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.196.2",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.196.2"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836516143,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5502a3416eeba7d38790f6cc7550846cc978fe288b9dfd57d25f15de7155f242",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.892: INFO: Pod "webserver-deployment-557759b7c7-tt86j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tt86j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17d2a4b7-7067-4a03-aefd-509db9c0a5d5",
      ResourceVersion: (string) (len=5) "33433",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kws5j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kws5j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.899: INFO: Pod "webserver-deployment-557759b7c7-tvzzl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tvzzl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d266e94f-e920-4ec8-a558-f6e95cb77da9",
      ResourceVersion: (string) (len=5) "33364",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zmlb9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zmlb9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.903: INFO: Pod "webserver-deployment-557759b7c7-vcd79" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vcd79",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "80386eac-232c-409d-9648-ec4c5a2bae03",
      ResourceVersion: (string) (len=5) "33178",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  38 2e 34 31 5c 22 7d 22  |192.168.8.41\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k7qkh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k7qkh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "192.168.8.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.8.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836516142,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://78ed53a664f8c97d59a2ce25ee4a794995370b0b65bdcde84d90a41f03b29ab1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.906: INFO: Pod "webserver-deployment-557759b7c7-vn2px" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vn2px",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8af823fc-8a44-4706-b99c-a487847f8795",
      ResourceVersion: (string) (len=5) "33175",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  38 2e 34 30 5c 22 7d 22  |192.168.8.40\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-72crz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-72crz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "192.168.8.40",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.8.40"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836516142,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8e65fe3c4cec10936a8e385a41763638309e483983be192cc5567f4cc4e8d170",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.910: INFO: Pod "webserver-deployment-557759b7c7-wdj6p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wdj6p",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bcd420a6-af5e-4aea-95da-4d194388746e",
      ResourceVersion: (string) (len=5) "33416",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-42sts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-42sts",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.912: INFO: Pod "webserver-deployment-557759b7c7-xmf4k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xmf4k",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8bfab35a-a462-419b-b108-6f058e5fff0b",
      ResourceVersion: (string) (len=5) "33155",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  37 32 2e 31 35 30 5c 22  |192.168.72.150\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z9l4s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z9l4s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-130",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.130",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.72.150",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.72.150"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836516142,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4ee7e3c07f5cd6e22c3d6f6d533e91a58fab747793885d88a92a552ea939edd2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.915: INFO: Pod "webserver-deployment-557759b7c7-xvkfs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xvkfs",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b2c3bd3-1005-4a2e-90b0-72e7aca15db2",
      ResourceVersion: (string) (len=5) "33423",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4a1a2d38-11a6-4e72-8e69-92eeddf8a630",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  31 61 32 64 33 38 2d 31  |d\":\"4a1a2d38-1|
              00000090  31 61 36 2d 34 65 37 32  2d 38 65 36 39 2d 39 32  |1a6-4e72-8e69-92|
              000000a0  65 65 64 64 66 38 61 36  33 30 5c 22 7d 22 3a 7b  |eeddf8a630\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pkftz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pkftz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-130",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.130",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.919: INFO: Pod "webserver-deployment-9b4f5bf69-45dl5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-45dl5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c46ee67a-fc39-438c-81f8-c2441df92c0f",
      ResourceVersion: (string) (len=5) "33374",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b0df1d3e-9837-48d2-bf06-54000952a217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  64 66 31 64 33 65 2d 39  |d\":\"b0df1d3e-9|
              00000090  38 33 37 2d 34 38 64 32  2d 62 66 30 36 2d 35 34  |837-48d2-bf06-54|
              000000a0  30 30 30 39 35 32 61 32  31 37 5c 22 7d 22 3a 7b  |000952a217\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2bkgh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2bkgh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-130",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.130",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.922: INFO: Pod "webserver-deployment-9b4f5bf69-5s2jv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5s2jv",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d15db7da-8d71-4d9f-aa7d-8bcdc2eef84d",
      ResourceVersion: (string) (len=5) "33315",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b0df1d3e-9837-48d2-bf06-54000952a217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  64 66 31 64 33 65 2d 39  |d\":\"b0df1d3e-9|
              00000090  38 33 37 2d 34 38 64 32  2d 62 66 30 36 2d 35 34  |837-48d2-bf06-54|
              000000a0  30 30 30 39 35 32 61 32  31 37 5c 22 7d 22 3a 7b  |000952a217\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 37 32 2e  31 35 36 5c 22 7d 22 3a  |.168.72.156\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jgppl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jgppl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-130",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.130",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.72.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.72.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.924: INFO: Pod "webserver-deployment-9b4f5bf69-7twhd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7twhd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14e0d0c4-43b5-466f-af89-c8b474d1a3fb",
      ResourceVersion: (string) (len=5) "33321",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b0df1d3e-9837-48d2-bf06-54000952a217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  64 66 31 64 33 65 2d 39  |d\":\"b0df1d3e-9|
              00000090  38 33 37 2d 34 38 64 32  2d 62 66 30 36 2d 35 34  |837-48d2-bf06-54|
              000000a0  30 30 30 39 35 32 61 32  31 37 5c 22 7d 22 3a 7b  |000952a217\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=564) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 38 2e 32  36 5c 22 7d 22 3a 7b 22  |.168.8.26\"}":{"|
              00000210  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000220  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000230  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qghjm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qghjm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "192.168.8.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.8.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.927: INFO: Pod "webserver-deployment-9b4f5bf69-7vh85" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7vh85",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "273a9994-dc10-4799-a863-5c6694275651",
      ResourceVersion: (string) (len=5) "33411",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b0df1d3e-9837-48d2-bf06-54000952a217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  64 66 31 64 33 65 2d 39  |d\":\"b0df1d3e-9|
              00000090  38 33 37 2d 34 38 64 32  2d 62 66 30 36 2d 35 34  |837-48d2-bf06-54|
              000000a0  30 30 30 39 35 32 61 32  31 37 5c 22 7d 22 3a 7b  |000952a217\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jp62p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jp62p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.929: INFO: Pod "webserver-deployment-9b4f5bf69-cq6t4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-cq6t4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0bcb728-3aff-4093-97c4-ec5c33c1a253",
      ResourceVersion: (string) (len=5) "33419",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b0df1d3e-9837-48d2-bf06-54000952a217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  64 66 31 64 33 65 2d 39  |d\":\"b0df1d3e-9|
              00000090  38 33 37 2d 34 38 64 32  2d 62 66 30 36 2d 35 34  |837-48d2-bf06-54|
              000000a0  30 30 30 39 35 32 61 32  31 37 5c 22 7d 22 3a 7b  |000952a217\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-klt5x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-klt5x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-130",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.130",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.932: INFO: Pod "webserver-deployment-9b4f5bf69-dz7mk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-dz7mk",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7080bdff-3f12-4ccb-854d-4ae254e7cc07",
      ResourceVersion: (string) (len=5) "33318",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b0df1d3e-9837-48d2-bf06-54000952a217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  64 66 31 64 33 65 2d 39  |d\":\"b0df1d3e-9|
              00000090  38 33 37 2d 34 38 64 32  2d 62 66 30 36 2d 35 34  |837-48d2-bf06-54|
              000000a0  30 30 30 39 35 32 61 32  31 37 5c 22 7d 22 3a 7b  |000952a217\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=564) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 38 2e 32  31 5c 22 7d 22 3a 7b 22  |.168.8.21\"}":{"|
              00000210  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000220  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000230  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5vk5b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5vk5b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "192.168.8.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.8.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.934: INFO: Pod "webserver-deployment-9b4f5bf69-gbh5n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-gbh5n",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99087a50-c1bc-4a7d-b092-2ed76f20cbed",
      ResourceVersion: (string) (len=5) "33548",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b0df1d3e-9837-48d2-bf06-54000952a217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  64 66 31 64 33 65 2d 39  |d\":\"b0df1d3e-9|
              00000090  38 33 37 2d 34 38 64 32  2d 62 66 30 36 2d 35 34  |837-48d2-bf06-54|
              000000a0  30 30 30 39 35 32 61 32  31 37 5c 22 7d 22 3a 7b  |000952a217\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 39 36  2e 31 38 5c 22 7d 22 3a  |.168.196.18\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wrvvn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wrvvn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.196.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.196.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.937: INFO: Pod "webserver-deployment-9b4f5bf69-ht6mm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ht6mm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5614d81-bf9c-44b6-9bde-6be49dcc69b1",
      ResourceVersion: (string) (len=5) "33429",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b0df1d3e-9837-48d2-bf06-54000952a217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  64 66 31 64 33 65 2d 39  |d\":\"b0df1d3e-9|
              00000090  38 33 37 2d 34 38 64 32  2d 62 66 30 36 2d 35 34  |837-48d2-bf06-54|
              000000a0  30 30 30 39 35 32 61 32  31 37 5c 22 7d 22 3a 7b  |000952a217\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-szjg7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-szjg7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.945: INFO: Pod "webserver-deployment-9b4f5bf69-pt4gz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pt4gz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38de346b-3b68-426d-94e4-d903a92e9060",
      ResourceVersion: (string) (len=5) "33329",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b0df1d3e-9837-48d2-bf06-54000952a217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  64 66 31 64 33 65 2d 39  |d\":\"b0df1d3e-9|
              00000090  38 33 37 2d 34 38 64 32  2d 62 66 30 36 2d 35 34  |837-48d2-bf06-54|
              000000a0  30 30 30 39 35 32 61 32  31 37 5c 22 7d 22 3a 7b  |000952a217\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 39 36  2e 34 36 5c 22 7d 22 3a  |.168.196.46\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bz297",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bz297",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.196.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.196.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.949: INFO: Pod "webserver-deployment-9b4f5bf69-qb5rq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qb5rq",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b9a96d98-8c01-4832-a818-42b97608df06",
      ResourceVersion: (string) (len=5) "33332",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b0df1d3e-9837-48d2-bf06-54000952a217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  64 66 31 64 33 65 2d 39  |d\":\"b0df1d3e-9|
              00000090  38 33 37 2d 34 38 64 32  2d 62 66 30 36 2d 35 34  |837-48d2-bf06-54|
              000000a0  30 30 30 39 35 32 61 32  31 37 5c 22 7d 22 3a 7b  |000952a217\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 39 36  2e 31 35 5c 22 7d 22 3a  |.168.196.15\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lv8dh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lv8dh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.196.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.196.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.952: INFO: Pod "webserver-deployment-9b4f5bf69-qtbdh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qtbdh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ca8194f-9c67-4651-8dbb-4fac7fc2a544",
      ResourceVersion: (string) (len=5) "33403",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b0df1d3e-9837-48d2-bf06-54000952a217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  64 66 31 64 33 65 2d 39  |d\":\"b0df1d3e-9|
              00000090  38 33 37 2d 34 38 64 32  2d 62 66 30 36 2d 35 34  |837-48d2-bf06-54|
              000000a0  30 30 30 39 35 32 61 32  31 37 5c 22 7d 22 3a 7b  |000952a217\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fhgpg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fhgpg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-22-130",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.22.130",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.954: INFO: Pod "webserver-deployment-9b4f5bf69-th2c2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-th2c2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f3c788a3-9068-43a1-839a-8e8621f75f87",
      ResourceVersion: (string) (len=5) "33434",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b0df1d3e-9837-48d2-bf06-54000952a217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  64 66 31 64 33 65 2d 39  |d\":\"b0df1d3e-9|
              00000090  38 33 37 2d 34 38 64 32  2d 62 66 30 36 2d 35 34  |837-48d2-bf06-54|
              000000a0  30 30 30 39 35 32 61 32  31 37 5c 22 7d 22 3a 7b  |000952a217\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kf6s2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kf6s2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.957: INFO: Pod "webserver-deployment-9b4f5bf69-tpmtf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-tpmtf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1112",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20123128-88cf-4841-8dae-96adb1bfa042",
      ResourceVersion: (string) (len=5) "33407",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b0df1d3e-9837-48d2-bf06-54000952a217",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  64 66 31 64 33 65 2d 39  |d\":\"b0df1d3e-9|
              00000090  38 33 37 2d 34 38 64 32  2d 62 66 30 36 2d 35 34  |837-48d2-bf06-54|
              000000a0  30 30 30 39 35 32 61 32  31 37 5c 22 7d 22 3a 7b  |000952a217\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kmc92",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kmc92",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:35:49.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1112" for this suite. @ 11/25/23 13:35:49.967
• [8.327 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 11/25/23 13:35:49.984
  Nov 25 13:35:49.984: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 13:35:49.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:35:50.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:35:50.011
  STEP: creating Agnhost RC @ 11/25/23 13:35:50.023
  Nov 25 13:35:50.023: INFO: namespace kubectl-8630
  Nov 25 13:35:50.023: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-8630 create -f -'
  Nov 25 13:35:50.246: INFO: stderr: ""
  Nov 25 13:35:50.246: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/25/23 13:35:50.246
  E1125 13:35:50.842693      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:35:51.250: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 25 13:35:51.250: INFO: Found 1 / 1
  Nov 25 13:35:51.250: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Nov 25 13:35:51.256: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 25 13:35:51.256: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov 25 13:35:51.256: INFO: wait on agnhost-primary startup in kubectl-8630 
  Nov 25 13:35:51.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-8630 logs agnhost-primary-qpb8h agnhost-primary'
  Nov 25 13:35:51.334: INFO: stderr: ""
  Nov 25 13:35:51.334: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 11/25/23 13:35:51.334
  Nov 25 13:35:51.334: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-8630 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Nov 25 13:35:51.410: INFO: stderr: ""
  Nov 25 13:35:51.410: INFO: stdout: "service/rm2 exposed\n"
  Nov 25 13:35:51.414: INFO: Service rm2 in namespace kubectl-8630 found.
  E1125 13:35:51.843475      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:52.843679      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 11/25/23 13:35:53.422
  Nov 25 13:35:53.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-8630 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Nov 25 13:35:53.501: INFO: stderr: ""
  Nov 25 13:35:53.501: INFO: stdout: "service/rm3 exposed\n"
  Nov 25 13:35:53.506: INFO: Service rm3 in namespace kubectl-8630 found.
  E1125 13:35:53.844006      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:54.844063      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:35:55.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8630" for this suite. @ 11/25/23 13:35:55.52
• [5.549 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 11/25/23 13:35:55.534
  Nov 25 13:35:55.534: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-probe @ 11/25/23 13:35:55.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:35:55.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:35:55.558
  E1125 13:35:55.844524      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:56.868870      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:57.869573      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:58.869653      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:35:59.869735      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:00.870698      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:01.870792      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:02.870906      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:03.871960      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:04.871990      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:05.873034      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:06.873114      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:07.873153      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:08.873307      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:09.874319      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:10.874756      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:11.874844      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:12.875045      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:13.875087      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:14.875121      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:15.876057      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:16.876255      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:17.627: INFO: Container started at 2023-11-25 13:35:57 +0000 UTC, pod became ready at 2023-11-25 13:36:15 +0000 UTC
  Nov 25 13:36:17.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5133" for this suite. @ 11/25/23 13:36:17.632
• [22.104 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 11/25/23 13:36:17.638
  Nov 25 13:36:17.638: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:36:17.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:36:17.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:36:17.66
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 13:36:17.663
  E1125 13:36:17.877033      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:18.877117      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:19.877794      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:20.877899      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:36:21.689
  Nov 25 13:36:21.694: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-69f61098-5531-4e33-b685-9f32bbef9f65 container client-container: <nil>
  STEP: delete the pod @ 11/25/23 13:36:21.701
  Nov 25 13:36:21.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1377" for this suite. @ 11/25/23 13:36:21.722
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 11/25/23 13:36:21.73
  Nov 25 13:36:21.730: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pods @ 11/25/23 13:36:21.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:36:21.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:36:21.75
  STEP: creating the pod @ 11/25/23 13:36:21.754
  STEP: setting up watch @ 11/25/23 13:36:21.754
  STEP: submitting the pod to kubernetes @ 11/25/23 13:36:21.857
  STEP: verifying the pod is in kubernetes @ 11/25/23 13:36:21.868
  STEP: verifying pod creation was observed @ 11/25/23 13:36:21.873
  E1125 13:36:21.878911      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:22.879350      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:23.880012      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 11/25/23 13:36:23.884
  STEP: verifying pod deletion was observed @ 11/25/23 13:36:23.892
  Nov 25 13:36:24.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9280" for this suite. @ 11/25/23 13:36:24.773
• [3.051 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 11/25/23 13:36:24.781
  Nov 25 13:36:24.781: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/25/23 13:36:24.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:36:24.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:36:24.805
  STEP: creating a target pod @ 11/25/23 13:36:24.81
  E1125 13:36:24.880250      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:25.880388      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 11/25/23 13:36:26.83
  E1125 13:36:26.881189      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:27.881362      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 11/25/23 13:36:28.849
  Nov 25 13:36:28.849: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4637 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 13:36:28.849: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 13:36:28.849: INFO: ExecWithOptions: Clientset creation
  Nov 25 13:36:28.849: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-4637/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  E1125 13:36:28.881793      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:28.934: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 11/25/23 13:36:28.941
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 11/25/23 13:36:28.946
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 11/25/23 13:36:28.958
  Nov 25 13:36:28.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4637" for this suite. @ 11/25/23 13:36:28.967
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 11/25/23 13:36:28.977
  Nov 25 13:36:28.977: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pods @ 11/25/23 13:36:28.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:36:28.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:36:29
  STEP: creating the pod @ 11/25/23 13:36:29.003
  STEP: submitting the pod to kubernetes @ 11/25/23 13:36:29.004
  E1125 13:36:29.882275      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:30.882389      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 11/25/23 13:36:31.028
  STEP: updating the pod @ 11/25/23 13:36:31.032
  Nov 25 13:36:31.544: INFO: Successfully updated pod "pod-update-1a4f77f2-a09d-4ce9-a386-334717a87c8e"
  STEP: verifying the updated pod is in kubernetes @ 11/25/23 13:36:31.548
  Nov 25 13:36:31.553: INFO: Pod update OK
  Nov 25 13:36:31.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3573" for this suite. @ 11/25/23 13:36:31.558
• [2.589 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 11/25/23 13:36:31.567
  Nov 25 13:36:31.567: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename daemonsets @ 11/25/23 13:36:31.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:36:31.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:36:31.59
  Nov 25 13:36:31.613: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/25/23 13:36:31.619
  Nov 25 13:36:31.626: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:31.626: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:31.630: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 13:36:31.630: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  E1125 13:36:31.882455      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:32.634: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:32.634: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:32.638: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 13:36:32.638: INFO: Node ip-172-31-22-130 is running 0 daemon pod, expected 1
  E1125 13:36:32.882712      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:33.634: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:33.634: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:33.638: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 25 13:36:33.638: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 11/25/23 13:36:33.653
  STEP: Check that daemon pods images are updated. @ 11/25/23 13:36:33.668
  Nov 25 13:36:33.672: INFO: Wrong image for pod: daemon-set-5bms8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 25 13:36:33.672: INFO: Wrong image for pod: daemon-set-t9l9p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 25 13:36:33.672: INFO: Wrong image for pod: daemon-set-v5zqk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 25 13:36:33.676: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:33.676: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1125 13:36:33.883358      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:34.681: INFO: Wrong image for pod: daemon-set-5bms8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 25 13:36:34.681: INFO: Wrong image for pod: daemon-set-t9l9p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 25 13:36:34.681: INFO: Pod daemon-set-tqsf2 is not available
  Nov 25 13:36:34.685: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:34.685: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1125 13:36:34.883752      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:35.681: INFO: Wrong image for pod: daemon-set-5bms8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 25 13:36:35.681: INFO: Wrong image for pod: daemon-set-t9l9p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 25 13:36:35.681: INFO: Pod daemon-set-tqsf2 is not available
  Nov 25 13:36:35.686: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:35.686: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1125 13:36:35.884167      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:36.680: INFO: Wrong image for pod: daemon-set-5bms8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 25 13:36:36.680: INFO: Pod daemon-set-7kpg8 is not available
  Nov 25 13:36:36.685: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:36.685: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1125 13:36:36.885080      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:37.681: INFO: Pod daemon-set-nh2s4 is not available
  Nov 25 13:36:37.685: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:37.685: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 11/25/23 13:36:37.685
  Nov 25 13:36:37.690: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:37.690: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:37.693: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 25 13:36:37.693: INFO: Node ip-172-31-4-198 is running 0 daemon pod, expected 1
  E1125 13:36:37.886160      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:38.698: INFO: DaemonSet pods can't tolerate node ip-172-31-33-137 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:38.698: INFO: DaemonSet pods can't tolerate node ip-172-31-72-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 25 13:36:38.702: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 25 13:36:38.702: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/25/23 13:36:38.72
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2883, will wait for the garbage collector to delete the pods @ 11/25/23 13:36:38.72
  Nov 25 13:36:38.780: INFO: Deleting DaemonSet.extensions daemon-set took: 6.765879ms
  Nov 25 13:36:38.881: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.62782ms
  E1125 13:36:38.886464      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:39.887475      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:40.385: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 25 13:36:40.385: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 25 13:36:40.389: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34474"},"items":null}

  Nov 25 13:36:40.393: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34475"},"items":null}

  Nov 25 13:36:40.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2883" for this suite. @ 11/25/23 13:36:40.411
• [8.851 seconds]
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 11/25/23 13:36:40.418
  Nov 25 13:36:40.418: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename gc @ 11/25/23 13:36:40.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:36:40.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:36:40.439
  STEP: create the rc @ 11/25/23 13:36:40.446
  W1125 13:36:40.451760      17 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1125 13:36:40.888338      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:41.892143      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:42.892371      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:43.900152      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:44.900766      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:45.901706      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 11/25/23 13:36:46.465
  STEP: wait for the rc to be deleted @ 11/25/23 13:36:46.474
  E1125 13:36:46.947355      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:47.497: INFO: 80 pods remaining
  Nov 25 13:36:47.499: INFO: 80 pods has nil DeletionTimestamp
  Nov 25 13:36:47.499: INFO: 
  E1125 13:36:47.956587      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:48.499: INFO: 70 pods remaining
  Nov 25 13:36:48.499: INFO: 70 pods has nil DeletionTimestamp
  Nov 25 13:36:48.500: INFO: 
  E1125 13:36:48.956613      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:49.500: INFO: 60 pods remaining
  Nov 25 13:36:49.501: INFO: 60 pods has nil DeletionTimestamp
  Nov 25 13:36:49.502: INFO: 
  E1125 13:36:49.957204      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:50.487: INFO: 40 pods remaining
  Nov 25 13:36:50.487: INFO: 40 pods has nil DeletionTimestamp
  Nov 25 13:36:50.487: INFO: 
  E1125 13:36:50.957792      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:51.491: INFO: 30 pods remaining
  Nov 25 13:36:51.491: INFO: 30 pods has nil DeletionTimestamp
  Nov 25 13:36:51.491: INFO: 
  E1125 13:36:51.958926      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:52.496: INFO: 20 pods remaining
  Nov 25 13:36:52.496: INFO: 20 pods has nil DeletionTimestamp
  Nov 25 13:36:52.496: INFO: 
  E1125 13:36:52.959504      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/25/23 13:36:53.482
  W1125 13:36:53.489534      17 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 25 13:36:53.489: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 25 13:36:53.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1982" for this suite. @ 11/25/23 13:36:53.497
• [13.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 11/25/23 13:36:53.51
  Nov 25 13:36:53.510: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename gc @ 11/25/23 13:36:53.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:36:53.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:36:53.533
  Nov 25 13:36:53.574: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"435be6ab-7323-4c24-8f14-0b0c7ce3b3a0", Controller:(*bool)(0xc005cfa636), BlockOwnerDeletion:(*bool)(0xc005cfa637)}}
  Nov 25 13:36:53.588: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"dd52cae9-9eb0-4c06-beee-944e6556022a", Controller:(*bool)(0xc0059c77ee), BlockOwnerDeletion:(*bool)(0xc0059c77ef)}}
  Nov 25 13:36:53.596: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"19771765-a352-434c-8422-a16c28b1723d", Controller:(*bool)(0xc0059c7a16), BlockOwnerDeletion:(*bool)(0xc0059c7a17)}}
  E1125 13:36:53.959694      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:54.987842      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:55.987959      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:56.988773      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:57.989555      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:36:58.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8900" for this suite. @ 11/25/23 13:36:58.614
• [5.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 11/25/23 13:36:58.623
  Nov 25 13:36:58.623: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename container-probe @ 11/25/23 13:36:58.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:36:58.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:36:58.648
  STEP: Creating pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891 @ 11/25/23 13:36:58.651
  E1125 13:36:58.989569      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:36:59.989970      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/25/23 13:37:00.67
  Nov 25 13:37:00.674: INFO: Initial restart count of pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 is 0
  Nov 25 13:37:00.677: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:00.990210      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:01.990296      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:02.682: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:02.990531      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:03.990606      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:04.686: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:04.991475      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:05.991651      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:06.690: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:06.992197      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:07.992371      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:08.695: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:08.992862      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:09.993124      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:10.700: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:10.993715      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:11.993897      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:12.704: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:12.994838      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:13.995022      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:14.708: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:14.996059      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:15.996167      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:16.713: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:16.996351      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:17.996550      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:18.718: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:18.997591      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:19.997623      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:20.722: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  Nov 25 13:37:20.722: INFO: Restart count of pod container-probe-1891/liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 is now 1 (20.048339908s elapsed)
  E1125 13:37:20.998706      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:21.998800      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:22.726: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:22.999296      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:23.999406      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:24.731: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:25.000413      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:26.000603      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:26.735: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:27.001100      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:28.001186      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:28.740: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:29.001414      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:30.001638      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:30.744: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:31.002268      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:32.002357      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:32.749: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:33.002496      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:34.002727      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:34.754: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:35.002977      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:36.003056      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:36.759: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:37.003378      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:38.003473      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:38.763: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:39.004278      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:40.004665      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:40.769: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  Nov 25 13:37:40.769: INFO: Restart count of pod container-probe-1891/liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 is now 2 (40.095319742s elapsed)
  E1125 13:37:41.005729      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:42.005815      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:42.775: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:43.006724      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:44.006819      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:44.779: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:45.006901      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:46.007627      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:46.784: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:47.008248      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:48.008331      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:48.789: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:49.008760      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:50.009698      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:50.795: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:51.010106      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:52.010210      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:52.800: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:53.010527      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:54.010691      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:54.804: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:55.010824      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:56.010893      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:56.809: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:57.011724      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:37:58.011822      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:37:58.814: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:37:59.012254      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:00.012655      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:00.818: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  Nov 25 13:38:00.818: INFO: Restart count of pod container-probe-1891/liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 is now 3 (1m0.144104377s elapsed)
  E1125 13:38:01.013637      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:02.013728      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:02.824: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:03.013814      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:04.013920      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:04.828: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:05.014689      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:06.014772      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:06.833: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:07.015751      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:08.016533      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:08.838: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:09.020975      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:10.021384      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:10.842: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:11.022169      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:12.022263      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:12.847: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:13.022310      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:14.022375      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:14.850: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:15.023070      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:16.023807      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:16.855: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:17.024290      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:18.024390      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:18.859: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:19.024482      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:20.024819      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:20.863: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  Nov 25 13:38:20.863: INFO: Restart count of pod container-probe-1891/liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 is now 4 (1m20.189285988s elapsed)
  E1125 13:38:21.025787      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:22.025884      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:22.867: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:23.026673      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:24.026750      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:24.871: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:25.027233      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:26.027332      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:26.876: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:27.027720      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:28.027824      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:28.882: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:29.028520      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:30.028645      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:30.888: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:31.029203      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:32.029317      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:32.893: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:33.030130      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:34.030220      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:34.899: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:35.031246      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:36.031359      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:36.903: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:37.031847      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:38.031959      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:38.909: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:39.032498      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:40.032595      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:40.913: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:41.032890      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:42.033271      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:42.918: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:43.034148      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:44.034254      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:44.924: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:45.034694      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:46.034797      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:46.929: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:47.035314      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:48.035430      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:48.934: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:49.035570      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:50.035932      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:50.938: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:51.036631      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:52.036728      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:52.943: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:53.037737      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:54.037839      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:54.948: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:55.038225      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:56.038704      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:56.952: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:57.039068      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:38:58.039399      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:38:58.958: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:38:59.039430      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:00.039839      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:00.962: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:39:01.039586      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:02.039861      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:02.967: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:39:03.040522      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:04.040618      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:04.971: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:39:05.040655      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:06.040798      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:06.976: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:39:07.041161      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:08.041869      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:08.980: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:39:09.042659      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:10.043654      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:10.984: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:39:11.044047      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:12.044226      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:12.989: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:39:13.044621      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:14.045434      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:14.993: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:39:15.045924      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:16.046023      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:16.998: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:39:17.046062      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:18.046679      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:19.004: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:39:19.047526      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:20.048449      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:21.009: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  E1125 13:39:21.049366      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:22.049787      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:23.013: INFO: Get pod liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 in namespace container-probe-1891
  Nov 25 13:39:23.013: INFO: Restart count of pod container-probe-1891/liveness-46e44191-e6f3-400f-8701-02c3e17d7ca1 is now 5 (2m22.339637738s elapsed)
  Nov 25 13:39:23.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 13:39:23.018
  STEP: Destroying namespace "container-probe-1891" for this suite. @ 11/25/23 13:39:23.031
• [144.416 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 11/25/23 13:39:23.04
  Nov 25 13:39:23.040: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename resourcequota @ 11/25/23 13:39:23.041
  E1125 13:39:23.050206      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:39:23.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:39:23.075
  STEP: Creating a ResourceQuota with terminating scope @ 11/25/23 13:39:23.079
  STEP: Ensuring ResourceQuota status is calculated @ 11/25/23 13:39:23.085
  E1125 13:39:24.050553      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:25.050815      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 11/25/23 13:39:25.089
  STEP: Ensuring ResourceQuota status is calculated @ 11/25/23 13:39:25.097
  E1125 13:39:26.050836      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:27.050922      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 11/25/23 13:39:27.102
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 11/25/23 13:39:27.115
  E1125 13:39:28.051018      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:29.051116      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 11/25/23 13:39:29.121
  E1125 13:39:30.052098      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:31.052367      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/25/23 13:39:31.125
  STEP: Ensuring resource quota status released the pod usage @ 11/25/23 13:39:31.139
  E1125 13:39:32.052455      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:33.052677      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 11/25/23 13:39:33.143
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 11/25/23 13:39:33.155
  E1125 13:39:34.052776      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:35.053192      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 11/25/23 13:39:35.159
  E1125 13:39:36.053637      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:37.053719      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/25/23 13:39:37.163
  STEP: Ensuring resource quota status released the pod usage @ 11/25/23 13:39:37.175
  E1125 13:39:38.053817      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:39.053909      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:39.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-194" for this suite. @ 11/25/23 13:39:39.187
• [16.157 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 11/25/23 13:39:39.198
  Nov 25 13:39:39.198: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 13:39:39.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:39:39.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:39:39.222
  STEP: Setting up server cert @ 11/25/23 13:39:39.298
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 13:39:39.706
  STEP: Deploying the webhook pod @ 11/25/23 13:39:39.714
  STEP: Wait for the deployment to be ready @ 11/25/23 13:39:39.727
  Nov 25 13:39:39.735: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1125 13:39:40.054679      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:41.054780      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/25/23 13:39:41.746
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 13:39:41.765
  E1125 13:39:42.055769      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:42.765: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 25 13:39:42.773: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  E1125 13:39:43.056635      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 11/25/23 13:39:43.283
  STEP: Creating a custom resource that should be denied by the webhook @ 11/25/23 13:39:43.302
  E1125 13:39:44.056888      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:45.057267      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 11/25/23 13:39:45.328
  STEP: Updating the custom resource with disallowed data should be denied @ 11/25/23 13:39:45.335
  STEP: Deleting the custom resource should be denied @ 11/25/23 13:39:45.345
  STEP: Remove the offending key and value from the custom resource data @ 11/25/23 13:39:45.352
  STEP: Deleting the updated custom resource should be successful @ 11/25/23 13:39:45.362
  Nov 25 13:39:45.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4833" for this suite. @ 11/25/23 13:39:45.936
  STEP: Destroying namespace "webhook-markers-3504" for this suite. @ 11/25/23 13:39:45.943
• [6.755 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 11/25/23 13:39:45.953
  Nov 25 13:39:45.953: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename aggregator @ 11/25/23 13:39:45.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:39:45.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:39:45.977
  Nov 25 13:39:45.980: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Registering the sample API server. @ 11/25/23 13:39:45.981
  E1125 13:39:46.058091      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:46.431: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Nov 25 13:39:46.461: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E1125 13:39:47.058387      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:48.058486      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:48.513: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1125 13:39:49.058758      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:50.059269      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:50.518: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1125 13:39:51.059767      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:52.059979      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:52.517: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1125 13:39:53.060270      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:54.060449      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:54.518: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1125 13:39:55.061112      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:56.061642      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:56.517: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1125 13:39:57.062697      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:39:58.063158      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:39:58.518: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1125 13:39:59.063329      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:00.063430      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:40:00.518: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1125 13:40:01.063833      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:02.063924      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:40:02.517: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1125 13:40:03.064621      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:04.064727      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:40:04.519: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1125 13:40:05.064824      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:06.065126      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:40:06.517: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1125 13:40:07.065449      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:08.065646      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:40:08.518: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1125 13:40:09.066622      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:10.066873      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:40:10.638: INFO: Waited 112.583358ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 11/25/23 13:40:10.676
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 11/25/23 13:40:10.68
  STEP: List APIServices @ 11/25/23 13:40:10.688
  Nov 25 13:40:10.698: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 11/25/23 13:40:10.698
  Nov 25 13:40:10.711: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 11/25/23 13:40:10.711
  Nov 25 13:40:10.721: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.November, 25, 13, 40, 10, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 11/25/23 13:40:10.722
  Nov 25 13:40:10.725: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-11-25 13:40:10 +0000 UTC Passed all checks passed}
  Nov 25 13:40:10.725: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 25 13:40:10.725: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 11/25/23 13:40:10.725
  Nov 25 13:40:10.737: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1071580512" @ 11/25/23 13:40:10.737
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 11/25/23 13:40:10.749
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 11/25/23 13:40:10.759
  STEP: Patch APIService Status @ 11/25/23 13:40:10.762
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 11/25/23 13:40:10.77
  Nov 25 13:40:10.774: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-11-25 13:40:10 +0000 UTC Passed all checks passed}
  Nov 25 13:40:10.774: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 25 13:40:10.774: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Nov 25 13:40:10.774: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 11/25/23 13:40:10.774
  STEP: Confirm that the generated APIService has been deleted @ 11/25/23 13:40:10.778
  Nov 25 13:40:10.779: INFO: Requesting list of APIServices to confirm quantity
  Nov 25 13:40:10.783: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Nov 25 13:40:10.783: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Nov 25 13:40:10.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6846" for this suite. @ 11/25/23 13:40:10.897
• [24.951 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 11/25/23 13:40:10.904
  Nov 25 13:40:10.904: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename security-context-test @ 11/25/23 13:40:10.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:40:10.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:40:10.927
  E1125 13:40:11.067706      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:12.067835      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:13.068597      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:14.068683      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:15.069063      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:16.069846      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:17.069912      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:18.070023      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:40:18.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6227" for this suite. @ 11/25/23 13:40:18.965
• [8.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 11/25/23 13:40:18.973
  Nov 25 13:40:18.973: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename gc @ 11/25/23 13:40:18.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:40:18.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:40:18.993
  STEP: create the rc1 @ 11/25/23 13:40:19.001
  STEP: create the rc2 @ 11/25/23 13:40:19.006
  E1125 13:40:19.070650      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:20.070797      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:21.071649      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:22.071767      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:23.072151      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:24.073082      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 11/25/23 13:40:25.017
  E1125 13:40:25.078131      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 11/25/23 13:40:25.679
  STEP: wait for the rc to be deleted @ 11/25/23 13:40:25.69
  E1125 13:40:26.081209      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:27.090763      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:28.090878      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:29.090907      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:30.091011      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:40:30.705: INFO: 68 pods remaining
  Nov 25 13:40:30.705: INFO: 68 pods has nil DeletionTimestamp
  Nov 25 13:40:30.705: INFO: 
  E1125 13:40:31.091545      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:32.091738      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:33.095467      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:34.096703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:35.096780      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/25/23 13:40:35.703
  W1125 13:40:35.710758      17 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 25 13:40:35.710: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 25 13:40:35.710: INFO: Deleting pod "simpletest-rc-to-be-deleted-246hc" in namespace "gc-2297"
  Nov 25 13:40:35.723: INFO: Deleting pod "simpletest-rc-to-be-deleted-2fb4z" in namespace "gc-2297"
  Nov 25 13:40:35.736: INFO: Deleting pod "simpletest-rc-to-be-deleted-2hg77" in namespace "gc-2297"
  Nov 25 13:40:35.750: INFO: Deleting pod "simpletest-rc-to-be-deleted-2lz77" in namespace "gc-2297"
  Nov 25 13:40:35.764: INFO: Deleting pod "simpletest-rc-to-be-deleted-2xjsn" in namespace "gc-2297"
  Nov 25 13:40:35.777: INFO: Deleting pod "simpletest-rc-to-be-deleted-2zdnl" in namespace "gc-2297"
  Nov 25 13:40:35.791: INFO: Deleting pod "simpletest-rc-to-be-deleted-46nf2" in namespace "gc-2297"
  Nov 25 13:40:35.806: INFO: Deleting pod "simpletest-rc-to-be-deleted-4fpdr" in namespace "gc-2297"
  Nov 25 13:40:35.819: INFO: Deleting pod "simpletest-rc-to-be-deleted-4ssgq" in namespace "gc-2297"
  Nov 25 13:40:35.839: INFO: Deleting pod "simpletest-rc-to-be-deleted-5dxff" in namespace "gc-2297"
  Nov 25 13:40:35.855: INFO: Deleting pod "simpletest-rc-to-be-deleted-5hpq9" in namespace "gc-2297"
  Nov 25 13:40:35.875: INFO: Deleting pod "simpletest-rc-to-be-deleted-5hv58" in namespace "gc-2297"
  Nov 25 13:40:35.895: INFO: Deleting pod "simpletest-rc-to-be-deleted-5m5q7" in namespace "gc-2297"
  Nov 25 13:40:35.916: INFO: Deleting pod "simpletest-rc-to-be-deleted-65hld" in namespace "gc-2297"
  Nov 25 13:40:35.936: INFO: Deleting pod "simpletest-rc-to-be-deleted-68hkc" in namespace "gc-2297"
  Nov 25 13:40:35.952: INFO: Deleting pod "simpletest-rc-to-be-deleted-6g45d" in namespace "gc-2297"
  Nov 25 13:40:35.973: INFO: Deleting pod "simpletest-rc-to-be-deleted-764mh" in namespace "gc-2297"
  Nov 25 13:40:35.988: INFO: Deleting pod "simpletest-rc-to-be-deleted-7dkzj" in namespace "gc-2297"
  Nov 25 13:40:36.003: INFO: Deleting pod "simpletest-rc-to-be-deleted-7j4m8" in namespace "gc-2297"
  Nov 25 13:40:36.019: INFO: Deleting pod "simpletest-rc-to-be-deleted-845xp" in namespace "gc-2297"
  Nov 25 13:40:36.035: INFO: Deleting pod "simpletest-rc-to-be-deleted-864mx" in namespace "gc-2297"
  Nov 25 13:40:36.051: INFO: Deleting pod "simpletest-rc-to-be-deleted-8k7gq" in namespace "gc-2297"
  Nov 25 13:40:36.065: INFO: Deleting pod "simpletest-rc-to-be-deleted-8tct4" in namespace "gc-2297"
  Nov 25 13:40:36.079: INFO: Deleting pod "simpletest-rc-to-be-deleted-95tjr" in namespace "gc-2297"
  Nov 25 13:40:36.095: INFO: Deleting pod "simpletest-rc-to-be-deleted-96sk8" in namespace "gc-2297"
  E1125 13:40:36.097285      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:40:36.110: INFO: Deleting pod "simpletest-rc-to-be-deleted-98r5f" in namespace "gc-2297"
  Nov 25 13:40:36.126: INFO: Deleting pod "simpletest-rc-to-be-deleted-9j28d" in namespace "gc-2297"
  Nov 25 13:40:36.144: INFO: Deleting pod "simpletest-rc-to-be-deleted-9lrcw" in namespace "gc-2297"
  Nov 25 13:40:36.160: INFO: Deleting pod "simpletest-rc-to-be-deleted-9qrvq" in namespace "gc-2297"
  Nov 25 13:40:36.173: INFO: Deleting pod "simpletest-rc-to-be-deleted-9tc95" in namespace "gc-2297"
  Nov 25 13:40:36.188: INFO: Deleting pod "simpletest-rc-to-be-deleted-9tlqd" in namespace "gc-2297"
  Nov 25 13:40:36.204: INFO: Deleting pod "simpletest-rc-to-be-deleted-9vpmt" in namespace "gc-2297"
  Nov 25 13:40:36.233: INFO: Deleting pod "simpletest-rc-to-be-deleted-9xphp" in namespace "gc-2297"
  Nov 25 13:40:36.249: INFO: Deleting pod "simpletest-rc-to-be-deleted-bfq8f" in namespace "gc-2297"
  Nov 25 13:40:36.261: INFO: Deleting pod "simpletest-rc-to-be-deleted-c9xm9" in namespace "gc-2297"
  Nov 25 13:40:36.294: INFO: Deleting pod "simpletest-rc-to-be-deleted-cjm79" in namespace "gc-2297"
  Nov 25 13:40:36.306: INFO: Deleting pod "simpletest-rc-to-be-deleted-cjxr4" in namespace "gc-2297"
  Nov 25 13:40:36.322: INFO: Deleting pod "simpletest-rc-to-be-deleted-ck4km" in namespace "gc-2297"
  Nov 25 13:40:36.332: INFO: Deleting pod "simpletest-rc-to-be-deleted-clndd" in namespace "gc-2297"
  Nov 25 13:40:36.349: INFO: Deleting pod "simpletest-rc-to-be-deleted-crsxg" in namespace "gc-2297"
  Nov 25 13:40:36.365: INFO: Deleting pod "simpletest-rc-to-be-deleted-cwzmt" in namespace "gc-2297"
  Nov 25 13:40:36.393: INFO: Deleting pod "simpletest-rc-to-be-deleted-dpxpv" in namespace "gc-2297"
  Nov 25 13:40:36.410: INFO: Deleting pod "simpletest-rc-to-be-deleted-dz76p" in namespace "gc-2297"
  Nov 25 13:40:36.425: INFO: Deleting pod "simpletest-rc-to-be-deleted-fmsv6" in namespace "gc-2297"
  Nov 25 13:40:36.442: INFO: Deleting pod "simpletest-rc-to-be-deleted-fwdck" in namespace "gc-2297"
  Nov 25 13:40:36.465: INFO: Deleting pod "simpletest-rc-to-be-deleted-fwzj5" in namespace "gc-2297"
  Nov 25 13:40:36.480: INFO: Deleting pod "simpletest-rc-to-be-deleted-fxpn7" in namespace "gc-2297"
  Nov 25 13:40:36.500: INFO: Deleting pod "simpletest-rc-to-be-deleted-g2s48" in namespace "gc-2297"
  Nov 25 13:40:36.516: INFO: Deleting pod "simpletest-rc-to-be-deleted-g5zwj" in namespace "gc-2297"
  Nov 25 13:40:36.532: INFO: Deleting pod "simpletest-rc-to-be-deleted-g8rgl" in namespace "gc-2297"
  Nov 25 13:40:36.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2297" for this suite. @ 11/25/23 13:40:36.554
• [17.591 seconds]
------------------------------
SSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 11/25/23 13:40:36.564
  Nov 25 13:40:36.564: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename ingressclass @ 11/25/23 13:40:36.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:40:36.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:40:36.589
  STEP: getting /apis @ 11/25/23 13:40:36.592
  STEP: getting /apis/networking.k8s.io @ 11/25/23 13:40:36.599
  STEP: getting /apis/networking.k8s.iov1 @ 11/25/23 13:40:36.601
  STEP: creating @ 11/25/23 13:40:36.603
  STEP: getting @ 11/25/23 13:40:36.621
  STEP: listing @ 11/25/23 13:40:36.625
  STEP: watching @ 11/25/23 13:40:36.628
  Nov 25 13:40:36.628: INFO: starting watch
  STEP: patching @ 11/25/23 13:40:36.629
  STEP: updating @ 11/25/23 13:40:36.636
  Nov 25 13:40:36.643: INFO: waiting for watch events with expected annotations
  Nov 25 13:40:36.643: INFO: saw patched and updated annotations
  STEP: deleting @ 11/25/23 13:40:36.643
  STEP: deleting a collection @ 11/25/23 13:40:36.661
  Nov 25 13:40:36.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-2017" for this suite. @ 11/25/23 13:40:36.685
• [0.128 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 11/25/23 13:40:36.693
  Nov 25 13:40:36.693: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 13:40:36.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:40:36.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:40:36.725
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 13:40:36.733
  E1125 13:40:37.098367      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:38.099708      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:39.100934      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:40.100994      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:41.101441      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:42.101652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:40:42.789
  Nov 25 13:40:42.792: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-e442f389-bde9-470d-9f66-bc93312d94ce container client-container: <nil>
  STEP: delete the pod @ 11/25/23 13:40:42.817
  Nov 25 13:40:42.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6641" for this suite. @ 11/25/23 13:40:42.846
• [6.165 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 11/25/23 13:40:42.859
  Nov 25 13:40:42.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 13:40:42.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:40:42.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:40:42.882
  STEP: creating service in namespace services-4060 @ 11/25/23 13:40:42.889
  STEP: creating service affinity-nodeport in namespace services-4060 @ 11/25/23 13:40:42.889
  STEP: creating replication controller affinity-nodeport in namespace services-4060 @ 11/25/23 13:40:42.911
  I1125 13:40:42.918423      17 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-4060, replica count: 3
  E1125 13:40:43.102601      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:44.103598      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:45.103690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1125 13:40:45.970050      17 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 25 13:40:45.983: INFO: Creating new exec pod
  E1125 13:40:46.104281      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:47.104383      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:48.105150      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:40:49.007: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-4060 exec execpod-affinitygckl2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E1125 13:40:49.105643      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:40:49.149: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Nov 25 13:40:49.149: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 13:40:49.149: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-4060 exec execpod-affinitygckl2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.78 80'
  Nov 25 13:40:49.291: INFO: stderr: "+ nc -v -t -w 2 10.152.183.78 80\nConnection to 10.152.183.78 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Nov 25 13:40:49.291: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 13:40:49.291: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-4060 exec execpod-affinitygckl2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.85.186 32672'
  Nov 25 13:40:49.436: INFO: stderr: "+ nc -v -t -w 2 172.31.85.186 32672\nConnection to 172.31.85.186 32672 port [tcp/*] succeeded!\n+ echo hostName\n"
  Nov 25 13:40:49.436: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 13:40:49.436: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-4060 exec execpod-affinitygckl2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.4.198 32672'
  Nov 25 13:40:49.585: INFO: stderr: "+ nc -v -t -w 2 172.31.4.198 32672\n+ echo hostName\nConnection to 172.31.4.198 32672 port [tcp/*] succeeded!\n"
  Nov 25 13:40:49.585: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 13:40:49.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-4060 exec execpod-affinitygckl2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.130:32672/ ; done'
  Nov 25 13:40:49.797: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.130:32672/\n"
  Nov 25 13:40:49.797: INFO: stdout: "\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5\naffinity-nodeport-fwtf5"
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.797: INFO: Received response from host: affinity-nodeport-fwtf5
  Nov 25 13:40:49.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 25 13:40:49.804: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-4060, will wait for the garbage collector to delete the pods @ 11/25/23 13:40:49.82
  Nov 25 13:40:49.881: INFO: Deleting ReplicationController affinity-nodeport took: 7.050263ms
  Nov 25 13:40:49.982: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.128306ms
  E1125 13:40:50.106326      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:51.106539      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:52.106726      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-4060" for this suite. @ 11/25/23 13:40:53.007
• [10.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 11/25/23 13:40:53.018
  Nov 25 13:40:53.018: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename deployment @ 11/25/23 13:40:53.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:40:53.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:40:53.045
  Nov 25 13:40:53.049: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Nov 25 13:40:53.059: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1125 13:40:53.107261      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:54.107562      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:55.107636      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:56.107865      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:57.107958      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:40:58.064: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/25/23 13:40:58.065
  Nov 25 13:40:58.065: INFO: Creating deployment "test-rolling-update-deployment"
  Nov 25 13:40:58.071: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Nov 25 13:40:58.079: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E1125 13:40:58.108187      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:40:59.108924      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:41:00.089: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Nov 25 13:41:00.094: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Nov 25 13:41:00.108: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5730",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31d86b0a-0b1e-4d82-95e6-24ea8357332f",
      ResourceVersion: (string) (len=5) "40476",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516458,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  E1125 13:41:00.111405      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:41:00.116: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5730",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2acf742-5434-4fd5-9ce4-65b04d9d2486",
      ResourceVersion: (string) (len=5) "40466",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516458,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "31d86b0a-0b1e-4d82-95e6-24ea8357332f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 31 64 38 36 62  30 61 2d 30 62 31 65 2d  |\"31d86b0a-0b1e-|
              00000120  34 64 38 32 2d 39 35 65  36 2d 32 34 65 61 38 33  |4d82-95e6-24ea83|
              00000130  35 37 33 33 32 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |57332f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 25 13:41:00.117: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Nov 25 13:41:00.118: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5730",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "040560e1-3244-4d57-a369-a3fe3a12a09a",
      ResourceVersion: (string) (len=5) "40475",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516453,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "31d86b0a-0b1e-4d82-95e6-24ea8357332f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 33 31 64 38 36 62 30  |"uid\":\"31d86b0|
              000000b0  61 2d 30 62 31 65 2d 34  64 38 32 2d 39 35 65 36  |a-0b1e-4d82-95e6|
              000000c0  2d 32 34 65 61 38 33 35  37 33 33 32 66 5c 22 7d  |-24ea8357332f\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 25 13:41:00.123: INFO: Pod "test-rolling-update-deployment-7f5c55c64-jnds7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-jnds7",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-5730",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e60758d6-e000-481b-af6a-370bf1077da8",
      ResourceVersion: (string) (len=5) "40465",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516458,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "e2acf742-5434-4fd5-9ce4-65b04d9d2486",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  61 63 66 37 34 32 2d 35  |d\":\"e2acf742-5|
              00000090  34 33 34 2d 34 66 64 35  2d 39 63 65 34 2d 36 35  |434-4fd5-9ce4-65|
              000000a0  62 30 34 64 39 64 32 34  38 36 5c 22 7d 22 3a 7b  |b04d9d2486\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  38 2e 35 38 5c 22 7d 22  |192.168.8.58\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zz4gt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zz4gt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.198",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "192.168.8.58",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.8.58"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516458,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63836516458,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://fe98601161209dfd9b795d1d62995c00054a5b31fe8f2cbb95d68f36013a9f05",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:41:00.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5730" for this suite. @ 11/25/23 13:41:00.131
• [7.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 11/25/23 13:41:00.139
  Nov 25 13:41:00.139: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:41:00.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:41:00.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:41:00.159
  STEP: Creating configMap with name projected-configmap-test-volume-d1f0e3ce-fb22-4761-b28e-88cc48c14c19 @ 11/25/23 13:41:00.162
  STEP: Creating a pod to test consume configMaps @ 11/25/23 13:41:00.168
  E1125 13:41:01.111514      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:02.111722      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:03.111822      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:04.112104      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:41:04.191
  Nov 25 13:41:04.195: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-projected-configmaps-b019af0d-9875-4b6e-a8c7-5c780a712438 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 13:41:04.203
  Nov 25 13:41:04.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-601" for this suite. @ 11/25/23 13:41:04.224
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 11/25/23 13:41:04.233
  Nov 25 13:41:04.234: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename field-validation @ 11/25/23 13:41:04.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:41:04.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:41:04.256
  Nov 25 13:41:04.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  E1125 13:41:05.112713      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:06.112863      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1125 13:41:06.810707      17 warnings.go:70] unknown field "alpha"
  W1125 13:41:06.810729      17 warnings.go:70] unknown field "beta"
  W1125 13:41:06.810735      17 warnings.go:70] unknown field "delta"
  W1125 13:41:06.810740      17 warnings.go:70] unknown field "epsilon"
  W1125 13:41:06.810746      17 warnings.go:70] unknown field "gamma"
  E1125 13:41:07.113311      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:41:07.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4150" for this suite. @ 11/25/23 13:41:07.363
• [3.136 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 11/25/23 13:41:07.37
  Nov 25 13:41:07.370: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename dns @ 11/25/23 13:41:07.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:41:07.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:41:07.389
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/25/23 13:41:07.393
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/25/23 13:41:07.393
  STEP: creating a pod to probe DNS @ 11/25/23 13:41:07.393
  STEP: submitting the pod to kubernetes @ 11/25/23 13:41:07.393
  E1125 13:41:08.114245      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:09.114693      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/25/23 13:41:09.415
  STEP: looking for the results for each expected name from probers @ 11/25/23 13:41:09.419
  Nov 25 13:41:09.454: INFO: DNS probes using dns-1511/dns-test-3ea23ead-19d0-4264-ae48-dc83e4b3de5b succeeded

  Nov 25 13:41:09.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 13:41:09.459
  STEP: Destroying namespace "dns-1511" for this suite. @ 11/25/23 13:41:09.471
• [2.111 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 11/25/23 13:41:09.481
  Nov 25 13:41:09.481: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename subpath @ 11/25/23 13:41:09.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:41:09.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:41:09.502
  STEP: Setting up data @ 11/25/23 13:41:09.505
  STEP: Creating pod pod-subpath-test-projected-wjg6 @ 11/25/23 13:41:09.519
  STEP: Creating a pod to test atomic-volume-subpath @ 11/25/23 13:41:09.519
  E1125 13:41:10.114799      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:11.114875      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:12.115147      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:13.115250      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:14.115341      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:15.115528      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:16.115621      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:17.115736      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:18.115825      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:19.116129      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:20.116678      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:21.116873      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:22.116935      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:23.117276      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:24.117843      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:25.117889      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:26.118715      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:27.118793      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:28.119080      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:29.119998      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:30.120094      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:31.120409      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:32.121035      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:33.121718      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:41:33.592
  Nov 25 13:41:33.597: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-subpath-test-projected-wjg6 container test-container-subpath-projected-wjg6: <nil>
  STEP: delete the pod @ 11/25/23 13:41:33.606
  STEP: Deleting pod pod-subpath-test-projected-wjg6 @ 11/25/23 13:41:33.629
  Nov 25 13:41:33.629: INFO: Deleting pod "pod-subpath-test-projected-wjg6" in namespace "subpath-1881"
  Nov 25 13:41:33.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1881" for this suite. @ 11/25/23 13:41:33.639
• [24.165 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 11/25/23 13:41:33.647
  Nov 25 13:41:33.647: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:41:33.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:41:33.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:41:33.671
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 13:41:33.68
  E1125 13:41:34.122706      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:35.122783      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:36.123597      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:37.123667      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:41:37.717
  Nov 25 13:41:37.721: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-45f0b7ac-53aa-41f1-a477-dd165101f49c container client-container: <nil>
  STEP: delete the pod @ 11/25/23 13:41:37.729
  Nov 25 13:41:37.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1684" for this suite. @ 11/25/23 13:41:37.75
• [4.110 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 11/25/23 13:41:37.757
  Nov 25 13:41:37.757: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename cronjob @ 11/25/23 13:41:37.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:41:37.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:41:37.779
  STEP: Creating a cronjob @ 11/25/23 13:41:37.782
  STEP: creating @ 11/25/23 13:41:37.782
  STEP: getting @ 11/25/23 13:41:37.79
  STEP: listing @ 11/25/23 13:41:37.793
  STEP: watching @ 11/25/23 13:41:37.797
  Nov 25 13:41:37.797: INFO: starting watch
  STEP: cluster-wide listing @ 11/25/23 13:41:37.798
  STEP: cluster-wide watching @ 11/25/23 13:41:37.802
  Nov 25 13:41:37.802: INFO: starting watch
  STEP: patching @ 11/25/23 13:41:37.803
  STEP: updating @ 11/25/23 13:41:37.809
  Nov 25 13:41:37.819: INFO: waiting for watch events with expected annotations
  Nov 25 13:41:37.819: INFO: saw patched and updated annotations
  STEP: patching /status @ 11/25/23 13:41:37.819
  STEP: updating /status @ 11/25/23 13:41:37.826
  STEP: get /status @ 11/25/23 13:41:37.834
  STEP: deleting @ 11/25/23 13:41:37.837
  STEP: deleting a collection @ 11/25/23 13:41:37.853
  Nov 25 13:41:37.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3354" for this suite. @ 11/25/23 13:41:37.868
• [0.118 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 11/25/23 13:41:37.875
  Nov 25 13:41:37.875: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename configmap @ 11/25/23 13:41:37.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:41:37.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:41:37.895
  STEP: Creating configMap with name cm-test-opt-del-438489ae-1f18-4b6d-9dbc-808221bd32ef @ 11/25/23 13:41:37.902
  STEP: Creating configMap with name cm-test-opt-upd-48935054-40bb-4c4c-8b67-48b15dd84ab5 @ 11/25/23 13:41:37.908
  STEP: Creating the pod @ 11/25/23 13:41:37.913
  E1125 13:41:38.123762      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:39.123849      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-438489ae-1f18-4b6d-9dbc-808221bd32ef @ 11/25/23 13:41:39.959
  STEP: Updating configmap cm-test-opt-upd-48935054-40bb-4c4c-8b67-48b15dd84ab5 @ 11/25/23 13:41:39.967
  STEP: Creating configMap with name cm-test-opt-create-908d61ac-7c72-41f0-991f-d0c1ed7d5ef8 @ 11/25/23 13:41:39.972
  STEP: waiting to observe update in volume @ 11/25/23 13:41:39.977
  E1125 13:41:40.124613      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:41.124734      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:42.125530      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:43.125685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:44.126290      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:45.126664      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:46.127432      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:47.127542      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:48.128289      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:49.129178      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:50.130060      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:51.130155      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:52.131090      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:53.131171      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:54.132026      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:55.132757      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:56.133253      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:57.133380      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:58.133858      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:41:59.133963      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:00.134481      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:01.134568      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:02.135245      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:03.135361      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:04.135996      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:05.136413      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:06.136568      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:07.136948      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:08.137461      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:09.137665      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:10.137655      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:11.137784      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:12.137783      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:13.138685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:14.138903      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:15.139190      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:16.140084      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:17.140218      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:18.140307      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:19.140724      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:20.140803      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:21.141717      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:22.141829      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:23.141910      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:24.142234      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:25.142549      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:26.142640      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:27.142749      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:28.142838      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:29.142917      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:30.143245      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:31.143343      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:32.143551      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:33.143651      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:34.143891      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:35.144922      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:36.145016      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:37.145636      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:38.146702      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:39.146795      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:40.147116      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:41.147170      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:42.147819      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:43.148615      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:44.148717      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:45.148790      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:46.149638      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:47.150683      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:48.150794      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:49.151441      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:50.151760      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:51.151857      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:52.151947      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:53.152999      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:54.153205      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:55.154109      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:56.154208      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:57.154628      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:58.154718      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:42:59.155545      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:00.155880      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:01.155757      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:02.156209      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:03.157133      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:04.157325      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:05.157538      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:06.157646      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:43:06.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7350" for this suite. @ 11/25/23 13:43:06.392
• [88.526 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 11/25/23 13:43:06.401
  Nov 25 13:43:06.401: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 13:43:06.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:43:06.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:43:06.426
  STEP: creating service nodeport-test with type=NodePort in namespace services-2334 @ 11/25/23 13:43:06.429
  STEP: creating replication controller nodeport-test in namespace services-2334 @ 11/25/23 13:43:06.447
  I1125 13:43:06.457136      17 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-2334, replica count: 2
  E1125 13:43:07.158580      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:08.159142      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:09.159612      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1125 13:43:09.508251      17 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 25 13:43:09.508: INFO: Creating new exec pod
  E1125 13:43:10.159906      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:11.159949      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:12.160782      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:43:12.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-2334 exec execpodq45r4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Nov 25 13:43:12.681: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Nov 25 13:43:12.681: INFO: stdout: "nodeport-test-7pz9j"
  Nov 25 13:43:12.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-2334 exec execpodq45r4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.230 80'
  Nov 25 13:43:12.802: INFO: stderr: "+ nc -v -t -w 2 10.152.183.230 80\n+ echo hostName\nConnection to 10.152.183.230 80 port [tcp/http] succeeded!\n"
  Nov 25 13:43:12.802: INFO: stdout: "nodeport-test-7pz9j"
  Nov 25 13:43:12.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-2334 exec execpodq45r4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.130 32309'
  Nov 25 13:43:12.943: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.130 32309\nConnection to 172.31.22.130 32309 port [tcp/*] succeeded!\n"
  Nov 25 13:43:12.943: INFO: stdout: "nodeport-test-7pz9j"
  Nov 25 13:43:12.943: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-2334 exec execpodq45r4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.85.186 32309'
  Nov 25 13:43:13.074: INFO: stderr: "+ nc -v -t -w 2 172.31.85.186 32309\n+ echo hostName\nConnection to 172.31.85.186 32309 port [tcp/*] succeeded!\n"
  Nov 25 13:43:13.074: INFO: stdout: "nodeport-test-7pz9j"
  Nov 25 13:43:13.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2334" for this suite. @ 11/25/23 13:43:13.079
• [6.685 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 11/25/23 13:43:13.087
  Nov 25 13:43:13.087: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename init-container @ 11/25/23 13:43:13.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:43:13.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:43:13.107
  STEP: creating the pod @ 11/25/23 13:43:13.11
  Nov 25 13:43:13.110: INFO: PodSpec: initContainers in spec.initContainers
  E1125 13:43:13.161600      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:14.162680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:15.162755      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:16.163300      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:17.163489      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:18.164247      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:19.164328      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:20.164437      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:21.164516      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:22.165484      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:23.165616      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:24.165725      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:25.166680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:26.166831      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:27.166922      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:28.167020      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:29.167858      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:30.167927      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:31.168022      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:32.168222      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:33.168298      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:34.168408      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:35.168693      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:36.168748      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:37.168838      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:38.169030      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:39.169101      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:40.169870      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:41.169962      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:42.170686      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:43.170747      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:44.170861      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:45.171249      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:46.171342      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:47.171546      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:48.171738      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:49.172027      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:50.173026      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:51.173206      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:52.173401      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:43:52.415: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-f092338d-db02-4fc7-8bfe-a79ad50e7912", GenerateName:"", Namespace:"init-container-9851", SelfLink:"", UID:"9ade44ef-720a-4095-855e-fcd3fc199507", ResourceVersion:"41223", Generation:0, CreationTimestamp:time.Date(2023, time.November, 25, 13, 43, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"110556831"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.November, 25, 13, 43, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00898bf38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.November, 25, 13, 43, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00898bf80), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-kmnq9", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0031f1180), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-kmnq9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-kmnq9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-kmnq9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002f2b180), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-85-186", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0000fbb20), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002f2b210)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002f2b230)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002f2b238), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002f2b23c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004857840), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 25, 13, 43, 13, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 25, 13, 43, 13, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 25, 13, 43, 13, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 25, 13, 43, 13, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.85.186", HostIPs:[]v1.HostIP(nil), PodIP:"192.168.196.39", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.196.39"}}, StartTime:time.Date(2023, time.November, 25, 13, 43, 13, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0000fbc00)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0000fbc70)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://72651e8254f80e0e62aa2bb83e9c774a0c2309009ccb1b7b9e1977e1b7348888", Started:(*bool)(0xc002f2b2df), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0031f1200), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc002f2b2e5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0031f11e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc002f2b2b4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Nov 25 13:43:52.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9851" for this suite. @ 11/25/23 13:43:52.421
• [39.341 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 11/25/23 13:43:52.428
  Nov 25 13:43:52.428: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename limitrange @ 11/25/23 13:43:52.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:43:52.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:43:52.45
  STEP: Creating LimitRange "e2e-limitrange-5l86k" in namespace "limitrange-4655" @ 11/25/23 13:43:52.453
  STEP: Creating another limitRange in another namespace @ 11/25/23 13:43:52.459
  Nov 25 13:43:52.474: INFO: Namespace "e2e-limitrange-5l86k-1718" created
  Nov 25 13:43:52.474: INFO: Creating LimitRange "e2e-limitrange-5l86k" in namespace "e2e-limitrange-5l86k-1718"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-5l86k" @ 11/25/23 13:43:52.48
  Nov 25 13:43:52.483: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-5l86k" in "limitrange-4655" namespace @ 11/25/23 13:43:52.483
  Nov 25 13:43:52.490: INFO: LimitRange "e2e-limitrange-5l86k" has been patched
  STEP: Delete LimitRange "e2e-limitrange-5l86k" by Collection with labelSelector: "e2e-limitrange-5l86k=patched" @ 11/25/23 13:43:52.49
  STEP: Confirm that the limitRange "e2e-limitrange-5l86k" has been deleted @ 11/25/23 13:43:52.505
  Nov 25 13:43:52.505: INFO: Requesting list of LimitRange to confirm quantity
  Nov 25 13:43:52.509: INFO: Found 0 LimitRange with label "e2e-limitrange-5l86k=patched"
  Nov 25 13:43:52.509: INFO: LimitRange "e2e-limitrange-5l86k" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-5l86k" @ 11/25/23 13:43:52.509
  Nov 25 13:43:52.512: INFO: Found 1 limitRange
  Nov 25 13:43:52.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4655" for this suite. @ 11/25/23 13:43:52.516
  STEP: Destroying namespace "e2e-limitrange-5l86k-1718" for this suite. @ 11/25/23 13:43:52.523
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 11/25/23 13:43:52.535
  Nov 25 13:43:52.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:43:52.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:43:52.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:43:52.556
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 13:43:52.56
  E1125 13:43:53.173722      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:54.173755      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:55.173922      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:56.173956      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:43:56.581
  Nov 25 13:43:56.585: INFO: Trying to get logs from node ip-172-31-4-198 pod downwardapi-volume-7a2f01e3-9ba3-4a7d-8e4a-fc709193b668 container client-container: <nil>
  STEP: delete the pod @ 11/25/23 13:43:56.604
  Nov 25 13:43:56.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8702" for this suite. @ 11/25/23 13:43:56.623
• [4.094 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 11/25/23 13:43:56.63
  Nov 25 13:43:56.630: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename webhook @ 11/25/23 13:43:56.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:43:56.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:43:56.727
  STEP: Setting up server cert @ 11/25/23 13:43:56.762
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/25/23 13:43:57.013
  STEP: Deploying the webhook pod @ 11/25/23 13:43:57.021
  STEP: Wait for the deployment to be ready @ 11/25/23 13:43:57.037
  Nov 25 13:43:57.044: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1125 13:43:57.174690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:43:58.175034      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:43:59.061: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 25, 13, 43, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 43, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 25, 13, 43, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 25, 13, 43, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1125 13:43:59.175727      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:00.176036      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/25/23 13:44:01.066
  STEP: Verifying the service has paired with the endpoint @ 11/25/23 13:44:01.077
  E1125 13:44:01.176799      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:44:02.078: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 11/25/23 13:44:02.085
  STEP: Creating a custom resource definition that should be denied by the webhook @ 11/25/23 13:44:02.101
  Nov 25 13:44:02.102: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 13:44:02.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7130" for this suite. @ 11/25/23 13:44:02.165
  STEP: Destroying namespace "webhook-markers-4680" for this suite. @ 11/25/23 13:44:02.175
  E1125 13:44:02.177462      17 retrywatcher.go:129] "Watch failed" err="context canceled"
• [5.553 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 11/25/23 13:44:02.184
  Nov 25 13:44:02.184: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename disruption @ 11/25/23 13:44:02.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:44:02.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:44:02.205
  STEP: Waiting for the pdb to be processed @ 11/25/23 13:44:02.215
  E1125 13:44:03.177653      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:04.177759      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 11/25/23 13:44:04.249
  Nov 25 13:44:04.258: INFO: running pods: 0 < 3
  E1125 13:44:05.178700      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:06.178798      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:44:06.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6076" for this suite. @ 11/25/23 13:44:06.271
• [4.096 seconds]
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 11/25/23 13:44:06.28
  Nov 25 13:44:06.280: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename sysctl @ 11/25/23 13:44:06.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:44:06.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:44:06.306
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 11/25/23 13:44:06.31
  STEP: Watching for error events or started pod @ 11/25/23 13:44:06.316
  E1125 13:44:07.179689      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:08.179799      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 11/25/23 13:44:08.32
  E1125 13:44:09.180529      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:10.180856      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 11/25/23 13:44:10.332
  STEP: Getting logs from the pod @ 11/25/23 13:44:10.332
  STEP: Checking that the sysctl is actually updated @ 11/25/23 13:44:10.339
  Nov 25 13:44:10.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1226" for this suite. @ 11/25/23 13:44:10.344
• [4.071 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 11/25/23 13:44:10.351
  Nov 25 13:44:10.351: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/25/23 13:44:10.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:44:10.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:44:10.372
  STEP: creating a target pod @ 11/25/23 13:44:10.376
  E1125 13:44:11.180940      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:12.181038      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 11/25/23 13:44:12.4
  E1125 13:44:13.181998      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:14.182723      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 11/25/23 13:44:14.418
  Nov 25 13:44:14.418: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5951 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 13:44:14.418: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 13:44:14.419: INFO: ExecWithOptions: Clientset creation
  Nov 25 13:44:14.419: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-5951/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Nov 25 13:44:14.499: INFO: Exec stderr: ""
  Nov 25 13:44:14.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5951" for this suite. @ 11/25/23 13:44:14.511
• [4.167 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 11/25/23 13:44:14.519
  Nov 25 13:44:14.519: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 13:44:14.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:44:14.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:44:14.538
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 11/25/23 13:44:14.542
  E1125 13:44:15.183309      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:16.183409      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:17.183498      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:18.183683      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:44:18.565
  Nov 25 13:44:18.569: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-b83fc6bc-dedc-4713-8c8f-a8c557d938f8 container test-container: <nil>
  STEP: delete the pod @ 11/25/23 13:44:18.576
  Nov 25 13:44:18.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1234" for this suite. @ 11/25/23 13:44:18.598
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 11/25/23 13:44:18.606
  Nov 25 13:44:18.606: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename watch @ 11/25/23 13:44:18.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:44:18.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:44:18.627
  STEP: getting a starting resourceVersion @ 11/25/23 13:44:18.631
  STEP: starting a background goroutine to produce watch events @ 11/25/23 13:44:18.634
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 11/25/23 13:44:18.634
  E1125 13:44:19.183920      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:20.184078      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:21.184995      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:44:21.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5321" for this suite. @ 11/25/23 13:44:21.461
• [2.908 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 11/25/23 13:44:21.515
  Nov 25 13:44:21.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename job @ 11/25/23 13:44:21.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:44:21.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:44:21.535
  STEP: Creating a job @ 11/25/23 13:44:21.538
  STEP: Ensuring active pods == parallelism @ 11/25/23 13:44:21.543
  E1125 13:44:22.185638      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:23.186711      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 11/25/23 13:44:23.548
  STEP: deleting Job.batch foo in namespace job-4163, will wait for the garbage collector to delete the pods @ 11/25/23 13:44:23.548
  Nov 25 13:44:23.609: INFO: Deleting Job.batch foo took: 6.364774ms
  Nov 25 13:44:23.710: INFO: Terminating Job.batch foo pods took: 101.057812ms
  E1125 13:44:24.187594      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:25.188047      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:26.189041      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:27.189537      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:28.189782      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:29.190325      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:30.191300      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:31.192155      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:32.192997      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:33.193033      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:34.193406      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:35.193834      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:36.194862      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:37.195066      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:38.195381      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:39.195817      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:40.196054      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:41.196140      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:42.196374      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:43.196472      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:44.196554      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:45.197216      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:46.197339      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:47.197408      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:48.197607      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:49.197838      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:50.198514      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:51.198884      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:52.199888      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:53.200245      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:54.200559      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 11/25/23 13:44:54.611
  Nov 25 13:44:54.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4163" for this suite. @ 11/25/23 13:44:54.62
• [33.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 11/25/23 13:44:54.63
  Nov 25 13:44:54.630: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename deployment @ 11/25/23 13:44:54.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:44:54.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:44:54.658
  Nov 25 13:44:54.661: INFO: Creating deployment "test-recreate-deployment"
  Nov 25 13:44:54.668: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Nov 25 13:44:54.675: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E1125 13:44:55.200849      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:56.201031      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:44:56.684: INFO: Waiting deployment "test-recreate-deployment" to complete
  Nov 25 13:44:56.688: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Nov 25 13:44:56.696: INFO: Updating deployment test-recreate-deployment
  Nov 25 13:44:56.696: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Nov 25 13:44:56.772: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6015",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59d7a721-51df-4dc5-8255-bda825d1e1dd",
      ResourceVersion: (string) (len=5) "41947",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516694,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 25 13:44:56.778: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6015",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "043c5a07-24bc-4d1f-941e-6e02ebe002fd",
      ResourceVersion: (string) (len=5) "41945",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516696,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "59d7a721-51df-4dc5-8255-bda825d1e1dd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 39 64 37 61 37  32 31 2d 35 31 64 66 2d  |\"59d7a721-51df-|
              00000120  34 64 63 35 2d 38 32 35  35 2d 62 64 61 38 32 35  |4dc5-8255-bda825|
              00000130  64 31 65 31 64 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d1e1dd\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 25 13:44:56.780: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Nov 25 13:44:56.781: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6015",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3787d428-43ae-41f2-bd1d-9b39779479e4",
      ResourceVersion: (string) (len=5) "41935",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516694,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "59d7a721-51df-4dc5-8255-bda825d1e1dd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 39 64 37 61 37  32 31 2d 35 31 64 66 2d  |\"59d7a721-51df-|
              00000120  34 64 63 35 2d 38 32 35  35 2d 62 64 61 38 32 35  |4dc5-8255-bda825|
              00000130  64 31 65 31 64 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d1e1dd\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 25 13:44:56.787: INFO: Pod "test-recreate-deployment-76fb77d45-hpbtt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-hpbtt",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-6015",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65bf0d42-7a87-4be2-b1ac-274c1a9d85b0",
      ResourceVersion: (string) (len=5) "41946",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516696,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "043c5a07-24bc-4d1f-941e-6e02ebe002fd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 34  33 63 35 61 30 37 2d 32  |d\":\"043c5a07-2|
              00000090  34 62 63 2d 34 64 31 66  2d 39 34 31 65 2d 36 65  |4bc-4d1f-941e-6e|
              000000a0  30 32 65 62 65 30 30 32  66 64 5c 22 7d 22 3a 7b  |02ebe002fd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2shbd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2shbd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-186",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63836516696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.186",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63836516696,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 25 13:44:56.792: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6015" for this suite. @ 11/25/23 13:44:56.797
• [2.175 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 11/25/23 13:44:56.806
  Nov 25 13:44:56.806: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 13:44:56.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:44:56.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:44:56.827
  STEP: creating a Service @ 11/25/23 13:44:56.834
  STEP: watching for the Service to be added @ 11/25/23 13:44:56.843
  Nov 25 13:44:56.845: INFO: Found Service test-service-4wl2s in namespace services-7709 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Nov 25 13:44:56.845: INFO: Service test-service-4wl2s created
  STEP: Getting /status @ 11/25/23 13:44:56.845
  Nov 25 13:44:56.851: INFO: Service test-service-4wl2s has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 11/25/23 13:44:56.851
  STEP: watching for the Service to be patched @ 11/25/23 13:44:56.858
  Nov 25 13:44:56.859: INFO: observed Service test-service-4wl2s in namespace services-7709 with annotations: map[] & LoadBalancer: {[]}
  Nov 25 13:44:56.859: INFO: Found Service test-service-4wl2s in namespace services-7709 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Nov 25 13:44:56.859: INFO: Service test-service-4wl2s has service status patched
  STEP: updating the ServiceStatus @ 11/25/23 13:44:56.859
  Nov 25 13:44:56.871: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 11/25/23 13:44:56.871
  Nov 25 13:44:56.872: INFO: Observed Service test-service-4wl2s in namespace services-7709 with annotations: map[] & Conditions: {[]}
  Nov 25 13:44:56.872: INFO: Observed event: &Service{ObjectMeta:{test-service-4wl2s  services-7709  bc48bf52-3fe1-4d22-9e90-d34137553450 41956 0 2023-11-25 13:44:56 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-11-25 13:44:56 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-11-25 13:44:56 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.97,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.97],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Nov 25 13:44:56.872: INFO: Found Service test-service-4wl2s in namespace services-7709 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov 25 13:44:56.872: INFO: Service test-service-4wl2s has service status updated
  STEP: patching the service @ 11/25/23 13:44:56.872
  STEP: watching for the Service to be patched @ 11/25/23 13:44:56.889
  Nov 25 13:44:56.891: INFO: observed Service test-service-4wl2s in namespace services-7709 with labels: map[test-service-static:true]
  Nov 25 13:44:56.891: INFO: observed Service test-service-4wl2s in namespace services-7709 with labels: map[test-service-static:true]
  Nov 25 13:44:56.891: INFO: observed Service test-service-4wl2s in namespace services-7709 with labels: map[test-service-static:true]
  Nov 25 13:44:56.891: INFO: Found Service test-service-4wl2s in namespace services-7709 with labels: map[test-service:patched test-service-static:true]
  Nov 25 13:44:56.891: INFO: Service test-service-4wl2s patched
  STEP: deleting the service @ 11/25/23 13:44:56.891
  STEP: watching for the Service to be deleted @ 11/25/23 13:44:56.904
  Nov 25 13:44:56.906: INFO: Observed event: ADDED
  Nov 25 13:44:56.906: INFO: Observed event: MODIFIED
  Nov 25 13:44:56.906: INFO: Observed event: MODIFIED
  Nov 25 13:44:56.906: INFO: Observed event: MODIFIED
  Nov 25 13:44:56.907: INFO: Found Service test-service-4wl2s in namespace services-7709 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Nov 25 13:44:56.907: INFO: Service test-service-4wl2s deleted
  Nov 25 13:44:56.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7709" for this suite. @ 11/25/23 13:44:56.911
• [0.112 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 11/25/23 13:44:56.918
  Nov 25 13:44:56.918: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename dns @ 11/25/23 13:44:56.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:44:56.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:44:56.942
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9106.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9106.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 11/25/23 13:44:56.945
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9106.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9106.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 11/25/23 13:44:56.945
  STEP: creating a pod to probe /etc/hosts @ 11/25/23 13:44:56.945
  STEP: submitting the pod to kubernetes @ 11/25/23 13:44:56.945
  E1125 13:44:57.201340      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:44:58.201410      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/25/23 13:44:58.964
  STEP: looking for the results for each expected name from probers @ 11/25/23 13:44:58.968
  Nov 25 13:44:58.986: INFO: DNS probes using dns-9106/dns-test-9d204ff6-5446-4780-b4fe-6ca334453c30 succeeded

  Nov 25 13:44:58.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/25/23 13:44:58.99
  STEP: Destroying namespace "dns-9106" for this suite. @ 11/25/23 13:44:59.005
• [2.093 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 11/25/23 13:44:59.012
  Nov 25 13:44:59.012: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename replication-controller @ 11/25/23 13:44:59.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:44:59.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:44:59.032
  STEP: Creating ReplicationController "e2e-rc-wlv5q" @ 11/25/23 13:44:59.035
  Nov 25 13:44:59.041: INFO: Get Replication Controller "e2e-rc-wlv5q" to confirm replicas
  E1125 13:44:59.201566      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:45:00.045: INFO: Get Replication Controller "e2e-rc-wlv5q" to confirm replicas
  Nov 25 13:45:00.050: INFO: Found 1 replicas for "e2e-rc-wlv5q" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-wlv5q" @ 11/25/23 13:45:00.05
  STEP: Updating a scale subresource @ 11/25/23 13:45:00.053
  STEP: Verifying replicas where modified for replication controller "e2e-rc-wlv5q" @ 11/25/23 13:45:00.06
  Nov 25 13:45:00.060: INFO: Get Replication Controller "e2e-rc-wlv5q" to confirm replicas
  E1125 13:45:00.202081      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:45:01.067: INFO: Get Replication Controller "e2e-rc-wlv5q" to confirm replicas
  Nov 25 13:45:01.070: INFO: Found 2 replicas for "e2e-rc-wlv5q" replication controller
  Nov 25 13:45:01.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6616" for this suite. @ 11/25/23 13:45:01.075
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 11/25/23 13:45:01.082
  Nov 25 13:45:01.082: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 13:45:01.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:45:01.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:45:01.103
  STEP: creating a replication controller @ 11/25/23 13:45:01.106
  Nov 25 13:45:01.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5824 create -f -'
  E1125 13:45:01.203762      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:45:01.516: INFO: stderr: ""
  Nov 25 13:45:01.516: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/25/23 13:45:01.516
  Nov 25 13:45:01.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5824 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 25 13:45:01.669: INFO: stderr: ""
  Nov 25 13:45:01.669: INFO: stdout: "update-demo-nautilus-f68z8 update-demo-nautilus-r4574 "
  Nov 25 13:45:01.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5824 get pods update-demo-nautilus-f68z8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 25 13:45:01.791: INFO: stderr: ""
  Nov 25 13:45:01.791: INFO: stdout: ""
  Nov 25 13:45:01.791: INFO: update-demo-nautilus-f68z8 is created but not running
  E1125 13:45:02.204130      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:03.204281      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:04.204421      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:05.204565      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:06.204648      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:45:06.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5824 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 25 13:45:06.857: INFO: stderr: ""
  Nov 25 13:45:06.857: INFO: stdout: "update-demo-nautilus-f68z8 update-demo-nautilus-r4574 "
  Nov 25 13:45:06.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5824 get pods update-demo-nautilus-f68z8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 25 13:45:06.914: INFO: stderr: ""
  Nov 25 13:45:06.914: INFO: stdout: "true"
  Nov 25 13:45:06.914: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5824 get pods update-demo-nautilus-f68z8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 25 13:45:06.971: INFO: stderr: ""
  Nov 25 13:45:06.971: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 25 13:45:06.971: INFO: validating pod update-demo-nautilus-f68z8
  Nov 25 13:45:06.978: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 25 13:45:06.978: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 25 13:45:06.978: INFO: update-demo-nautilus-f68z8 is verified up and running
  Nov 25 13:45:06.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5824 get pods update-demo-nautilus-r4574 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 25 13:45:07.038: INFO: stderr: ""
  Nov 25 13:45:07.038: INFO: stdout: "true"
  Nov 25 13:45:07.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5824 get pods update-demo-nautilus-r4574 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 25 13:45:07.097: INFO: stderr: ""
  Nov 25 13:45:07.097: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 25 13:45:07.097: INFO: validating pod update-demo-nautilus-r4574
  Nov 25 13:45:07.103: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 25 13:45:07.103: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 25 13:45:07.103: INFO: update-demo-nautilus-r4574 is verified up and running
  STEP: using delete to clean up resources @ 11/25/23 13:45:07.103
  Nov 25 13:45:07.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5824 delete --grace-period=0 --force -f -'
  Nov 25 13:45:07.165: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 25 13:45:07.165: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Nov 25 13:45:07.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5824 get rc,svc -l name=update-demo --no-headers'
  E1125 13:45:07.205525      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:45:07.261: INFO: stderr: "No resources found in kubectl-5824 namespace.\n"
  Nov 25 13:45:07.261: INFO: stdout: ""
  Nov 25 13:45:07.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-5824 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Nov 25 13:45:07.358: INFO: stderr: ""
  Nov 25 13:45:07.358: INFO: stdout: ""
  Nov 25 13:45:07.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5824" for this suite. @ 11/25/23 13:45:07.363
• [6.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 11/25/23 13:45:07.37
  Nov 25 13:45:07.370: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename server-version @ 11/25/23 13:45:07.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:45:07.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:45:07.393
  STEP: Request ServerVersion @ 11/25/23 13:45:07.396
  STEP: Confirm major version @ 11/25/23 13:45:07.397
  Nov 25 13:45:07.397: INFO: Major version: 1
  STEP: Confirm minor version @ 11/25/23 13:45:07.397
  Nov 25 13:45:07.397: INFO: cleanMinorVersion: 28
  Nov 25 13:45:07.397: INFO: Minor version: 28
  Nov 25 13:45:07.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-6876" for this suite. @ 11/25/23 13:45:07.403
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 11/25/23 13:45:07.41
  Nov 25 13:45:07.410: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename replication-controller @ 11/25/23 13:45:07.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:45:07.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:45:07.451
  Nov 25 13:45:07.455: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E1125 13:45:08.205667      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 11/25/23 13:45:08.473
  STEP: Checking rc "condition-test" has the desired failure condition set @ 11/25/23 13:45:08.48
  E1125 13:45:09.205954      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 11/25/23 13:45:09.49
  Nov 25 13:45:09.500: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 11/25/23 13:45:09.5
  Nov 25 13:45:09.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4629" for this suite. @ 11/25/23 13:45:09.51
• [2.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 11/25/23 13:45:09.518
  Nov 25 13:45:09.518: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pods @ 11/25/23 13:45:09.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:45:09.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:45:09.538
  STEP: Create a pod @ 11/25/23 13:45:09.542
  E1125 13:45:10.206711      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:11.207400      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 11/25/23 13:45:11.563
  Nov 25 13:45:11.571: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Nov 25 13:45:11.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3301" for this suite. @ 11/25/23 13:45:11.576
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 11/25/23 13:45:11.585
  Nov 25 13:45:11.585: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename init-container @ 11/25/23 13:45:11.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:45:11.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:45:11.608
  STEP: creating the pod @ 11/25/23 13:45:11.611
  Nov 25 13:45:11.611: INFO: PodSpec: initContainers in spec.initContainers
  E1125 13:45:12.208187      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:13.208698      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:14.209709      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:45:14.953: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1497" for this suite. @ 11/25/23 13:45:14.959
• [3.383 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 11/25/23 13:45:14.968
  Nov 25 13:45:14.968: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 13:45:14.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:45:14.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:45:14.998
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/25/23 13:45:15.001
  E1125 13:45:15.210719      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:16.210977      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:17.211670      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:18.211882      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:45:19.025
  Nov 25 13:45:19.029: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-087d6f89-c78d-44e9-bbdb-8f539b017de1 container test-container: <nil>
  STEP: delete the pod @ 11/25/23 13:45:19.036
  Nov 25 13:45:19.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1127" for this suite. @ 11/25/23 13:45:19.058
• [4.096 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 11/25/23 13:45:19.065
  Nov 25 13:45:19.065: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 13:45:19.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:45:19.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:45:19.084
  Nov 25 13:45:19.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-7717 version'
  Nov 25 13:45:19.139: INFO: stderr: ""
  Nov 25 13:45:19.139: INFO: stdout: "Client Version: v1.28.4\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.4\n"
  Nov 25 13:45:19.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7717" for this suite. @ 11/25/23 13:45:19.143
• [0.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 11/25/23 13:45:19.152
  Nov 25 13:45:19.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/25/23 13:45:19.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:45:19.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:45:19.175
  STEP: set up a multi version CRD @ 11/25/23 13:45:19.178
  Nov 25 13:45:19.178: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  E1125 13:45:19.212435      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:20.213440      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:21.217041      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:22.217334      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 11/25/23 13:45:22.603
  STEP: check the new version name is served @ 11/25/23 13:45:22.616
  E1125 13:45:23.218021      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 11/25/23 13:45:23.524
  STEP: check the other version is not changed @ 11/25/23 13:45:24.172
  E1125 13:45:24.218257      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:25.218724      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:26.219379      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:45:26.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4918" for this suite. @ 11/25/23 13:45:26.817
• [7.674 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 11/25/23 13:45:26.826
  Nov 25 13:45:26.826: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename pod-network-test @ 11/25/23 13:45:26.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:45:26.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:45:26.847
  STEP: Performing setup for networking test in namespace pod-network-test-6304 @ 11/25/23 13:45:26.85
  STEP: creating a selector @ 11/25/23 13:45:26.85
  STEP: Creating the service pods in kubernetes @ 11/25/23 13:45:26.85
  Nov 25 13:45:26.850: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1125 13:45:27.220047      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:28.220371      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:29.220843      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:30.221083      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:31.221443      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:32.221646      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:33.221731      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:34.222646      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:35.222746      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:36.222817      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:37.223503      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:38.223720      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/25/23 13:45:38.933
  E1125 13:45:39.224177      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:40.224950      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:45:40.967: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov 25 13:45:40.967: INFO: Going to poll 192.168.72.188 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Nov 25 13:45:40.970: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.72.188:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6304 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 13:45:40.970: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 13:45:40.971: INFO: ExecWithOptions: Clientset creation
  Nov 25 13:45:40.971: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6304/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.72.188%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 25 13:45:41.048: INFO: Found all 1 expected endpoints: [netserver-0]
  Nov 25 13:45:41.048: INFO: Going to poll 192.168.8.15 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Nov 25 13:45:41.052: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.8.15:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6304 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 13:45:41.052: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 13:45:41.053: INFO: ExecWithOptions: Clientset creation
  Nov 25 13:45:41.053: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6304/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.8.15%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 25 13:45:41.127: INFO: Found all 1 expected endpoints: [netserver-1]
  Nov 25 13:45:41.127: INFO: Going to poll 192.168.196.25 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Nov 25 13:45:41.131: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.196.25:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6304 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 13:45:41.131: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 13:45:41.131: INFO: ExecWithOptions: Clientset creation
  Nov 25 13:45:41.131: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6304/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.196.25%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 25 13:45:41.212: INFO: Found all 1 expected endpoints: [netserver-2]
  Nov 25 13:45:41.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6304" for this suite. @ 11/25/23 13:45:41.217
• [14.397 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 11/25/23 13:45:41.224
  Nov 25 13:45:41.224: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename var-expansion @ 11/25/23 13:45:41.225
  E1125 13:45:41.225559      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:45:41.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:45:41.247
  STEP: creating the pod with failed condition @ 11/25/23 13:45:41.25
  E1125 13:45:42.225640      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:43.226702      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:44.227731      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:45.228153      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:46.228722      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:47.228900      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:48.229636      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:49.229728      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:50.230685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:51.230896      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:52.230980      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:53.231086      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:54.231184      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:55.231586      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:56.231694      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:57.231761      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:58.231876      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:45:59.232544      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:00.233647      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:01.234696      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:02.234810      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:03.235008      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:04.235244      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:05.235594      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:06.235689      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:07.235986      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:08.236085      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:09.236306      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:10.237244      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:11.237740      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:12.238680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:13.239733      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:14.239821      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:15.240207      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:16.240528      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:17.240673      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:18.240758      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:19.241622      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:20.241707      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:21.242751      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:22.242831      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:23.242924      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:24.242955      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:25.243363      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:26.243484      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:27.243688      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:28.243796      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:29.243959      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:30.244072      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:31.244291      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:32.244389      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:33.245444      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:34.246329      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:35.246782      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:36.247308      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:37.247383      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:38.248292      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:39.248617      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:40.249636      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:41.250707      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:42.250804      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:43.250879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:44.250992      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:45.251394      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:46.251432      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:47.251536      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:48.251646      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:49.251712      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:50.252737      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:51.252838      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:52.253089      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:53.253290      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:54.253641      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:55.254702      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:56.254795      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:57.255078      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:58.255761      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:46:59.256004      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:00.256318      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:01.256367      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:02.257298      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:03.257529      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:04.258020      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:05.258991      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:06.259073      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:07.259364      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:08.259455      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:09.259543      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:10.259643      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:11.259853      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:12.260057      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:13.260141      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:14.260259      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:15.260779      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:16.260880      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:17.261068      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:18.261109      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:19.261394      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:20.261634      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:21.262689      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:22.263121      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:23.263200      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:24.263357      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:25.263783      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:26.264350      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:27.264605      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:28.264670      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:29.264935      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:30.265904      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:31.266686      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:32.266866      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:33.267044      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:34.267296      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:35.267654      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:36.267980      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:37.268774      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:38.269730      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:39.269830      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:40.269923      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 11/25/23 13:47:41.261
  E1125 13:47:41.270200      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:47:41.776: INFO: Successfully updated pod "var-expansion-a2cbc23f-2b05-4420-8d4b-41b1780afd4a"
  STEP: waiting for pod running @ 11/25/23 13:47:41.776
  E1125 13:47:42.271252      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:43.271340      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 11/25/23 13:47:43.784
  Nov 25 13:47:43.784: INFO: Deleting pod "var-expansion-a2cbc23f-2b05-4420-8d4b-41b1780afd4a" in namespace "var-expansion-8569"
  Nov 25 13:47:43.792: INFO: Wait up to 5m0s for pod "var-expansion-a2cbc23f-2b05-4420-8d4b-41b1780afd4a" to be fully deleted
  E1125 13:47:44.271440      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:45.271844      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:46.272095      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:47.272211      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:48.273035      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:49.273131      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:50.274170      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:51.274688      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:52.274803      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:53.274892      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:54.275604      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:55.275697      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:56.276251      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:57.276336      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:58.277005      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:47:59.277045      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:00.277757      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:01.277854      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:02.277945      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:03.278705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:04.278799      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:05.278899      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:06.278989      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:07.279148      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:08.279243      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:09.279339      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:10.279426      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:11.279808      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:12.280290      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:13.280489      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:14.280593      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:15.280688      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:48:15.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8569" for this suite. @ 11/25/23 13:48:15.878
• [154.663 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 11/25/23 13:48:15.888
  Nov 25 13:48:15.888: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 13:48:15.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:48:15.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:48:15.917
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/25/23 13:48:15.922
  E1125 13:48:16.280867      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:17.280806      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:18.280884      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:19.281082      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:48:19.945
  Nov 25 13:48:19.950: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-4ad21f78-1126-4675-a1c4-476e2d8c435f container test-container: <nil>
  STEP: delete the pod @ 11/25/23 13:48:19.972
  Nov 25 13:48:19.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6653" for this suite. @ 11/25/23 13:48:19.998
• [4.120 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 11/25/23 13:48:20.008
  Nov 25 13:48:20.008: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/25/23 13:48:20.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:48:20.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:48:20.039
  Nov 25 13:48:20.043: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  E1125 13:48:20.281934      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:48:20.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7576" for this suite. @ 11/25/23 13:48:20.614
• [0.616 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 11/25/23 13:48:20.625
  Nov 25 13:48:20.625: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:48:20.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:48:20.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:48:20.649
  STEP: Creating a pod to test downward API volume plugin @ 11/25/23 13:48:20.653
  E1125 13:48:21.282036      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:22.282119      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:23.282680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:24.283060      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:48:24.678
  Nov 25 13:48:24.682: INFO: Trying to get logs from node ip-172-31-85-186 pod downwardapi-volume-62fadd20-e391-4e89-bc63-61c993b90eff container client-container: <nil>
  STEP: delete the pod @ 11/25/23 13:48:24.69
  Nov 25 13:48:24.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-251" for this suite. @ 11/25/23 13:48:24.711
• [4.094 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 11/25/23 13:48:24.719
  Nov 25 13:48:24.719: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:48:24.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:48:24.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:48:24.739
  STEP: Creating configMap with name projected-configmap-test-volume-map-1af1ea29-6633-46f3-ae29-ceb87d16b8ad @ 11/25/23 13:48:24.743
  STEP: Creating a pod to test consume configMaps @ 11/25/23 13:48:24.749
  E1125 13:48:25.283100      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:26.283188      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:27.283282      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:28.283567      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:48:28.772
  Nov 25 13:48:28.775: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-projected-configmaps-a4026b6d-ca4e-45bf-ab6f-a4106585583f container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 13:48:28.783
  Nov 25 13:48:28.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6382" for this suite. @ 11/25/23 13:48:28.805
• [4.094 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 11/25/23 13:48:28.813
  Nov 25 13:48:28.813: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename job @ 11/25/23 13:48:28.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:48:28.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:48:28.836
  STEP: Creating a job @ 11/25/23 13:48:28.847
  STEP: Ensure pods equal to parallelism count is attached to the job @ 11/25/23 13:48:28.855
  E1125 13:48:29.284504      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:30.284791      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 11/25/23 13:48:30.861
  STEP: updating /status @ 11/25/23 13:48:30.871
  STEP: get /status @ 11/25/23 13:48:30.88
  Nov 25 13:48:30.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2658" for this suite. @ 11/25/23 13:48:30.889
• [2.083 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 11/25/23 13:48:30.897
  Nov 25 13:48:30.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename kubectl @ 11/25/23 13:48:30.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:48:30.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:48:30.921
  STEP: starting the proxy server @ 11/25/23 13:48:30.926
  Nov 25 13:48:30.926: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=kubectl-1041 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 11/25/23 13:48:30.969
  Nov 25 13:48:30.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1041" for this suite. @ 11/25/23 13:48:30.982
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 11/25/23 13:48:30.993
  Nov 25 13:48:30.993: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename subpath @ 11/25/23 13:48:30.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:48:31.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:48:31.015
  STEP: Setting up data @ 11/25/23 13:48:31.02
  STEP: Creating pod pod-subpath-test-configmap-tktm @ 11/25/23 13:48:31.032
  STEP: Creating a pod to test atomic-volume-subpath @ 11/25/23 13:48:31.032
  E1125 13:48:31.285825      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:32.285932      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:33.286342      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:34.286422      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:35.286661      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:36.286765      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:37.287076      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:38.287148      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:39.287540      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:40.287628      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:41.288024      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:42.288131      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:43.288233      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:44.288417      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:45.288811      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:46.289714      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:47.290649      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:48.290841      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:49.290931      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:50.291708      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:51.292128      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:52.292218      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:53.292309      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:54.292391      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:48:55.1
  Nov 25 13:48:55.104: INFO: Trying to get logs from node ip-172-31-4-198 pod pod-subpath-test-configmap-tktm container test-container-subpath-configmap-tktm: <nil>
  STEP: delete the pod @ 11/25/23 13:48:55.121
  STEP: Deleting pod pod-subpath-test-configmap-tktm @ 11/25/23 13:48:55.14
  Nov 25 13:48:55.140: INFO: Deleting pod "pod-subpath-test-configmap-tktm" in namespace "subpath-9634"
  Nov 25 13:48:55.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9634" for this suite. @ 11/25/23 13:48:55.147
• [24.161 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 11/25/23 13:48:55.154
  Nov 25 13:48:55.154: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:48:55.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:48:55.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:48:55.183
  STEP: Creating projection with secret that has name projected-secret-test-map-f2f9739f-0725-4e20-aafb-2d31ec099deb @ 11/25/23 13:48:55.186
  STEP: Creating a pod to test consume secrets @ 11/25/23 13:48:55.192
  E1125 13:48:55.292865      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:56.292985      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:57.293331      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:48:58.293671      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:48:59.215
  Nov 25 13:48:59.219: INFO: Trying to get logs from node ip-172-31-4-198 pod pod-projected-secrets-b7802e6b-e88a-46cc-af86-a60f9cc638dd container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/25/23 13:48:59.231
  Nov 25 13:48:59.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1900" for this suite. @ 11/25/23 13:48:59.255
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 11/25/23 13:48:59.264
  Nov 25 13:48:59.264: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 13:48:59.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:48:59.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:48:59.286
  STEP: creating service in namespace services-2316 @ 11/25/23 13:48:59.29
  STEP: creating service affinity-clusterip-transition in namespace services-2316 @ 11/25/23 13:48:59.29
  E1125 13:48:59.293869      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2316 @ 11/25/23 13:48:59.3
  I1125 13:48:59.309427      17 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-2316, replica count: 3
  E1125 13:49:00.294622      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:01.295200      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:02.295296      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1125 13:49:02.360557      17 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 25 13:49:02.368: INFO: Creating new exec pod
  E1125 13:49:03.295354      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:04.295457      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:05.295543      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:49:05.390: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-2316 exec execpod-affinity48g5t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Nov 25 13:49:05.533: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Nov 25 13:49:05.533: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 13:49:05.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-2316 exec execpod-affinity48g5t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  Nov 25 13:49:05.674: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n"
  Nov 25 13:49:05.674: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 25 13:49:05.690: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-2316 exec execpod-affinity48g5t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.110:80/ ; done'
  Nov 25 13:49:05.919: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n"
  Nov 25 13:49:05.919: INFO: stdout: "\naffinity-clusterip-transition-d26qk\naffinity-clusterip-transition-d26qk\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-28x6w\naffinity-clusterip-transition-28x6w\naffinity-clusterip-transition-d26qk\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-28x6w\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-d26qk\naffinity-clusterip-transition-28x6w\naffinity-clusterip-transition-d26qk\naffinity-clusterip-transition-d26qk"
  Nov 25 13:49:05.919: INFO: Received response from host: affinity-clusterip-transition-d26qk
  Nov 25 13:49:05.919: INFO: Received response from host: affinity-clusterip-transition-d26qk
  Nov 25 13:49:05.919: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:05.919: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:05.919: INFO: Received response from host: affinity-clusterip-transition-28x6w
  Nov 25 13:49:05.920: INFO: Received response from host: affinity-clusterip-transition-28x6w
  Nov 25 13:49:05.920: INFO: Received response from host: affinity-clusterip-transition-d26qk
  Nov 25 13:49:05.920: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:05.920: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:05.920: INFO: Received response from host: affinity-clusterip-transition-28x6w
  Nov 25 13:49:05.920: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:05.920: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:05.920: INFO: Received response from host: affinity-clusterip-transition-d26qk
  Nov 25 13:49:05.920: INFO: Received response from host: affinity-clusterip-transition-28x6w
  Nov 25 13:49:05.920: INFO: Received response from host: affinity-clusterip-transition-d26qk
  Nov 25 13:49:05.920: INFO: Received response from host: affinity-clusterip-transition-d26qk
  Nov 25 13:49:05.929: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-2316 exec execpod-affinity48g5t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.110:80/ ; done'
  Nov 25 13:49:06.161: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.110:80/\n"
  Nov 25 13:49:06.161: INFO: stdout: "\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h\naffinity-clusterip-transition-dc26h"
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Received response from host: affinity-clusterip-transition-dc26h
  Nov 25 13:49:06.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 25 13:49:06.165: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2316, will wait for the garbage collector to delete the pods @ 11/25/23 13:49:06.181
  Nov 25 13:49:06.242: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.876509ms
  E1125 13:49:06.296500      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:49:06.342: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.110586ms
  E1125 13:49:07.296687      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:08.296774      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-2316" for this suite. @ 11/25/23 13:49:09.26
• [10.004 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 11/25/23 13:49:09.271
  Nov 25 13:49:09.271: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename podtemplate @ 11/25/23 13:49:09.272
  E1125 13:49:09.297176      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:49:09.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:49:09.303
  STEP: Create a pod template @ 11/25/23 13:49:09.306
  STEP: Replace a pod template @ 11/25/23 13:49:09.313
  Nov 25 13:49:09.323: INFO: Found updated podtemplate annotation: "true"

  Nov 25 13:49:09.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1810" for this suite. @ 11/25/23 13:49:09.328
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 11/25/23 13:49:09.336
  Nov 25 13:49:09.336: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:49:09.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:49:09.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:49:09.364
  STEP: Creating configMap with name projected-configmap-test-volume-d3985d20-9c98-47db-a9dc-2900fdd2f2e3 @ 11/25/23 13:49:09.376
  STEP: Creating a pod to test consume configMaps @ 11/25/23 13:49:09.384
  E1125 13:49:10.297645      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:11.298712      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:12.298812      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:13.298909      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:49:13.405
  Nov 25 13:49:13.409: INFO: Trying to get logs from node ip-172-31-85-186 pod pod-projected-configmaps-e35fea5d-12ac-439a-a47b-5207cff21315 container agnhost-container: <nil>
  STEP: delete the pod @ 11/25/23 13:49:13.417
  Nov 25 13:49:13.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8476" for this suite. @ 11/25/23 13:49:13.439
• [4.109 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 11/25/23 13:49:13.446
  Nov 25 13:49:13.446: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename cronjob @ 11/25/23 13:49:13.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:49:13.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:49:13.516
  STEP: Creating a ForbidConcurrent cronjob @ 11/25/23 13:49:13.52
  STEP: Ensuring a job is scheduled @ 11/25/23 13:49:13.526
  E1125 13:49:14.298986      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:15.299366      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:16.299536      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:17.300143      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:18.300237      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:19.300419      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:20.301350      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:21.301830      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:22.302136      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:23.302709      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:24.303437      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:25.303879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:26.304866      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:27.305151      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:28.306015      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:29.306089      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:30.306686      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:31.306791      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:32.306891      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:33.306981      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:34.307088      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:35.307181      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:36.307278      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:37.307482      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:38.307551      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:39.307754      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:40.307853      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:41.308013      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:42.308787      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:43.309204      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:44.309645      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:45.310688      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:46.310773      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:47.310947      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:48.311175      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:49.311275      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:50.311973      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:51.312174      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:52.312260      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:53.312425      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:54.313321      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:55.313612      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:56.314678      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:57.314774      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:58.315092      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:49:59.315283      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:00.316090      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:01.316358      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 11/25/23 13:50:01.531
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/25/23 13:50:01.534
  STEP: Ensuring no more jobs are scheduled @ 11/25/23 13:50:01.538
  E1125 13:50:02.317045      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:03.317235      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:04.317265      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:05.317637      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:06.317734      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:07.318688      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:08.318790      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:09.318911      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:10.319435      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:11.319463      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:12.319563      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:13.320036      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:14.320150      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:15.321098      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:16.321644      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:17.321738      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:18.321830      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:19.321907      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:20.322012      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:21.322092      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:22.322196      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:23.322290      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:24.322388      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:25.322644      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:26.322739      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:27.323035      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:28.323138      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:29.323433      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:30.323576      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:31.323783      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:32.323882      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:33.324914      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:34.325794      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:35.326700      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:36.326889      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:37.327085      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:38.327172      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:39.327269      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:40.327457      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:41.327671      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:42.327771      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:43.327896      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:44.327977      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:45.328266      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:46.328371      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:47.329236      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:48.329634      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:49.330722      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:50.331021      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:51.331343      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:52.331441      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:53.331543      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:54.332538      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:55.332621      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:56.333267      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:57.333461      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:58.334485      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:50:59.334733      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:00.335671      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:01.335861      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:02.335968      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:03.336056      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:04.336516      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:05.336910      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:06.336965      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:07.337066      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:08.337237      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:09.337587      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:10.338628      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:11.338789      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:12.338837      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:13.338934      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:14.339219      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:15.339551      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:16.340483      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:17.340668      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:18.341218      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:19.341310      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:20.341977      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:21.342691      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:22.342787      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:23.342862      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:24.343874      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:25.344204      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:26.344304      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:27.344727      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:28.345481      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:29.345465      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:30.345615      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:31.345714      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:32.345803      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:33.345896      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:34.346665      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:35.346761      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:36.347089      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:37.347321      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:38.347448      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:39.347790      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:40.348809      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:41.349029      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:42.349111      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:43.349834      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:44.349858      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:45.349950      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:46.350695      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:47.350776      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:48.351079      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:49.351499      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:50.352330      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:51.352589      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:52.353220      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:53.353316      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:54.353704      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:55.353863      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:56.354680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:57.354891      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:58.355349      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:51:59.355831      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:00.355924      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:01.356052      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:02.356118      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:03.356219      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:04.356964      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:05.357164      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:06.358009      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:07.358182      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:08.358717      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:09.359028      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:10.359119      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:11.359660      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:12.359756      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:13.360472      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:14.360972      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:15.361154      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:16.361724      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:17.361812      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:18.361905      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:19.362268      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:20.362366      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:21.363244      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:22.363346      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:23.363485      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:24.364248      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:25.364348      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:26.364429      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:27.364502      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:28.364639      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:29.365271      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:30.365421      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:31.365616      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:32.366301      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:33.366319      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:34.367034      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:35.367572      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:36.367664      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:37.367837      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:38.368798      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:39.369661      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:40.370686      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:41.370877      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:42.370964      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:43.371131      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:44.371706      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:45.371875      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:46.371960      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:47.372140      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:48.372231      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:49.372543      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:50.373243      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:51.373338      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:52.374334      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:53.374432      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:54.374966      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:55.375169      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:56.375930      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:57.376023      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:58.376137      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:52:59.376508      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:00.376600      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:01.376800      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:02.376895      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:03.376988      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:04.378009      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:05.378688      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:06.378777      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:07.378927      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:08.379867      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:09.380214      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:10.380987      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:11.381657      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:12.382681      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:13.382879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:14.383216      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:15.383306      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:16.383996      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:17.384089      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:18.384192      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:19.384242      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:20.384264      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:21.384533      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:22.385631      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:23.385721      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:24.385972      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:25.386685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:26.387153      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:27.387612      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:28.387871      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:29.388180      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:30.388247      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:31.388457      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:32.389186      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:33.389725      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:34.390738      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:35.390839      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:36.390923      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:37.391102      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:38.391198      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:39.391482      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:40.392351      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:41.392442      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:42.392534      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:43.392630      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:44.393688      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:45.393800      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:46.394630      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:47.394811      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:48.395075      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:49.395380      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:50.395493      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:51.395592      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:52.395685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:53.395937      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:54.396701      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:55.396795      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:56.396889      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:57.397430      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:58.397617      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:53:59.398674      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:00.398773      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:01.398875      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:02.399234      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:03.399325      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:04.399699      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:05.400399      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:06.401070      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:07.401146      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:08.401196      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:09.401534      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:10.401617      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:11.401715      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:12.401812      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:13.401905      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:14.402981      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:15.403549      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:16.404187      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:17.404272      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:18.404365      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:19.405300      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:20.405615      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:21.406684      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:22.407012      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:23.407054      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:24.407981      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:25.408152      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:26.408236      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:27.408331      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:28.408600      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:29.408899      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:30.409626      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:31.409712      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:32.410680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:33.411575      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:34.411666      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:35.411915      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:36.412008      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:37.412112      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:38.412457      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:39.413329      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:40.413420      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:41.413708      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:42.413997      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:43.414881      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:44.414939      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:45.415122      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:46.415216      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:47.415386      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:48.415621      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:49.416389      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:50.416483      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:51.416821      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:52.416899      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:53.417157      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:54.417697      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:55.418685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:56.419531      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:57.420535      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:58.420632      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:54:59.420930      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:00.421617      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:01.422685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 11/25/23 13:55:01.546
  Nov 25 13:55:01.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2173" for this suite. @ 11/25/23 13:55:01.557
• [348.118 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 11/25/23 13:55:01.565
  Nov 25 13:55:01.565: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename init-container @ 11/25/23 13:55:01.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:55:01.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:55:01.595
  STEP: creating the pod @ 11/25/23 13:55:01.599
  Nov 25 13:55:01.599: INFO: PodSpec: initContainers in spec.initContainers
  E1125 13:55:02.422799      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:03.423582      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:04.423675      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:05.423759      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:55:06.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5903" for this suite. @ 11/25/23 13:55:06.043
• [4.485 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 11/25/23 13:55:06.051
  Nov 25 13:55:06.051: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename field-validation @ 11/25/23 13:55:06.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:55:06.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:55:06.077
  Nov 25 13:55:06.081: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  E1125 13:55:06.424497      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:07.425040      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:08.425124      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1125 13:55:08.636472      17 warnings.go:70] unknown field "alpha"
  W1125 13:55:08.636492      17 warnings.go:70] unknown field "beta"
  W1125 13:55:08.636499      17 warnings.go:70] unknown field "delta"
  W1125 13:55:08.636504      17 warnings.go:70] unknown field "epsilon"
  W1125 13:55:08.636510      17 warnings.go:70] unknown field "gamma"
  Nov 25 13:55:09.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-808" for this suite. @ 11/25/23 13:55:09.19
• [3.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 11/25/23 13:55:09.206
  Nov 25 13:55:09.206: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename downward-api @ 11/25/23 13:55:09.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:55:09.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:55:09.226
  STEP: Creating a pod to test downward api env vars @ 11/25/23 13:55:09.229
  E1125 13:55:09.425821      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:10.425930      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:11.426208      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:12.426704      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/25/23 13:55:13.253
  Nov 25 13:55:13.257: INFO: Trying to get logs from node ip-172-31-85-186 pod downward-api-50254969-5434-4db0-976c-2a8615c21c5f container dapi-container: <nil>
  STEP: delete the pod @ 11/25/23 13:55:13.278
  Nov 25 13:55:13.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6225" for this suite. @ 11/25/23 13:55:13.302
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 11/25/23 13:55:13.31
  Nov 25 13:55:13.310: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename projected @ 11/25/23 13:55:13.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:55:13.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:55:13.328
  STEP: Creating the pod @ 11/25/23 13:55:13.333
  E1125 13:55:13.427166      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:14.428210      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:15.428675      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:55:15.874: INFO: Successfully updated pod "annotationupdatee5d61f14-cbcb-4e05-8379-4eec62257a9f"
  E1125 13:55:16.429344      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:17.429437      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:55:17.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9122" for this suite. @ 11/25/23 13:55:17.894
• [4.591 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 11/25/23 13:55:17.901
  Nov 25 13:55:17.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename services @ 11/25/23 13:55:17.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:55:17.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:55:17.925
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4372 @ 11/25/23 13:55:17.928
  STEP: changing the ExternalName service to type=NodePort @ 11/25/23 13:55:17.934
  STEP: creating replication controller externalname-service in namespace services-4372 @ 11/25/23 13:55:17.954
  I1125 13:55:17.963101      17 runners.go:197] Created replication controller with name: externalname-service, namespace: services-4372, replica count: 2
  E1125 13:55:18.430080      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:19.430553      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:20.431492      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1125 13:55:21.014258      17 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 25 13:55:21.014: INFO: Creating new exec pod
  E1125 13:55:21.431869      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:22.432137      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:23.432298      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:55:24.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-4372 exec execpodtsl9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov 25 13:55:24.196: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov 25 13:55:24.196: INFO: stdout: "externalname-service-8hvps"
  Nov 25 13:55:24.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-4372 exec execpodtsl9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.80 80'
  Nov 25 13:55:24.338: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.80 80\nConnection to 10.152.183.80 80 port [tcp/http] succeeded!\n"
  Nov 25 13:55:24.338: INFO: stdout: ""
  E1125 13:55:24.433003      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:55:25.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-4372 exec execpodtsl9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.80 80'
  E1125 13:55:25.433314      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:55:25.487: INFO: stderr: "+ nc -v -t -w 2 10.152.183.80 80\nConnection to 10.152.183.80 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Nov 25 13:55:25.487: INFO: stdout: "externalname-service-kvsmn"
  Nov 25 13:55:25.487: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-4372 exec execpodtsl9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.4.198 30144'
  Nov 25 13:55:25.630: INFO: stderr: "+ nc -v -t -w 2 172.31.4.198 30144\n+ echo hostName\nConnection to 172.31.4.198 30144 port [tcp/*] succeeded!\n"
  Nov 25 13:55:25.630: INFO: stdout: ""
  E1125 13:55:26.433586      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:55:26.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-4372 exec execpodtsl9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.4.198 30144'
  Nov 25 13:55:26.783: INFO: stderr: "+ nc -v -t -w 2 172.31.4.198 30144\n+ echo hostName\nConnection to 172.31.4.198 30144 port [tcp/*] succeeded!\n"
  Nov 25 13:55:26.783: INFO: stdout: "externalname-service-8hvps"
  Nov 25 13:55:26.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-4372 exec execpodtsl9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.85.186 30144'
  Nov 25 13:55:26.927: INFO: stderr: "+ nc -v -t -w 2 172.31.85.186 30144\n+ echo hostName\nConnection to 172.31.85.186 30144 port [tcp/*] succeeded!\n"
  Nov 25 13:55:26.927: INFO: stdout: ""
  E1125 13:55:27.433815      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:55:27.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-4372 exec execpodtsl9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.85.186 30144'
  Nov 25 13:55:28.074: INFO: stderr: "+ nc -v -t -w 2 172.31.85.186 30144\n+ echo hostName\nConnection to 172.31.85.186 30144 port [tcp/*] succeeded!\n"
  Nov 25 13:55:28.074: INFO: stdout: ""
  E1125 13:55:28.434440      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 25 13:55:28.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3755554593 --namespace=services-4372 exec execpodtsl9z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.85.186 30144'
  Nov 25 13:55:29.078: INFO: stderr: "+ nc -v -t -w 2 172.31.85.186 30144\n+ echo hostName\nConnection to 172.31.85.186 30144 port [tcp/*] succeeded!\n"
  Nov 25 13:55:29.078: INFO: stdout: "externalname-service-8hvps"
  Nov 25 13:55:29.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 25 13:55:29.083: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-4372" for this suite. @ 11/25/23 13:55:29.11
• [11.215 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 11/25/23 13:55:29.117
  Nov 25 13:55:29.117: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename events @ 11/25/23 13:55:29.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:55:29.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:55:29.148
  STEP: creating a test event @ 11/25/23 13:55:29.152
  STEP: listing all events in all namespaces @ 11/25/23 13:55:29.16
  STEP: patching the test event @ 11/25/23 13:55:29.164
  STEP: fetching the test event @ 11/25/23 13:55:29.171
  STEP: updating the test event @ 11/25/23 13:55:29.175
  STEP: getting the test event @ 11/25/23 13:55:29.186
  STEP: deleting the test event @ 11/25/23 13:55:29.191
  STEP: listing all events in all namespaces @ 11/25/23 13:55:29.199
  Nov 25 13:55:29.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3041" for this suite. @ 11/25/23 13:55:29.208
• [0.099 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 11/25/23 13:55:29.217
  Nov 25 13:55:29.217: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename emptydir @ 11/25/23 13:55:29.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:55:29.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:55:29.241
  STEP: Creating Pod @ 11/25/23 13:55:29.246
  E1125 13:55:29.435325      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:30.435532      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 11/25/23 13:55:31.269
  Nov 25 13:55:31.269: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4379 PodName:pod-sharedvolume-e067a316-fb2f-4268-b620-e7725176cad0 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 25 13:55:31.269: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  Nov 25 13:55:31.270: INFO: ExecWithOptions: Clientset creation
  Nov 25 13:55:31.270: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-4379/pods/pod-sharedvolume-e067a316-fb2f-4268-b620-e7725176cad0/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Nov 25 13:55:31.353: INFO: Exec stderr: ""
  Nov 25 13:55:31.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4379" for this suite. @ 11/25/23 13:55:31.359
• [2.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 11/25/23 13:55:31.369
  Nov 25 13:55:31.369: INFO: >>> kubeConfig: /tmp/kubeconfig-3755554593
  STEP: Building a namespace api object, basename cronjob @ 11/25/23 13:55:31.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/25/23 13:55:31.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/25/23 13:55:31.394
  STEP: Creating a cronjob @ 11/25/23 13:55:31.398
  STEP: Ensuring more than one job is running at a time @ 11/25/23 13:55:31.404
  E1125 13:55:31.435942      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:32.436089      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:33.436848      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:34.437821      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:35.438062      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:36.438858      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:37.438926      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:38.439892      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:39.440635      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:40.440764      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:41.441421      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:42.441652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:43.441843      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:44.442709      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:45.443613      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:46.443843      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:47.444236      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:48.444335      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:49.444921      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:50.445111      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:51.445125      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:52.445227      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:53.446157      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:54.446577      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:55.446908      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:56.447007      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:57.447277      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:58.447379      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:55:59.447954      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:00.448081      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:01.448096      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:02.448198      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:03.448306      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:04.449056      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:05.449110      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:06.449278      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:07.450292      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:08.450643      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:09.451480      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:10.451574      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:11.451896      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:12.452097      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:13.452804      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:14.453728      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:15.453952      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:16.454701      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:17.455555      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:18.455848      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:19.456381      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:20.456482      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:21.456859      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:22.456961      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:23.457860      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:24.458690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:25.458794      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:26.458885      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:27.459058      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:28.459159      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:29.459495      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:30.459602      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:31.459949      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:32.460068      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:33.460223      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:34.461103      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:35.461685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:36.462688      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:37.462906      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:38.463026      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:39.463695      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:40.463820      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:41.464258      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:42.464529      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:43.464904      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:44.465771      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:45.466675      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:46.466891      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:47.467705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:48.467939      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:49.468883      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:50.469012      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:51.469189      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:52.469396      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:53.470002      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:54.470711      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:55.470988      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:56.471481      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:57.471688      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:58.472022      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:56:59.472384      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1125 13:57:00.473413      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 11/25/23 13:57:01.409
  STEP: Removing cronjob @ 11/25/23 13:57:01.413
  Nov 25 13:57:01.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2951" for this suite. @ 11/25/23 13:57:01.424
• [90.062 seconds]
------------------------------
SSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Nov 25 13:57:01.432: INFO: Running AfterSuite actions on node 1
  Nov 25 13:57:01.432: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
  E1125 13:57:01.474023      17 retrywatcher.go:129] "Watch failed" err="context canceled"
[ReportAfterSuite] PASSED [0.047 seconds]
------------------------------

Ran 380 of 7389 Specs in 6236.851 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7009 Skipped
PASS

Ginkgo ran 1 suite in 1h43m57.219596487s
Test Suite Passed
